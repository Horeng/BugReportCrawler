01-18 00:02:27 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Value too long for column "ATTACH_DESC VARCHAR(999999)": "'NULL ------------------------------------------------------------------------ 0SECTION TITLE subcomponent dump routine NULL ===... (1206446)"; SQL statement:
INSERT INTO ATTACHMENT VALUES (312959,168578,'text/plain','NULL ------------------------------------------------------------------------ 0SECTION TITLE subcomponent dump routine NULL =============================== 1TISIGINFO Dump Event &quot;user&quot; (00004000) received 1TIDATETIME Date: 2010/05/14 at 15:02:30 1TIFILENAME Javacore filename: /bluebird/teamswt/ggayed/36RC1/ppc/eclipse/javacore.20100514.150229.20456.0001.txt NULL ------------------------------------------------------------------------ 0SECTION GPINFO subcomponent dump routine NULL ================================ 2XHOSLEVEL OS Level : Linux 2.6.9-42.EL 2XHCPUS Processors - 3XHCPUARCH Architecture : ppc 3XHNUMCPUS How Many : 4 NULL 1XHERROR2 Register dump section only produced for SIGSEGV, SIGILL or SIGFPE. NULL NULL ------------------------------------------------------------------------ 0SECTION ENVINFO subcomponent dump routine NULL ================================= 1CIJAVAVERSION J2RE 5.0 IBM J9 2.3 Linux ppc-32 build j9vmxp3223-20081129 1CIVMVERSION VM build 20081126_26240_bHdSMr 1CIJITVERSION JIT enabled - 20081112_1511ifx1_r8 1CIRUNNINGAS Running as a standalone JVM 1CICMDLINE /bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/bin/java -Xms40m -Xmx384m -jar /bluebird/teamswt/ggayed/36RC1/ppc/eclipse/plugins/org.eclipse.equinox.launcher_1.1.0.v20100507.jar -os linux -ws gtk -arch ppc -showsplash -launcher /bluebird/teamswt/ggayed/36RC1/ppc/eclipse/eclipse -name Eclipse --launcher.library /bluebird/teamswt/ggayed/36RC1/ppc/eclipse/plugins/org.eclipse.equinox.launcher.gtk.linux.ppc_1.1.0.v20100503/eclipse_1307.so -startup /bluebird/teamswt/ggayed/36RC1/ppc/eclipse/plugins/org.eclipse.equinox.launcher_1.1.0.v20100507.jar -exitdata 208003 -vm /bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/bin/java -vmargs -Xms40m -Xmx384m -jar /bluebird/teamswt/ggayed/36RC1/ppc/eclipse/plugins/org.eclipse.equinox.launcher_1.1.0.v20100507.jar 1CIJAVAHOMEDIR Java Home Dir: /bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre 1CIJAVADLLDIR Java DLL Dir: /bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/bin 1CISYSCP Sys Classpath: /bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/vm.jar;/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/core.jar;/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/charsets.jar;/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/graphics.jar;/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/security.jar;/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/ibmpkcs.jar;/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/ibmorb.jar;/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/ibmcfw.jar;/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/ibmorbapi.jar;/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/ibmjcefw.jar;/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/ibmjgssprovider.jar;/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/ibmjsseprovider2.jar;/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/ibmjaaslm.jar;/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/ibmcertpathprovider.jar;/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/server.jar;/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/xml.jar; 1CIUSERARGS UserArgs: 2CIUSERARG -Xjcl:jclscar_23 2CIUSERARG -Dcom.ibm.oti.vm.bootstrap.library.path=/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/bin 2CIUSERARG -Dsun.boot.library.path=/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/bin 2CIUSERARG -Djava.library.path=/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/bin::/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/bin/classic:/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/bin:/usr/lib 2CIUSERARG -Djava.home=/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre 2CIUSERARG -Djava.ext.dirs=/bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/lib/ext 2CIUSERARG -Duser.dir=/bluebird/teamswt/ggayed/36RC1/ppc/eclipse 2CIUSERARG _j2se_j9=70912 0x0E81E8B8 2CIUSERARG vfprintf 0x10003F58 2CIUSERARG -Xms40m 2CIUSERARG -Xmx384m 2CIUSERARG -Dinvokedviajava 2CIUSERARG -Djava.class.path=/bluebird/teamswt/ggayed/36RC1/ppc/eclipse/plugins/org.eclipse.equinox.launcher_1.1.0.v20100507.jar 2CIUSERARG vfprintf 2CIUSERARG _port_library 0x0E81D4F8 2CIUSERARG -Xdump NULL 1CIJVMMI JVM Monitoring Interface (JVMMI) NULL ------------------------ 2CIJVMMIOFF [not available] NULL NULL ------------------------------------------------------------------------ 0SECTION MEMINFO subcomponent dump routine NULL ================================= 1STHEAPFREE Bytes of Heap Space Free: 415d48 1STHEAPALLOC Bytes of Heap Space Allocated: b276400 NULL 1STSEGTYPE Internal Memory NULL segment start alloc end type bytes 1STSEGMENT DADE1790 DA726B30 DA726B64 DA736B30 01000040 10000 1STSEGMENT DADE1610 DA5D0230 DA5D0290 DA5E0230 01000040 10000 1STSEGMENT DADE1D90 DAC00028 DAC0C154 DAC10028 01000040 10000 1STSEGMENT DADE1F70 DA5C0208 DA5C02F0 DA5D0208 01000040 10000 1STSEGMENT 100C6AF8 10F3FA60 10F4C1A4 10F4FA60 01000040 10000 1STSEGMENT DADE21B0 113A6D30 113B6D30 113B6D30 01000040 10000 1STSEGMENT DB180E00 DA736B58 DA746B58 DA746B58 01000040 10000 1STSEGMENT DB180B60 D9156948 D9166938 D9166948 01000040 10000 1STSEGMENT DB180980 DAC80168 DAC90160 DAC90168 01000040 10000 1STSEGMENT DB1804A0 DAC10050 DAC20044 DAC20050 01000040 10000 1STSEGMENT DB180740 1117B888 1118B874 1118B888 01000040 10000 1STSEGMENT DB1807A0 D9108058 D9118058 D9118058 01000040 10000 1STSEGMENT 100C5FB8 1108FDA8 1109FD98 1109FDA8 01000040 10000 1STSEGMENT 100C65B8 D90AE6D8 D90BE6C8 D90BE6D8 01000040 10000 1STSEGMENT DADE1A30 D904FB58 D905FB50 D905FB58 01000040 10000 1STSEGMENT 10054B50 D9018080 D9028080 D9028080 01000040 10000 1STSEGMENT 100C6C78 D9000028 D9010020 D9010028 01000040 10000 1STSEGMENT DB1809E0 D93E4608 D93F45FC D93F4608 01000040 10000 1STSEGMENT DB180FE0 1109FDD0 110AFDC4 110AFDD0 01000040 10000 1STSEGMENT DB185330 D9308058 D9318044 D9318058 01000040 10000 1STSEGMENT DB1810A0 11356CB8 11366CB8 11366CB8 01000040 10000 1STSEGMENT DB180260 D94AC6F0 D94BC6E4 D94BC6F0 01000040 10000 1STSEGMENT DADE2150 D948B898 D949B894 D949B898 01000040 10000 1STSEGMENT DADE17F0 1105FD30 1106FD28 1106FD30 01000040 10000 1STSEGMENT DB180F80 11446F10 11456F08 11456F10 01000040 10000 1STSEGMENT 100C6B58 112269C0 112369AC 112369C0 01000040 10000 1STSEGMENT DADE1AF0 D9228080 D9238070 D9238080 01000040 10000 1STSEGMENT 106A7DC0 10E68030 10E78028 10E78030 01000040 10000 1STSEGMENT DADE1D30 10F27A08 10F379FC 10F37A08 01000040 10000 1STSEGMENT DB180A40 DAB480F8 DAB580F8 DAB580F8 01000040 10000 1STSEGMENT DB180F20 D9732210 D97421FC D9742210 01000040 10000 1STSEGMENT DADE1A90 D9710050 D9720044 D9720050 01000040 10000 1STSEGMENT DADE2090 DA968120 DA978120 DA978120 01000040 10000 1STSEGMENT DADE12B0 DAB60118 DAB70114 DAB70118 01000040 10000 1STSEGMENT 106A7E80 D99B7C58 D99C7C54 D99C7C58 01000040 10000 1STSEGMENT 106A70A0 D999FC00 D99AFBF8 D99AFC00 01000040 10000 1STSEGMENT 10054BB0 D993E648 D994E638 D994E648 01000040 10000 1STSEGMENT 10054A90 D9CD65F0 D9CE65EC D9CE65F0 01000040 10000 1STSEGMENT 106A7E20 D9C27310 D9C37310 D9C37310 01000040 10000 1STSEGMENT 10054C10 DA079978 DA089978 DA089978 01000040 10000 1STSEGMENT DADE1BB0 DAD096D0 DAD196D0 DAD196D0 01000040 10000 1STSEGMENT DB1806E0 10EF28D0 10F028BC 10F028D0 01000040 10000 1STSEGMENT DADE18B0 DA9D0208 DA9E0204 DA9E0208 01000040 10000 1STSEGMENT DADE1310 DA025E18 DA035E04 DA035E18 01000040 10000 1STSEGMENT DADE1730 DACE0258 DACF0254 DACF0258 01000040 10000 1STSEGMENT 100C6918 10E2FFB0 10E3FF9C 10E3FFB0 01000040 10000 1STSEGMENT 106A7D00 DA3BEF68 DA3CEF68 DA3CEF68 01000040 10000 1STSEGMENT 10054A30 DAF71338 DAF81328 DAF81338 01000040 10000 1STSEGMENT DB185150 DAD300A0 DAD4008C DAD400A0 01000040 10000 1STSEGMENT DB185210 DAF3C870 DAF4C864 DAF4C870 01000040 10000 1STSEGMENT DB184F70 DA910050 DA920050 DA920050 01000040 10000 1STSEGMENT DB1802C0 10D55DE0 10D65DD0 10D65DE0 01000040 10000 1STSEGMENT 106A7880 DADD1258 DADE1258 DADE1258 01000040 10000 1STSEGMENT DADE1B50 10BB7FD8 10BC7FD8 10BC7FD8 01000040 10000 1STSEGMENT 10054910 10C2C580 10C3C580 10C3C580 01000040 10000 1STSEGMENT DADE1EB0 110D66A0 110E669C 110E66A0 01000040 10000 1STSEGMENT 100C60D8 10BD9228 10BE9218 10BE9228 01000040 10000 1STSEGMENT DADE1670 10CC9AA0 10CD9AA0 10CD9AA0 01000040 10000 1STSEGMENT 100C6018 DADC1230 DADD122C DADD1230 01000040 10000 1STSEGMENT DADE16D0 DA980168 DA990158 DA990168 01000040 10000 1STSEGMENT 100C6798 DB3C4AB8 DB3D4AB4 DB3D4AB8 01000040 10000 1STSEGMENT 100C6318 10AA31D8 10AB31D0 10AB31D8 01000040 10000 1STSEGMENT 100C6CD8 DAF9CC10 DAFACC0C DAFACC10 01000040 10000 1STSEGMENT 100C6738 DB3B4A90 DB3C4A90 DB3C4A90 01000040 10000 1STSEGMENT 100C67F8 DB1A2240 DB1B223C DB1B2240 01000040 10000 1STSEGMENT 100C6D38 DB3A4A68 DB3B4A60 DB3B4A68 01000040 10000 1STSEGMENT 100C6978 DB120AC8 DB130AC8 DB130AC8 01000040 10000 1STSEGMENT 100C6BB8 10A81F88 10A91F88 10A91F88 01000040 10000 1STSEGMENT 100C61F8 10B020F0 10B120F0 10B120F0 01000040 10000 1STSEGMENT 100C69D8 DB5AE2F8 DB5BE2F4 DB5BE2F8 01000040 10000 1STSEGMENT 100C6438 DB50CC78 DB51CC78 DB51CC78 01000040 10000 1STSEGMENT 106A7A00 DBAE2440 DBAF2440 DBAF2440 01000040 10000 1STSEGMENT 106A72E0 10A31EE8 10A41ED8 10A41EE8 01000040 10000 1STSEGMENT 106A79A0 DE27CB58 DE28CB58 DE28CB58 01000040 10000 1STSEGMENT 106A7100 DBAB2B88 DBAC2B80 DBAC2B88 01000040 10000 1STSEGMENT 106A7580 DBA9AB58 DBAAAB58 DBAAAB58 01000040 10000 1STSEGMENT 106A77C0 DBCB6CC0 DBCC6CB4 DBCC6CC0 01000040 10000 1STSEGMENT 106A7C40 DBC00028 DBC1001C DBC10028 01000040 10000 1STSEGMENT 106A7FA0 DBFA9EA8 DBFB9EA0 DBFB9EA8 01000040 10000 1STSEGMENT 106A7280 DBF5DC48 DBF6DC48 DBF6DC48 01000040 10000 1STSEGMENT 106A76A0 DC1DE7C0 DC1EE7C0 DC1EE7C0 01000040 10000 1STSEGMENT 106A7BE0 DC100028 DC110024 DC110028 01000040 10000 1STSEGMENT 106A8000 DC383938 DC393938 DC393938 01000040 10000 1STSEGMENT 106A71C0 DC648140 DC658140 DC658140 01000040 10000 1STSEGMENT 106A7AC0 DC8DB6A8 DC8EB6A8 DC8EB6A8 01000040 10000 1STSEGMENT 106A7700 DC8A7700 DC8B76F8 DC8B7700 01000040 10000 1STSEGMENT 106A7940 DC847938 DC857930 DC857938 01000040 10000 1STSEGMENT 106A73A0 DCBECD60 DCBFCD60 DCBFCD60 01000040 10000 1STSEGMENT 106A74C0 107C2C40 107D2C40 107D2C40 01000040 10000 1STSEGMENT 100549D0 10919168 10929160 10929168 01000040 10000 1STSEGMENT 106A7820 DCCC2138 DCCD2138 DCCD2138 01000040 10000 1STSEGMENT 106A7460 DCC1F978 DCC2F974 DCC2F978 01000040 10000 1STSEGMENT 106A7220 DD3A2670 DD3B266C DD3B2670 01000040 10000 1STSEGMENT 106A75E0 10C799D8 10C899D0 10C899D8 01000040 10000 1STSEGMENT 100C6138 DDCA8D20 DDCB8D18 DDCB8D20 01000040 10000 1STSEGMENT 100C6258 106BEAE8 106CEAE4 106CEAE8 01000040 10000 1STSEGMENT 100C6378 105B0D18 105C0D18 105C0D18 01000040 10000 1STSEGMENT 100C6558 DD5C5CC0 DD5D5CB8 DD5D5CC0 01000040 10000 1STSEGMENT 100C6198 10576308 10586300 10586308 01000040 10000 1STSEGMENT 100C6498 104860B0 104960AC 104960B0 01000040 10000 1STSEGMENT 100C5EF8 102FEB20 1030EB18 1030EB20 01000040 10000 1STSEGMENT 100C6C18 103AEE40 103BEE40 103BEE40 01000040 10000 1STSEGMENT 100C68B8 10243088 10253084 10253088 01000040 10000 1STSEGMENT 100C6678 DDC6A708 DDC7A704 DDC7A708 01000040 10000 1STSEGMENT 100C6DF8 DDC28080 DDC38078 DDC38080 01000040 10000 1STSEGMENT 100C62B8 DE291D80 DE2A1D78 DE2A1D80 01000040 10000 1STSEGMENT 100C5F58 DE23B4D8 DE24B4D4 DE24B4D8 01000040 10000 1STSEGMENT 100C66D8 DE5DE370 DE5EE370 DE5EE370 01000040 10000 1STSEGMENT 100C6078 DE5346F0 DE5446E8 DE5446F0 01000040 10000 1STSEGMENT 100548B0 10083E18 10093E10 10093E18 01000040 10000 NULL 1STSEGTYPE Object Memory NULL segment start alloc end type bytes 1STSEGMENT 10054CC8 DFDB2000 EB028400 EB028400 00000009 b276400 NULL 1STSEGTYPE Class Memory NULL segment start alloc end type bytes 1STSEGMENT DC3CF058 D9196EA0 D919A3D8 D919EEA0 00010040 8004 1STSEGMENT DC3CEFF8 DA81D018 DA831020 DA83D018 00020040 20000 1STSEGMENT DC3CEF98 10F4FA88 10F554C8 10F6FA88 00020040 20000 1STSEGMENT DCC13FD0 113477D8 1134B088 1134F7D8 00010040 8004 1STSEGMENT DCC13F70 1133F7A8 11342F18 113477A8 00010040 8004 1STSEGMENT 110BF378 DA8BE018 DA8DD9E0 DA8DE018 00020040 20000 1STSEGMENT 110BF318 DA8DF018 DA8E1EA8 DA8FF018 00020040 20000 1STSEGMENT 110BF2B8 D917CB50 D9184818 D9184B50 00010040 8004 1STSEGMENT 110BF258 DAC60118 DAC7F100 DAC80118 00020040 20000 1STSEGMENT 110BF1F8 D97A9F68 D97ACD78 D97AFD98 00020040 5e30 1STSEGMENT 110BF198 DAA09018 DAA0E170 DAA29018 00020040 20000 1STSEGMENT 110BF138 DAA2A018 DAA2C980 DAA4A018 00020040 20000 1STSEGMENT 110BF0D8 1116B860 1116D350 11173860 00010040 8004 1STSEGMENT 110BF078 1118B8B0 1119B938 111AB8B0 00020040 20000 1STSEGMENT 110BF018 1131F780 1133F1D0 1133F780 00020040 20000 1STSEGMENT 110BEFB8 11317750 1131F708 1131F750 00010040 8004 1STSEGMENT 110BEF58 112F7728 11316B80 11317728 00020040 20000 1STSEGMENT 110BEEF8 112D7700 112F58C8 112F7700 00020040 20000 1STSEGMENT 110BEE98 112CF6D0 112D7670 112D76D0 00010040 8004 1STSEGMENT 110BEE38 112AF6A8 112C5248 112CF6A8 00020040 20000 1STSEGMENT 110BEDD8 1129F680 112A83D0 112AF680 00020040 10000 1STSEGMENT 110BED78 1127F658 11297D40 1129F658 00020040 20000 1STSEGMENT 110BED18 11277628 1127F540 1127F628 00010040 8004 1STSEGMENT 110BECB8 11257600 11267D98 11277600 00020040 20000 1STSEGMENT 110BEC58 1114FF10 11152A90 11153F10 00010040 4004 1STSEGMENT 110BEBF8 112369E8 11251340 112575D8 00020040 20bf0 1STSEGMENT 110BEB98 1143D368 114452A0 11445368 00010040 8004 1STSEGMENT 110BEB38 1141D340 11433160 1143D340 00020040 20000 1STSEGMENT 110BEAD8 113F71B8 1140EA60 1141D318 00020040 26160 1STSEGMENT 110BEA78 11147EE0 1114FE70 1114FEE0 00010040 8004 1STSEGMENT 110BEA18 113D7190 113EDFB0 113F7190 00020040 20000 1STSEGMENT 110BE9B8 113B6DA8 113C7328 113D7168 00020040 203c0 1STSEGMENT 110BE958 11126718 1113F350 11147EB8 00020040 217a0 1STSEGMENT 110BE8F8 111066F0 1111A220 111266F0 00020040 20000 1STSEGMENT 110BE898 111F68F8 111FE818 111FE8F8 00010040 8004 1STSEGMENT 110BE838 11386D08 1139D438 113A6D08 00020040 20000 1STSEGMENT DBAAE6F8 1107FD80 11083FF8 11087D80 00010040 8004 1STSEGMENT DBAAE698 111B3928 111B5820 111B5928 00010040 2004 1STSEGMENT DBAAE638 111AB900 111B20E0 111B3900 00020040 8000 1STSEGMENT DBAAE5D8 11366CE0 1137B548 11386CE0 00020040 20000 1STSEGMENT DBAAE578 110AFDF8 110B1C28 110B7DF8 00010040 8004 1STSEGMENT DBAAE518 D9146910 D91478D8 D914E910 00010040 8004 1STSEGMENT DBAAE4B8 D913E8E0 D91468C8 D91468E0 00010040 8004 1STSEGMENT DBAAE458 DAA8B018 DAAA2750 DAAAB018 00020040 20000 1STSEGMENT DBAAE3F8 D90D20C0 D90D5F18 D90D60C0 00010040 4004 1STSEGMENT DBAAE398 D912E8B8 D9136518 D913E8B8 00020040 10000 1STSEGMENT DBAAE338 D90F8DE8 D90FAB28 D90FADE8 00010040 2004 1STSEGMENT 10D46740 D9126890 D912D5A8 D912E890 00020040 8000 1STSEGMENT 10D466E0 D9038108 D9040098 D9040108 00010040 8004 1STSEGMENT DBAAE2D8 DAD9E3C0 DADB3310 DADBE3C0 00020040 20000 1STSEGMENT DBAAE278 D9100028 D9107E90 D9108028 00010040 8004 1STSEGMENT DBAAE218 D90F0DB8 D90F8760 D90F8DB8 00010040 8004 1STSEGMENT DBAAE1B8 D90E8D88 D90E9A70 D90F0D88 00010040 8004 1STSEGMENT DBAAE158 D90BE700 D90C2B30 D90C6700 00010040 8004 1STSEGMENT DBAAE0F8 DAAAC018 DAABF750 DAACC018 00020040 20000 1STSEGMENT DBAAE098 11206920 1121FDC8 11226920 00020040 20000 1STSEGMENT DBAAE038 D9067BB0 D9068F98 D906FBB0 00010040 8004 1STSEGMENT DBAADFD8 D905FB80 D9067B28 D9067B80 00010040 8004 1STSEGMENT DBAADF78 DAADF018 DAAED140 DAAFF018 00020040 20000 1STSEGMENT DBAADF18 DAB78170 DAB79E28 DAB80170 00010040 8004 1STSEGMENT DBAADEB8 DB405018 DB424C00 DB425018 00020040 20000 1STSEGMENT DBAADE58 D90300D8 D90380A0 D90380D8 00010040 8004 1STSEGMENT DBAADDF8 D90280A8 D9029610 D90300A8 00010040 8004 1STSEGMENT DBAADD98 DCA42018 DCA56308 DCA62018 00020040 20000 1STSEGMENT DBAADD38 D9010050 D9017D40 D9018050 00010040 8004 1STSEGMENT DBAADCD8 1106FD58 11079C78 1107FD58 00020040 10000 1STSEGMENT DBAADC78 110C7E50 110CFAD0 110CFE50 00010040 8004 1STSEGMENT DBAADC18 111D68D0 111D9C38 111F68D0 00020040 20000 1STSEGMENT DBAADBB8 DAD7E398 DAD8AF90 DAD9E398 00020040 20000 1STSEGMENT DBAADB58 DAB20050 DAB2D568 DAB40050 00020040 20000 1STSEGMENT DBAADAF8 110BFE20 110C7E10 110C7E20 00010040 8004 1STSEGMENT DBAADA98 111B68A8 111D0EE0 111D68A8 00020040 20000 1STSEGMENT DBAADA38 DB43A018 DB459D60 DB45A018 00020040 20000 1STSEGMENT DBAAD9D8 D93DC5D8 D93E0CF8 D93E45D8 00010040 8004 1STSEGMENT DBAAD978 D93CC5B0 D93D5880 D93DC5B0 00020040 10000 1STSEGMENT DBAAD918 D93C4580 D93CBFE0 D93CC580 00010040 8004 1STSEGMENT DBAAD8B8 DB45B018 DB479A08 DB47B018 00020040 20000 1STSEGMENT DBAAD858 D93BC550 D93C42D0 D93C4550 00010040 8004 1STSEGMENT DBAAD7F8 D93B01A8 D93B7F08 D93BC528 00020040 c380 1STSEGMENT DBAAD798 DB47C018 DB497678 DB49C018 00020040 20000 1STSEGMENT D940AA60 D93AC178 D93AFAD0 D93B0178 00010040 4004 1STSEGMENT D940AA00 D93A66B0 D93AA0C0 D93AC150 00020040 5aa0 1STSEGMENT D940A9A0 DB605018 DB623468 DB625018 00020040 20000 1STSEGMENT D940A940 D939E680 D93A6448 D93A6680 00010040 8004 1STSEGMENT D940A8E0 DB626018 DB63F068 DB646018 00020040 20000 1STSEGMENT D940A880 D938E658 D9398990 D939E658 00020040 10000 1STSEGMENT D940A820 D92A1DC8 D92A5BD8 D92A5DC8 00010040 4004 1STSEGMENT D940A7C0 D9386630 D938B678 D938E630 00020040 8000 1STSEGMENT D940A760 D9462330 D94642B0 D9464330 00010040 2004 1STSEGMENT D940A700 D94EC7A0 D94EED40 D94F07A0 00020040 4000 1STSEGMENT D940A6A0 D937E600 D9386330 D9386600 00010040 8004 1STSEGMENT D940A640 D9453758 D9454820 D9455758 00020040 2000 1STSEGMENT D940A5E0 D92894D8 D928A4D0 D928A4D8 00010040 1004 1STSEGMENT D940A580 D93765D0 D937E010 D937E5D0 00010040 8004 1STSEGMENT D940A520 D9253838 D9253F48 D9254038 00010040 804 1STSEGMENT D940A4C0 D944E2D0 D9450208 D94502D0 00010040 2004 1STSEGMENT D940A460 D927EE50 D927FE30 D927FE50 00010040 1004 1STSEGMENT D940A400 D9368B48 D93732C0 D93765A8 00020040 da60 1STSEGMENT D940A3A0 D9467388 D9467AF0 D9467B88 00010040 804 1STSEGMENT D940A340 DD589AB8 DD58A2F0 DD58A2F0 00010040 83c 1STSEGMENT D940A2E0 D9362A50 D93663A8 D9368B20 00020040 60d0 1STSEGMENT D940A280 D946ACB0 D946AD80 D946AD80 00010040 d4 1STSEGMENT D940A220 D97BB9E0 D97BBBD8 D97BBDD0 00020040 3f0 1STSEGMENT D940A1C0 D9430740 D9431470 D9431470 00010040 d34 1STSEGMENT D940A160 D9358CE8 D9361240 D9362A28 00020040 9d40 1STSEGMENT D940A100 DBAB16C0 DBAB1898 DBAB1898 00010040 1dc 1STSEGMENT D940A0A0 D94030C8 D9403728 D9403DF8 00020040 d30 1STSEGMENT D940A040 D9350CB8 D9358C50 D9358CB8 00010040 8004 1STSEGMENT D9409FE0 DB647018 DB666E80 DB667018 00020040 20000 1STSEGMENT D9409F80 D9348C88 D9350BD8 D9350C88 00010040 8004 1STSEGMENT D9409F20 DB668018 DB687540 DB688018 00020040 20000 1STSEGMENT D9409EC0 D9338C60 D93479D8 D9348C60 00020040 10000 1STSEGMENT D9409E60 D9486EE0 D948AD38 D948AEE0 00010040 4004 1STSEGMENT D9409E00 D932DA38 D9336CB0 D9338C38 00020040 b200 1STSEGMENT D9409DA0 D943AD78 D943CC78 D943CD78 00010040 2004 1STSEGMENT D9409D40 D929C240 D929D2C8 D929D2C8 00010040 108c 1STSEGMENT D9409CE0 D93200B0 D932B7E8 D932DA10 00020040 d960 1STSEGMENT D9409C80 D979C448 D979CAA0 D979CC48 00010040 804 1STSEGMENT D9409C20 D97DC308 D97DCC18 D97DCC18 00010040 914 1STSEGMENT D9409BC0 D9C66310 D9C663C0 D9C663C0 00010040 b4 1STSEGMENT D9409B60 D99593E8 D995D818 D9960668 00020040 7280 1STSEGMENT D9409B00 DBAAB048 DBAABB68 DBAAC808 00020040 17c0 1STSEGMENT DD5C3B30 D9404E38 D9404FF0 D94052A8 00020040 470 1STSEGMENT DD5C3AD0 DAB70140 DAB78018 DAB78140 00010040 8004 1STSEGMENT DD5C3A70 DB69C018 DB6BBA90 DB6BC018 00020040 20000 1STSEGMENT DD5C3A10 D9318080 D931FE90 D9320080 00010040 8004 1STSEGMENT DD5C39B0 DBB1D018 DBB3C638 DBB3D018 00020040 20000 1STSEGMENT DD5C3950 D9300028 D9308018 D9308028 00010040 8004 1STSEGMENT DD5C38F0 D95BA8A0 D95E86B0 D95E9A20 00020040 2f180 1STSEGMENT DD5C3890 D95B2870 D95BA828 D95BA870 00010040 8004 1STSEGMENT DD5C3830 D95480A8 D95AEBA8 D95B2848 00020040 6a7a0 1STSEGMENT DD5C37D0 D949B8C0 D94A3638 D94A38C0 00010040 8004 1STSEGMENT DD5C3770 D9528080 D95469D8 D9548080 00020040 20000 1STSEGMENT DD5C3710 D9520050 D9527F88 D9528050 00010040 8004 1STSEGMENT DD5C36B0 D94E4770 D94EC700 D94EC770 00010040 8004 1STSEGMENT DD5C3650 D9500028 D951F930 D9520028 00020040 20000 1STSEGMENT DD5C35F0 D94DC740 D94E14F0 D94E4740 00010040 8004 1STSEGMENT DD5C3590 D94BC718 D94D8A18 D94DC718 00020040 20000 1STSEGMENT DD5C3530 D94A46C0 D94AC580 D94AC6C0 00010040 8004 1STSEGMENT DD5C34D0 DABC5478 DABE36E8 DABE5478 00020040 20000 1STSEGMENT DD5C3470 D940DCB8 D942AB88 D942DCB8 00020040 20000 1STSEGMENT DD5C3410 D92C79F8 D92E4938 D92E79F8 00020040 20000 1STSEGMENT DD5C33B0 D928A848 D92927E8 D9292848 00010040 8004 1STSEGMENT DD5C3350 D92A79D0 D92C48B0 D92C79D0 00020040 20000 1STSEGMENT DD5C32F0 D92740D0 D927C028 D927C0D0 00010040 8004 1STSEGMENT DD5C3290 D92540A8 D9268570 D92740A8 00020040 20000 1STSEGMENT DD5C3230 D92400D8 D92433F8 D92480D8 00010040 8004 1STSEGMENT DD5C31D0 D92380A8 D923F6E0 D92400A8 00010040 8004 1STSEGMENT DD5C3170 DAB58120 DAB58B50 DAB5C120 00010040 4004 1STSEGMENT DD5C3110 DA99B888 DA99D7F8 DA99D888 00010040 2004 1STSEGMENT DD5C30B0 DAD4B1C8 DAD58560 DAD5AF28 00020040 fd60 1STSEGMENT DD5C3050 D9208058 D9227710 D9228058 00020040 20000 1STSEGMENT DD5C2FF0 D9200028 D9207F40 D9208028 00010040 8004 1STSEGMENT DD5C2F90 D976F230 D978D308 D978F230 00020040 20000 1STSEGMENT DD5C2F30 D9767200 D976F1A8 D976F200 00010040 8004 1STSEGMENT DD5C2ED0 D97E9E70 D97F1D58 D97F1E70 00010040 8004 1STSEGMENT DD5C2E70 D97DD460 D97DDC98 D97E5460 00010040 8004 1STSEGMENT DD5C2E10 D97D9440 D97DA360 D97DA440 00010040 1004 1STSEGMENT DD5C2DB0 D97D8C10 D97D9048 D97D9410 00010040 804 1STSEGMENT DD5C2D50 D97471D8 D9764C88 D97671D8 00020040 20000 1STSEGMENT DD5C2CF0 D97C8810 D97C8F70 D97C8F70 00010040 764 1STSEGMENT DD5C2C90 D97CE5A0 D97D3CC0 D97D7BC0 00020040 9620 1STSEGMENT DD5C2C30 D97C8348 D97C87E0 D97C87E0 00010040 49c 1STSEGMENT DD5C2BD0 D97C43D0 D97C6070 D97C8320 00020040 3f50 1STSEGMENT DCC14390 10F37A30 10F3F8D0 10F3FA30 00010040 8004 1STSEGMENT DCC14330 110E66C8 11103300 111066C8 00020040 20000 1STSEGMENT DCC142D0 1005ED00 10064340 10066D00 00010040 8004 1STSEGMENT DCC14270 D97311E0 D97320B0 D97321E0 00010040 1004 1STSEGMENT DCC14210 D972CD78 D9730210 D97311B8 00020040 4440 1STSEGMENT DCC141B0 D972C548 D972CBE0 D972CD48 00010040 804 1STSEGMENT DCC14150 D97290D0 D972B5F0 D972C520 00020040 3450 1STSEGMENT DCC140F0 D9720078 D9727F28 D9728078 00010040 8004 1STSEGMENT DCC14090 D99FA608 D99FAD88 D99FC608 00010040 2004 1STSEGMENT DCC14030 D9C3A760 D9C3D0A0 D9C3F230 00020040 4ad0 1STSEGMENT DCC13F10 D99F30C8 D99F6F30 D99F70C8 00010040 4004 1STSEGMENT DCC13EB0 D9700028 D970E5C8 D9710028 00020040 10000 1STSEGMENT DCC13E50 DABE54C8 DABED438 DABED4C8 00010040 8004 1STSEGMENT DCC13DF0 DA700028 DA725EB8 DA726B08 00020040 26ae0 1STSEGMENT DCC13D90 DAB90190 DABC2848 DABC5450 00020040 352c0 1STSEGMENT DCC13D30 DA9600F0 DA9680E8 DA9680F0 00010040 8004 1STSEGMENT DCC13CD0 10F079E0 10F23870 10F279E0 00020040 20000 1STSEGMENT DCC13C70 DA990190 DA996368 DA998190 00010040 8004 1STSEGMENT DCC13C10 DAB00028 DAB1FA78 DAB20028 00020040 20000 1STSEGMENT DCC13BB0 DAB400C8 DAB48060 DAB480C8 00010040 8004 1STSEGMENT DCC13B50 DAD5B1F0 DAD78860 DAD7E370 00020040 23180 1STSEGMENT DCC13AF0 DAD20960 DAD288D8 DAD28960 00010040 8004 1STSEGMENT DCC13A90 DA920078 DA93F758 DA940078 00020040 20000 1STSEGMENT DCC13A30 D99DFD10 D99E7BF0 D99E7D10 00010040 8004 1STSEGMENT DCC139D0 DBD20018 DBD3B200 DBD40018 00020040 20000 1STSEGMENT DCC13970 DBD41018 DBD5F6A8 DBD61018 00020040 20000 1STSEGMENT DCC13910 D99D7CE0 D99DF4B0 D99DFCE0 00010040 8004 1STSEGMENT DCC138B0 D99CFCB0 D99D2520 D99D7CB0 00010040 8004 1STSEGMENT DCC13850 D99C7C80 D99CD5A8 D99CFC80 00010040 8004 1STSEGMENT DCC137F0 DC21E018 DC22D800 DC23E018 00020040 20000 1STSEGMENT DCC13790 DC253018 DC26FA80 DC273018 00020040 20000 1STSEGMENT DCC13730 DC274018 DC293A50 DC294018 00020040 20000 1STSEGMENT DCC136D0 DC295018 DC29F4B8 DC2B5018 00020040 20000 1STSEGMENT DCC13670 DC4AA018 DC4C9C68 DC4CA018 00020040 20000 1STSEGMENT DCC13610 D99AFC28 D99B7BF8 D99B7C28 00010040 8004 1STSEGMENT DCC135B0 D9997BD0 D999FA70 D999FBD0 00010040 8004 1STSEGMENT DCC13550 DC4CB018 DC4E9FC0 DC4EB018 00020040 20000 1STSEGMENT DCC134F0 D9960AB0 D9968940 D9968AB0 00010040 8004 1STSEGMENT DCC13490 DCD05018 DCD22908 DCD25018 00020040 20000 1STSEGMENT DCC13430 DCD26018 DCD45438 DCD46018 00020040 20000 1STSEGMENT DA0E1050 D994E670 D9956610 D9956670 00010040 8004 1STSEGMENT DA0E0FF0 D989D018 D98BC790 D98BD018 00020040 20000 1STSEGMENT DA0E0F90 D98BE018 D98DD820 D98DE018 00020040 20000 1STSEGMENT DA0E0F30 D9936618 D993E578 D993E618 00010040 8004 1STSEGMENT DA0E0ED0 D98DF018 D98FC0C8 D98FF018 00020040 20000 1STSEGMENT DA0E0E70 D992E5E8 D99365D0 D99365E8 00010040 8004 1STSEGMENT DA0E0E10 D9A1D018 D9A3C840 D9A3D018 00020040 20000 1STSEGMENT DA0E0DB0 D99265B8 D992E558 D992E5B8 00010040 8004 1STSEGMENT DA0E0D50 D990E2D8 D99161E8 D99162D8 00010040 8004 1STSEGMENT DA0E0CF0 D9A3E018 D9A5D618 D9A5E018 00020040 20000 1STSEGMENT DA0E0C90 D9A5F018 D9A7CFC8 D9A7F018 00020040 20000 1STSEGMENT DA0E0C30 D9A92018 D9AB0BC0 D9AB2018 00020040 20000 1STSEGMENT DA0E0BD0 D9CF6678 D9CFE628 D9CFE678 00010040 8004 1STSEGMENT DA0E0B70 D9CEE648 D9CF6600 D9CF6648 00010040 8004 1STSEGMENT DA0E0B10 D9CE6618 D9CEE5D8 D9CEE618 00010040 8004 1STSEGMENT DA0E0AB0 D9AB3018 D9AD1710 D9AD3018 00020040 20000 1STSEGMENT DA0E0A50 D9CCE5C0 D9CD6570 D9CD65C0 00010040 8004 1STSEGMENT DA0E09F0 D9AD4018 D9AEF148 D9AF4018 00020040 20000 1STSEGMENT DA0E0990 D9CC6590 D9CCE4A8 D9CCE590 00010040 8004 1STSEGMENT DA0E0930 D9CBE560 D9CC64A0 D9CC6560 00010040 8004 1STSEGMENT DA0E08D0 D9CAE538 D9CBD3E0 D9CBE538 00020040 10000 1STSEGMENT DA0E0870 D9CA6508 D9CAE4A0 D9CAE508 00010040 8004 1STSEGMENT DA0E0810 D9AF5018 D9B18BF0 D9B18F18 00020040 23f00 1STSEGMENT DA0E07B0 D9B19018 D9B38A50 D9B39018 00020040 20000 1STSEGMENT DA0E0750 D9C9E4D8 D9CA6490 D9CA64D8 00010040 8004 1STSEGMENT DA0E06F0 D9B3A018 D9B58640 D9B5A018 00020040 20000 1STSEGMENT DA0E0690 D9B5B018 D9B79C90 D9B7B018 00020040 20000 1STSEGMENT DA0E0630 D9C964A8 D9C9E3C0 D9C9E4A8 00010040 8004 1STSEGMENT DA0E05D0 D9C8E478 D9C959E8 D9C96478 00010040 8004 1STSEGMENT DA0E0570 D9C7E450 D9C8C4D8 D9C8E450 00020040 10000 1STSEGMENT DA0E0510 D9C76420 D9C7E2F8 D9C7E420 00010040 8004 1STSEGMENT DA0E04B0 D9C663F8 D9C74EC8 D9C763F8 00020040 10000 1STSEGMENT DA0E0450 D9C5B4C0 D9C634B0 D9C634C0 00010040 8004 1STSEGMENT DA0E03F0 D9B7C018 D9B99F60 D9B9C018 00020040 20000 1STSEGMENT DA0E0390 D9B9D018 D9BAE630 D9BBD018 00020040 20000 1STSEGMENT DA0E0330 D9C4D9B8 D9C5A3F8 D9C5B498 00020040 dae0 1STSEGMENT DA0E02D0 D9C45988 D9C4D918 D9C4D988 00010040 8004 1STSEGMENT DA0E0270 D9C180B8 D9C1C0A8 D9C1C0B8 00010040 4004 1STSEGMENT DA0E0210 D9BBE018 D9BDCB28 D9BDE018 00020040 20000 1STSEGMENT DA0E01B0 DA0E10E8 DA0E90C0 DA0E90E8 00010040 8004 1STSEGMENT DA0E0150 D9BDF018 D9BFDD38 D9BFF018 00020040 20000 1STSEGMENT DA0E00F0 D9C1F2E0 D9C272C8 D9C272E0 00010040 8004 1STSEGMENT DA377928 D9C10088 D9C17F10 D9C18088 00010040 8004 1STSEGMENT DA3778C8 D9C08058 D9C0FFC8 D9C10058 00010040 8004 1STSEGMENT DA377868 D9C00028 D9C07F70 D9C08028 00010040 8004 1STSEGMENT DA377808 D9D1B018 D9D56050 D9D56B28 00020040 3bb10 1STSEGMENT DA3777A8 DA0F2AE0 DA0FAAB8 DA0FAAE0 00010040 8004 1STSEGMENT DA377748 D9D57018 D9D75F38 D9D77018 00020040 20000 1STSEGMENT DA3776E8 D9D78018 D9D96218 D9D98018 00020040 20000 1STSEGMENT DA377688 DA0EAAB0 DA0F2A18 DA0F2AB0 00010040 8004 1STSEGMENT DA377628 DA0D8090 DA0E0058 DA0E0090 00010040 8004 1STSEGMENT DA3775C8 D9D99018 D9DB72F0 D9DB9018 00020040 20000 1STSEGMENT DA377568 DA0D0060 DA0D7E70 DA0D8060 00010040 8004 1STSEGMENT DA377508 D9DBA018 D9DD7F40 D9DDA018 00020040 20000 1STSEGMENT DA3774A8 DA0CE008 DA0CEFE8 DA0CF008 00010040 1004 1STSEGMENT DA377448 DA0CD7D8 DA0CDEC8 DA0CDFD8 00010040 804 1STSEGMENT DA3773E8 DA0C70F0 DA0CB880 DA0CD7B0 00020040 66c0 1STSEGMENT DA377388 DA0BEC30 DA0BEF98 DA0BF030 00010040 404 1STSEGMENT DA377328 DA0BE568 DA0BEC00 DA0BEC00 00010040 69c 1STSEGMENT DA3772C8 DA0BFB10 DA0C47E8 DA0C60A0 00020040 6590 1STSEGMENT DA377268 DA0A9A28 DA0ACFD8 DA0B1A28 00010040 8004 1STSEGMENT DA377208 D9DDB018 D9DF2408 D9DFB018 00020040 20000 1STSEGMENT DA3771A8 D9DFC018 D9E040D8 D9E1C018 00020040 20000 1STSEGMENT DA377148 DA0A19F8 DA0A9888 DA0A99F8 00010040 8004 1STSEGMENT DA3770E8 DA0999C8 DA09D078 DA0A19C8 00010040 8004 1STSEGMENT DA377088 DA0899A0 DA098B48 DA0999A0 00020040 10000 1STSEGMENT DA377028 DA071948 DA079798 DA079948 00010040 8004 1STSEGMENT DA376FC8 DA069920 DA06F490 DA071920 00020040 8000 1STSEGMENT DA376F68 DA05D558 DA067D48 DA0698F8 00020040 c3a0 1STSEGMENT DA376F08 DA371810 DA372780 DA372810 00010040 1004 1STSEGMENT DA376EA8 DA055EE0 DA05B378 DA05D530 00020040 7650 1STSEGMENT DA376E48 DA3F93D0 DA3F9FA8 DA3FB3D0 00020040 2000 1STSEGMENT DA376DE8 D9E1D018 D9E39F28 D9E3D018 00020040 20000 1STSEGMENT DA376D88 D9E3E018 D9E5B028 D9E5E018 00020040 20000 1STSEGMENT DA376D28 D9E5F018 D9E7BEE8 D9E7F018 00020040 20000 1STSEGMENT DA376CC8 DA03DE70 DA045E48 DA045E70 00010040 8004 1STSEGMENT DA376C68 DAD4A198 DAD4AF78 DAD4B198 00010040 1004 1STSEGMENT DA376C08 DA9EE720 DA9EEFC0 DA9EEFC0 00010040 8a4 1STSEGMENT DA376BA8 DAD400C8 DAD47180 DAD49148 00020040 9080 1STSEGMENT DA376B48 DAD2F028 DAD2F608 DAD2F608 00010040 5e4 1STSEGMENT DA376AE8 DAD196F8 DAD1C498 DAD20938 00020040 7240 1STSEGMENT DA376A88 DAD2EB00 DAD2EFF8 DAD2EFF8 00010040 4fc 1STSEGMENT DA376A28 DA9EA1A8 DA9EC1A8 DA9EE6F8 00020040 4550 1STSEGMENT DA3769C8 DA035E40 DA03B540 DA03DE40 00010040 8004 1STSEGMENT DA90A980 10DBA1B0 10DBA9A0 10DBA9B0 00010040 804 1STSEGMENT DA90A920 10EE5170 10EE70C8 10EE7170 00010040 2004 1STSEGMENT DA90A8C0 10ED6A38 10EE2610 10EE5148 00020040 e710 1STSEGMENT DA90A860 10ED49E0 10ED5930 10ED59E0 00010040 1004 1STSEGMENT DA90A800 10ED0738 10ED1A90 10ED49B8 00020040 4280 1STSEGMENT DA90A7A0 10EC8620 10EC9810 10ECB0C0 00020040 2aa0 1STSEGMENT DA90A740 104553B0 10455B88 10455BB0 00010040 804 1STSEGMENT DA90A6E0 102BE3A0 102BE860 102BE860 00010040 4c4 1STSEGMENT DA90A680 10EC4400 10EC6170 10EC73D0 00020040 2fd0 1STSEGMENT DA90A620 10A6ED78 10A6EE28 10A6EE28 00010040 b4 1STSEGMENT DA90A5C0 10421D80 10421EF0 104220B0 00020040 330 1STSEGMENT DA90A560 10424308 10424710 10424710 00010040 40c 1STSEGMENT DA90A500 10EC2288 10EC3870 10EC43D8 00020040 2150 1STSEGMENT DA90A4A0 10BEA080 10BEA210 10BEA210 00010040 194 1STSEGMENT DA90A440 10A69F68 10A6A4C0 10A6AD98 00020040 e30 1STSEGMENT DA90A3E0 10EBA258 10EBDD58 10EC2258 00010040 8004 1STSEGMENT DA90A380 10E99208 10EAEBF0 10EB9208 00020040 20000 1STSEGMENT DA90A320 10E791E0 10E88DF8 10E991E0 00020040 20000 1STSEGMENT DA90A2C0 DA9400C8 DA95BC08 DA9600C8 00020040 20000 1STSEGMENT DA90A260 DA9E0230 DA9E8150 DA9E8230 00010040 8004 1STSEGMENT DA90A200 10E48008 10E663A0 10E68008 00020040 20000 1STSEGMENT DA90A1A0 10E3FFD8 10E46578 10E47FD8 00010040 8004 1STSEGMENT DA90A140 10E0FF88 10E2BBE8 10E2FF88 00020040 20000 1STSEGMENT DA90A0E0 D9FDF018 D9FF8DC8 D9FFF018 00020040 20000 1STSEGMENT DA90A080 DA01DDE8 DA025AE0 DA025DE8 00010040 8004 1STSEGMENT DA90A020 DA367D38 DA36BCD8 DA36BD38 00010040 4004 1STSEGMENT DA909FC0 DA383E78 DA385E50 DA385E78 00010040 2004 1STSEGMENT DA909F60 DA3F2508 DA3F7228 DA3F93A8 00020040 6ea0 1STSEGMENT DA909F00 DA36EBA0 DA36FD30 DA36FD30 00010040 1194 1STSEGMENT DA909EA0 DA00DEF0 DA01ADE8 DA01DDC0 00020040 fed0 1STSEGMENT DA909E40 DAFF6970 DAFF7DE8 DAFF7DE8 00010040 147c 1STSEGMENT DA909DE0 DD9204C8 DD920608 DD9208C8 00010040 404 1STSEGMENT DA909D80 DA37BB20 DA37BBE0 DA37BBE0 00010040 c4 1STSEGMENT DA909D20 DA000028 DA00B450 DA00DEC8 00020040 dea0 1STSEGMENT DA909CC0 DA1D7018 DA1E4178 DA1FFDB8 00020040 28da0 1STSEGMENT DA909C60 DA3E24E0 DA3E7040 DA3F24E0 00020040 10000 1STSEGMENT DA909C00 DA3D6FB8 DA3DEE20 DA3DEFB8 00010040 8004 1STSEGMENT DA909BA0 DA3CEF90 DA3D5D60 DA3D6F90 00020040 8000 1STSEGMENT DA909B40 DA3B6F38 DA3BB708 DA3BEF38 00010040 8004 1STSEGMENT DA909AE0 DA3AC268 DA3B4E90 DA3B5EE8 00020040 9c80 1STSEGMENT DA909A80 DA90BA40 DA90F910 DA90FA40 00010040 4004 1STSEGMENT DA909A20 DA9A01B8 DA9A7DE0 DA9A81B8 00010040 8004 1STSEGMENT 10D46800 DA900028 DA908FC8 DA9099C8 00020040 99a0 1STSEGMENT 10D467A0 DA9B01E0 DA9C9CA0 DA9D01E0 00020040 20000 1STSEGMENT 10D46680 DB1F8CD0 DB1FABD8 DB1FACD0 00010040 2004 1STSEGMENT 10D46620 DAD00028 DAD08950 DAD096A8 00020040 9680 1STSEGMENT 10D465C0 DB1D8CA8 DB1F71F8 DB1F8CA8 00020040 20000 1STSEGMENT 10D46560 DB1D0C78 DB1D8BE8 DB1D8C78 00010040 8004 1STSEGMENT 10D46500 DB1CEC48 DB1CF308 DB1D0C48 00010040 2004 1STSEGMENT 10D464A0 DADEB3D0 DADEE470 DADF0390 00020040 4fc0 1STSEGMENT 10D46440 DB17FA78 DB17FF28 DB17FF28 00010040 4b4 1STSEGMENT 10D463E0 DADE6AD8 DADE7C30 DADEB218 00020040 4740 1STSEGMENT 10D46380 DB114520 DB1148D0 DB1148D0 00010040 3b4 1STSEGMENT 10D46320 DADE3700 DADE4EB8 DADE6AB0 00020040 33b0 1STSEGMENT 10D462C0 10E06D08 10E0AC58 10E0AD08 00010040 4004 1STSEGMENT 10D46260 10DE0320 10E026A0 10E06CE0 00020040 269c0 1STSEGMENT 10D46200 10DD7CF8 10DD9A90 10DE02F8 00020040 8600 1STSEGMENT 10D461A0 10DD5CC8 10DD7AF8 10DD7CC8 00010040 2004 1STSEGMENT 10D46140 10CED338 10CEE260 10CEE338 00010040 1004 1STSEGMENT 10D460E0 10DCAAD8 10DD1468 10DD4C78 00020040 a1a0 1STSEGMENT 10D46080 10BD5DD0 10BD65C0 10BD65D0 00010040 804 1STSEGMENT 10D46020 10DC6310 10DC8438 10DCAAB0 00020040 47a0 1STSEGMENT 10D45FC0 10DC22F8 10DC3EF0 10DC62E8 00020040 3ff0 1STSEGMENT 10D45F60 10DC12C8 10DC22A0 10DC22C8 00010040 1004 1STSEGMENT 10D45F00 10DBAF00 10DBC730 10DC12A0 00020040 63a0 1STSEGMENT 10D45EA0 10D4F8E8 10D50580 10D508E8 00010040 1004 1STSEGMENT 10D45E40 10CF1760 10CF4E00 10CF5CB0 00020040 4550 1STSEGMENT 10D45DE0 10D95E90 10DAD098 10DB5E90 00020040 20000 1STSEGMENT 10D45D80 10D8DE60 10D95DB0 10D95E60 00010040 8004 1STSEGMENT 10D45D20 DA399E60 DA39A5F0 DA39A660 00010040 804 1STSEGMENT 10D45CC0 DA3998D8 DA399BC0 DA399CD8 00010040 404 1STSEGMENT 10D45C60 DA3974B0 DA398048 DA3998B0 00020040 2400 1STSEGMENT 10D45C00 DA397328 DA397480 DA397480 00010040 15c 1STSEGMENT 10D45BA0 DA396910 DA396CF8 DA397300 00020040 9f0 1STSEGMENT 10D45B40 DA38E8E0 DA3967E8 DA3968E0 00010040 8004 1STSEGMENT 10D45AE0 DA2BE018 DA2D93E0 DA2DE018 00020040 20000 1STSEGMENT 10D45A80 DA2DF018 DA2FE8B0 DA2FF018 00020040 20000 1STSEGMENT 10D45A20 10D51B38 10D55AC8 10D55B38 00010040 4004 1STSEGMENT 10D459C0 10CD9AC8 10CE8468 10CEC2E8 00020040 12820 1STSEGMENT 10D45960 10D85E30 10D8DC30 10D8DE30 00010040 8004 1STSEGMENT 10D45900 10D46898 10D4BB50 10D4E898 00020040 8000 1STSEGMENT 10D458A0 10D65E08 10D82038 10D85E08 00020040 20000 1STSEGMENT DAFF42E0 10D25848 10D41460 10D45848 00020040 20000 1STSEGMENT DAFF4280 10D1D820 10D22DC8 10D25820 00020040 8000 1STSEGMENT DAFF4220 10D197F8 10D1B3B8 10D1D7F8 00020040 4000 1STSEGMENT DAFF41C0 10D157C8 10D19468 10D197C8 00010040 4004 1STSEGMENT DAFF4160 10BAEEC8 10BB6DD0 10BB6EC8 00010040 8004 1STSEGMENT DAFF4100 10CFF358 10D13B38 10D14778 00020040 15420 1STSEGMENT DAFF40A0 10C5BD80 10C5DBF8 10C5DD80 00010040 2004 1STSEGMENT DAFF4040 10A6ADE0 10A6BC98 10A6BDE0 00010040 1004 1STSEGMENT DAFF3FE0 10224300 10224A48 10224B00 00010040 804 1STSEGMENT DAFF3F80 104236D0 10423AD8 10423AD8 00010040 40c 1STSEGMENT DAFF3F20 10BEB6E8 10BEB7E8 10BEB7E8 00010040 104 1STSEGMENT DAFF3EC0 10CF5CF0 10CFE680 10CFF330 00020040 9640 1STSEGMENT DAFF3E60 10BAA0E0 10BAD1E0 10BAEEA0 00020040 4dc0 1STSEGMENT DAFF3E00 10426E10 104276D8 104283C0 00020040 15b0 1STSEGMENT DAFF3DA0 10BA20B8 10BA6A88 10BAA0B8 00020040 8000 1STSEGMENT DAFF3D40 10C57D50 10C5BD10 10C5BD50 00010040 4004 1STSEGMENT DAFF3CE0 10C6BC78 10C6DB28 10C6DC78 00010040 2004 1STSEGMENT DAFF3C80 10B87F60 10B9F738 10BA2090 00020040 1a130 1STSEGMENT DAFF3C20 10BD3DA0 10BD5C48 10BD5DA0 00010040 2004 1STSEGMENT DAFF3BC0 10BEEB28 10BEEDE8 10BEEF28 00010040 404 1STSEGMENT DAFF3B60 10425E90 104265C0 10426690 00010040 804 1STSEGMENT DAFF3B00 10CC98C0 10CC9A50 10CC9A50 00010040 194 1STSEGMENT DAFF3AA0 104223A0 10422C18 10423120 00020040 d80 1STSEGMENT DAFF3A40 DAFFD9C8 DAFFDFE8 DAFFDFE8 00010040 624 1STSEGMENT DAFF39E0 DA361158 DA3657D0 DA367218 00020040 60c0 1STSEGMENT DAFF3980 DAFF5EA8 DAFF5FB8 DAFF5FB8 00010040 114 1STSEGMENT DAFF3920 DAFFC050 DAFFC418 DAFFC7B0 00020040 760 1STSEGMENT DAFF38C0 DA4BE018 DA4DBCC0 DA4DE018 00020040 20000 1STSEGMENT DAFF3860 DA359128 DA3610E0 DA361128 00010040 8004 1STSEGMENT DAFF3800 DA3510F8 DA3590D8 DA3590F8 00010040 8004 1STSEGMENT DAFF37A0 DA3410D0 DA34FDA0 DA3510D0 00020040 10000 1STSEGMENT DAFF3740 DA4DF018 DA4F4260 DA4FF018 00020040 20000 1STSEGMENT DAFF36E0 DA3310A8 DA33E4B8 DA3410A8 00020040 10000 1STSEGMENT DAFF3680 DA329078 DA330F60 DA331078 00010040 8004 1STSEGMENT DAFF3620 DA321050 DA3265A0 DA329050 00020040 8000 1STSEGMENT DAFF35C0 DA31CC78 DA31EFC8 DA321028 00020040 43b0 1STSEGMENT DAFF3560 DA318380 DA319F00 DA31CC50 00020040 48d0 1STSEGMENT DAFF3500 DA314350 DA318320 DA318350 00010040 4004 1STSEGMENT DAFF34A0 DAFF8FF8 DAFFAF50 DAFFAFF8 00010040 2004 1STSEGMENT DAFF3440 DAFF4CC8 DAFF5D50 DAFF5D50 00010040 108c 1STSEGMENT DAFF33E0 DA300028 DA311BA8 DA314328 00020040 14300 1STSEGMENT DAFF3380 DAFF4378 DAFF4C98 DAFF4C98 00010040 924 1STSEGMENT 10B15398 DAFE7F18 DAFE8268 DAFE8318 00010040 404 1STSEGMENT 10B15338 DAF9C6B0 DAF9CB88 DAF9CB88 00010040 4dc 1STSEGMENT 10B152D8 DAFDFEF0 DAFE5660 DAFE7EF0 00020040 8000 1STSEGMENT 10B15278 DAFEAC08 DAFEFEB0 DAFF3328 00020040 8720 1STSEGMENT 10B15218 DAF9A658 DAF9B568 DAF9B658 00010040 1004 1STSEGMENT 10B151B8 DAF98690 DAF99600 DAF99600 00010040 f74 1STSEGMENT 10B15158 DAFD4CB8 DAFDE6D0 DAFDFEC8 00020040 b210 1STSEGMENT 10B150F8 DAF97998 DAF98660 DAF98660 00010040 ccc 1STSEGMENT 10B15098 DAF96F40 DAF97968 DAF97968 00010040 a2c 1STSEGMENT 10B15038 DAF909C8 DAF93178 DAF96F18 00020040 6550 1STSEGMENT 10B14FD8 DAF87FD0 DAF8C8D0 DAF909A0 00020040 89d0 1STSEGMENT 10B14F78 10C63C48 10C6BC10 10C6BC48 00010040 8004 1STSEGMENT 10B14F18 10CC0770 10CC1748 10CC8770 00010040 8004 1STSEGMENT 10B14EB8 10BF48B0 10BF8848 10BF88B0 00010040 4004 1STSEGMENT 10B14E58 10BF2880 10BF4648 10BF4880 00010040 2004 1STSEGMENT 10B14DF8 10BEF440 10BF1828 10BF1828 00010040 23ec 1STSEGMENT 10B14D98 10C89A00 10CA5B58 10CB9E40 00020040 30440 1STSEGMENT 10B14D38 DAF662F0 DAF6A038 DAF6A2F0 00020040 4000 1STSEGMENT 10B14CD8 DAF642C0 DAF662A8 DAF662C0 00010040 2004 1STSEGMENT 10B14C78 DAF5CF78 DAF63578 DAF64298 00020040 7320 1STSEGMENT 10B14C18 DAF54F48 DAF5CA20 DAF5CF48 00010040 8004 1STSEGMENT 10B14BB8 DB3F3FD0 DB3F44F8 DB3F47D0 00010040 804 1STSEGMENT 10B14B58 DD5ECB60 DD5ECD18 DD5ECF60 00010040 404 1STSEGMENT 10B14AF8 DB398858 DB398E10 DB398E10 00010040 5bc 1STSEGMENT 10B14A98 DAF4DC20 DAF51930 DAF54F20 00020040 7300 1STSEGMENT 10B14A38 DB360F10 DB364EA8 DB364F10 00010040 4004 1STSEGMENT 10B149D8 DB3E4B08 DB3F3770 DB3F3FA8 00020040 f4a0 1STSEGMENT 10B14978 DB396828 DB3987A8 DB398828 00010040 2004 1STSEGMENT 10B14918 DAFACC38 DAFCBEC8 DAFCCC38 00020040 20000 1STSEGMENT 10B148B8 DAFCCC88 DAFCD1C8 DAFD4C88 00010040 8004 1STSEGMENT 10B14858 DB358EE0 DB35C3B0 DB360EE0 00010040 8004 1STSEGMENT 10B147F8 10C3C5A8 10C44580 10C445A8 00010040 8004 1STSEGMENT 10B14798 10BF9278 10C2BD08 10C2C558 00020040 332e0 1STSEGMENT 10B14738 10C6E3E8 10C76380 10C763E8 00010040 8004 1STSEGMENT 10B146D8 DAF1C848 DAF3AC48 DAF3C848 00020040 20000 1STSEGMENT 10B14678 10B7FF30 10B87EA8 10B87F30 00010040 8004 1STSEGMENT 10B14618 10A76FF8 10A7EF00 10A7EFF8 00010040 8004 1STSEGMENT 10B145B8 10B5FF08 10B7B550 10B7FF08 00020040 20000 1STSEGMENT 10B14558 DB389B00 DB391AE8 DB391B00 00010040 8004 1STSEGMENT 10B144F8 10B21F80 10B5F738 10B5FEE0 00020040 3df60 1STSEGMENT 10B14498 10AD3228 10AEF460 10AF3228 00020040 20000 1STSEGMENT 10B14438 10AF9460 10B01438 10B01460 00010040 8004 1STSEGMENT DB143C18 10AB3200 10ACDAC8 10AD3200 00020040 20000 1STSEGMENT DB143BB8 DAE63018 DAE7F5C8 DAE83018 00020040 20000 1STSEGMENT DB143B58 DB1C5BF0 DB1CDB38 DB1CDBF0 00010040 8004 1STSEGMENT DB143AF8 DAE84018 DAEA1CA8 DAEA4018 00020040 20000 1STSEGMENT DB143A98 10A6EFC8 10A76EC8 10A76FC8 00010040 8004 1STSEGMENT DB143A38 DB1BB2C0 DB1C3098 DB1C32C0 00010040 8004 1STSEGMENT DB1439D8 DB1B2268 DB1BA240 DB1BA268 00010040 8004 1STSEGMENT DB143978 DAEA5018 DAEC1740 DAEC5018 00020040 20000 1STSEGMENT DB143918 DAEC6018 DAEE0038 DAEE6018 00020040 20000 1STSEGMENT DB1438B8 10B1A9D8 10B1AB60 10B1AB60 00010040 18c 1STSEGMENT DB143858 1096D780 1096DBE8 1096DFA0 00020040 820 1STSEGMENT DB1437F8 DB003018 DB01FFC8 DB023018 00020040 20000 1STSEGMENT DB143798 DAF13B90 DAF1BAD8 DAF1BB90 00010040 8004 1STSEGMENT DB143738 DB19A210 DB19A408 DB1A2210 00010040 8004 1STSEGMENT DB1436D8 DB153CD8 DB15BB58 DB15BCD8 00010040 8004 1STSEGMENT DB143678 DB024018 DB040650 DB044018 00020040 20000 1STSEGMENT DB143618 109A8340 109AAF30 109AC340 00020040 4000 1STSEGMENT DB1435B8 DB045018 DB06B968 DB06C0E8 00020040 270d0 1STSEGMENT DB143558 DB190F68 DB198E48 DB198F68 00010040 8004 1STSEGMENT DB1434F8 DB06D018 DB088600 DB08D018 00020040 20000 1STSEGMENT DB143498 DB188F38 DB190F10 DB190F38 00010040 8004 1STSEGMENT DB143438 DB08E018 DB0D9258 DB0DEB38 00020040 50b20 1STSEGMENT DB1433D8 DB174CB8 DB17CB38 DB17CCB8 00010040 8004 1STSEGMENT DB143378 DB0DF018 DB0F8FE8 DB0FF018 00020040 20000 1STSEGMENT DB143318 DB16B838 DB1736E8 DB173838 00010040 8004 1STSEGMENT DB1432B8 10A9E500 10A9E688 10A9E688 00010040 18c 1STSEGMENT DB143258 10A9DCE8 10A9E128 10A9E4D8 00020040 7f0 1STSEGMENT DB1431F8 DB21B018 DB236728 DB23B018 00020040 20000 1STSEGMENT DB143198 DB163808 DB16B6C8 DB16B808 00010040 8004 1STSEGMENT DB143138 DB23C018 DB258210 DB25C018 00020040 20000 1STSEGMENT DB1430D8 10A61F38 10A69EE0 10A69F38 00010040 8004 1STSEGMENT DB143078 DB39CA38 DB3A49D8 DB3A4A38 00010040 8004 1STSEGMENT DB143018 DC809080 DC809FA0 DC80A080 00010040 1004 1STSEGMENT DB142FB8 DB5A15B0 DB5A35C0 DB5A4540 00020040 2f90 1STSEGMENT DB142F58 DBACB150 DBACB7F0 DBACB950 00010040 804 1STSEGMENT DB142EF8 DB595B90 DB5965E8 DB5965E8 00010040 a5c 1STSEGMENT DB142E98 DB351E98 DB357968 DB358EB8 00020040 7020 1STSEGMENT DB142E38 DBACD748 DBACD808 DBACD808 00010040 c4 1STSEGMENT DB142DD8 DBACD430 DBACD570 DBACD720 00020040 2f0 1STSEGMENT DB142D78 DB32A4A8 DB349B30 DB34A4A8 00020040 20000 1STSEGMENT DB142D18 DB29D018 DB2BB7B0 DB2BD018 00020040 20000 1STSEGMENT DB142CB8 DB143CB0 DB150580 DB153CB0 00020040 10000 1STSEGMENT DB52B9A0 DB13AC60 DB13F8F0 DB142C60 00020040 8000 1STSEGMENT DB52B940 DB135C08 DB139828 DB139C08 00010040 4004 1STSEGMENT DB52B8E0 DB130AF0 DB133508 DB135BE0 00020040 50f0 1STSEGMENT DB52B880 DB2BE018 DB2DC7C8 DB2DE018 00020040 20000 1STSEGMENT DB52B820 DB118A98 DB120970 DB120A98 00010040 8004 1STSEGMENT DB52B7C0 DB114920 DB1188D0 DB118920 00010040 4004 1STSEGMENT DB52B760 DB10A1E8 DB1120D0 DB1121E8 00010040 8004 1STSEGMENT DB52B700 DB2DF018 DB2FD590 DB2FF018 00020040 20000 1STSEGMENT DB52B6A0 DB101F40 DB109CE8 DB109F40 00010040 8004 1STSEGMENT DB52B640 10A41F10 10A5E248 10A61F10 00020040 20000 1STSEGMENT DB52B5E0 108FA8A8 108FAE40 108FE8A8 00010040 4004 1STSEGMENT DB52B580 10783DE0 10784FC8 10793DE0 00020040 10000 1STSEGMENT DB52B520 10710C48 10718B70 10718C48 00010040 8004 1STSEGMENT DB52B4C0 1090D438 1090F370 1090F438 00010040 2004 1STSEGMENT DB52B460 1086AD88 108719A0 10872D88 00020040 8000 1STSEGMENT DB52B400 108C57F8 108C6750 108C67F8 00010040 1004 1STSEGMENT DB52B3A0 10832D08 10835538 10836D08 00020040 4000 1STSEGMENT DB52B340 108C29D0 108C3F00 108C57D0 00020040 2e00 1STSEGMENT DB52B2E0 1042F250 1042F778 1042FA50 00010040 804 1STSEGMENT DB52B280 DB49D018 DB4B8C58 DB4BD018 00020040 20000 1STSEGMENT DB52B220 DB300028 DB31E0D8 DB320028 00020040 20000 1STSEGMENT DB52B1C0 DB5CFAF8 DB5D6748 DB5D7AF8 00010040 8004 1STSEGMENT DB52B160 DB589D38 DB591CB0 DB591D38 00010040 8004 1STSEGMENT DB52B100 DB4BE018 DB4DDA20 DB4DE018 00020040 20000 1STSEGMENT DB52B0A0 DB581D08 DB589CC0 DB589D08 00010040 8004 1STSEGMENT DB52B040 DB5707E8 DB574230 DB5807E8 00020040 10000 1STSEGMENT DB52AFE0 DB56F7B8 DB5703C0 DB5707B8 00010040 1004 1STSEGMENT DB52AF80 DB56CBE8 DB56D738 DB56D738 00010040 b54 1STSEGMENT DB52AF20 DB563AE0 DB569FC8 DB56CBC0 00020040 90e0 1STSEGMENT DB52AEC0 DDC963F8 DDC96770 DDC967F8 00010040 404 1STSEGMENT DB52AE60 DD985D20 DD985F90 DD985F90 00010040 274 1STSEGMENT DB52AE00 DB561CD8 DB562B48 DB563AB8 00020040 1de0 1STSEGMENT DB52ADA0 DB55FCA8 DB560B08 DB561CA8 00010040 2004 1STSEGMENT DB52AD40 DB557C80 DB559138 DB55FC80 00020040 8000 1STSEGMENT DB52ACE0 DB555C50 DB557870 DB557C50 00010040 2004 1STSEGMENT DB52AC80 DB54C168 DB5542E8 DB555C28 00020040 9ac0 1STSEGMENT DB52AC20 DB53FF60 DB5464E0 DB54C140 00020040 c1e0 1STSEGMENT DB52ABC0 DB53EF30 DB53FE90 DB53FF30 00010040 1004 1STSEGMENT DB52AB60 DB538688 DB53C350 DB53EF08 00020040 6880 1STSEGMENT DB52AB00 DB536960 DB537630 DB537630 00010040 cd4 1STSEGMENT DB52AAA0 DB52BA38 DB530DE8 DB536938 00020040 af00 1STSEGMENT DB52AA40 DD987F90 DD988298 DD988390 00010040 404 1STSEGMENT 100DAD18 DB5274C8 DB528100 DB52A9E8 00020040 3520 1STSEGMENT 100DACB8 DD91CB48 DD91CEE8 DD91CEE8 00010040 3a4 1STSEGMENT 100DAC58 DB524CD0 DB525FE0 DB5274A0 00020040 27d0 1STSEGMENT 100DABF8 DB7F4E68 DB7F5D70 DB7F5E68 00010040 1004 1STSEGMENT 100DAB98 DB4DF018 DB4FCD88 DB4FF018 00020040 20000 1STSEGMENT 100DAB38 DB51CCA0 DB524C68 DB524CA0 00010040 8004 1STSEGMENT 100DAAD8 DB5063E0 DB509EE8 DB50CC50 00020040 6870 1STSEGMENT 100DAA78 DB7F2E38 DB7F4DA0 DB7F4E38 00010040 2004 1STSEGMENT 100DAA18 DB500028 DB502FB8 DB5063B8 00020040 6390 1STSEGMENT 100DA9B8 DB7F2608 DB7F2718 DB7F2E08 00010040 804 1STSEGMENT 100DA958 DB7EFD88 DB7F0488 DB7F0588 00010040 804 1STSEGMENT 100DA8F8 DB7EA600 DB7ECEC0 DB7EFD60 00020040 5760 1STSEGMENT 100DA898 DD9875C8 DD987F60 DD987F60 00010040 99c 1STSEGMENT 100DA838 DD957AD0 DD957E08 DD957ED0 00010040 404 1STSEGMENT 100DA7D8 DD9865A0 DD986CB8 DD9875A0 00020040 1000 1STSEGMENT 100DA778 DDCE0E88 DDCE0F68 DDCE0F68 00010040 e4 1STSEGMENT 100DA718 DD957498 DD957778 DD957AA8 00020040 610 1STSEGMENT 100DA6B8 DB7E0DF8 DB7E55A0 DB7EA5D8 00020040 97e0 1STSEGMENT 100DA658 DD906F38 DD907080 DD907080 00010040 14c 1STSEGMENT 100DA5F8 DB7D7450 DB7D79F8 DB7D7F00 00020040 ab0 1STSEGMENT 100DA598 DB6DF018 DB6FB758 DB6FF018 00020040 20000 1STSEGMENT 100DA538 DB7D8DC8 DB7E0D40 DB7E0DC8 00010040 8004 1STSEGMENT 100DA4D8 DB811018 DB82CC70 DB831018 00020040 20000 1STSEGMENT 100DA478 DB7C9330 DB7D1310 DB7D1330 00010040 8004 1STSEGMENT 100DA418 DB832018 DB84FA30 DB85C4B8 00020040 2a4a0 1STSEGMENT 100DA3B8 DB74C7D8 DB750750 DB7507D8 00010040 4004 1STSEGMENT 100DA358 DB7B9308 DB7C3FD0 DB7C9308 00020040 10000 1STSEGMENT 100DA2F8 DB7B12E0 DB7B41E0 DB7B92E0 00020040 8000 1STSEGMENT 100DA298 DB7AF2B0 DB7B12A8 DB7B12B0 00010040 2004 1STSEGMENT 100DA238 DB85D018 DB87B578 DB87D018 00020040 20000 1STSEGMENT 100DA1D8 DB7A7280 DB7AF270 DB7AF280 00010040 8004 1STSEGMENT 100DA178 DB7A2D80 DB7A6D60 DB7A6D80 00010040 4004 1STSEGMENT 100DA118 DB792D58 DB79FC60 DB7A2D58 00020040 10000 1STSEGMENT 100DA0B8 DB78AD30 DB78F7F0 DB792D30 00020040 8000 1STSEGMENT 100DA058 DB752260 DB754190 DB754260 00010040 2004 1STSEGMENT 100D9FF8 DB77F508 DB786C40 DB78AD08 00020040 b800 1STSEGMENT 100D9F98 DB751230 DB752118 DB752230 00010040 1004 1STSEGMENT 100D9F38 DB750A00 DB751000 DB751200 00010040 804 1STSEGMENT 100D9ED8 DB777800 DB77A798 DB77F4E0 00020040 7ce0 1STSEGMENT 100D9E78 109A1E98 109A21A8 109A2E98 00010040 1004 1STSEGMENT 100D9E18 DB76F7D0 DB7777B8 DB7777D0 00010040 8004 1STSEGMENT 100D9DB8 108F0850 108F12A8 108F2850 00020040 2000 1STSEGMENT 108BC518 DB756578 DB76E908 DB76F7A8 00020040 19230 1STSEGMENT 108BC4B8 DB706070 DB706D00 DB707070 00010040 1004 1STSEGMENT 108BC458 DB70D348 DB70E110 DB70E110 00010040 dcc 1STSEGMENT 108BC3F8 DB747780 DB74B720 DB74B780 00010040 4004 1STSEGMENT 108BC398 DB73F758 DB745CB0 DB747758 00020040 8000 1STSEGMENT 108BC338 DB73B730 DB73DBF0 DB73F730 00020040 4000 1STSEGMENT 108BC2D8 DB70B318 DB70D288 DB70D318 00010040 2004 1STSEGMENT 108BC278 DB7092F0 DB70A438 DB70B2F0 00020040 2000 1STSEGMENT 108BC218 DB707298 DB708288 DB708298 00010040 1004 1STSEGMENT 108BC1B8 DCBBAA38 DCBBB1D8 DCBBB238 00010040 804 1STSEGMENT 108BC158 DBAD03B8 DBAD11C8 DBAD11C8 00010040 e14 1STSEGMENT 108BC0F8 DB7307F8 DB73A108 DB73B708 00020040 af10 1STSEGMENT 108BC098 DE505ED0 DE505FA0 DE505FA0 00010040 d4 1STSEGMENT 108BC038 DBA65D70 DBA65EC8 DBA66040 00020040 2d0 1STSEGMENT 108BBFD8 DBA66B48 DBA66DE0 DBA66F48 00010040 404 1STSEGMENT 108BBF78 DD919018 DD91AAB0 DD91AAB0 00010040 1a9c 1STSEGMENT 108BBF18 DB7144F8 DB72B4E0 DB72E6A8 00020040 1a1b0 1STSEGMENT 108BBEB8 DDCE0308 DDCE0D00 DDCE0D00 00010040 9fc 1STSEGMENT 108BBE58 DB700028 DB703418 DB706048 00020040 6020 1STSEGMENT 108BBDF8 DBA636E8 DBA63798 DBA63798 00010040 b4 1STSEGMENT 108BBD98 DBA703D8 DBA704F8 DBA70668 00020040 290 1STSEGMENT 108BBD38 DBAF2468 DBAF49D8 DBAF7A08 00020040 55a0 1STSEGMENT 108BBCD8 DDE8F200 DDE91790 DDE943C0 00020040 51c0 1STSEGMENT 108BBC78 DBADA410 DBAE2300 DBAE2410 00010040 8004 1STSEGMENT 108BBC18 DBAD23E0 DBADA2E8 DBADA3E0 00010040 8004 1STSEGMENT 108BBBB8 DB87E018 DB89DA78 DB89E018 00020040 20000 1STSEGMENT 108BBB58 DCBB08D8 DCBB88A0 DCBB88D8 00010040 8004 1STSEGMENT 108BBAF8 DB89F018 DB8B30A0 DB8BF018 00020040 20000 1STSEGMENT 108BBA98 10A11EC0 10A312E0 10A31EC0 00020040 20000 1STSEGMENT 108BBA38 109EEE78 10A108C8 10A11E98 00020040 23020 1STSEGMENT 108BB9D8 109CEE50 109ECE38 109EEE50 00020040 20000 1STSEGMENT 108BB978 10991E60 10999D78 10999E60 00010040 8004 1STSEGMENT 108BB918 109AD4D8 109CC450 109CEE28 00020040 21950 1STSEGMENT 108BB8B8 10901AD0 10909978 10909AD0 00010040 8004 1STSEGMENT 108BB858 10971E38 10990538 10991E38 00020040 20000 1STSEGMENT 108BB7F8 10929190 10930F00 10931190 00010040 8004 1STSEGMENT 108BB798 10938808 1095F3F8 10961DE8 00020040 295e0 1STSEGMENT 108BB738 108F2878 108FA7A0 108FA878 00010040 8004 1STSEGMENT 108BB6D8 108ED210 108ED788 108EF210 00010040 2004 1STSEGMENT 108BB678 108E70F8 108EA4C8 108ED1E8 00020040 60f0 1STSEGMENT 108BB618 108C70D0 108E4B28 108E70D0 00020040 20000 1STSEGMENT 108BB5B8 108C0978 108C14E0 108C1978 00010040 1004 1STSEGMENT DBCE1648 108B9888 108B9FA0 108BA088 00010040 804 1STSEGMENT DBCE15E8 108B8E68 108B9680 108B9680 00010040 81c 1STSEGMENT DBCE1588 108AF740 108B5FD8 108B8E40 00020040 9700 1STSEGMENT DBCE1528 1088D4C8 108A9910 108AD4C8 00020040 20000 1STSEGMENT DBCE14C8 1088D330 1088D400 1088D400 00010040 d4 1STSEGMENT DBCE1468 1088CEB8 1088D0A8 1088D308 00020040 450 1STSEGMENT DBCE1408 1088A448 1088AAC0 1088AC48 00010040 804 1STSEGMENT DBCE13A8 104549B0 10454E58 10454E58 00010040 4ac 1STSEGMENT DBCE1348 104543A0 104548D0 104548D0 00010040 534 1STSEGMENT DBCE12E8 10882DE0 10887818 1088A420 00020040 7640 1STSEGMENT DBCE1288 109185C0 10918A50 10918DC0 00010040 804 1STSEGMENT DBCE1228 109146D8 10915F80 10918598 00020040 3ec0 1STSEGMENT DBCE11C8 100D34A0 100D3710 100D38A0 00010040 404 1STSEGMENT DBCE1168 10793E08 10794680 10794E08 00020040 1000 1STSEGMENT DBCE1108 1041F8A8 1041F958 1041F958 00010040 b4 1STSEGMENT DBCE10A8 1041BB98 1041BCE8 1041BE98 00020040 300 1STSEGMENT DBCE1048 1087ADB0 10882CE0 10882DB0 00010040 8004 1STSEGMENT DBCE0FE8 106AC698 106ACBD8 106ACE98 00010040 804 1STSEGMENT DBCE0F88 1090AF40 1090BD68 1090D410 00020040 24d0 1STSEGMENT DBCE0F28 10429948 10429C80 10429D48 00010040 404 1STSEGMENT DBCE0EC8 106AC138 106AC668 106AC668 00010040 534 1STSEGMENT DBCE0E68 1083B240 1083DEF8 1083F970 00020040 4730 1STSEGMENT DBCE0E08 10428E60 104293F0 104293F0 00010040 594 1STSEGMENT DBCE0DA8 10837D58 1083A190 1083B218 00020040 34c0 1STSEGMENT DBCE0D48 1074C538 1074CA40 1074CA40 00010040 50c 1STSEGMENT DBCE0CE8 100CE770 100D0630 100D2450 00020040 3ce0 1STSEGMENT DBCE0C88 1084AD60 1086A5B8 1086AD60 00020040 20000 1STSEGMENT DBCE0C28 DBA57978 DBA57D38 DBA5B978 00010040 4004 1STSEGMENT DBCE0BC8 DBBBE018 DBBD7478 DBBDE018 00020040 20000 1STSEGMENT DBCE0B68 DBA44768 DBA4B5C0 DBA4C768 00010040 8004 1STSEGMENT DBCE0B08 DBA353F0 DBA3D1E0 DBA3D3F0 00010040 8004 1STSEGMENT DBCE0AA8 DBA2D3C0 DBA35040 DBA353C0 00010040 8004 1STSEGMENT DBCE0A48 DBBDF018 DBBFDD50 DBBFF018 00020040 20000 1STSEGMENT DBCE09E8 DBA1D398 DBA28D58 DBA2D398 00020040 10000 1STSEGMENT DBCE0988 DBA15368 DBA1D1D0 DBA1D368 00010040 8004 1STSEGMENT DBCE0928 DBA05778 DBA0DF78 DBA14B48 00020040 f3d0 1STSEGMENT DBCE08C8 DBA00720 DBA04650 DBA04720 00010040 4004 1STSEGMENT DBCE0868 DBCFDC30 DBCFF928 DBCFFC30 00010040 2004 1STSEGMENT DBCE0808 DBCF6CE0 DBCFADF0 DBCFD520 00020040 6840 1STSEGMENT DBCE07A8 DBCF5CB0 DBCF6A60 DBCF6CB0 00010040 1004 1STSEGMENT DBCE0748 DBCF3AA8 DBCF45D8 DBCF45D8 00010040 b34 1STSEGMENT DBCE06E8 DBCEC070 DBCF15B8 DBCF3A80 00020040 7a10 1STSEGMENT DBFF5238 DBCEB9B8 DBCEBBC0 DBCEBDB8 00010040 404 1STSEGMENT DBFF51D8 DBCEA990 DBCEAC10 DBCEB990 00020040 1000 1STSEGMENT DBFF5178 DBC360D8 DBC361A8 DBC361A8 00010040 d4 1STSEGMENT DBFF5118 DBC35DD0 DBC35F30 DBC360B0 00020040 2e0 1STSEGMENT DBFF50B8 DBCE2960 DBCEA710 DBCEA960 00010040 8004 1STSEGMENT DBFF5058 DBCD8688 DBCE0668 DBCE0688 00010040 8004 1STSEGMENT DBFF4FF8 DBD62018 DBD8A310 DBD8A5C8 00020040 285b0 1STSEGMENT DBFF4F98 DBCC8660 DBCD5948 DBCD8660 00020040 10000 1STSEGMENT DBFF4F38 DBCB2C98 DBCB4FE0 DBCB6C98 00020040 4000 1STSEGMENT DBFF4ED8 DBCAEC68 DBCB1508 DBCB2C68 00010040 4004 1STSEGMENT DBFF4E78 DBCACC38 DBCAEC30 DBCAEC38 00010040 2004 1STSEGMENT DBFF4E18 DBD8B018 DBDA7678 DBDAB018 00020040 20000 1STSEGMENT DBFF4DB8 DBCA4C08 DBCACAD8 DBCACC08 00010040 8004 1STSEGMENT DBFF4D58 DBCA1B88 DBCA2B50 DBCA2B88 00010040 1004 1STSEGMENT DBFF4CF8 DBC96560 DBCA13D8 DBCA1B60 00020040 b600 1STSEGMENT DBFF4C98 DBC8EFD0 DBC93D60 DBC95510 00020040 6540 1STSEGMENT DBFF4C38 DBC86FA0 DBC8EF78 DBC8EFA0 00010040 8004 1STSEGMENT DBFF4BD8 DBDAC018 DBDCBA70 DBDCC018 00020040 20000 1STSEGMENT DBFF4B78 DBC84F70 DBC86BF0 DBC86F70 00010040 2004 1STSEGMENT DBFF4B18 DBC83F40 DBC84EA0 DBC84F40 00010040 1004 1STSEGMENT DBFF4AB8 DBC643D8 DBC649E8 DBC64BD8 00010040 804 1STSEGMENT DBFF4A58 DBC79CF8 DBC816B8 DBC83F18 00020040 a220 1STSEGMENT DBFF49F8 DBC69430 DBC72EF0 DBC79CD0 00020040 108a0 1STSEGMENT DBFF4998 DBC65400 DBC68DF8 DBC69400 00010040 4004 1STSEGMENT DBFF4938 DBC623A8 DBC64258 DBC643A8 00010040 2004 1STSEGMENT DBFF48D8 DBC5A380 DBC609C0 DBC62380 00020040 8000 1STSEGMENT DBFF4878 DBC4EF88 DBC54DE0 DBC5A358 00020040 b3d0 1STSEGMENT DBFF4818 DBC34A38 DBC35A20 DBC35A38 00010040 1004 1STSEGMENT DBFF47B8 DBC4BB20 DBC4CFE0 DBC4EF60 00020040 3440 1STSEGMENT DBFF4758 DBC34208 DBC347A8 DBC34A08 00010040 804 1STSEGMENT DBFF46F8 DBC33C00 DBC341D8 DBC341D8 00010040 5dc 1STSEGMENT DBFF4698 DBC44DD0 DBC48888 DBC4AAD0 00020040 5d00 1STSEGMENT DBFF4638 DBC31CD8 DBC324E0 DBC324E0 00010040 80c 1STSEGMENT DBFF45D8 DBC3F6D8 DBC423E0 DBC44DA8 00020040 56d0 1STSEGMENT DBFF4578 DBDCD018 DBDEC790 DBDED018 00020040 20000 1STSEGMENT DBFF4518 DD935F68 DD936398 DD936398 00010040 434 1STSEGMENT DBFF44B8 DBC2C108 DBC302B8 DBC31B88 00020040 5a80 1STSEGMENT DBFF4458 DD935A80 DD935CD0 DD935CD0 00010040 254 1STSEGMENT DBFF43F8 DBC2AB60 DBC2B5E0 DBC2C0E0 00020040 1580 1STSEGMENT DBFF4398 DBC210D8 DBC220B8 DBC220D8 00010040 1004 1STSEGMENT DBFF4338 DBC18080 DBC1FF98 DBC20080 00010040 8004 1STSEGMENT DBFF42D8 DBC10050 DBC17E68 DBC18050 00010040 8004 1STSEGMENT DBF32D18 DBFF3278 DBFF41C0 DBFF4278 00010040 1004 1STSEGMENT DBF32CB8 DBFE6110 DBFEFAB8 DBFF3250 00020040 d140 1STSEGMENT DBF32C58 DBFDC090 DBFE3FE8 DBFE4090 00010040 8004 1STSEGMENT DBF32BF8 DBFD3038 DBFDAFF8 DBFDB038 00010040 8004 1STSEGMENT DBF32B98 DBDEE018 DBE0D6A8 DBE0E018 00020040 20000 1STSEGMENT DBF32B38 DBFCB008 DBFD3000 DBFD3008 00010040 8004 1STSEGMENT DBF32AD8 DBE0F018 DBE2BCA0 DBE2F018 00020040 20000 1STSEGMENT DBF32A78 DBE30018 DBE4FAA0 DBE50018 00020040 20000 1STSEGMENT DBF32A18 DC8B7DA8 DC8B7FC8 DC8B8DA8 00010040 1004 1STSEGMENT DBF329B8 DBFC0398 DBFC0A48 DBFC0B98 00010040 804 1STSEGMENT DBF32958 DBFBCDC8 DBFBE990 DBFC01C8 00020040 3400 1STSEGMENT DBF328F8 DBF9A050 DBFA1FB8 DBFA2050 00010040 8004 1STSEGMENT DBF32898 DBE51018 DBE6F018 DBE71018 00020040 20000 1STSEGMENT DBF32838 DBF8CF00 DBF94C88 DBF94F00 00010040 8004 1STSEGMENT DBF327D8 DBF84ED0 DBF8CCA0 DBF8CED0 00010040 8004 1STSEGMENT DBF32778 DBF7CEA0 DBF84E28 DBF84EA0 00010040 8004 1STSEGMENT DBF32718 DBE72018 DBE9AC50 DBE9C258 00020040 2a240 1STSEGMENT DBF326B8 DBF6E828 DBF76808 DBF76828 00010040 8004 1STSEGMENT DBF32658 DBE9D018 DBEBC730 DBEBD018 00020040 20000 1STSEGMENT DBF325F8 DBEBE018 DBEDC4E8 DBEDE018 00020040 20000 1STSEGMENT DBF32598 DBF55C18 DBF5DA78 DBF5DC18 00010040 8004 1STSEGMENT DBF32538 DBF4F7D0 DBF4FEA0 DBF4FFD0 00010040 804 1STSEGMENT DBF324D8 DBF53BF0 DBF54150 DBF55BF0 00020040 2000 1STSEGMENT DBF32478 DBF52BC0 DBF53AE0 DBF53BC0 00010040 1004 1STSEGMENT DBF32418 DBF523B0 DBF526F8 DBF527B0 00010040 404 1STSEGMENT DBF323B8 DBF50D78 DBF51888 DBF52388 00020040 1610 1STSEGMENT DBF32358 DBF50B98 DBF50C48 DBF50C48 00010040 b4 1STSEGMENT DBF322F8 DBF50920 DBF50A38 DBF50B70 00020040 250 1STSEGMENT DBF32298 DBF4EFA0 DBF4F730 DBF4F7A0 00010040 804 1STSEGMENT DBF32238 DBF4EB70 DBF4EEB8 DBF4EF70 00010040 404 1STSEGMENT DBF321D8 DBF4E340 DBF4E848 DBF4EB40 00010040 804 1STSEGMENT DBF32178 DBF4DC98 DBF4E1B8 DBF4E1B8 00010040 524 1STSEGMENT DBF32118 DBF4AEE0 DBF4D018 DBF4DC70 00020040 2d90 1STSEGMENT DBF320B8 DCEEE9C8 DCEEEAD8 DCEEEAD8 00010040 114 1STSEGMENT DBF32058 DBF4A1F0 DBF4A5C8 DBF4A9B0 00020040 7c0 1STSEGMENT DBF31FF8 DBF43848 DBF464D8 DBF4A1C8 00020040 6980 1STSEGMENT DBF31F98 DC1F7840 DC1F7990 DC1F7990 00010040 154 1STSEGMENT DBF31F38 DBF42E10 DBF431E0 DBF43820 00020040 a10 1STSEGMENT DBF31ED8 DBEDF018 DBEFD8E0 DBEFF018 00020040 20000 1STSEGMENT DBF31E78 DC005018 DC021178 DC025018 00020040 20000 1STSEGMENT DBF31E18 DC026018 DC044DC8 DC046018 00020040 20000 1STSEGMENT DBF31DB8 DBF3ADE0 DBF42CC0 DBF42DE0 00010040 8004 1STSEGMENT DC17AD70 DC047018 DC0643C0 DC067018 00020040 20000 1STSEGMENT DC17AD10 DBF32DB0 DBF3AD40 DBF3ADB0 00010040 8004 1STSEGMENT DC17ACB0 DBF273B0 DBF2F318 DBF2F3B0 00010040 8004 1STSEGMENT DC17AC50 DC068018 DC085468 DC088018 00020040 20000 1STSEGMENT DC17ABF0 DBF1F380 DBF272E8 DBF27380 00010040 8004 1STSEGMENT DC17AB90 DC089018 DC0A7E00 DC0A9018 00020040 20000 1STSEGMENT DC17AB30 DBF16328 DBF1E280 DBF1E328 00010040 8004 1STSEGMENT DC17AAD0 DBF0E2F8 DBF162F0 DBF162F8 00010040 8004 1STSEGMENT DC17AA70 DC0AA018 DC0C8D48 DC0CA018 00020040 20000 1STSEGMENT DC17AA10 DBF062C8 DBF0E288 DBF0E2C8 00010040 8004 1STSEGMENT DC17A9B0 DBF02058 DBF06298 DBF06298 00010040 4244 1STSEGMENT DC17A950 DBF00028 DBF01FA0 DBF02028 00010040 2004 1STSEGMENT DC17A8F0 DC0CB018 DC0FED08 DC0FF628 00020040 34610 1STSEGMENT DC17A890 DCF0F018 DCF2DE88 DCF2F018 00020040 20000 1STSEGMENT DC17A830 DCF30018 DCF50B68 DCF52D48 00020040 22d30 1STSEGMENT DC17A7D0 DD1F8018 DD2141B0 DD218018 00020040 20000 1STSEGMENT DC17A770 DC1EE7E8 DC1F6720 DC1F67E8 00010040 8004 1STSEGMENT DC17A710 DD219018 DD237D18 DD239018 00020040 20000 1STSEGMENT DC17A6B0 DC1D3718 DC1DB6B0 DC1DB718 00010040 8004 1STSEGMENT DC17A650 DD23A018 DD257BB0 DD25A018 00020040 20000 1STSEGMENT DC17A5F0 DD25B018 DD278558 DD27B018 00020040 20000 1STSEGMENT DC17A590 DC1CB6E8 DC1D3690 DC1D36E8 00010040 8004 1STSEGMENT DC17A530 DD27C018 DD29B578 DD29C018 00020040 20000 1STSEGMENT DC17A4D0 DC1C1538 DC1C8AD8 DC1C9418 00020040 7ee0 1STSEGMENT DC17A470 DC1BF508 DC1C14C8 DC1C1508 00010040 2004 1STSEGMENT DC17A410 DC1BC488 DC1BD3C0 DC1BD488 00010040 1004 1STSEGMENT DC17A3B0 DC1AAF40 DC1AB7D0 DC1AB7D0 00010040 894 1STSEGMENT DC17A350 DC1AF600 DC1BA8A0 DC1BC460 00020040 ce60 1STSEGMENT DC17A2F0 DC19E640 DC19EB88 DC19EB88 00010040 54c 1STSEGMENT DC17A290 DC1A7748 DC1A91B0 DC1AAF18 00020040 37d0 1STSEGMENT DC17A230 DC19E100 DC19E368 DC19E368 00010040 26c 1STSEGMENT DC17A1D0 DC1A5C50 DC1A67E8 DC1A7720 00020040 1ad0 1STSEGMENT DC17A170 DD29D018 DD2ABF60 DD2BD018 00020040 20000 1STSEGMENT DC17A110 DC1A1C20 DC1A5B80 DC1A5C20 00010040 4004 1STSEGMENT DC17A0B0 DC175BD8 DC176348 DC1763D8 00010040 804 1STSEGMENT DC17A050 DC19EF38 DC19FD28 DC1A1BF8 00020040 2cc0 1STSEGMENT DC179FF0 DC19BEE0 DC19DE60 DC19DEE0 00010040 2004 1STSEGMENT DC179F90 DC19AEB0 DC19BE50 DC19BEB0 00010040 1004 1STSEGMENT DC179F30 DC18AE88 DC1962A8 DC19AE88 00020040 10000 1STSEGMENT DC179ED0 DC182E60 DC1856B8 DC18AE60 00020040 8000 1STSEGMENT DC179E70 DC17EE38 DC17FA98 DC182E38 00020040 4000 1STSEGMENT DC179E10 DC17AE08 DC17ED58 DC17EE08 00010040 4004 1STSEGMENT DC3CFA78 DC178588 DC178CA0 DC178D88 00010040 804 1STSEGMENT DC3CFA18 DC176560 DC1778A8 DC178560 00020040 2000 1STSEGMENT DC3CF9B8 DC174530 DC174928 DC174930 00010040 404 1STSEGMENT DC3CF958 DC173508 DC173AC8 DC174508 00020040 1000 1STSEGMENT DC3CF8F8 DC172988 DC172A38 DC172A38 00010040 b4 1STSEGMENT DC3CF898 DC172660 DC1727C8 DC172960 00020040 300 1STSEGMENT DC3CF838 DC162638 DC170110 DC172638 00020040 10000 1STSEGMENT DC3CF7D8 DD2BE018 DD2DBD80 DD2DE018 00020040 20000 1STSEGMENT DC3CF778 DC144A98 DC144DD0 DC144E98 00010040 404 1STSEGMENT DC3CF718 DC161610 DC161E40 DC162610 00020040 1000 1STSEGMENT DC3CF6B8 DE2AF0B8 DE2AF168 DE2AF168 00010040 b4 1STSEGMENT DC3CF658 DC1447C0 DC144900 DC144A70 00020040 2b0 1STSEGMENT DC3CF5F8 DC1595E0 DC161570 DC1615E0 00010040 8004 1STSEGMENT DC3CF598 DC1555B0 DC159258 DC1595B0 00010040 4004 1STSEGMENT DC3CF538 DC145588 DC1536D8 DC155588 00020040 10000 1STSEGMENT DC3CF4D8 DC1422C0 DC143DB0 DC1442C0 00010040 2004 1STSEGMENT DC3CF478 DC138D58 DC140400 DC142298 00020040 9540 1STSEGMENT DC3CF418 DC130D28 DC138C20 DC138D28 00010040 8004 1STSEGMENT DC3CF3B8 DD2DF018 DD2FDF38 DD2FF018 00020040 20000 1STSEGMENT DC3CF358 DC128CF8 DC130B38 DC130CF8 00010040 8004 1STSEGMENT DC3CF2F8 DC11FCA0 DC127BD0 DC127CA0 00010040 8004 1STSEGMENT DC3CF298 DD41B018 DD4378F0 DD43B018 00020040 20000 1STSEGMENT DC3CF238 DD43C018 DD45AAE8 DD45C018 00020040 20000 1STSEGMENT DC3CF1D8 DC110050 DC117F58 DC118050 00010040 8004 1STSEGMENT DC3CEF38 DC3D80D0 DC3D83B8 DC3D84D0 00010040 404 1STSEGMENT DC3CEED8 DC3F2EE0 DC3F37A8 DC3F4170 00020040 1290 1STSEGMENT DC3CEE78 DCB22648 DCB22748 DCB22748 00010040 104 1STSEGMENT DC3CEE18 DC3D7BB8 DC3D7E50 DC3D80A8 00020040 4f0 1STSEGMENT DC3CEDB8 DC3E1C38 DC3F04C0 DC3F1C38 00020040 10000 1STSEGMENT DC3CED58 DC3D8BE0 DC3E0BB0 DC3E0BE0 00010040 8004 1STSEGMENT DC3CECF8 DD45D018 DD47C0D8 DD47D018 00020040 20000 1STSEGMENT DC3CEC98 DD47E018 DD49B918 DD49E018 00020040 20000 1STSEGMENT DC3CEC38 DC3D0018 DC3D02D0 DC3D0418 00010040 404 1STSEGMENT DC3CEBD8 DC3D1660 DC3D28A8 DC3D3B40 00020040 24e0 1STSEGMENT DC3CEB78 DC6D9CE0 DC6D9DD8 DC6D9DD8 00010040 fc 1STSEGMENT DC3CEB18 DC6D9868 DC6D9A00 DC6D9CB8 00020040 450 1STSEGMENT DC6B0D60 DC3C4A68 DC3CCA28 DC3CCA68 00010040 8004 1STSEGMENT DC6B0D00 DD49F018 DD4BBAC0 DD4BF018 00020040 20000 1STSEGMENT DC6B0CA0 DD616018 DD632F60 DD636018 00020040 20000 1STSEGMENT DC6B0C40 DC3BBA10 DC3C3A00 DC3C3A10 00010040 8004 1STSEGMENT DC6B0BE0 DC3B39E0 DC3BB900 DC3BB9E0 00010040 8004 1STSEGMENT DC6B0B80 DC3A39B8 DC3B0F28 DC3B39B8 00020040 10000 1STSEGMENT DC6B0B20 DC39B988 DC3A3950 DC3A3988 00010040 8004 1STSEGMENT DC6B0AC0 DC393960 DC398620 DC39B960 00020040 8000 1STSEGMENT DC6B0A60 DD637018 DD655A60 DD657018 00020040 20000 1STSEGMENT DC6B0A00 DC37F908 DC383878 DC383908 00010040 4004 1STSEGMENT DC6B09A0 DC36FF10 DC371EC8 DC371F10 00010040 2004 1STSEGMENT DC6B0940 DC367EE8 DC36BB38 DC36FEE8 00020040 8000 1STSEGMENT DC6B08E0 DC3594B8 DC3653A0 DC366E98 00020040 d9e0 1STSEGMENT DC6B0880 DC350E18 DC354320 DC3577B8 00020040 69a0 1STSEGMENT DC6B0820 DC34EDC0 DC34FD38 DC34FDC0 00010040 1004 1STSEGMENT DC6B07C0 DC33C588 DC34E0D8 DC34ED98 00020040 12810 1STSEGMENT DC6B0760 DC330218 DC3321D0 DC332218 00010040 2004 1STSEGMENT DC6B0700 DC3379A0 DC33B138 DC33C560 00020040 4bc0 1STSEGMENT DC6B06A0 DC32F1E8 DC3301D8 DC3301E8 00010040 1004 1STSEGMENT DC6B0640 DC6D7EF0 DC6D8DE8 DC6D8EF0 00010040 1004 1STSEGMENT DC6B05E0 DC32AFF0 DC32D978 DC32F1C0 00020040 41d0 1STSEGMENT DC6B0580 DC6D76C0 DC6D7EB0 DC6D7EC0 00010040 804 1STSEGMENT DC6B0520 DC326718 DC329AA0 DC32AFC8 00020040 48b0 1STSEGMENT DC6B04C0 DD94C480 DD94CB58 DD94CC80 00010040 804 1STSEGMENT DC6B0460 DD94D4A8 DD94D840 DD94D8A8 00010040 404 1STSEGMENT DC6B0400 DD94BE60 DD94C450 DD94C450 00010040 5f4 1STSEGMENT DC6B03A0 DC3233A0 DC325060 DC3266F0 00020040 3350 1STSEGMENT DC6B0340 DD94B728 DD94BBA8 DD94BBA8 00010040 484 1STSEGMENT DC6B02E0 DC3200E8 DC3219F8 DC323378 00020040 3290 1STSEGMENT DC6B0280 DC6D3AB8 DC6D3C50 DC6D3C50 00010040 19c 1STSEGMENT DC6B0220 DC6D2F40 DC6D3590 DC6D3A90 00020040 b50 1STSEGMENT DC6B01C0 DC6D5E68 DC6D65E0 DC6D6668 00010040 804 1STSEGMENT DC6B0160 DC6D3E40 DC6D55A0 DC6D5E40 00020040 2000 1STSEGMENT DC6B0100 DC6B5FF8 DC6B6438 DC6B6438 00010040 444 1STSEGMENT DC6B00A0 DC6B3E70 DC6B4F10 DC6B5FD0 00020040 2160 1STSEGMENT DC6B0040 DD95D638 DD95D7D0 DD95D7D0 00010040 19c 1STSEGMENT DC6AFFE0 DC6AF2D8 DC6AF780 DC6AFB48 00020040 870 1STSEGMENT DC6AFF80 DC3180B8 DC31FFB0 DC3200B8 00010040 8004 1STSEGMENT DC6AFF20 DC2B6018 DC2DB0B0 DC2DE7E8 00020040 287d0 1STSEGMENT DC6AFEC0 DC2DF018 DC2FB240 DC2FF018 00020040 20000 1STSEGMENT DC6AFE60 DC310088 DC317F40 DC318088 00010040 8004 1STSEGMENT DC6AFE00 DC40E018 DC429D60 DC42E018 00020040 20000 1STSEGMENT DE56C628 DC308058 DC310048 DC310058 00010040 8004 1STSEGMENT DE56C5C8 DC300028 DC307FB8 DC308028 00010040 8004 1STSEGMENT DE56C568 DC42F018 DC47BBF0 DC481CE8 00020040 52cd0 1STSEGMENT DE56C508 DC4EC018 DC5069D8 DC50C018 00020040 20000 1STSEGMENT DE56C4A8 DC6EE098 DC6F92B0 DC6FE098 00020040 10000 1STSEGMENT DE56C448 DC6E6068 DC6EDEC8 DC6EE068 00010040 8004 1STSEGMENT DE56C3E8 DC6D9E40 DC6E3B58 DC6E6040 00020040 c200 1STSEGMENT DE56C388 DC6BE950 DC6D03D0 DC6D2BF0 00020040 142a0 1STSEGMENT DE56C328 DC6B6920 DC6BE810 DC6BE920 00010040 8004 1STSEGMENT DE56C2C8 DC6A7058 DC6AAD70 DC6AB058 00010040 4004 1STSEGMENT DE56C268 DC50D018 DC5358C8 DC53B428 00020040 2e410 1STSEGMENT DE56C208 DC6AD2A8 DC6AF0B8 DC6AF2A8 00010040 2004 1STSEGMENT DE56C1A8 DC6AB250 DC6ABE88 DC6AC250 00010040 1004 1STSEGMENT DE56C148 DC6A6828 DC6A6F30 DC6A7028 00010040 804 1STSEGMENT DE56C0E8 DC6A4A90 DC6A67F8 DC6A67F8 00010040 1d6c 1STSEGMENT DE56C088 DC685B98 DC69DEC0 DC6A4A68 00020040 1eed0 1STSEGMENT DE56C028 DD909548 DD909778 DD909778 00010040 234 1STSEGMENT DE56BFC8 DD95B498 DD95C070 DD95D108 00020040 1c70 1STSEGMENT DE56BF68 DD910830 DD910DE8 DD911030 00010040 804 1STSEGMENT DE56BF08 DC677500 DC678778 DC678778 00010040 127c 1STSEGMENT DE56BEA8 DC66AA28 DC6764E8 DC6774D8 00020040 cab0 1STSEGMENT DE56BE48 DD910290 DD910518 DD910518 00010040 28c 1STSEGMENT DE56BDE8 DC668F70 DC669D50 DC66AA00 00020040 1a90 1STSEGMENT DE56BD88 DC660B38 DC668B20 DC668B38 00010040 8004 1STSEGMENT DE56BD28 DC53C018 DC55AE98 DC55C018 00020040 20000 1STSEGMENT DE56BCC8 DC55D018 DC57B4F8 DC57D018 00020040 20000 1STSEGMENT DE56BC68 DC658B08 DC660A08 DC660B08 00010040 8004 1STSEGMENT DE56BC08 DC640110 DC648098 DC648110 00010040 8004 1STSEGMENT DE56BBA8 DC6380E0 DC640038 DC6400E0 00010040 8004 1STSEGMENT DE56BB48 DC57E018 DC59DB48 DC59E018 00020040 20000 1STSEGMENT DE56BAE8 DC6300B0 DC638090 DC6380B0 00010040 8004 1STSEGMENT DE56BA88 DC59F018 DC5BE7E0 DC5BF018 00020040 20000 1STSEGMENT DE56BA28 DC628080 DC630000 DC630080 00010040 8004 1STSEGMENT DE56B9C8 10797080 10798620 1079F080 00010040 8004 1STSEGMENT DE56B968 DC705018 DC7242A8 DC725018 00020040 20000 1STSEGMENT DE56B908 DC620050 DC627FC8 DC628050 00010040 8004 1STSEGMENT DE56B8A8 DC600028 DC61E100 DC620028 00020040 20000 1STSEGMENT DE56B848 DC8EB6D0 DC8F36C0 DC8F36D0 00010040 8004 1STSEGMENT DE56B7E8 DC726018 DC7448D0 DC746018 00020040 20000 1STSEGMENT DE56B788 DC8CD0A0 DC8D5098 DC8D50A0 00010040 8004 1STSEGMENT DE56B728 DC8C0BE0 DC8C8B40 DC8C8BE0 00010040 8004 1STSEGMENT DE56B6C8 DC747018 DC765480 DC767018 00020040 20000 1STSEGMENT DDC61970 DC89F6D0 DC8A76A8 DC8A76D0 00010040 8004 1STSEGMENT DDC61910 DC8976A0 DC89F5F8 DC89F6A0 00010040 8004 1STSEGMENT DDC618B0 DC768018 DC79C838 DC79C988 00020040 34970 1STSEGMENT DDC61850 DC79D018 DC7BBC80 DC7BD018 00020040 20000 1STSEGMENT DDC617F0 DC88F670 DC897618 DC897670 00010040 8004 1STSEGMENT DDC61790 DC884540 DC88D0D0 DC88E620 00020040 a0e0 1STSEGMENT DDC61730 DC880510 DC884490 DC884510 00010040 4004 1STSEGMENT DDC616D0 DC87E4E0 DC880300 DC8804E0 00010040 2004 1STSEGMENT DDC61670 DC86EF18 DC87B8B0 DC87E4B8 00020040 f5a0 1STSEGMENT DDC61610 DC86DEE8 DC86EEB0 DC86EEE8 00010040 1004 1STSEGMENT DDC615B0 DC861560 DC867050 DC86DEC0 00020040 c960 1STSEGMENT DDC61550 DDCDC678 DDCDD148 DDCDD148 00010040 ad4 1STSEGMENT DDC614F0 DCEC8CB0 DCEC8F20 DCEC90B0 00010040 404 1STSEGMENT DDC61490 DC857960 DC85C798 DC860510 00020040 8bb0 1STSEGMENT DDC61430 DCEC8820 DCEC8978 DCEC8978 00010040 15c 1STSEGMENT DDC613D0 DCEC7CC0 DCEC8088 DCEC85F0 00020040 930 1STSEGMENT DDC61370 DC83F908 DC8478A0 DC847908 00010040 8004 1STSEGMENT DDC61310 DC8378D8 DC83F690 DC83F8D8 00010040 8004 1STSEGMENT DDC612B0 DC7BE018 DC7DBBC0 DC7DE018 00020040 20000 1STSEGMENT DDC61250 DC82C880 DC834810 DC834880 00010040 8004 1STSEGMENT DDC611F0 DC7DF018 DC7FEC40 DC7FF498 00020040 20480 1STSEGMENT DDC61190 DC90D018 DC929918 DC92D018 00020040 20000 1STSEGMENT DDC61130 DC824850 DC82C790 DC82C850 00010040 8004 1STSEGMENT DDC610D0 DC81C820 DC8247E0 DC824820 00010040 8004 1STSEGMENT DDC61070 DC92E018 DC94DAD8 DC94E018 00020040 20000 1STSEGMENT DDC61010 DC8147F0 DC81C6B8 DC81C7F0 00010040 8004 1STSEGMENT DDC60FB0 DC80A300 DC812240 DC812300 00010040 8004 1STSEGMENT DDC60F50 DC94F018 DC978B88 DC979138 00020040 2a120 1STSEGMENT DDC60EF0 107D2C68 107F23A8 107F2C68 00020040 20000 1STSEGMENT DDC60E90 DC800028 DC807FC0 DC808028 00010040 8004 1STSEGMENT DDC60E30 DC9BA018 DC9D9718 DC9DA018 00020040 20000 1STSEGMENT DDC60DD0 10842D30 1084AD08 1084AD30 00010040 8004 1STSEGMENT DDC60D70 DCBE4D30 DCBECCE0 DCBECD30 00010040 8004 1STSEGMENT DDC60D10 DCBD3528 DCBE0788 DCBE4D08 00020040 117e0 1STSEGMENT DDC60CB0 DCBC76B0 DCBCE6E8 DCBD3500 00020040 be50 1STSEGMENT DDC60C50 DCBBB5E8 DCBC4480 DCBC7688 00020040 c0a0 1STSEGMENT DDC60BF0 DCBA88A8 DCBB0868 DCBB08A8 00010040 8004 1STSEGMENT DDC60B90 DCB8C200 DCBA4948 DCBA8880 00020040 1c680 1STSEGMENT DDC60B30 DCB74F58 DCB890E8 DCB8C1D8 00020040 17280 1STSEGMENT DDC60AD0 DCB6CF28 DCB74EB8 DCB74F28 00010040 8004 1STSEGMENT DDC60A70 DCB68EF8 DCB6CD78 DCB6CEF8 00010040 4004 1STSEGMENT DDC60A10 DCB60EC8 DCB63A88 DCB68EC8 00010040 8004 1STSEGMENT 105966C0 DCB50EA0 DCB5D848 DCB60EA0 00020040 10000 1STSEGMENT 10596660 DDCD85F8 DDCD9A18 DDCDA5F8 00010040 2004 1STSEGMENT 10596600 DDCE4A58 DDCECA40 DDCECA58 00010040 8004 1STSEGMENT 105965A0 DCB45E68 DCB50768 DCB50E78 00020040 b010 1STSEGMENT 10596540 10812CE0 1082FB88 10832CE0 00020040 20000 1STSEGMENT 105964E0 1077BDB0 10783C90 10783DB0 00010040 8004 1STSEGMENT 10596480 1073CD88 10744D40 10744D88 00010040 8004 1STSEGMENT 10596420 107F2CB8 108129C0 10812CB8 00020040 20000 1STSEGMENT 105963C0 107B2C18 107BF470 107C2C18 00020040 10000 1STSEGMENT 10596360 10777D80 1077BD58 1077BD80 00010040 4004 1STSEGMENT 10596300 10734AC0 10736A90 10736AC0 00010040 2004 1STSEGMENT 105962A0 1076FD58 10776790 10777D58 00020040 8000 1STSEGMENT 10596240 1072FA70 107327C0 10733A70 00020040 4000 1STSEGMENT 105961E0 1076E1A8 1076EFB0 1076F1A8 00010040 1004 1STSEGMENT 10596180 10676140 10679FA8 1067A140 00010040 4004 1STSEGMENT 10596120 107A0DB0 107B13F8 107B2BF0 00020040 11e40 1STSEGMENT 105960C0 1076F528 1076FD10 1076FD28 00010040 804 1STSEGMENT 10596060 1076DBF8 1076E178 1076E178 00010040 584 1STSEGMENT 10596000 10728CA0 1072D9F8 1072EA20 00020040 5d80 1STSEGMENT 10595FA0 1076D9E0 1076DB48 1076DB48 00010040 16c 1STSEGMENT 10595F40 1076CDD8 1076D0E0 1076D9B8 00020040 be0 1STSEGMENT 10595EE0 DCB3DE38 DCB45DF8 DCB45E38 00010040 8004 1STSEGMENT 10595E80 DC9DB018 DC9FA880 DC9FB018 00020040 20000 1STSEGMENT 10595E20 10720C70 10728B68 10728C70 00010040 8004 1STSEGMENT 10595DC0 1074CDB0 1076C550 1076CDB0 00020040 20000 1STSEGMENT 10595D60 1066BBE8 10670FF8 10673BE8 00020040 8000 1STSEGMENT 10595D00 1066A390 1066A8F8 1066AB90 00010040 804 1STSEGMENT 10595CA0 10667418 106690F0 1066A368 00020040 2f50 1STSEGMENT 10595C40 DCB35E08 DCB3DDA8 DCB3DE08 00010040 8004 1STSEGMENT 10595BE0 DDC5A968 DDC5D170 DDC5E968 00020040 4000 1STSEGMENT 10595B80 DCB2DDD8 DCB35D90 DCB35DD8 00010040 8004 1STSEGMENT 10595B20 DC9FC018 DCA1B6E8 DCA1C018 00020040 20000 1STSEGMENT 10595AC0 DCB1E1A8 DCB21E18 DCB221A8 00010040 4004 1STSEGMENT 10595A60 DDC50138 DDC57258 DDC578C8 00020040 7790 1STSEGMENT 10595A00 DCB1C178 DCB1DF80 DCB1E178 00010040 2004 1STSEGMENT 105959A0 DDCE2A00 DDCE38E8 DDCE3A00 00010040 1004 1STSEGMENT 10595940 DE528DC8 DE5294D0 DE5295C8 00010040 804 1STSEGMENT 105958E0 DCE2B058 DCE2B3C8 DCE2B458 00010040 404 1STSEGMENT 10595880 DCB129A8 DCB1A410 DCB1B128 00020040 8780 1STSEGMENT 10595820 DCA1D018 DCA3AE10 DCA3D018 00020040 20000 1STSEGMENT 105957C0 DCA63018 DCA82830 DCA83018 00020040 20000 1STSEGMENT 10595760 10708C18 10710B18 10710C18 00010040 8004 1STSEGMENT DCC53BC8 106E8BF0 107076C0 10708BF0 00020040 20000 1STSEGMENT DCC53B68 10589D80 1058A450 1058A580 00010040 804 1STSEGMENT DCC53B08 10663F30 106660C0 106673F0 00020040 34c0 1STSEGMENT DCC53AA8 10597E80 105981F0 10598280 00010040 404 1STSEGMENT DCC53A48 10596758 10596D08 10597E58 00020040 1700 1STSEGMENT DCC539E8 10557118 10557290 10557290 00010040 17c 1STSEGMENT DCC53988 106AD0F8 106AD5B8 106AD8B8 00020040 7c0 1STSEGMENT DCC53928 1065AC80 10662B40 10662C80 00010040 8004 1STSEGMENT DCC538C8 1043AE88 104492D0 1044AE88 00020040 10000 1STSEGMENT DCC53868 DCB09958 DCB10DE8 DCB11958 00020040 8000 1STSEGMENT DCC53808 DCB07928 DCB098F8 DCB09928 00010040 2004 1STSEGMENT DCC537A8 DDCC54C0 DDCC6648 DDCC6648 00010040 118c 1STSEGMENT DCC53748 DCCAD418 DCCADCD0 DCCADCD0 00010040 8bc 1STSEGMENT DCC536E8 DCEED168 DCEED408 DCEED568 00010040 404 1STSEGMENT DCC53688 DCB03970 DCB078F8 DCB078F8 00010040 3f8c 1STSEGMENT DCC53628 DCAC4018 DCAF9988 DCAFFA78 00020040 3ba60 1STSEGMENT DCC535C8 DCCD5218 DCCD5B18 DCCD6218 00020040 1000 1STSEGMENT DCC53568 DCCD41E8 DCCD4AD8 DCCD51E8 00010040 1004 1STSEGMENT DCC53508 DCE74DA0 DCE75140 DCE751A0 00010040 404 1STSEGMENT DCC534A8 DCE74570 DCE74BD0 DCE74D70 00010040 804 1STSEGMENT DCC53448 DCC1F1E8 DCC1F570 DCC1F5E8 00010040 404 1STSEGMENT DCC533E8 DCC18850 DCC18BB8 DCC18BB8 00010040 36c 1STSEGMENT DCC53388 DCB00028 DCB031F8 DCB03948 00020040 3920 1STSEGMENT DCC53328 DCEBC640 DCEBCA80 DCEBCA80 00010040 444 1STSEGMENT DCC532C8 DCCF64C0 DCCF8388 DCCFC040 00020040 5b80 1STSEGMENT DCC53268 DCCEE490 DCCF6480 DCCF6490 00010040 8004 1STSEGMENT DCC53208 DCCE6460 DCCEE3C0 DCCEE460 00010040 8004 1STSEGMENT DCC531A8 DCCE33E0 DCCE4010 DCCE43E0 00010040 1004 1STSEGMENT DCC53148 DD9337D8 DD933D80 DD933FD8 00010040 804 1STSEGMENT DCC530E8 DCCDF3B8 DCCE1978 DCCE33B8 00020040 4000 1STSEGMENT DCC53088 DCCA8C40 DCCAA9F8 DCCAD3F0 00020040 47b0 1STSEGMENT DCC53028 DCEEEED0 DCEEF2B0 DCEEF2D0 00010040 404 1STSEGMENT DCC52FC8 DD931200 DD9324C8 DD9337B0 00020040 25b0 1STSEGMENT DCC52F68 DCC0E728 DCC0E7D8 DCC0E7D8 00010040 b4 1STSEGMENT DCC52F08 DCC812C8 DCC81480 DCC817B8 00020040 4f0 1STSEGMENT DCC52EA8 DCCD7388 DCCDF0F8 DCCDF388 00010040 8004 1STSEGMENT DCC52E48 DCD5B018 DCD7AAE8 DCD7B018 00020040 20000 1STSEGMENT DCC52DE8 DCD7C018 DCD9B268 DCD9C018 00020040 20000 1STSEGMENT DCC52D88 DCCBA108 DCCC20A8 DCCC2108 00010040 8004 1STSEGMENT DCC52D28 DCD9D018 DCDBC110 DCDBD018 00020040 20000 1STSEGMENT DCC52CC8 DCCB60D8 DCCB7828 DCCBA0D8 00010040 4004 1STSEGMENT DCC52C68 DCCAE0A8 DCCB6008 DCCB60A8 00010040 8004 1STSEGMENT DD395470 DCDBE018 DCDDCF80 DCDDE018 00020040 20000 1STSEGMENT DD395410 DCEED898 DCEEDB60 DCEEDC98 00010040 404 1STSEGMENT DD3953B0 DCCA4A30 DCCA63C0 DCCA7BF0 00020040 31c0 1STSEGMENT DD395350 DCEFAC78 DCEFADC0 DCEFADC0 00010040 14c 1STSEGMENT DD3952F0 DCEC7398 DCEC75F0 DCEC7C98 00020040 900 1STSEGMENT DD395290 DCC9CA00 DCCA49D8 DCCA4A00 00010040 8004 1STSEGMENT DD395230 DCC817F8 DCC9B958 DCC9C9D8 00020040 1b1e0 1STSEGMENT DD3951D0 DCC7C270 DCC80248 DCC80270 00010040 4004 1STSEGMENT DD395170 DCC5EEE8 DCC7AA10 DCC7C248 00020040 1d360 1STSEGMENT DD395110 DCC56EB8 DCC5EE78 DCC5EEB8 00010040 8004 1STSEGMENT DD3950B0 DCDDF018 DCDFEA50 DCDFF018 00020040 20000 1STSEGMENT DD395050 DCC53E60 DCC55DE8 DCC55E60 00010040 2004 1STSEGMENT DD394FF0 DCC4C2C0 DCC51478 DCC52C10 00020040 6950 1STSEGMENT DD394F90 DCC4B290 DCC4C1D8 DCC4C290 00010040 1004 1STSEGMENT DD394F30 DCC48558 DCC49F68 DCC4B268 00020040 2d10 1STSEGMENT DD394ED0 DCC1DC58 DCC1E438 DCC1E458 00010040 804 1STSEGMENT DD394E70 DCC31FC0 DCC321A8 DCC323C0 00010040 404 1STSEGMENT DD394E10 DCEEA0F0 DCEEA6B0 DCEEA6B0 00010040 5c4 1STSEGMENT DD394DB0 DCC42888 DCC452B0 DCC47508 00020040 4c80 1STSEGMENT DD394D50 DCEC6190 DCEC6998 DCEC7140 00020040 fb0 1STSEGMENT DD394CF0 DCEC1F18 DCEC2E70 DCEC2F18 00010040 1004 1STSEGMENT DD394C90 DCC39790 DCC41D90 DCC42860 00020040 90d0 1STSEGMENT DD394C30 DCC01518 DCC093A8 DCC09518 00010040 8004 1STSEGMENT DD394BD0 DCED3768 DCEDB758 DCEDB768 00010040 8004 1STSEGMENT DD394B70 DCF65018 DCF83E88 DCF85018 00020040 20000 1STSEGMENT DD394B10 DCE8C480 DCE943E0 DCE94480 00010040 8004 1STSEGMENT DD394AB0 DCF98018 DCFB5CB0 DCFB8018 00020040 20000 1STSEGMENT DD394A50 DCE860D0 DCE87F50 DCE880D0 00010040 2004 1STSEGMENT DD3949F0 DCE75208 DCE84260 DCE860A8 00020040 10ea0 1STSEGMENT DD394990 DCE6AD28 DCE6BBE0 DCE6BD28 00010040 1004 1STSEGMENT DD394930 DCE6A458 DCE6AA48 DCE6AC58 00010040 804 1STSEGMENT DD3948D0 DCE5C0C8 DCE64010 DCE640C8 00010040 8004 1STSEGMENT DD394870 DCE54098 DCE5C090 DCE5C098 00010040 8004 1STSEGMENT DD394810 DD3B4368 DD3B4940 DD3B4940 00010040 5dc 1STSEGMENT DD3947B0 DD3B3A18 DD3B4338 DD3B4338 00010040 924 1STSEGMENT DD394750 DCE44070 DCE51A20 DCE54070 00020040 10000 1STSEGMENT DD3946F0 DCE3A4C8 DCE40928 DCE44048 00020040 9b80 1STSEGMENT DD394690 DCE34500 DCE376A0 DCE3A4A0 00020040 5fa0 1STSEGMENT DD394630 DCE20038 DCE26EE0 DCE29B38 00020040 9b00 1STSEGMENT DD3945D0 DD3F6430 DD3F6930 DD3F6C30 00010040 804 1STSEGMENT DD394570 DD39E640 DD3A2590 DD3A2640 00010040 4004 1STSEGMENT DD394510 DD395508 DD3971E8 DD39D508 00010040 8004 1STSEGMENT 10641C58 DD3844B8 DD3896C8 DD3944B8 00020040 10000 1STSEGMENT 10641BF8 DD36EDB0 DD37CDD0 DD37CDD0 00010040 e024 1STSEGMENT 10641B98 DD0D2018 DD1E7968 DD1E7AF8 00020040 115ae0 1STSEGMENT 10641B38 DD3594B8 DD361488 DD3614B8 00010040 8004 1STSEGMENT 10641AD8 DDCA0FC8 DDCA1D38 DDCA1D38 00010040 d74 1STSEGMENT 10641A78 DD34F420 DD355730 DD359490 00020040 a070 1STSEGMENT 10641A18 DE5FAFC0 DE5FB680 DE5FB680 00010040 6c4 1STSEGMENT 106419B8 DDC9BBD0 DDC9E600 DDCA0FA0 00020040 53d0 1STSEGMENT 10641958 DD67E018 DD686DD8 DD69E018 00020040 20000 1STSEGMENT 106418F8 DD3473F0 DD34B848 DD34F3F0 00010040 8004 1STSEGMENT 10641898 DE5F63C8 DE5F8118 DE5FAF98 00020040 4bd0 1STSEGMENT 10641838 DDC8EB68 DDC8F318 DDC8F368 00010040 804 1STSEGMENT 106417D8 DDCD2258 DDCD2A50 DDCD4258 00020040 2000 1STSEGMENT 10641778 DDC8E738 DDC8E950 DDC8EB38 00010040 404 1STSEGMENT 10641718 DDC8D4C0 DDC8DCA0 DDC8E710 00020040 1250 1STSEGMENT 106416B8 DD9240E0 DD924200 DD924200 00010040 124 1STSEGMENT 10641658 DDC8CD68 DDC8D010 DDC8D498 00020040 730 1STSEGMENT 106415F8 DDC8C538 DDC8C680 DDC8CD38 00010040 804 1STSEGMENT 10641598 DD9307A0 DD930E30 DD930E30 00010040 694 1STSEGMENT 10641538 DDCBB1B0 DDCBB328 DDCBB328 00010040 17c 1STSEGMENT 106414D8 DD92BB38 DD92E188 DD930778 00020040 4c40 1STSEGMENT 10641478 DDCB8D48 DDCB9C28 DDCB9D48 00010040 1004 1STSEGMENT 10641418 DD33AAA8 DD340828 DD3473C8 00020040 c920 1STSEGMENT 106413B8 DD69F018 DD6A0048 DD6BF018 00020040 20000 1STSEGMENT 10641358 DD921F40 DD922CB0 DD923F40 00010040 2004 1STSEGMENT 106412F8 DD333010 DD337A78 DD33AA80 00020040 7a70 1STSEGMENT 10641298 DD322FE8 DD330540 DD332FE8 00020040 10000 1STSEGMENT 10641238 DDCBD490 DDCBF180 DDCC5490 00010040 8004 1STSEGMENT 106411D8 DDC84510 DDC89248 DDC8C510 00020040 8000 1STSEGMENT 10641178 1069DBE8 1069EA70 106A5BE8 00010040 8004 1STSEGMENT 10641118 DD6C0018 DD6C8418 DD6E0018 00020040 20000 1STSEGMENT 106410B8 106E4BC0 106E8770 106E8BC0 00010040 4004 1STSEGMENT 10641058 106E0B98 106E3F88 106E4B98 00020040 4000 1STSEGMENT 10640FF8 106DEB68 106DF660 106E0B68 00010040 2004 1STSEGMENT 10640F98 106D6B40 106DA2C0 106DEB40 00020040 8000 1STSEGMENT 10640F38 106CEB10 106D69F0 106D6B10 00010040 8004 1STSEGMENT 10640ED8 DD6E1018 DD700560 DD701018 00020040 20000 1STSEGMENT 10640E78 106B6AB8 106BE948 106BEAB8 00010040 8004 1STSEGMENT 10640E18 DD76A018 DD787730 DD78A018 00020040 20000 1STSEGMENT 10640DB8 106497D0 1064A3E8 1064A7D0 00010040 1004 1STSEGMENT 10640D58 102FE2C0 102FEA38 102FEAC0 00010040 804 1STSEGMENT 10640CF8 106ADC10 106B24E8 106B6A90 00020040 8e80 1STSEGMENT 10576010 1065A670 1065A9A8 1065AA70 00010040 404 1STSEGMENT 10575FB0 104A5AD8 104A5ED8 104A5ED8 00010040 404 1STSEGMENT 10575F50 10642D18 10644768 10647758 00020040 4a40 1STSEGMENT 10575EF0 10659640 106599B0 1065A640 00010040 1004 1STSEGMENT 10575E90 1063EC98 1063F1E8 10640C98 00010040 2004 1STSEGMENT 10575E30 1063AC70 1063CE08 1063EC70 00020040 4000 1STSEGMENT 10575DD0 106533A8 10655E80 10659618 00020040 6270 1STSEGMENT 10575D70 10652378 10652840 10653378 00010040 1004 1STSEGMENT 10575D10 1064BCF0 1064E5C8 10652350 00020040 6660 1STSEGMENT 10575CB0 1064ACC0 1064B7C0 1064BCC0 00010040 1004 1STSEGMENT 10575C50 1068DBC0 106938A8 1069DBC0 00020040 10000 1STSEGMENT 10575BF0 104A0138 104A2BC0 104A4138 00010040 4004 1STSEGMENT 10575B90 1061AC48 10622378 1063AC48 00020040 20000 1STSEGMENT 10575B30 10498108 1049AA18 104A0108 00010040 8004 1STSEGMENT 10575AD0 104960D8 10498010 104980D8 00010040 2004 1STSEGMENT 10575A70 1067AD38 1068CE48 1068DB98 00020040 12e60 1STSEGMENT 10575A10 102FBD98 102FCB10 102FCD98 00010040 1004 1STSEGMENT 105759B0 102F7420 102F88F8 102FB420 00020040 4000 1STSEGMENT 10575950 102F5A78 102F5FB0 102F6278 00010040 804 1STSEGMENT 105758F0 102F1460 102F31E0 102F5A50 00020040 45f0 1STSEGMENT 10575890 105B07F0 105B0960 105B0BF0 00010040 404 1STSEGMENT 10575830 102EF280 102EF620 102F0280 00020040 1000 1STSEGMENT 105757D0 105B05B0 105B06D0 105B06D0 00010040 124 1STSEGMENT 10575770 102EEAF8 102EEDC8 102EF258 00020040 760 1STSEGMENT 10575710 105F4048 105F49E8 105F49E8 00010040 9a4 1STSEGMENT 105756B0 105A0CF0 105A7BC0 105A9E50 00020040 9160 1STSEGMENT 10575650 DD742018 DD75FB78 DD762018 00020040 20000 1STSEGMENT 105755F0 10612C18 1061AB68 1061AC18 00010040 8004 1STSEGMENT 10575590 105E2D10 105E2E90 105E2E90 00010040 184 1STSEGMENT 10575530 105F6098 105F6408 105F6798 00020040 700 1STSEGMENT 105754D0 1060ABE8 10612BA8 10612BE8 00010040 8004 1STSEGMENT 10575470 DD78D018 DD7AC178 DD7AD018 00020040 20000 1STSEGMENT 10575410 10606BB8 1060AB10 1060ABB8 00010040 4004 1STSEGMENT 105753B0 105F6B90 10605A20 10606B90 00020040 10000 1STSEGMENT 10575350 105EBB50 105F1F90 105F3B50 00020040 8000 1STSEGMENT 105752F0 105E7B20 105EBA40 105EBB20 00010040 4004 1STSEGMENT 10575290 105E2510 105E2890 105E2910 00010040 404 1STSEGMENT 10575230 105E20C8 105E24E0 105E24E0 00010040 41c 1STSEGMENT 105751D0 105E3420 105E50F8 105E6AD0 00020040 36b0 1STSEGMENT 10575170 105D1C40 105DE028 105E1C40 00020040 10000 1STSEGMENT 10575110 105CF3C0 105CFBB8 105CFBC0 00010040 804 1STSEGMENT 105750B0 105CA738 105CD6F0 105CF398 00020040 4c60 1STSEGMENT 10523390 10574B70 10574F58 10574F70 00010040 404 1STSEGMENT 10523330 105C8790 105C94D8 105CA710 00020040 1f80 1STSEGMENT 105232D0 1055B988 1055BBE8 1055BBE8 00010040 264 1STSEGMENT 10523270 105C65C8 105C7438 105C8768 00020040 21a0 1STSEGMENT 10523210 105C0D40 105C46B0 105C65A0 00020040 5860 1STSEGMENT 105231B0 10559868 1055B6C0 1055B868 00010040 2004 1STSEGMENT 10523150 1056BB20 1056F5B8 10573B20 00020040 8000 1STSEGMENT 105230F0 1052A888 1052C788 1052C888 00010040 2004 1STSEGMENT 10523090 105616D8 105625A8 105626D8 00010040 1004 1STSEGMENT 10523030 10564DF8 105698D0 1056BAF8 00020040 6d00 1STSEGMENT 10522FD0 1058A6D0 1058ADF0 1058AED0 00010040 804 1STSEGMENT 10522F70 10586330 10587960 10589770 00020040 3440 1STSEGMENT 10522F10 1058AFF8 1058B240 1058B3F8 00010040 404 1STSEGMENT 10522EB0 10598CC0 105A0CA0 105A0CC0 00010040 8004 1STSEGMENT 10522E50 DD7AE018 DD7D49F0 DD7D4C08 00020040 26bf0 1STSEGMENT 10522DF0 1058B6B0 105936A8 105936B0 00010040 8004 1STSEGMENT 10522D90 DD7D5018 DD81B0F8 DD81C3B8 00020040 473a0 1STSEGMENT 10522D30 1055D6A8 105615D8 105616A8 00010040 4004 1STSEGMENT 10522CD0 10541438 10541618 10541618 00010040 1e4 1STSEGMENT 10522C70 1055BC88 1055C1F0 1055D308 00020040 1680 1STSEGMENT 10522C10 DDA37018 DDA58B10 DDA59338 00020040 22320 1STSEGMENT 10522BB0 10549320 10549480 10549720 00010040 404 1STSEGMENT 10522B50 105439C8 10543C48 10543C48 00010040 284 1STSEGMENT 10522AF0 10555AD0 10556250 105570F0 00020040 1620 1STSEGMENT 10522A90 1054DAA0 105559D8 10555AA0 00010040 8004 1STSEGMENT 10522A30 10549A70 1054D8C0 1054DA70 00010040 4004 1STSEGMENT 105229D0 105472F0 10549178 105492F0 00010040 2004 1STSEGMENT 10522970 10544040 105472C0 105472C0 00010040 3284 1STSEGMENT 10522910 10543198 10543908 10543998 00010040 804 1STSEGMENT 105228B0 10541758 10543168 10543168 00010040 1a14 1STSEGMENT 10522850 DDA5A018 DDA9B138 DDA9D5D8 00020040 435c0 1STSEGMENT 105227F0 1053E700 105406C8 10540700 00010040 2004 1STSEGMENT 10522790 10531B38 1053C6C0 1053E6D8 00020040 cba0 1STSEGMENT 10522730 1052FB08 105316D0 10531B08 00010040 2004 1STSEGMENT 105226D0 104F2D10 104F3CD8 104F3D10 00010040 1004 1STSEGMENT 10522670 1052CAB0 1052EA98 1052EAB0 00010040 2004 1STSEGMENT 10522610 10525CB0 10528728 10529F10 00020040 4260 1STSEGMENT 105225B0 10524C80 10525B60 10525C80 00010040 1004 1STSEGMENT 10522550 10524450 10524BF8 10524C50 00010040 804 1STSEGMENT 105224F0 101C9958 101CA060 101CA158 00010040 804 1STSEGMENT 10522490 10438920 10438CC0 10438D20 00010040 404 1STSEGMENT 10522430 104385F8 104388F0 104388F0 00010040 2fc 1STSEGMENT 103AE3A8 105208D8 10521AF0 105223D8 00020040 1b00 1STSEGMENT 103AE348 104CF7E8 104CFA78 104CFA78 00010040 294 1STSEGMENT 103AE2E8 1051EBB0 1051F278 105208B0 00020040 1d00 1STSEGMENT 103AE288 1051CA70 1051DB58 1051DB58 00010040 10ec 1STSEGMENT 103AE228 10510DE8 1051C3A0 1051CA48 00020040 bc60 1STSEGMENT 103AE1C8 10232460 10232AD0 10232AD0 00010040 674 1STSEGMENT 103AE168 10509400 1050FA70 10510DC0 00020040 79c0 1STSEGMENT 103AE108 104FD0D0 104FD418 104FE0D0 00020040 1000 1STSEGMENT 103AE0A8 10258AB0 10258C68 10258C68 00010040 1bc 1STSEGMENT 103AE048 102BD3A8 102BD888 102BDF48 00020040 ba0 1STSEGMENT 103ADFE8 105073D0 10507B90 105093D0 00010040 2004 1STSEGMENT 103ADF88 104FF128 10504138 105073A8 00020040 8280 1STSEGMENT 103ADF28 104FE0F8 104FEDD8 104FF0F8 00010040 1004 1STSEGMENT 103ADEC8 100D39A0 100D4510 100D4510 00010040 b74 1STSEGMENT 103ADE68 104F3F38 104F8290 104FD0A8 00020040 9170 1STSEGMENT 103ADE08 102582D0 10258878 10258878 00010040 5ac 1STSEGMENT 103ADDA8 104EA4C0 104EC258 104F1CC0 00020040 7800 1STSEGMENT 103ADD48 10352A60 10352BF8 10352BF8 00010040 19c 1STSEGMENT 103ADCE8 103AE440 103AE930 103AEDA0 00020040 960 1STSEGMENT 103ADC88 104E8490 104E8AE0 104EA490 00010040 2004 1STSEGMENT 103ADC28 104E4460 104E56C8 104E8460 00010040 4004 1STSEGMENT 103ADBC8 104E1408 104E31B8 104E3408 00010040 2004 1STSEGMENT 103ADB68 104D18C0 104DCFE8 104E13E0 00020040 fb20 1STSEGMENT 103ADB08 104CB698 104CD9D0 104CF698 00020040 4000 1STSEGMENT 103ADAA8 10240C30 10240D40 10240D40 00010040 114 1STSEGMENT 103ADA48 10342888 10342C60 10343058 00020040 7d0 1STSEGMENT 103AD9E8 102B7978 102B7D20 102B8178 00010040 804 1STSEGMENT 103AD988 1023C4A0 1023C830 1023C8A0 00010040 404 1STSEGMENT 103AD928 104C8388 104C9C58 104CA648 00020040 22c0 1STSEGMENT 103AD8C8 10403748 10403890 10403890 00010040 14c 1STSEGMENT 103AD868 102735D0 102739A0 10273E80 00020040 8b0 1STSEGMENT 103AD808 104C7358 104C8158 104C8358 00010040 1004 1STSEGMENT 103AD7A8 103969E0 10397048 103971E0 00010040 804 1STSEGMENT 103AD748 102B6AB0 102B77E0 102B77E0 00010040 d34 1STSEGMENT 103AD6E8 1022A068 1022A1E0 1022A1E0 00010040 17c 1STSEGMENT 103AD688 104B9800 104C3788 104C52E0 00020040 bae0 1STSEGMENT 103AD628 104B5B98 104B7958 104B97D8 00020040 3c40 1STSEGMENT 103AD5C8 103DAB80 103DC7D8 103DEB80 00020040 4000 1STSEGMENT 103AD568 103D8B50 103DA730 103DAB50 00010040 2004 1STSEGMENT 103AD508 101C0EF8 101C4890 101C5C68 00020040 4d70 1STSEGMENT 103AD4A8 101C8928 101C98C8 101C9928 00010040 1004 1STSEGMENT 103AD448 100F3C98 100F43A0 100F4498 00010040 804 1STSEGMENT DD5F6230 103C6B50 103C7058 103C7058 00010040 50c 1STSEGMENT DD5F61D0 104AE130 104B4430 104B5B70 00020040 7a40 1STSEGMENT DD5F6170 103AB3E8 103AD388 103AD3E8 00010040 2004 1STSEGMENT DD5F6110 1026B0E8 10270338 10273048 00020040 7f60 1STSEGMENT DD5F60B0 102AC8E8 102AD100 102AD8E8 00010040 1004 1STSEGMENT DD5F6050 104A6100 104AE020 104AE100 00010040 8004 1STSEGMENT DD5F5FF0 10439FF8 1043A528 1043A7F8 00010040 804 1STSEGMENT DD5F5F90 1023B048 1023B350 1023B448 00010040 404 1STSEGMENT DD5F5F30 103CAA38 103CB4E0 103CB4E0 00010040 aac 1STSEGMENT DD5F5ED0 102A3058 102A9EB0 102AB898 00020040 8840 1STSEGMENT DD5F5E70 10341340 103422A0 10342340 00010040 1004 1STSEGMENT DD5F5E10 1033EB98 1033FFD8 10341318 00020040 2780 1STSEGMENT DD5F5DB0 103A2838 103A2F00 103A3038 00010040 804 1STSEGMENT DD5F5D50 10293030 102A1098 102A3030 00020040 10000 1STSEGMENT DD5F5CF0 103FE6F0 103FECC8 104026F0 00010040 4004 1STSEGMENT DD5F5C90 1044AEB0 1044CDD8 1044CEB0 00010040 2004 1STSEGMENT DD5F5C30 1032EB70 10335E90 1033EB70 00020040 10000 1STSEGMENT DD5F5BD0 102630C0 10266458 1026B0C0 00020040 8000 1STSEGMENT DD5F5B70 101CBFB8 101CCB90 101CFFB8 00020040 4000 1STSEGMENT DD5F5B10 103959B0 10396630 103969B0 00010040 1004 1STSEGMENT DD5F5AB0 10226C00 102284E8 1022A040 00020040 3440 1STSEGMENT DD5F5A50 10237018 1023AE78 1023B018 00010040 4004 1STSEGMENT DD5F59F0 103A33C0 103A9688 103AB3C0 00020040 8000 1STSEGMENT DD5F5990 102BCDA0 102BD170 102BD1A0 00010040 404 1STSEGMENT DD5F5930 102BA538 102BC478 102BCD78 00020040 2840 1STSEGMENT DD5F58D0 101C66D0 101C6888 101C6888 00010040 1bc 1STSEGMENT DD5F5870 100E28B8 100E2A88 100E2A88 00010040 1d4 1STSEGMENT DD5F5810 103D6EC0 103D7288 103D8260 00020040 13a0 1STSEGMENT DD5F57B0 DD9008D0 DD900C08 DD901AB0 00020040 11e0 1STSEGMENT DD5F5750 DD31B208 DD320800 DD321F98 00020040 6d90 1STSEGMENT DD5F56F0 DD3191D8 DD31B0B8 DD31B1D8 00010040 2004 1STSEGMENT DD5F5690 DD3181A8 DD318F50 DD3191A8 00010040 1004 1STSEGMENT DD5F5630 DD310040 DD316198 DD318180 00020040 8140 1STSEGMENT DD5F55D0 DD30DFE8 DD30EF38 DD30EFE8 00010040 1004 1STSEGMENT DD5F5570 DD301880 DD30CBD0 DD30DFC0 00020040 c740 1STSEGMENT DD5F5510 DD300028 DD300738 DD300828 00010040 804 1STSEGMENT DD5F54B0 DDC94448 DDC947B8 DDC94848 00010040 404 1STSEGMENT DD5F5450 DDC93C70 DDC94418 DDC94418 00010040 7ac 1STSEGMENT DD5F53F0 DD5FA148 DD5FD358 DD5FEA08 00020040 48c0 1STSEGMENT DD5F5390 DD5F9780 DD5F9BE0 DD5F9F80 00010040 804 1STSEGMENT DD5F5330 DD5F92C0 DD5F9750 DD5F9750 00010040 494 1STSEGMENT DD5F52D0 DD5F62C8 DD5F87F0 DD5F9298 00020040 2fd0 1STSEGMENT DD59A920 DDC92B30 DDC92C88 DDC92C88 00010040 15c 1STSEGMENT DD59A8C0 DD5F41B8 DD5F4528 DD5F5278 00020040 10c0 1STSEGMENT DD59A860 DD5F2188 DD5F3B18 DD5F4188 00010040 2004 1STSEGMENT DD59A800 DD5EFD00 DD5F11E8 DD5F2160 00020040 2460 1STSEGMENT DD59A7A0 DD5EDA60 DD5EFA00 DD5EFA60 00010040 2004 1STSEGMENT DD59A740 DD5EC208 DD5EC968 DD5ECA08 00010040 804 1STSEGMENT DD59A6E0 DD5EB0A8 DD5EC1D8 DD5EC1D8 00010040 1134 1STSEGMENT DD59A680 DD5D9DA8 DD5E63A0 DD5E9EF8 00020040 10150 1STSEGMENT DD59A620 DD5D6D10 DD5D8050 DD5D9D80 00020040 3070 1STSEGMENT DD59A5C0 DDC83098 DDC83208 DDC83498 00010040 404 1STSEGMENT DD59A560 DDC82070 DDC82400 DDC83070 00020040 1000 1STSEGMENT DD59A500 DD5C2570 DD5C2690 DD5C2690 00010040 124 1STSEGMENT DD59A4A0 DD58A320 DD58A5E0 DD58AA80 00020040 760 1STSEGMENT DD59A440 DD5C4C90 DD5C5770 DD5C5C90 00010040 1004 1STSEGMENT DD59A3E0 DD5BCAE8 DD5BD080 DD5BD2E8 00010040 804 1STSEGMENT DD59A380 DD5C02D8 DD5C0B98 DD5C22D8 00020040 2000 1STSEGMENT DD59A320 DD5BC6B8 DD5BCA10 DD5BCAB8 00010040 404 1STSEGMENT DD59A2C0 DD5BF1B0 DD5BFB40 DD5C02B0 00020040 1100 1STSEGMENT DD59A260 DDC9B690 DDC9B740 DDC9B740 00010040 b4 1STSEGMENT DD59A200 DDC9B398 DDC9B4D8 DDC9B668 00020040 2d0 1STSEGMENT DD59A1A0 DD5BB850 DD5BBF80 DD5BC050 00010040 804 1STSEGMENT DD59A140 DD5B93E8 DD5BB158 DD5BB828 00020040 2440 1STSEGMENT DD59A0E0 DD5B8D80 DD5B90A8 DD5B9180 00010040 404 1STSEGMENT DD59A080 DD5B7BB8 DD5B83D8 DD5B8D58 00020040 11a0 1STSEGMENT DD59A020 DD5B7788 DD5B7AD0 DD5B7B88 00010040 404 1STSEGMENT DD599FC0 DD5B7558 DD5B7758 DD5B7758 00010040 204 1STSEGMENT DD599F60 DDC81F48 DDC81FF8 DDC81FF8 00010040 b4 1STSEGMENT DD599F00 DD5B7090 DD5B72A0 DD5B7530 00020040 4a0 1STSEGMENT DD599EA0 DD5B5508 DD5B6320 DD5B7068 00020040 1b60 1STSEGMENT DD599E40 DD5B4280 DD5B4BE8 DD5B54E0 00020040 1260 1STSEGMENT DD599DE0 DD5B3A38 DD5B4250 DD5B4250 00010040 81c 1STSEGMENT DD599D80 DD5B31A8 DD5B3A08 DD5B3A08 00010040 864 1STSEGMENT DD599D20 DD5ABC70 DD5B1018 DD5B3180 00020040 7510 1STSEGMENT DD599CC0 DD5A4C88 DD5A77A0 DD5ABC48 00020040 6fc0 1STSEGMENT DD599C60 DD90A150 DD90A7A0 DD90A7A0 00010040 654 1STSEGMENT DD599C00 DD59E618 DD5A0C20 DD5A3C38 00020040 5620 1STSEGMENT DD599BA0 DD596A50 DD596D20 DD596E50 00010040 404 1STSEGMENT DD599B40 DD59CBD0 DD59D788 DD59E5F0 00020040 1a20 1STSEGMENT DD599AE0 DD5967E0 DD596970 DD596970 00010040 194 1STSEGMENT DD599A80 DD59B9E8 DD59BD20 DD59CBA8 00020040 11c0 1STSEGMENT DD599A20 DD59A9B8 DD59B6E0 DD59B9B8 00010040 1004 1STSEGMENT DD5999C0 DD598AE0 DD598C60 DD598C60 00010040 184 1STSEGMENT DD9BD520 DD5983C8 DD598720 DD598AB8 00020040 6f0 1STSEGMENT DD9BD4C0 DD595948 DD5960E0 DD596148 00010040 804 1STSEGMENT DD9BD460 DD58BDD8 DD58C3B0 DD58C3B0 00010040 5dc 1STSEGMENT DD9BD400 DD58CF98 DD593988 DD5948F8 00020040 7960 1STSEGMENT DD9BD3A0 DD58BB50 DD58BD10 DD58BD10 00010040 1c4 1STSEGMENT DD9BD340 DD58ADB8 DD58B2E8 DD58BAE8 00020040 d30 1STSEGMENT DD9BD2E0 DD589058 DD589A88 DD589A88 00010040 a34 1STSEGMENT DD9BD280 DD57FA00 DD5840B0 DD589030 00020040 9630 1STSEGMENT DD9BD220 DD57E6A0 DD57F610 DD57F6A0 00010040 1004 1STSEGMENT DD9BD1C0 DD5775D8 DD57AF48 DD57E548 00020040 6f70 1STSEGMENT DD9BD160 DD575C30 DD576208 DD576430 00010040 804 1STSEGMENT DD9BD100 DD572868 DD574070 DD575C08 00020040 33a0 1STSEGMENT DD9BD0A0 DD5712B8 DD571448 DD5716B8 00010040 404 1STSEGMENT DD9BD040 DD555B40 DD555DB8 DD555DB8 00010040 27c 1STSEGMENT DD9BCFE0 DD56F920 DD5708A0 DD571290 00020040 1970 1STSEGMENT DD9BCF80 DD5678F8 DD56B2C8 DD56F8F8 00020040 8000 1STSEGMENT DD9BCF20 DD5638C8 DD565108 DD5678C8 00010040 4004 1STSEGMENT DD9BCEC0 DD561898 DD563710 DD563898 00010040 2004 1STSEGMENT DD9BCE60 DD556EC0 DD55F738 DD561870 00020040 a9b0 1STSEGMENT DD9BCE00 DD555E90 DD556A88 DD556E90 00010040 1004 1STSEGMENT DD9BCDA0 DD53E6E0 DD53F030 DD53F030 00010040 954 1STSEGMENT DD9BCD40 DD547C80 DD550270 DD554E40 00020040 d1c0 1STSEGMENT DD9BCCE0 DD53E0F0 DD53E6B0 DD53E6B0 00010040 5c4 1STSEGMENT DD9BCC80 DD542A70 DD5449E0 DD546C30 00020040 41c0 1STSEGMENT DD9BCC20 DD9FCBD0 DD9FCE60 DD9FCE60 00010040 294 1STSEGMENT DD9BCBC0 DD53F9E8 DD540610 DD542A48 00020040 3060 1STSEGMENT DD9BCB60 DD5375D8 DD53DA08 DD53E0C8 00020040 6af0 1STSEGMENT DD9BCB00 DD9F8B38 DD9FCA58 DD9FCB38 00010040 4004 1STSEGMENT DD9BCAA0 DD52F5A8 DD5373F8 DD5375A8 00010040 8004 1STSEGMENT DD9BCA40 DD50F580 DD52EE28 DD52F580 00020040 20000 1STSEGMENT DD9BC9E0 DD9F6B08 DD9F8A60 DD9F8B08 00010040 2004 1STSEGMENT DD9BC980 DD9F46E8 DD9F5AB0 DD9F5AB0 00010040 13cc 1STSEGMENT DD9BC920 DD500028 DD50EC70 DD50F558 00020040 f530 1STSEGMENT DD9BC8C0 DD9F2E90 DD9F3688 DD9F3690 00010040 804 1STSEGMENT DD9BC860 DD9F27E0 DD9F2E60 DD9F2E60 00010040 684 1STSEGMENT DD9BC800 DD9CD3D0 DD9CDDE8 DD9CDDE8 00010040 a1c 1STSEGMENT DD9BC7A0 DD9E7958 DD9F0F58 DD9F27B8 00020040 ae60 1STSEGMENT DD9BC740 DD9E2450 DD9E36E0 DD9E7930 00020040 54e0 1STSEGMENT DD9BC6E0 DD9DE420 DD9E2418 DD9E2420 00010040 4004 1STSEGMENT DD9BC680 DD9CE3F8 DD9DDCA8 DD9DE3F8 00020040 10000 1STSEGMENT DD9BC620 DD9CB3A0 DD9CD328 DD9CD3A0 00010040 2004 1STSEGMENT DD9BC5C0 DD9BD5B8 DD9C5F10 DD9CB378 00020040 ddc0 1STSEGMENT 103CD458 DD9BA538 DD9BB408 DD9BB538 00010040 1004 1STSEGMENT 103CD3F8 DD9B6510 DD9B9558 DD9BA510 00020040 4000 1STSEGMENT 103CD398 DD983240 DD9839D8 DD983A40 00010040 804 1STSEGMENT 103CD338 DD9B44E8 DD9B4B60 DD9B64E8 00020040 2000 1STSEGMENT 103CD2D8 DD958648 DD9589D0 DD958A48 00010040 404 1STSEGMENT 103CD278 DD982218 DD982618 DD983218 00020040 1000 1STSEGMENT 103CD218 DD9AC4C0 DD9B35B8 DD9B44C0 00020040 8000 1STSEGMENT 103CD1B8 DD958400 DD9584C0 DD9584C0 00010040 c4 1STSEGMENT 103CD158 DD9069F8 DD906B58 DD906CF8 00020040 300 1STSEGMENT 103CD0F8 DD905708 DD9062B8 DD906708 00010040 1004 1STSEGMENT 103CD098 DD927770 DD927A50 DD927B70 00010040 404 1STSEGMENT 103CD038 DD9860B8 DD9864C0 DD9864C0 00010040 40c 1STSEGMENT 103CCFD8 DD9A76B8 DD9A94D8 DD9AC498 00020040 4de0 1STSEGMENT 103CCF78 DD9A1570 DD9A4780 DD9A7690 00020040 6120 1STSEGMENT 103CCF18 DD929618 DD92A950 DD92A950 00010040 133c 1STSEGMENT 103CCEB8 DD988748 DD99F818 DD9A1548 00020040 18e00 1STSEGMENT 103CCE58 1047E080 10486048 10486080 00010040 8004 1STSEGMENT 103CCDF8 DD81D018 DD83BCC8 DD83D018 00020040 20000 1STSEGMENT 103CCD98 10476050 1047DEC0 1047E050 00010040 8004 1STSEGMENT 103CCD38 10456028 104745E0 10476028 00020040 20000 1STSEGMENT 103CCCD8 103CEE90 103D6CD8 103D6E90 00010040 8004 1STSEGMENT 103CCC78 DD83E018 DD85C278 DD85E018 00020040 20000 1STSEGMENT 103CCC18 DD85F018 DD86F9F8 DD87F018 00020040 20000 1STSEGMENT 103CCBB8 10429DC8 1042D8E0 1042DDC8 00010040 4004 1STSEGMENT 103CCB58 104397C0 10439940 10439940 00010040 184 1STSEGMENT 103CCAF8 104390B8 10439440 10439798 00020040 6e0 1STSEGMENT 103CCA98 10413B68 1041A618 1041BB68 00010040 8004 1STSEGMENT 103CCA38 10403B40 10412DA0 10413B40 00020040 10000 1STSEGMENT 103CC9D8 103FA6C0 103FE6A0 103FE6C0 00010040 4004 1STSEGMENT 103CC978 103E6B58 103F63A0 103FA698 00020040 13b40 1STSEGMENT 103CC918 103E4B28 103E6A50 103E6B28 00010040 2004 1STSEGMENT 103CC8B8 10350440 10351310 10351440 00010040 1004 1STSEGMENT 103CC858 103DEEB8 103E2F10 103E3AD8 00020040 4c20 1STSEGMENT 103CC7F8 103C9D38 103CA528 103CA538 00010040 804 1STSEGMENT 103CC798 1034B298 1034E108 10350418 00020040 5180 1STSEGMENT 103CC738 103C8818 103C8CE0 103C8CE0 00010040 4cc 1STSEGMENT 103CC6D8 10348050 10349918 1034B270 00020040 3220 1STSEGMENT 103CC678 103CEAB0 103CEC90 103CEC90 00010040 1e4 1STSEGMENT 103CC618 103CDD48 103CE3E0 103CEA88 00020040 d40 1STSEGMENT 103CC5B8 103C63F0 103C66F0 103C67F0 00010040 404 1STSEGMENT 103CC558 103CD4F0 103CDBC0 103CDBC0 00010040 6d4 1STSEGMENT 103CC4F8 10343098 10345510 10348028 00020040 4f90 1STSEGMENT 1028CF18 103C7190 103C76B0 103C87F0 00020040 1660 1STSEGMENT 1028CEB8 103BEE68 103C10B8 103C3588 00020040 4720 1STSEGMENT 1028CE58 1035C7A8 1035DA50 103607A8 00010040 4004 1STSEGMENT 1028CDF8 103587D0 1035AF68 1035C780 00020040 3fb0 1STSEGMENT 1028CD98 10354C48 10357548 103587A8 00020040 3b60 1STSEGMENT 1028CD38 1030EB48 10323C48 1032EB48 00020040 20000 1STSEGMENT 1028CCD8 103A2008 103A23B8 103A2808 00010040 804 1STSEGMENT 1028CC78 102AEA80 102B2BD0 102B6A80 00010040 8004 1STSEGMENT 1028CC18 10395128 103953B8 103953B8 00010040 294 1STSEGMENT 1028CBB8 1039F380 1039FDC8 103A1FE0 00020040 2c60 1STSEGMENT 1028CB58 10397350 1039F0F8 1039F350 00010040 8004 1STSEGMENT 1028CAF8 102CEAD0 102E7190 102EEAD0 00020040 20000 1STSEGMENT 1028CA98 102BEAA8 102C91C0 102CEAA8 00020040 10000 1STSEGMENT 1028CA38 103910F8 103950B0 103950F8 00010040 4004 1STSEGMENT 1028C9D8 10387ED0 1038CF68 103910D0 00020040 9200 1STSEGMENT 1028C978 102878E0 102898D8 102898E0 00010040 2004 1STSEGMENT 1028C918 1037CA18 10385030 10387EA8 00020040 b490 1STSEGMENT 1028C8B8 102863F0 10287080 10287550 00020040 1160 1STSEGMENT 1028C858 102853C0 10286110 102863C0 00010040 1004 1STSEGMENT 1028C7F8 10284F90 10285330 10285390 00010040 404 1STSEGMENT 1028C798 10371CB0 103771F0 1037C9F0 00020040 ad40 1STSEGMENT 1028C738 102812B8 102813C0 102813C0 00010040 10c 1STSEGMENT 1028C6D8 102848C8 10284D08 10284F68 00020040 6a0 1STSEGMENT 1028C678 102806F8 10280AA8 10280EF8 00010040 804 1STSEGMENT 1028C618 10282898 10284428 10284898 00010040 2004 1STSEGMENT 1028C5B8 1027F6C8 10280580 102806C8 00010040 1004 1STSEGMENT 1028C558 10262420 10262F38 10262F38 00010040 b1c 1STSEGMENT 1028C4F8 10261FF0 102622E0 102623F0 00010040 404 1STSEGMENT 1028C498 10261D68 10261EA8 10261EA8 00010040 144 1STSEGMENT 1028C438 103630E8 1036FAC8 10371C88 00020040 eba0 1STSEGMENT 1028C3D8 1027DD10 1027E670 1027E670 00010040 964 1STSEGMENT 1028C378 10276178 1027A9E0 1027DCE8 00020040 7b70 1STSEGMENT 1028C318 102610E0 10261A60 10261A60 00010040 984 1STSEGMENT 1028C2B8 1025A0C8 1025DAA0 102610B8 00020040 6ff0 1STSEGMENT 1028C258 101ED648 101EF508 101EF648 00010040 2004 1STSEGMENT 1028C1F8 101EC618 101ED478 101ED618 00010040 1004 1STSEGMENT 1028C198 101E0C10 101EB988 101EC5F0 00020040 b9e0 1STSEGMENT 1028C138 10257848 10257F60 10258048 00010040 804 1STSEGMENT 1028C0D8 102530B0 10255B90 10257820 00020040 4770 1STSEGMENT 1028C078 102929E8 10292CC8 10292DE8 00010040 404 1STSEGMENT 1028C018 102921F8 102929B8 102929B8 00010040 7c4 1STSEGMENT 1028BFB8 1028CFB0 10290200 102921D0 00020040 5220 1STSEGMENT DDE21F30 DE5FCE70 DE5FCFF0 DE5FCFF0 00010040 184 1STSEGMENT DDE21ED0 DDEFB5D0 DDEFB858 DDEFCC30 00020040 1660 1STSEGMENT DDE21E70 DDB5F018 DDB7DCB8 DDB7F018 00020040 20000 1STSEGMENT DDE21E10 101DEBE0 101DFCC8 101E0BE0 00010040 2004 1STSEGMENT DDE21DB0 10217210 1021B468 1021F210 00020040 8000 1STSEGMENT DDE21D50 100E1020 100E1AF0 100E2020 00010040 1004 1STSEGMENT DDE21CF0 10210F98 10214720 102171E8 00020040 6250 1STSEGMENT DDE21C90 101D8F50 101DABA8 101DDB90 00020040 4c40 1STSEGMENT DDE21C30 100C6EF0 100C7600 100C76F0 00010040 804 1STSEGMENT DDE21BD0 101AE3A0 101AE6F8 101AE7A0 00010040 404 1STSEGMENT DDE21B70 100DEE98 100DFF50 100E0FF8 00020040 2160 1STSEGMENT DDE21B10 1018C540 1018C7C8 1018C7C8 00010040 28c 1STSEGMENT DDE21AB0 100DD770 100DE240 100DEE70 00020040 1700 1STSEGMENT DDE21A50 101D0F20 101D8F08 101D8F20 00010040 8004 1STSEGMENT DDE219F0 101F0F70 1020D958 10210F70 00020040 20000 1STSEGMENT DDE21990 DDC626D8 DDC6A6A8 DDC6A6D8 00010040 8004 1STSEGMENT DDE21930 DDD5B018 DDD7ACC8 DDD7B018 00020040 20000 1STSEGMENT DDE218D0 DDED4200 DDEDC1B0 DDEDC200 00010040 8004 1STSEGMENT DDE21870 DDC48108 DDC500A0 DDC50108 00010040 8004 1STSEGMENT DDE21810 DDD7C018 DDD98700 DDD9C018 00020040 20000 1STSEGMENT DDE217B0 DDC400D8 DDC48020 DDC480D8 00010040 8004 1STSEGMENT DDE21750 DDD9D018 DDDBC8B8 DDDBD018 00020040 20000 1STSEGMENT DDE216F0 DDC380A8 DDC40068 DDC400A8 00010040 8004 1STSEGMENT DDE21690 DDDBE018 DDDDCB40 DDDDE018 00020040 20000 1STSEGMENT DDE21630 DDC20050 DDC27FF0 DDC28050 00010040 8004 1STSEGMENT DDE215D0 DDDDF018 DDDFDAE0 DDDFF018 00020040 20000 1STSEGMENT DDE21570 DDC00028 DDC1ECC0 DDC20028 00020040 20000 1STSEGMENT DDE21510 DDEED520 DDEF52C0 DDEF5520 00010040 8004 1STSEGMENT DDE214B0 DDEE54F0 DDEED460 DDEED4F0 00010040 8004 1STSEGMENT DDE21450 DDF17018 DDF34928 DDF37018 00020040 20000 1STSEGMENT DDE213F0 DDF38018 DDF54B10 DDF58018 00020040 20000 1STSEGMENT DDE21390 DDEDD4C0 DDEE54A8 DDEE54C0 00010040 8004 1STSEGMENT DDE21330 DDF81018 DDF9D7C8 DDFA1018 00020040 20000 1STSEGMENT DDE212D0 DDECC1D0 DDED4128 DDED41D0 00010040 8004 1STSEGMENT DDE21270 DDFA2018 DDFBDE00 DDFC2018 00020040 20000 1STSEGMENT DDE21210 DDEC41A0 DDECC140 DDECC1A0 00010040 8004 1STSEGMENT DDE211B0 DDEB0258 DDEC2848 DDEC4178 00020040 13f20 1STSEGMENT DDE21150 DDE9FB50 DDEAC1B0 DDEB0230 00020040 106e0 1STSEGMENT DDE210F0 DDE97208 DDE99448 DDE9FB28 00020040 8920 1STSEGMENT DDE21090 DDFC3018 DDFE1988 DDFE3018 00020040 20000 1STSEGMENT DDE21030 DDE4A5E8 DDE4F2E8 DDE50438 00020040 5e50 1STSEGMENT DDE20FD0 DDE21FC8 DDE25F20 DDE25FC8 00010040 4004 1STSEGMENT DE51B6E8 DDE1DF48 DDE1FF30 DDE1FF48 00010040 2004 1STSEGMENT DE51B688 DDE40500 DDE48418 DDE4A5C0 00020040 a0c0 1STSEGMENT DE51B628 DDE1CF18 DDE1DEB0 DDE1DF18 00010040 1004 1STSEGMENT DE51B5C8 DDE1C6E8 DDE1CDE8 DDE1CEE8 00010040 804 1STSEGMENT DE51B568 DE2E67B0 DE2E6B98 DE2E6BB0 00010040 404 1STSEGMENT DE51B508 DDE18040 DDE19640 DDE19640 00010040 1604 1STSEGMENT DE51B4A8 DDE2CEB8 DDE3D178 DDE404D8 00020040 13620 1STSEGMENT DE51B448 DE253530 DE254488 DE254530 00010040 1004 1STSEGMENT DE51B3E8 DE54F288 DE54F958 DE54FA88 00010040 804 1STSEGMENT DE51B388 DE5BDFD8 DE5BF058 DE5BF058 00010040 1084 1STSEGMENT DE51B328 DE56E0E0 DE56F210 DE56F210 00010040 1134 1STSEGMENT DE51B2C8 DE260788 DE27A5A8 DE27BB08 00020040 1b380 1STSEGMENT DE51B268 DE258758 DE260678 DE260758 00010040 8004 1STSEGMENT DE51B208 DE24B500 DE24DAF8 DE253500 00010040 8004 1STSEGMENT DE51B1A8 DE16E018 DE17BD08 DE19C7B8 00020040 2e7a0 1STSEGMENT DE51B148 DE2334A8 DE23B498 DE23B4A8 00010040 8004 1STSEGMENT DE51B0E8 DE19D018 DE1BCE58 DE1BD018 00020040 20000 1STSEGMENT DE51B088 DE5CCF18 DE5D4E80 DE5D4F18 00010040 8004 1STSEGMENT DE51B028 DE1BE018 DE1DDD40 DE1DE018 00020040 20000 1STSEGMENT DE51AFC8 DE1DF018 DE1FECD8 DE1FF018 00020040 20000 1STSEGMENT DE51AF68 DE220050 DE228040 DE228050 00010040 8004 1STSEGMENT DE51AF08 DE200028 DE21FB48 DE220028 00020040 20000 1STSEGMENT DE51AEA8 DE5EE398 DE5F62F0 DE5F6398 00010040 8004 1STSEGMENT DE51AE48 DE5D6340 DE5DE318 DE5DE340 00010040 8004 1STSEGMENT DE51ADE8 DE30C018 DE32BDE0 DE32C018 00020040 20000 1STSEGMENT DE51AD88 DE34E018 DE36D930 DE36E018 00020040 20000 1STSEGMENT DE51AD28 DE5C0568 DE5C8558 DE5C8568 00010040 8004 1STSEGMENT DE51ACC8 DE36F018 DE38E460 DE38F018 00020040 20000 1STSEGMENT DE51AC68 DE5B0910 DE5B88E0 DE5B8910 00010040 8004 1STSEGMENT DE51AC08 DE3D2018 DE3F12C0 DE3F2018 00020040 20000 1STSEGMENT DE51ABA8 DE5A88E0 DE5B0868 DE5B08E0 00010040 8004 1STSEGMENT DE51AB48 DE3F3018 DE411F18 DE413018 00020040 20000 1STSEGMENT DE51AAE8 DE55B3A0 DE563318 DE5633A0 00010040 8004 1STSEGMENT DE51AA88 DE414018 DE4318E8 DE434018 00020040 20000 1STSEGMENT DE51AA28 DE54FC58 DE557BA0 DE557C58 00010040 8004 1STSEGMENT DE51A9C8 DE49D018 DE4BA368 DE4BD018 00020040 20000 1STSEGMENT DE51A968 DE544718 DE54C698 DE54C718 00010040 8004 1STSEGMENT DE51A908 DE4BE018 DE4DBF50 DE4DE018 00020040 20000 1STSEGMENT DE51A8A8 DE529698 DE531630 DE531698 00010040 8004 1STSEGMENT DE51A848 DE4DF018 DE4FD838 DE4FF018 00020040 20000 1STSEGMENT DE51A7E8 DE51BEA8 DE523E20 DE523EA8 00010040 8004 1STSEGMENT DE51A788 DE616018 DE633628 DE636018 00020040 20000 1STSEGMENT 10055530 DE510590 DE518570 DE518590 00010040 8004 1STSEGMENT 100554D0 DE637018 DE655FC0 DE657018 00020040 20000 1STSEGMENT 10055470 DE508090 DE510040 DE510090 00010040 8004 1STSEGMENT 10055410 DE658018 DE676DA8 DE678018 00020040 20000 1STSEGMENT 100553B0 100E7C08 100EFBD8 100EFC08 00010040 8004 1STSEGMENT 10055350 1012B818 10149DF0 1014B818 00020040 20000 1STSEGMENT 100552F0 0DE215F8 0DE21A54 0DE21A54 04020104 48c 1STSEGMENT 10055290 0E772CF4 0E773128 0E773128 04200104 464 1STSEGMENT 10055230 100BDE98 100C5DE0 100C5E98 00010040 8004 1STSEGMENT 100551D0 DE67F018 DE69D9E0 DE69F018 00020040 20000 NULL 1STSEGTYPE JIT Code Cache NULL segment start alloc end type bytes 1STSEGMENT 10083B08 D8800000 D9000000 D9000000 00000068 800000 1STSEGMENT 10083AA8 DEEE9000 DF6E9000 DF6E9000 00000068 800000 NULL 1STSEGTYPE JIT Data Cache NULL segment start alloc end type bytes 1STSEGMENT 10083C70 DE6E8018 DEA8A4D4 DEEE8018 00000048 800000 NULL 1STGCHTYPE GC History 3STHSTTYPE 13:01:46:720253000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1726 soft=17814 phantom=0 finalizers=234 newspace=0/0 oldspace=56139848/187130880 loa=0/0 3STHSTTYPE 13:01:46:716217000 GMT j9mm.57 - Sweep end 3STHSTTYPE 13:01:46:707937000 GMT j9mm.56 - Sweep start 3STHSTTYPE 13:01:46:707934000 GMT j9mm.55 - Mark end 3STHSTTYPE 13:01:46:563080000 GMT j9mm.54 - Mark start 3STHSTTYPE 13:01:46:562977000 GMT j9mm.52 - GlobalGC start: weakrefs=1726 soft=17814 phantom=0 finalizers=234 globalcount=255 scavengecount=0 3STHSTTYPE 13:01:09:523159000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1726 soft=17814 phantom=0 finalizers=234 newspace=0/0 oldspace=45938416/153125888 loa=0/0 3STHSTTYPE 13:01:09:518001000 GMT j9mm.57 - Sweep end 3STHSTTYPE 13:01:09:510611000 GMT j9mm.56 - Sweep start 3STHSTTYPE 13:01:09:510608000 GMT j9mm.55 - Mark end 3STHSTTYPE 13:01:09:362034000 GMT j9mm.54 - Mark start 3STHSTTYPE 13:01:09:361930000 GMT j9mm.52 - GlobalGC start: weakrefs=1726 soft=17814 phantom=0 finalizers=234 globalcount=254 scavengecount=0 3STHSTTYPE 13:01:05:380837000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1726 soft=17814 phantom=0 finalizers=234 newspace=0/0 oldspace=39317384/131056640 loa=0/0 3STHSTTYPE 13:01:05:377461000 GMT j9mm.57 - Sweep end 3STHSTTYPE 13:01:05:371623000 GMT j9mm.56 - Sweep start 3STHSTTYPE 13:01:05:371621000 GMT j9mm.55 - Mark end 3STHSTTYPE 13:01:05:246503000 GMT j9mm.54 - Mark start 3STHSTTYPE 13:01:05:246398000 GMT j9mm.52 - GlobalGC start: weakrefs=1726 soft=17814 phantom=0 finalizers=234 globalcount=253 scavengecount=0 3STHSTTYPE 13:01:03:265184000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1726 soft=17814 phantom=0 finalizers=234 newspace=0/0 oldspace=33858264/112857600 loa=0/0 3STHSTTYPE 13:01:03:262484000 GMT j9mm.57 - Sweep end 3STHSTTYPE 13:01:03:257701000 GMT j9mm.56 - Sweep start 3STHSTTYPE 13:01:03:257699000 GMT j9mm.55 - Mark end 3STHSTTYPE 13:01:03:141078000 GMT j9mm.54 - Mark start 3STHSTTYPE 13:01:03:140974000 GMT j9mm.52 - GlobalGC start: weakrefs=1726 soft=17814 phantom=0 finalizers=234 globalcount=252 scavengecount=0 3STHSTTYPE 13:00:58:250692000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1726 soft=17814 phantom=0 finalizers=234 newspace=0/0 oldspace=33381832/99416064 loa=0/0 3STHSTTYPE 13:00:58:250572000 GMT j9mm.59 - Compact end 3STHSTTYPE 13:00:58:104221000 GMT j9mm.58 - Compact start 3STHSTTYPE 13:00:58:104219000 GMT j9mm.57 - Sweep end 3STHSTTYPE 13:00:58:99425000 GMT j9mm.56 - Sweep start 3STHSTTYPE 13:00:58:99423000 GMT j9mm.55 - Mark end 3STHSTTYPE 13:00:57:985194000 GMT j9mm.54 - Mark start 3STHSTTYPE 13:00:57:985090000 GMT j9mm.52 - GlobalGC start: weakrefs=1726 soft=17814 phantom=0 finalizers=234 globalcount=251 scavengecount=0 3STHSTTYPE 13:00:52:62854000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1726 soft=17814 phantom=0 finalizers=234 newspace=0/0 oldspace=29824880/99416064 loa=0/0 3STHSTTYPE 13:00:52:59385000 GMT j9mm.57 - Sweep end 3STHSTTYPE 13:00:52:54172000 GMT j9mm.56 - Sweep start 3STHSTTYPE 13:00:52:54169000 GMT j9mm.55 - Mark end 3STHSTTYPE 13:00:51:950545000 GMT j9mm.54 - Mark start 3STHSTTYPE 13:00:51:950441000 GMT j9mm.52 - GlobalGC start: weakrefs=1726 soft=17814 phantom=0 finalizers=234 globalcount=250 scavengecount=0 3STHSTTYPE 13:00:29:331494000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50689520/96658432 loa=0/0 3STHSTTYPE 13:00:29:328842000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1726 soft=17813 phantom=0 finalizers=234 newspace=0/0 oldspace=50689520/96658432 loa=0/0 3STHSTTYPE 13:00:29:328698000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 13:00:29:327233000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 13:00:29:327222000 GMT j9mm.59 - Compact end 3STHSTTYPE 13:00:29:136365000 GMT j9mm.58 - Compact start 3STHSTTYPE 13:00:29:136363000 GMT j9mm.57 - Sweep end 3STHSTTYPE 13:00:29:134832000 GMT j9mm.56 - Sweep start 3STHSTTYPE 13:00:29:134829000 GMT j9mm.55 - Mark end 3STHSTTYPE 13:00:29:29482000 GMT j9mm.54 - Mark start 3STHSTTYPE 13:00:29:29359000 GMT j9mm.52 - GlobalGC start: weakrefs=1727 soft=17821 phantom=0 finalizers=265 globalcount=249 scavengecount=0 3STHSTTYPE 13:00:29:29200000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.054 newspace=0/0 oldspace=45497016/96658432 loa=0/0 3STHSTTYPE 12:59:13:522459000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50840696/96658432 loa=0/0 3STHSTTYPE 12:59:13:522359000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1723 soft=17809 phantom=0 finalizers=234 newspace=0/0 oldspace=50840696/96658432 loa=0/0 3STHSTTYPE 12:59:13:522234000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:59:13:520701000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:59:13:520698000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:59:13:519434000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:59:13:519432000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:59:13:427002000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:59:13:426902000 GMT j9mm.52 - GlobalGC start: weakrefs=1725 soft=17809 phantom=0 finalizers=234 globalcount=248 scavengecount=0 3STHSTTYPE 12:59:13:426792000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.019 newspace=0/0 oldspace=49661216/96658432 loa=0/0 3STHSTTYPE 12:58:13:607839000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50848000/96658432 loa=0/0 3STHSTTYPE 12:58:13:607740000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1723 soft=17809 phantom=0 finalizers=234 newspace=0/0 oldspace=50848000/96658432 loa=0/0 3STHSTTYPE 12:58:13:607616000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:58:13:606218000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:58:13:606207000 GMT j9mm.59 - Compact end 3STHSTTYPE 12:58:13:519202000 GMT j9mm.58 - Compact start 3STHSTTYPE 12:58:13:519200000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:58:13:517971000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:58:13:517968000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:58:13:425760000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:58:13:425660000 GMT j9mm.52 - GlobalGC start: weakrefs=1723 soft=17809 phantom=0 finalizers=234 globalcount=247 scavengecount=0 3STHSTTYPE 12:58:13:425542000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.021 newspace=0/0 oldspace=50621888/96658432 loa=0/0 3STHSTTYPE 12:57:13:529556000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50847920/96658432 loa=0/0 3STHSTTYPE 12:57:13:529456000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1723 soft=17809 phantom=0 finalizers=234 newspace=0/0 oldspace=50847920/96658432 loa=0/0 3STHSTTYPE 12:57:13:529332000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:57:13:527557000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:57:13:527555000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:57:13:526232000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:57:13:526230000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:57:13:425011000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:57:13:424912000 GMT j9mm.52 - GlobalGC start: weakrefs=1723 soft=17809 phantom=0 finalizers=234 globalcount=246 scavengecount=0 3STHSTTYPE 12:57:13:424805000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.020 newspace=0/0 oldspace=50819408/96658432 loa=0/0 3STHSTTYPE 12:56:13:606932000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50848096/96658432 loa=0/0 3STHSTTYPE 12:56:13:606831000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1723 soft=17809 phantom=0 finalizers=234 newspace=0/0 oldspace=50848096/96658432 loa=0/0 3STHSTTYPE 12:56:13:606709000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:56:13:605306000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:56:13:605296000 GMT j9mm.59 - Compact end 3STHSTTYPE 12:56:13:519004000 GMT j9mm.58 - Compact start 3STHSTTYPE 12:56:13:519002000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:56:13:517765000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:56:13:517762000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:56:13:423978000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:56:13:423879000 GMT j9mm.52 - GlobalGC start: weakrefs=1723 soft=17809 phantom=0 finalizers=234 globalcount=245 scavengecount=0 3STHSTTYPE 12:56:13:423771000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.020 newspace=0/0 oldspace=50778672/96658432 loa=0/0 3STHSTTYPE 12:55:13:518306000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50847344/96658432 loa=0/0 3STHSTTYPE 12:55:13:518207000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1723 soft=17809 phantom=0 finalizers=234 newspace=0/0 oldspace=50847344/96658432 loa=0/0 3STHSTTYPE 12:55:13:518085000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:55:13:516549000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:55:13:516547000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:55:13:515279000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:55:13:515276000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:55:13:423212000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:55:13:423112000 GMT j9mm.52 - GlobalGC start: weakrefs=1723 soft=17809 phantom=0 finalizers=234 globalcount=244 scavengecount=0 3STHSTTYPE 12:55:13:423006000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.045 newspace=0/0 oldspace=50764656/96658432 loa=0/0 3STHSTTYPE 12:54:13:608654000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50848072/96658432 loa=0/0 3STHSTTYPE 12:54:13:608552000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1723 soft=17809 phantom=0 finalizers=234 newspace=0/0 oldspace=50848072/96658432 loa=0/0 3STHSTTYPE 12:54:13:608427000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:54:13:607036000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:54:13:607026000 GMT j9mm.59 - Compact end 3STHSTTYPE 12:54:13:520675000 GMT j9mm.58 - Compact start 3STHSTTYPE 12:54:13:520673000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:54:13:519412000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:54:13:519409000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:54:13:422738000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:54:13:422639000 GMT j9mm.52 - GlobalGC start: weakrefs=1723 soft=17809 phantom=0 finalizers=234 globalcount=243 scavengecount=0 3STHSTTYPE 12:54:13:422531000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.018 newspace=0/0 oldspace=50583616/96658432 loa=0/0 3STHSTTYPE 12:53:13:517036000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50847232/96658432 loa=0/0 3STHSTTYPE 12:53:13:516936000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1723 soft=17809 phantom=0 finalizers=234 newspace=0/0 oldspace=50847232/96658432 loa=0/0 3STHSTTYPE 12:53:13:516814000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:53:13:515282000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:53:13:515280000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:53:13:514017000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:53:13:514015000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:53:13:421755000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:53:13:421653000 GMT j9mm.52 - GlobalGC start: weakrefs=1723 soft=17809 phantom=0 finalizers=234 globalcount=242 scavengecount=0 3STHSTTYPE 12:53:13:421537000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.020 newspace=0/0 oldspace=50448960/96658432 loa=0/0 3STHSTTYPE 12:52:13:603384000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50848096/96658432 loa=0/0 3STHSTTYPE 12:52:13:603282000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1723 soft=17809 phantom=0 finalizers=234 newspace=0/0 oldspace=50848096/96658432 loa=0/0 3STHSTTYPE 12:52:13:603158000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:52:13:601759000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:52:13:601749000 GMT j9mm.59 - Compact end 3STHSTTYPE 12:52:13:514994000 GMT j9mm.58 - Compact start 3STHSTTYPE 12:52:13:514992000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:52:13:513737000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:52:13:513734000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:52:13:421442000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:52:13:421340000 GMT j9mm.52 - GlobalGC start: weakrefs=1723 soft=17809 phantom=0 finalizers=234 globalcount=241 scavengecount=0 3STHSTTYPE 12:52:13:421234000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.017 newspace=0/0 oldspace=50490848/96658432 loa=0/0 3STHSTTYPE 12:51:13:516783000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50847472/96658432 loa=0/0 3STHSTTYPE 12:51:13:516683000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1723 soft=17809 phantom=0 finalizers=234 newspace=0/0 oldspace=50847472/96658432 loa=0/0 3STHSTTYPE 12:51:13:516560000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:51:13:515017000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:51:13:515015000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:51:13:513747000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:51:13:513744000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:51:13:420443000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:51:13:420340000 GMT j9mm.52 - GlobalGC start: weakrefs=1723 soft=17809 phantom=0 finalizers=234 globalcount=240 scavengecount=0 3STHSTTYPE 12:51:13:420234000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.019 newspace=0/0 oldspace=50819408/96658432 loa=0/0 3STHSTTYPE 12:50:13:612307000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50848096/96658432 loa=0/0 3STHSTTYPE 12:50:13:612207000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1723 soft=17809 phantom=0 finalizers=234 newspace=0/0 oldspace=50848096/96658432 loa=0/0 3STHSTTYPE 12:50:13:612079000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:50:13:610201000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:50:13:610192000 GMT j9mm.59 - Compact end 3STHSTTYPE 12:50:13:523525000 GMT j9mm.58 - Compact start 3STHSTTYPE 12:50:13:523523000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:50:13:522221000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:50:13:522218000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:50:13:419443000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:50:13:419340000 GMT j9mm.52 - GlobalGC start: weakrefs=1723 soft=17809 phantom=0 finalizers=234 globalcount=239 scavengecount=0 3STHSTTYPE 12:50:13:419232000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.019 newspace=0/0 oldspace=50819904/96658432 loa=0/0 3STHSTTYPE 12:49:13:515353000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50847136/96658432 loa=0/0 3STHSTTYPE 12:49:13:515250000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1723 soft=17809 phantom=0 finalizers=234 newspace=0/0 oldspace=50847136/96658432 loa=0/0 3STHSTTYPE 12:49:13:515127000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:49:13:513585000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:49:13:513583000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:49:13:512317000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:49:13:512314000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:49:13:419193000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:49:13:419094000 GMT j9mm.52 - GlobalGC start: weakrefs=1723 soft=17809 phantom=0 finalizers=234 globalcount=238 scavengecount=0 3STHSTTYPE 12:49:13:418988000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.018 newspace=0/0 oldspace=50779008/96658432 loa=0/0 3STHSTTYPE 12:48:13:605801000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50848088/96658432 loa=0/0 3STHSTTYPE 12:48:13:605701000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1723 soft=17809 phantom=0 finalizers=234 newspace=0/0 oldspace=50848088/96658432 loa=0/0 3STHSTTYPE 12:48:13:605575000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:48:13:604182000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:48:13:604170000 GMT j9mm.59 - Compact end 3STHSTTYPE 12:48:13:514977000 GMT j9mm.58 - Compact start 3STHSTTYPE 12:48:13:514975000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:48:13:513731000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:48:13:513729000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:48:13:418750000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:48:13:418649000 GMT j9mm.52 - GlobalGC start: weakrefs=1723 soft=17809 phantom=0 finalizers=234 globalcount=237 scavengecount=0 3STHSTTYPE 12:48:13:418533000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.019 newspace=0/0 oldspace=50600656/96658432 loa=0/0 3STHSTTYPE 12:47:13:517764000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50847216/96658432 loa=0/0 3STHSTTYPE 12:47:13:517663000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1723 soft=17809 phantom=0 finalizers=234 newspace=0/0 oldspace=50847216/96658432 loa=0/0 3STHSTTYPE 12:47:13:517536000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:47:13:515988000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:47:13:515986000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:47:13:514731000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:47:13:514729000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:47:13:418194000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:47:13:418095000 GMT j9mm.52 - GlobalGC start: weakrefs=1723 soft=17809 phantom=0 finalizers=234 globalcount=236 scavengecount=0 3STHSTTYPE 12:47:13:417989000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.019 newspace=0/0 oldspace=50800720/96658432 loa=0/0 3STHSTTYPE 12:46:13:653752000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50847840/96658432 loa=0/0 3STHSTTYPE 12:46:13:653653000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1723 soft=17809 phantom=0 finalizers=234 newspace=0/0 oldspace=50847840/96658432 loa=0/0 3STHSTTYPE 12:46:13:653510000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:46:13:652112000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:46:13:652100000 GMT j9mm.59 - Compact end 3STHSTTYPE 12:46:13:511331000 GMT j9mm.58 - Compact start 3STHSTTYPE 12:46:13:511329000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:46:13:510029000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:46:13:510027000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:46:13:417431000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:46:13:417329000 GMT j9mm.52 - GlobalGC start: weakrefs=1742 soft=17809 phantom=0 finalizers=237 globalcount=235 scavengecount=0 3STHSTTYPE 12:46:13:417212000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.019 newspace=0/0 oldspace=47437456/96658432 loa=0/0 3STHSTTYPE 12:45:13:525151000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=50838680/96658432 loa=0/0 3STHSTTYPE 12:45:13:525050000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1722 soft=17806 phantom=0 finalizers=234 newspace=0/0 oldspace=50838680/96658432 loa=0/0 3STHSTTYPE 12:45:13:524904000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:45:13:523040000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:45:13:523037000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:45:13:521706000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:45:13:521703000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:45:13:418118000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:45:13:418014000 GMT j9mm.52 - GlobalGC start: weakrefs=1728 soft=17806 phantom=0 finalizers=351 globalcount=234 scavengecount=0 3STHSTTYPE 12:45:13:417890000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.025 newspace=0/0 oldspace=45230720/96658432 loa=0/0 3STHSTTYPE 12:44:12:325000000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=51061784/96658432 loa=0/0 3STHSTTYPE 12:44:12:324900000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1725 soft=17800 phantom=0 finalizers=234 newspace=0/0 oldspace=51061784/96658432 loa=0/0 3STHSTTYPE 12:44:12:324777000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:44:12:323305000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:44:12:323294000 GMT j9mm.59 - Compact end 3STHSTTYPE 12:44:12:237193000 GMT j9mm.58 - Compact start 3STHSTTYPE 12:44:12:237191000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:44:12:235894000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:44:12:235891000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:44:12:133253000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:44:12:133152000 GMT j9mm.52 - GlobalGC start: weakrefs=1725 soft=17800 phantom=0 finalizers=234 globalcount=233 scavengecount=0 3STHSTTYPE 12:44:12:133038000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.019 newspace=0/0 oldspace=51036160/96658432 loa=0/0 3STHSTTYPE 12:43:12:229980000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=51061496/96658432 loa=0/0 3STHSTTYPE 12:43:12:229881000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1725 soft=17800 phantom=0 finalizers=234 newspace=0/0 oldspace=51061496/96658432 loa=0/0 3STHSTTYPE 12:43:12:229758000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:43:12:228221000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:43:12:228219000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:43:12:226953000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:43:12:226950000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:43:12:132521000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:43:12:132422000 GMT j9mm.52 - GlobalGC start: weakrefs=1725 soft=17800 phantom=0 finalizers=234 globalcount=232 scavengecount=0 3STHSTTYPE 12:43:12:132311000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.020 newspace=0/0 oldspace=50836528/96658432 loa=0/0 3STHSTTYPE 12:42:12:316688000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=51061784/96658432 loa=0/0 3STHSTTYPE 12:42:12:316586000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1725 soft=17800 phantom=0 finalizers=234 newspace=0/0 oldspace=51061784/96658432 loa=0/0 3STHSTTYPE 12:42:12:316463000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:42:12:315070000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:42:12:315059000 GMT j9mm.59 - Compact end 3STHSTTYPE 12:42:12:228292000 GMT j9mm.58 - Compact start 3STHSTTYPE 12:42:12:228290000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:42:12:227042000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:42:12:227039000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:42:12:131402000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:42:12:131300000 GMT j9mm.52 - GlobalGC start: weakrefs=1725 soft=17800 phantom=0 finalizers=234 globalcount=231 scavengecount=0 3STHSTTYPE 12:42:12:131194000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.018 newspace=0/0 oldspace=51035600/96658432 loa=0/0 3STHSTTYPE 12:41:12:229294000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=51061608/96658432 loa=0/0 3STHSTTYPE 12:41:12:229183000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1725 soft=17800 phantom=0 finalizers=234 newspace=0/0 oldspace=51061608/96658432 loa=0/0 3STHSTTYPE 12:41:12:229062000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:41:12:227531000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:41:12:227529000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:41:12:226269000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:41:12:226266000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:41:12:131194000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:41:12:131093000 GMT j9mm.52 - GlobalGC start: weakrefs=1725 soft=17800 phantom=0 finalizers=234 globalcount=230 scavengecount=0 3STHSTTYPE 12:41:12:130986000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.018 newspace=0/0 oldspace=51034992/96658432 loa=0/0 3STHSTTYPE 12:40:12:314729000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=51061784/96658432 loa=0/0 3STHSTTYPE 12:40:12:314629000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1725 soft=17800 phantom=0 finalizers=234 newspace=0/0 oldspace=51061784/96658432 loa=0/0 3STHSTTYPE 12:40:12:314503000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:40:12:313105000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:40:12:313095000 GMT j9mm.59 - Compact end 3STHSTTYPE 12:40:12:226197000 GMT j9mm.58 - Compact start 3STHSTTYPE 12:40:12:226196000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:40:12:224954000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:40:12:224951000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:40:12:130977000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:40:12:130879000 GMT j9mm.52 - GlobalGC start: weakrefs=1725 soft=17800 phantom=0 finalizers=234 globalcount=229 scavengecount=0 3STHSTTYPE 12:40:12:130770000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.021 newspace=0/0 oldspace=50101168/96658432 loa=0/0 3STHSTTYPE 12:39:12:233302000 GMT j9mm.51 - SystemGC end: newspace=0/0 oldspace=51061608/96658432 loa=0/0 3STHSTTYPE 12:39:12:233201000 GMT j9mm.53 - GlobalGC end: workstackoverflow=0 overflowcount=0 weakrefs=1725 soft=17800 phantom=0 finalizers=234 newspace=0/0 oldspace=51061608/96658432 loa=0/0 3STHSTTYPE 12:39:12:233078000 GMT j9mm.61 - Class unloading end 3STHSTTYPE 12:39:12:231544000 GMT j9mm.60 - Class unloading start 3STHSTTYPE 12:39:12:231543000 GMT j9mm.57 - Sweep end 3STHSTTYPE 12:39:12:230284000 GMT j9mm.56 - Sweep start 3STHSTTYPE 12:39:12:230281000 GMT j9mm.55 - Mark end 3STHSTTYPE 12:39:12:130753000 GMT j9mm.54 - Mark start 3STHSTTYPE 12:39:12:130652000 GMT j9mm.52 - GlobalGC start: weakrefs=1725 soft=17800 phantom=0 finalizers=234 globalcount=228 scavengecount=0 3STHSTTYPE 12:39:12:130537000 GMT j9mm.50 - SystemGC start: exclusiveaccessms=0.021 newspace=0/0 oldspace=51024656/96658432 loa=0/0 NULL NULL ------------------------------------------------------------------------ 0SECTION LOCKS subcomponent dump routine NULL =============================== NULL 1LKPOOLINFO Monitor pool info: 2LKPOOLTOTAL Current total number of monitors: 39 NULL 1LKMONPOOLDUMP Monitor Pool Dump (flat &amp; inflated object-monitors): 2LKMONINUSE sys_mon_t:0xDDE6D880 infl_mon_t: 0xDDE6D8C0: 3LKMONOBJECT org/eclipse/osgi/framework/eventmgr/EventManager$EventThread@E0A3E0B0/E0A3E0BC: 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;Framework Event Dispatcher&quot; (0xDDEDC700) 2LKMONINUSE sys_mon_t:0xDDC988C8 infl_mon_t: 0xDDC98908: 3LKMONOBJECT org/eclipse/osgi/framework/eventmgr/EventManager$EventThread@E095D6B8/E095D6C4: 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;Bundle File Closer&quot; (0xDDCA5D00) 2LKMONINUSE sys_mon_t:0xDDC99580 infl_mon_t: 0xDDC995C0: 3LKMONOBJECT org/eclipse/osgi/framework/eventmgr/EventManager$EventThread@E03B77E0/E03B77EC: 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;Provisioning Event Dispatcher&quot; (0x10362100) 2LKMONINUSE sys_mon_t:0xDDC995D8 infl_mon_t: 0xDDC99618: 3LKMONOBJECT org/eclipse/core/internal/jobs/WorkerPool@E06B0820/E06B082C: 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;Worker-28&quot; (0x10361D00) 3LKWAITNOTIFY &quot;Worker-24&quot; (0xDAD2BF00) 2LKMONINUSE sys_mon_t:0xDDC99688 infl_mon_t: 0xDDC996C8: 3LKMONOBJECT java/util/ArrayList@E06ADAF0/E06ADAFC: 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;Worker-JM&quot; (0xDDCA6500) 2LKMONINUSE sys_mon_t:0xDDC99790 infl_mon_t: 0xDDC997D0: 3LKMONOBJECT java/lang/Object@E0A3C928/E0A3C934: 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;[Timer] - Main Queue Handler&quot; (0x10361900) 2LKMONINUSE sys_mon_t:0xDD924B98 infl_mon_t: 0xDD924BD8: 3LKMONOBJECT org/eclipse/osgi/framework/eventmgr/EventManager$EventThread@E0A5A778/E0A5A784: 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;Start Level Event Dispatcher&quot; (0xDDEDCB00) 2LKMONINUSE sys_mon_t:0xDD9250C0 infl_mon_t: 0xDD925100: 3LKMONOBJECT org/eclipse/equinox/internal/util/impl/tpt/threadpool/Executor@E0C32130/E0C3213C: 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;[ThreadPool Manager] - Idle Thread&quot; (0xDCB12200) 2LKMONINUSE sys_mon_t:0xDD925278 infl_mon_t: 0xDD9252B8: 3LKMONOBJECT org/eclipse/jdt/internal/core/search/indexing/IndexManager@E09ABAB0/E09ABABC: 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;Java indexing&quot; (0xDDEDC300) 2LKMONINUSE sys_mon_t:0x10CEFBD8 infl_mon_t: 0x10CEFC18: 3LKMONOBJECT org/eclipse/jface/text/reconciler/DirtyRegionQueue@E116D1D0/E116D1DC: 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;org.eclipse.jdt.internal.ui.text.JavaReconciler&quot; (0xDB15BF00) 2LKMONINUSE sys_mon_t:0x10CEFFF8 infl_mon_t: 0x10CF0038: 3LKMONOBJECT org/eclipse/jface/text/reconciler/DirtyRegionQueue@E27C3308/E27C3314: 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;org.eclipse.jdt.internal.ui.text.JavaReconciler&quot; (0xDB15C700) 2LKMONINUSE sys_mon_t:0x10EEF0A0 infl_mon_t: 0x10EEF0E0: 3LKMONOBJECT org/eclipse/jface/text/reconciler/DirtyRegionQueue@E2229AC0/E2229ACC: 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;org.eclipse.jdt.internal.ui.text.JavaReconciler&quot; (0xDCB11A00) 2LKMONINUSE sys_mon_t:0x10EEF200 infl_mon_t: 0x10EEF240: 3LKMONOBJECT org/eclipse/jface/text/reconciler/DirtyRegionQueue@E2057E90/E2057E9C: 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;org.eclipse.jdt.internal.ui.text.JavaReconciler&quot; (0xD9079500) 2LKMONINUSE sys_mon_t:0x10EEF478 infl_mon_t: 0x10EEF4B8: 3LKMONOBJECT org/eclipse/jface/text/reconciler/DirtyRegionQueue@E2676F90/E2676F9C: 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;org.eclipse.jdt.internal.ui.text.JavaReconciler&quot; (0xDAD2BB00) NULL 1LKREGMONDUMP JVM System Monitor Dump (registered monitors): 2LKREGMON Thread global lock (0x10026810): 2LKREGMON NLS hash table lock (0x10026868): 2LKREGMON portLibrary_j9sig_sync_monitor lock (0x100268C0): 2LKREGMON portLibrary_j9sig_asynch_reporter_shutdown_monitor lock (0x10026918): 2LKREGMON portLibrary_j9sig_async_monitor lock (0x10026970): 2LKREGMON Hook Interface lock (0x100269C8): 2LKREGMON &amp;(vm-&gt;bytecodeTableMutex) lock (0x10026A20): 2LKREGMON MM_SublistPool lock (0x10026A78): 2LKREGMON MM_SublistPool lock (0x10026AD0): 2LKREGMON MM_SublistPool lock (0x10026B28): 2LKREGMON MM_SublistPool lock (0x10026B80): 2LKREGMON MM_SublistPool lock (0x10026BD8): 2LKREGMON Hook Interface lock (0x10026C30): 2LKREGMON MM_ParallelDispatcher::slaveThread lock (0x10026C88): 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;Gc Slave Thread&quot; (0x1019EE00) 3LKWAITNOTIFY &quot;Gc Slave Thread&quot; (0x1019F200) 3LKWAITNOTIFY &quot;Gc Slave Thread&quot; (0x1019F600) 2LKREGMON MM_ParallelDispatcher::synchronize lock (0x10026CE0): 2LKREGMON MM_WorkPackets::inputList lock (0x10026D38): 2LKREGMON MM_WorkPackets::allocatingPackets lock (0x10026D90): 2LKREGMON MM_GCExtensions::gcStats lock (0x10026DE8): 2LKREGMON &amp;vm-&gt;verboseStateMutex lock (0x10026E40): 2LKREGMON VM thread list lock (0x10026E98): Flat locked by &quot;[osthread]&quot; (0x100280D8), entry count 1 2LKREGMON VM exclusive access lock (0x10026EF0): 2LKREGMON VM Runtime flags Mutex lock (0x10026F48): 2LKREGMON VM Extended method block flags Mutex lock (0x10026FA0): 2LKREGMON VM Statistics List Mutex lock (0x10026FF8): 2LKREGMON VM bind native lock (0x10027050): 2LKREGMON VM class loader blocks lock (0x100270A8): 2LKREGMON VM class table lock (0x10027100): 2LKREGMON VM string table lock (0x10027158): 2LKREGMON VM segment lock (0x100271B0): 2LKREGMON VM JNI frame lock (0x10027208): 2LKREGMON VM GC finalize master lock (0x10027260): 2LKREGMON VM GC finalize run finalization lock (0x100272B8): 2LKREGMON VM memory space list lock (0x10027310): 2LKREGMON VM JXE description lock (0x10027368): 2LKREGMON VM AOT runtime init lock (0x100273C0): 2LKREGMON VM monitor table lock (0x10027418): 2LKREGMON VM volatile long lock (0x10027470): 2LKREGMON VM mem segment list lock (0x100274C8): 2LKREGMON VM mem segment list lock (0x10027520): 2LKREGMON VM mem segment list lock (0x10027578): 2LKREGMON FinalizeListManager lock (0x100275D0): 2LKREGMON &amp;(jvmtiData-&gt;mutex) lock (0x10027628): 2LKREGMON &amp;(jvmtiData-&gt;redefineMutex) lock (0x10027680): 2LKREGMON BCVD verifier lock (0x100276D8): 2LKREGMON Thread public flags mutex lock (0x10027730): 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;main&quot; (0x10053900) 2LKREGMON jvmriDumpThread lock (0x10027788): 2LKREGMON &amp;newSem-&gt;pfmInfo.sem lock (0x100277E0): 2LKREGMON &amp;newSem-&gt;pfmInfo.sem lock (0x10027838): 2LKREGMON &amp;newSem-&gt;pfmInfo.sem lock (0x10027890): 2LKREGMON JIT-MonitorTableMonitor lock (0x100278E8): 2LKREGMON JIT-MemoryAllocMonitor lock (0x10027940): 2LKREGMON JIT-ClassUnloadMonitor lock (0x10027998): 2LKREGMON JIT-SampleFrequencyMonitor lock (0x100279F0): 2LKREGMON Hook Interface lock (0x10027A48): 2LKREGMON JIT-jitConfig-&gt;mutex lock (0x10027AA0): 2LKREGMON JIT-AssumptionTableMutex lock (0x10027AF8): 2LKREGMON VM mem segment list lock (0x10027B50): 2LKREGMON VM mem segment list lock (0x10027BA8): 2LKREGMON ActivationTableMutex lock (0x10027C00): 2LKREGMON JIT-CompilationQueueMonitor lock (0x10027C58): 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;JIT Compilation Thread&quot; (0x10053D00) 2LKREGMON JIT-CodeCacheListMutex lock (0x10027CB0): 2LKREGMON JIT-CodeCacheMonitor-?? lock (0x10027D08): 2LKREGMON ValueProfilingMutex lock (0x10027D60): 2LKREGMON JIT sampling thread lock (0x10027DB8): 2LKREGMON management fields lock lock (0x100B1FB8): 2LKREGMON &amp;vm-&gt;managementData-&gt;notificationMonitor lock (0x100B2010): 2LKREGMON Thread public flags mutex lock (0x100B2068): 2LKREGMON JIT-InterpreterProfilingMonitor lock (0x100B20C0): 2LKREGMON JIT-QueueSlotMonitor-0 lock (0x100B2118): 2LKREGMON JIT-QueueSlotMonitor-1 lock (0x100B2170): 2LKREGMON JIT-QueueSlotMonitor-2 lock (0x100B21C8): 2LKREGMON JIT-QueueSlotMonitor-3 lock (0x100B2220): 2LKREGMON JIT-QueueSlotMonitor-4 lock (0x100B2278): 2LKREGMON JIT-QueueSlotMonitor-5 lock (0x100B22D0): 2LKREGMON JIT-QueueSlotMonitor-6 lock (0x100B2328): 2LKREGMON JIT-QueueSlotMonitor-7 lock (0x100B2380): 2LKREGMON JIT-QueueSlotMonitor-8 lock (0x100B23D8): 2LKREGMON JIT-QueueSlotMonitor-9 lock (0x100B2430): 2LKREGMON JIT-QueueSlotMonitor-10 lock (0x100B2488): 2LKREGMON JIT-QueueSlotMonitor-11 lock (0x100B24E0): 2LKREGMON JIT-QueueSlotMonitor-12 lock (0x100B2538): 2LKREGMON JIT-QueueSlotMonitor-13 lock (0x100B2590): 2LKREGMON Thread public flags mutex lock (0x100B25E8): 2LKREGMON Thread public flags mutex lock (0x100B2640): 2LKREGMON Thread public flags mutex lock (0x100B2698): 2LKREGMON Thread public flags mutex lock (0x100B26F0): 2LKREGMON JVM_RawMonitor lock (0x100B2748): 2LKREGMON JVM_RawMonitor lock (0x100B27A0): 2LKREGMON JVM_RawMonitor lock (0x100B27F8): 2LKREGMON JVM_RawMonitor lock (0x100B2850): 2LKREGMON JVM_RawMonitor lock (0x100B28A8): 2LKREGMON JVM_RawMonitor lock (0x100B2900): 2LKREGMON JVM_RawMonitor lock (0x100B2958): 2LKREGMON JVM_RawMonitor lock (0x100B29B0): 2LKREGMON JVM_RawMonitor lock (0x100B2A08): 2LKREGMON JVM_RawMonitor lock (0x100B2A60): 2LKREGMON JVM_RawMonitor lock (0x100B2AB8): 2LKREGMON JVM_RawMonitor lock (0x100B2B10): 2LKREGMON JVM_RawMonitor lock (0x100B2B68): 2LKREGMON JVM_RawMonitor lock (0x100B2BC0): 2LKREGMON JVM_RawMonitor lock (0x100B2C18): 2LKREGMON JVM_RawMonitor lock (0x100B2C70): 2LKREGMON JVM_RawMonitor lock (0x100B2CC8): 2LKREGMON JVM_RawMonitor lock (0x100B2D20): 2LKREGMON JVM_RawMonitor lock (0x100B2D78): 2LKREGMON JVM_RawMonitor lock (0x100B2DD0): 2LKREGMON JVM_RawMonitor lock (0x100B2E28): 2LKREGMON JVM_RawMonitor lock (0x100B2E80): 2LKREGMON JVM_RawMonitor lock (0x100B2ED8): 2LKREGMON JVM_RawMonitor lock (0x100B2F30): 2LKREGMON JIT-QueueSlotMonitor-14 lock (0x100B2F88): 2LKREGMON JIT-QueueSlotMonitor-15 lock (0x100B2FE0): 2LKREGMON JIT-QueueSlotMonitor-16 lock (0x100B3038): 2LKREGMON JIT-QueueSlotMonitor-17 lock (0x100B3090): 2LKREGMON JIT-QueueSlotMonitor-18 lock (0x100B30E8): 2LKREGMON JIT-QueueSlotMonitor-19 lock (0x100B3140): 2LKREGMON JIT-QueueSlotMonitor-20 lock (0x100B3198): 2LKREGMON JIT-QueueSlotMonitor-21 lock (0x100B31F0): 2LKREGMON JIT-QueueSlotMonitor-22 lock (0x100B3248): 2LKREGMON JIT-QueueSlotMonitor-23 lock (0x100B32A0): 2LKREGMON JIT-QueueSlotMonitor-24 lock (0x100B32F8): 2LKREGMON JIT-QueueSlotMonitor-25 lock (0x100B3350): 2LKREGMON JIT-QueueSlotMonitor-26 lock (0x100B33A8): 2LKREGMON JIT-QueueSlotMonitor-27 lock (0x100B3400): 2LKREGMON JVM_RawMonitor lock (0x100B3458): 2LKREGMON JVM_RawMonitor lock (0x100B34B0): 2LKREGMON JVM_RawMonitor lock (0x100B3508): 2LKREGMON JVM_RawMonitor lock (0x100B3560): 2LKREGMON JVM_RawMonitor lock (0xDDE55D60): 2LKREGMON JVM_RawMonitor lock (0xDDE55DB8): 2LKREGMON JVM_RawMonitor lock (0xDDE55E10): 2LKREGMON JVM_RawMonitor lock (0xDDE55E68): 2LKREGMON JVM_RawMonitor lock (0xDDE55EC0): 2LKREGMON JVM_RawMonitor lock (0xDDE55F18): 2LKREGMON JVM_RawMonitor lock (0xDDE55F70): 2LKREGMON JVM_RawMonitor lock (0xDDE55FC8): 2LKREGMON JVM_RawMonitor lock (0xDDE56020): 2LKREGMON JVM_RawMonitor lock (0xDDE56078): 2LKREGMON JVM_RawMonitor lock (0xDDE560D0): 2LKREGMON JVM_RawMonitor lock (0xDDE56128): 2LKREGMON JVM_RawMonitor lock (0xDDE56180): 2LKREGMON JVM_RawMonitor lock (0xDDE561D8): 2LKREGMON JVM_RawMonitor lock (0xDDE56230): 2LKREGMON JVM_RawMonitor lock (0xDDE56288): 2LKREGMON JVM_RawMonitor lock (0xDDE562E0): 2LKREGMON JVM_RawMonitor lock (0xDDE56338): 2LKREGMON JVM_RawMonitor lock (0xDDE56390): 2LKREGMON JVM_RawMonitor lock (0xDDE563E8): 2LKREGMON JVM_RawMonitor lock (0xDDE56440): 2LKREGMON JVM_RawMonitor lock (0xDDE56498): 2LKREGMON JVM_RawMonitor lock (0xDDE564F0): 2LKREGMON JVM_RawMonitor lock (0xDDE56548): 2LKREGMON JVM_RawMonitor lock (0xDDE565A0): 2LKREGMON JVM_RawMonitor lock (0xDDE565F8): 2LKREGMON JVM_RawMonitor lock (0xDDE56650): 2LKREGMON JVM_RawMonitor lock (0xDDE566A8): 2LKREGMON JVM_RawMonitor lock (0xDDE56700): 2LKREGMON JVM_RawMonitor lock (0xDDE56758): 2LKREGMON JVM_RawMonitor lock (0xDDE567B0): 2LKREGMON JVM_RawMonitor lock (0xDDE56808): 2LKREGMON JVM_RawMonitor lock (0xDDE56860): 2LKREGMON JVM_RawMonitor lock (0xDDE568B8): 2LKREGMON JVM_RawMonitor lock (0xDDE56910): 2LKREGMON JVM_RawMonitor lock (0xDDE56968): 2LKREGMON JVM_RawMonitor lock (0xDDE569C0): 2LKREGMON JVM_RawMonitor lock (0xDDE56A18): 2LKREGMON JVM_RawMonitor lock (0xDDE56A70): 2LKREGMON JVM_RawMonitor lock (0xDDE56AC8): 2LKREGMON JVM_RawMonitor lock (0xDDE56B20): 2LKREGMON JVM_RawMonitor lock (0xDDE56B78): 2LKREGMON JVM_RawMonitor lock (0xDDE56BD0): 2LKREGMON JVM_RawMonitor lock (0xDDE56C28): 2LKREGMON JVM_RawMonitor lock (0xDDE56C80): 2LKREGMON JVM_RawMonitor lock (0xDDE56CD8): 2LKREGMON JVM_RawMonitor lock (0xDDE56D30): 2LKREGMON JVM_RawMonitor lock (0xDDE56D88): 2LKREGMON JVM_RawMonitor lock (0xDDE56DE0): 2LKREGMON JVM_RawMonitor lock (0xDDE56E38): 2LKREGMON JVM_RawMonitor lock (0xDDE56E90): 2LKREGMON JVM_RawMonitor lock (0xDDE56EE8): 2LKREGMON JVM_RawMonitor lock (0xDDE56F40): 2LKREGMON JVM_RawMonitor lock (0xDDE56F98): 2LKREGMON JVM_RawMonitor lock (0xDDE56FF0): 2LKREGMON JVM_RawMonitor lock (0xDDE57048): 2LKREGMON JVM_RawMonitor lock (0xDDE570A0): 2LKREGMON JVM_RawMonitor lock (0xDDE570F8): 2LKREGMON JVM_RawMonitor lock (0xDDE57150): 2LKREGMON JVM_RawMonitor lock (0xDDE571A8): 2LKREGMON JVM_RawMonitor lock (0xDDE57200): 2LKREGMON JVM_RawMonitor lock (0xDDE57258): 2LKREGMON JVM_RawMonitor lock (0xDDE572B0): 2LKREGMON JVM_RawMonitor lock (0xDDE57308): 2LKREGMON JVM_RawMonitor lock (0xDDE6CBC8): 2LKREGMON JVM_RawMonitor lock (0xDDE6CC20): 2LKREGMON JVM_RawMonitor lock (0xDDE6CC78): 2LKREGMON JVM_RawMonitor lock (0xDDE6CCD0): 2LKREGMON JVM_RawMonitor lock (0xDDE6CD28): 2LKREGMON JVM_RawMonitor lock (0xDDE6CD80): 2LKREGMON JVM_RawMonitor lock (0xDDE6CDD8): 2LKREGMON JVM_RawMonitor lock (0xDDE6CE30): 2LKREGMON JVM_RawMonitor lock (0xDDE6CE88): 2LKREGMON JVM_RawMonitor lock (0xDDE6CEE0): 2LKREGMON JVM_RawMonitor lock (0xDDE6CF38): 2LKREGMON JVM_RawMonitor lock (0xDDE6CF90): 2LKREGMON JVM_RawMonitor lock (0xDDE6CFE8): 2LKREGMON JVM_RawMonitor lock (0xDDE6D040): 2LKREGMON JVM_RawMonitor lock (0xDDE6D098): 2LKREGMON JVM_RawMonitor lock (0xDDE6D0F0): 2LKREGMON JVM_RawMonitor lock (0xDDE6D148): 2LKREGMON JVM_RawMonitor lock (0xDDE6D1A0): 2LKREGMON JVM_RawMonitor lock (0xDDE6D1F8): 2LKREGMON JVM_RawMonitor lock (0xDDE6D250): 2LKREGMON JVM_RawMonitor lock (0xDDE6D2A8): 2LKREGMON JVM_RawMonitor lock (0xDDE6D300): 2LKREGMON JVM_RawMonitor lock (0xDDE6D358): 2LKREGMON JVM_RawMonitor lock (0xDDE6D3B0): 2LKREGMON JVM_RawMonitor lock (0xDDE6D408): 2LKREGMON JVM_RawMonitor lock (0xDDE6D460): 2LKREGMON JVM_RawMonitor lock (0xDDE6D4B8): 2LKREGMON JVM_RawMonitor lock (0xDDE6D510): 2LKREGMON JVM_RawMonitor lock (0xDDE6D568): 2LKREGMON JVM_RawMonitor lock (0xDDE6D5C0): 2LKREGMON JVM_RawMonitor lock (0xDDE6D618): 2LKREGMON JVM_RawMonitor lock (0xDDE6D670): 2LKREGMON JVM_RawMonitor lock (0xDDE6D6C8): 2LKREGMON JVM_RawMonitor lock (0xDDE6D720): 2LKREGMON JIT-QueueSlotMonitor-153 lock (0xDDE6D778): 2LKREGMON Thread public flags mutex lock (0xDDE6D828): 2LKREGMON Thread public flags mutex lock (0xDDE6D8D8): 2LKREGMON &amp;(slaveData-&gt;monitor) lock (0xDDE6D930): 3LKNOTIFYQ Waiting to be notified: 3LKWAITNOTIFY &quot;Finalizer thread&quot; (0xDDCA6100) 2LKREGMON JIT-QueueSlotMonitor-159 lock (0xDDE6D988): 2LKREGMON JVM_RawMonitor lock (0xDDE6D9E0): 2LKREGMON Thread public flags mutex lock (0xDDE6DA38): 2LKREGMON JVM_RawMonitor lock (0xDDE6DA90): 2LKREGMON JVM_RawMonitor lock (0xDDE6DAE8): 2LKREGMON JVM_RawMonitor lock (0xDDE6DB40): 2LKREGMON Thread public flags mutex lock (0xDDE6DB98): 2LKREGMON JVM_RawMonitor lock (0xDDE6DBF0): 2LKREGMON JVM_RawMonitor lock (0xDDE6DC48): 2LKREGMON JVM_RawMonitor lock (0xDDE6DCA0): 2LKREGMON JVM_RawMonitor lock (0xDDE6DCF8): 2LKREGMON JVM_RawMonitor lock (0xDDE6DD50): 2LKREGMON JVM_RawMonitor lock (0xDDE6DDA8): 2LKREGMON JVM_RawMonitor lock (0xDDE6DE00): 2LKREGMON JVM_RawMonitor lock (0xDDE6DE58): 2LKREGMON JVM_RawMonitor lock (0xDDE6DEB0): 2LKREGMON JVM_RawMonitor lock (0xDDE6DF08): 2LKREGMON JVM_RawMonitor lock (0xDDE6DF60): 2LKREGMON JVM_RawMonitor lock (0xDDE6DFB8): 2LKREGMON JVM_RawMonitor lock (0xDDE6E010): 2LKREGMON JVM_RawMonitor lock (0xDDE6E068): 2LKREGMON JVM_RawMonitor lock (0xDDE6E0C0): 2LKREGMON JVM_RawMonitor lock (0xDDE6E118): 2LKREGMON JVM_RawMonitor lock (0xDDE6E170): 2LKREGMON JVM_RawMonitor lock (0x101CA9A0): 2LKREGMON JVM_RawMonitor lock (0x101CA9F8): 2LKREGMON JVM_RawMonitor lock (0x101CAA50): 2LKREGMON JVM_RawMonitor lock (0x101CAAA8): 2LKREGMON JVM_RawMonitor lock (0x101CAB00): 2LKREGMON JVM_RawMonitor lock (0x101CAB58): 2LKREGMON JVM_RawMonitor lock (0x101CABB0): 2LKREGMON JVM_RawMonitor lock (0x101CAC08): 2LKREGMON JVM_RawMonitor lock (0x101CAC60): 2LKREGMON JVM_RawMonitor lock (0x101CACB8): 2LKREGMON JIT-QueueSlotMonitor-59 lock (0x101CAD10): 2LKREGMON JVM_RawMonitor lock (0x101CAD68): 2LKREGMON JVM_RawMonitor lock (0x101CADC0): 2LKREGMON JVM_RawMonitor lock (0x101CAE18): 2LKREGMON JVM_RawMonitor lock (0x101CAE70): 2LKREGMON JVM_RawMonitor lock (0x101CAEC8): 2LKREGMON JVM_RawMonitor lock (0x101CAF20): 2LKREGMON JVM_RawMonitor lock (0x101CAF78): 2LKREGMON JVM_RawMonitor lock (0x101CAFD0): 2LKREGMON JVM_RawMonitor lock (0x101CB028): 2LKREGMON JVM_RawMonitor lock (0x101CB080): 2LKREGMON JVM_RawMonitor lock (0x101CB0D8): 2LKREGMON JVM_RawMonitor lock (0x101CB130): 2LKREGMON JVM_RawMonitor lock (0x101CB188): 2LKREGMON JVM_RawMonitor lock (0x101CB1E0): 2LKREGMON JVM_RawMonitor lock (0x101CB238): 2LKREGMON JVM_RawMonitor lock (0x101CB290): 2LKREGMON JVM_RawMonitor lock (0x101CB2E8): 2LKREGMON JIT-QueueSlotMonitor-154 lock (0x101CB340): 2LKREGMON JIT-QueueSlotMonitor-60 lock (0x101CB398): 2LKREGMON JVM_RawMonitor lock (0x101CB3F0): 2LKREGMON JVM_RawMonitor lock (0x101CB448): 2LKREGMON JVM_RawMonitor lock (0x101CB4A0): 2LKREGMON JVM_RawMonitor lock (0x101CB4F8): 2LKREGMON JVM_RawMonitor lock (0x101CB550): 2LKREGMON JVM_RawMonitor lock (0x101CB5A8): 2LKREGMON JVM_RawMonitor lock (0x101CB600): 2LKREGMON Thread public flags mutex lock (0x101CB658): 2LKREGMON JVM_RawMonitor lock (0x101CB6B0): 2LKREGMON JVM_RawMonitor lock (0x101CB708): 2LKREGMON JVM_RawMonitor lock (0x101CB760): 2LKREGMON JVM_RawMonitor lock (0x101CB7B8): 2LKREGMON JVM_RawMonitor lock (0x101CB810): 2LKREGMON JVM_RawMonitor lock (0x101CB868): 2LKREGMON JVM_RawMonitor lock (0x101CB8C0): 2LKREGMON JVM_RawMonitor lock (0x101CB918): 2LKREGMON JVM_RawMonitor lock (0x101CB970): 2LKREGMON JVM_RawMonitor lock (0x101CB9C8): 2LKREGMON JVM_RawMonitor lock (0x101CBA20): 2LKREGMON JVM_RawMonitor lock (0x101CBA78): 2LKREGMON JVM_RawMonitor lock (0x101CBAD0): 2LKREGMON JVM_RawMonitor lock (0x101CBB28): 2LKREGMON JVM_RawMonitor lock (0x101CBB80): 2LKREGMON JVM_RawMonitor lock (0x101CBBD8): 2LKREGMON JVM_RawMonitor lock (0x101CBC30): 2LKREGMON JVM_RawMonitor lock (0x101CBC88): 2LKREGMON JVM_RawMonitor lock (0x101CBCE0): 2LKREGMON JVM_RawMonitor lock (0x101CBD38): 2LKREGMON JVM_RawMonitor lock (0x101CBD90): 2LKREGMON JVM_RawMonitor lock (0x101CBDE8): 2LKREGMON JVM_RawMonitor lock (0x101CBE40): 2LKREGMON JVM_RawMonitor lock (0x101CBE98): 2LKREGMON JVM_RawMonitor lock (0x101CBEF0): 2LKREGMON JVM_RawMonitor lock (0x101CBF48): 2LKREGMON JVM_RawMonitor lock (0xDDC984A8): 2LKREGMON JIT-QueueSlotMonitor-184 lock (0xDDC98558): 2LKREGMON JVM_RawMonitor lock (0xDDC985B0): 2LKREGMON JVM_RawMonitor lock (0xDDC98608): 2LKREGMON JVM_RawMonitor lock (0xDDC98660): 2LKREGMON JVM_RawMonitor lock (0xDDC986B8): 2LKREGMON JVM_RawMonitor lock (0xDDC98710): 2LKREGMON JVM_RawMonitor lock (0xDDC98768): 2LKREGMON JIT-QueueSlotMonitor-61 lock (0xDDC987C0): 2LKREGMON Thread public flags mutex lock (0xDDC98818): 2LKREGMON JVM_RawMonitor lock (0xDDC98870): 2LKREGMON JVM_RawMonitor lock (0xDDC98920): 2LKREGMON JVM_RawMonitor lock (0xDDC98978): 2LKREGMON JVM_RawMonitor lock (0xDDC989D0): 2LKREGMON JIT-QueueSlotMonitor-58 lock (0xDDC98A28): 2LKREGMON JIT-QueueSlotMonitor-28 lock (0xDDC98A80): 2LKREGMON JIT-QueueSlotMonitor-29 lock (0xDDC98AD8): 2LKREGMON JIT-QueueSlotMonitor-30 lock (0xDDC98B30): 2LKREGMON JIT-QueueSlotMonitor-31 lock (0xDDC98B88): 2LKREGMON JIT-QueueSlotMonitor-32 lock (0xDDC98BE0): 2LKREGMON JIT-QueueSlotMonitor-33 lock (0xDDC98C38): 2LKREGMON JIT-QueueSlotMonitor-34 lock (0xDDC98C90): 2LKREGMON JIT-QueueSlotMonitor-35 lock (0xDDC98CE8): 2LKREGMON JIT-QueueSlotMonitor-36 lock (0xDDC98D40): 2LKREGMON JIT-QueueSlotMonitor-37 lock (0xDDC98D98): 2LKREGMON JIT-QueueSlotMonitor-38 lock (0xDDC98DF0): 2LKREGMON JIT-QueueSlotMonitor-39 lock (0xDDC98E48): 2LKREGMON JIT-QueueSlotMonitor-40 lock (0xDDC98EA0): 2LKREGMON JIT-QueueSlotMonitor-41 lock (0xDDC98EF8): 2LKREGMON JIT-QueueSlotMonitor-42 lock (0xDDC98F50): 2LKREGMON JIT-QueueSlotMonitor-43 lock (0xDDC98FA8): 2LKREGMON JIT-QueueSlotMonitor-44 lock (0xDDC99000): 2LKREGMON JIT-QueueSlotMonitor-45 lock (0xDDC99058): 2LKREGMON JIT-QueueSlotMonitor-46 lock (0xDDC990B0): 2LKREGMON JIT-QueueSlotMonitor-47 lock (0xDDC99108): 2LKREGMON JIT-QueueSlotMonitor-48 lock (0xDDC99160): 2LKREGMON JIT-QueueSlotMonitor-49 lock (0xDDC991B8): 2LKREGMON JIT-QueueSlotMonitor-50 lock (0xDDC99210): 2LKREGMON JIT-QueueSlotMonitor-57 lock (0xDDC99268): 2LKREGMON JIT-QueueSlotMonitor-56 lock (0xDDC99318): 2LKREGMON JIT-QueueSlotMonitor-55 lock (0xDDC99370): 2LKREGMON JIT-QueueSlotMonitor-54 lock (0xDDC993C8): 2LKREGMON JIT-QueueSlotMonitor-53 lock (0xDDC99420): 2LKREGMON JIT-QueueSlotMonitor-52 lock (0xDDC99478): 2LKREGMON JIT-QueueSlotMonitor-51 lock (0xDDC994D0): 2LKREGMON JVM_RawMonitor lock (0xDDC99630): 2LKREGMON Thread public flags mutex lock (0xDDC996E0): 2LKREGMON Thread public flags mutex lock (0xDDC99738): 2LKREGMON JIT-QueueSlotMonitor-155 lock (0xDDC997E8): 2LKREGMON JIT-QueueSlotMonitor-62 lock (0xDDC99840): 2LKREGMON JIT-QueueSlotMonitor-63 lock (0xDDC99898): 2LKREGMON JIT-QueueSlotMonitor-64 lock (0xDDC998F0): 2LKREGMON JIT-QueueSlotMonitor-65 lock (0xDDC99948): 2LKREGMON JIT-QueueSlotMonitor-66 lock (0xDDC999A0): 2LKREGMON JIT-QueueSlotMonitor-67 lock (0xDDC999F8): 2LKREGMON JIT-QueueSlotMonitor-68 lock (0xDDC99A50): 2LKREGMON JIT-QueueSlotMonitor-69 lock (0xDD9037C8): 2LKREGMON JIT-QueueSlotMonitor-70 lock (0xDD903820): 2LKREGMON JIT-QueueSlotMonitor-71 lock (0xDD903878): 2LKREGMON JIT-QueueSlotMonitor-72 lock (0xDD9038D0): 2LKREGMON JIT-QueueSlotMonitor-73 lock (0xDD903928): 2LKREGMON JIT-QueueSlotMonitor-74 lock (0xDD903980): 2LKREGMON JIT-QueueSlotMonitor-75 lock (0xDD9039D8): 2LKREGMON JIT-QueueSlotMonitor-76 lock (0xDD903A30): 2LKREGMON JIT-QueueSlotMonitor-77 lock (0xDD903A88): 2LKREGMON JIT-QueueSlotMonitor-78 lock (0xDD903AE0): 2LKREGMON JIT-QueueSlotMonitor-79 lock (0xDD903B38): 2LKREGMON JIT-QueueSlotMonitor-80 lock (0xDD903B90): 2LKREGMON JIT-QueueSlotMonitor-81 lock (0xDD903BE8): 2LKREGMON JIT-QueueSlotMonitor-82 lock (0xDD903C40): 2LKREGMON JIT-QueueSlotMonitor-83 lock (0xDD903C98): 2LKREGMON JIT-QueueSlotMonitor-84 lock (0xDD903CF0): 2LKREGMON JIT-QueueSlotMonitor-85 lock (0xDD903D48): 2LKREGMON JIT-QueueSlotMonitor-86 lock (0xDD903DA0): 2LKREGMON JIT-QueueSlotMonitor-87 lock (0xDD903DF8): 2LKREGMON JIT-QueueSlotMonitor-88 lock (0xDD903E50): 2LKREGMON JIT-QueueSlotMonitor-89 lock (0xDD903EA8): 2LKREGMON JIT-QueueSlotMonitor-90 lock (0xDD903F00): 2LKREGMON JIT-QueueSlotMonitor-91 lock (0xDD903F58): 2LKREGMON JIT-QueueSlotMonitor-92 lock (0xDD903FB0): 2LKREGMON JIT-QueueSlotMonitor-93 lock (0xDD904008): 2LKREGMON JIT-QueueSlotMonitor-94 lock (0xDD904060): 2LKREGMON JIT-QueueSlotMonitor-95 lock (0xDD9040B8): 2LKREGMON JIT-QueueSlotMonitor-96 lock (0xDD904110): 2LKREGMON JIT-QueueSlotMonitor-97 lock (0xDD904168): 2LKREGMON JIT-QueueSlotMonitor-98 lock (0xDD9041C0): 2LKREGMON JIT-QueueSlotMonitor-99 lock (0xDD904218): 2LKREGMON JIT-QueueSlotMonitor-100 lock (0xDD904270): 2LKREGMON JIT-QueueSlotMonitor-101 lock (0xDD9042C8): 2LKREGMON JIT-QueueSlotMonitor-102 lock (0xDD904320): 2LKREGMON JIT-QueueSlotMonitor-103 lock (0xDD904378): 2LKREGMON JIT-QueueSlotMonitor-104 lock (0xDD9043D0): 2LKREGMON JIT-QueueSlotMonitor-105 lock (0xDD904428): 2LKREGMON JIT-QueueSlotMonitor-106 lock (0xDD904480): 2LKREGMON JIT-QueueSlotMonitor-107 lock (0xDD9044D8): 2LKREGMON JIT-QueueSlotMonitor-108 lock (0xDD904530): 2LKREGMON JIT-QueueSlotMonitor-109 lock (0xDD904588): 2LKREGMON JIT-QueueSlotMonitor-110 lock (0xDD9045E0): 2LKREGMON JIT-QueueSlotMonitor-111 lock (0xDD904638): 2LKREGMON JIT-QueueSlotMonitor-112 lock (0xDD904690): 2LKREGMON JIT-QueueSlotMonitor-113 lock (0xDD9046E8): 2LKREGMON JIT-QueueSlotMonitor-114 lock (0xDD904740): 2LKREGMON JIT-QueueSlotMonitor-115 lock (0xDD904798): 2LKREGMON JIT-QueueSlotMonitor-116 lock (0xDD9047F0): 2LKREGMON JIT-QueueSlotMonitor-117 lock (0xDD904848): 2LKREGMON JIT-QueueSlotMonitor-118 lock (0xDD9048A0): 2LKREGMON JIT-QueueSlotMonitor-119 lock (0xDD9048F8): 2LKREGMON JIT-QueueSlotMonitor-120 lock (0xDD904950): 2LKREGMON JIT-QueueSlotMonitor-121 lock (0xDD9049A8): 2LKREGMON JIT-QueueSlotMonitor-122 lock (0xDD904A00): 2LKREGMON JIT-QueueSlotMonitor-123 lock (0xDD904A58): 2LKREGMON JIT-QueueSlotMonitor-124 lock (0xDD904AB0): 2LKREGMON JIT-QueueSlotMonitor-125 lock (0xDD904B08): 2LKREGMON JIT-QueueSlotMonitor-126 lock (0xDD904B60): 2LKREGMON JIT-QueueSlotMonitor-127 lock (0xDD904BB8): 2LKREGMON JIT-QueueSlotMonitor-128 lock (0xDD904C10): 2LKREGMON JIT-QueueSlotMonitor-129 lock (0xDD904C68): 2LKREGMON JIT-QueueSlotMonitor-130 lock (0xDD904CC0): 2LKREGMON JIT-QueueSlotMonitor-131 lock (0xDD904D18): 2LKREGMON JIT-QueueSlotMonitor-132 lock (0xDD904D70): 2LKREGMON JIT-QueueSlotMonitor-133 lock (0xDD9245C0): 2LKREGMON JIT-QueueSlotMonitor-134 lock (0xDD924618): 2LKREGMON JIT-QueueSlotMonitor-135 lock (0xDD924670): 2LKREGMON JIT-QueueSlotMonitor-136 lock (0xDD9246C8): 2LKREGMON JIT-QueueSlotMonitor-137 lock (0xDD924720): 2LKREGMON JIT-QueueSlotMonitor-138 lock (0xDD924778): 2LKREGMON JIT-QueueSlotMonitor-139 lock (0xDD9247D0): 2LKREGMON JIT-QueueSlotMonitor-140 lock (0xDD924828): 2LKREGMON JIT-QueueSlotMonitor-141 lock (0xDD924880): 2LKREGMON JIT-QueueSlotMonitor-142 lock (0xDD9248D8): 2LKREGMON JIT-QueueSlotMonitor-143 lock (0xDD924930): 2LKREGMON JIT-QueueSlotMonitor-144 lock (0xDD924988): 2LKREGMON JIT-QueueSlotMonitor-145 lock (0xDD9249E0): 2LKREGMON JIT-QueueSlotMonitor-146 lock (0xDD924A38): 2LKREGMON JIT-QueueSlotMonitor-147 lock (0xDD924A90): 2LKREGMON JIT-QueueSlotMonitor-148 lock (0xDD924AE8): 2LKREGMON JIT-QueueSlotMonitor-149 lock (0xDD924B40): 2LKREGMON JIT-QueueSlotMonitor-187 lock (0xDD924BF0): 2LKREGMON JVM_RawMonitor lock (0xDD924C48): 2LKREGMON JIT-QueueSlotMonitor-157 lock (0xDD924CA0): 2LKREGMON JIT-QueueSlotMonitor-156 lock (0xDD924CF8): 2LKREGMON JVM_RawMonitor lock (0xDD924D50): 2LKREGMON JVM_RawMonitor lock (0xDD924DA8): 2LKREGMON JIT-QueueSlotMonitor-185 lock (0xDD924E58): 2LKREGMON JIT-QueueSlotMonitor-192 lock (0xDD924EB0): 2LKREGMON JIT-QueueSlotMonitor-196 lock (0xDD925010): 2LKREGMON JIT-QueueSlotMonitor-167 lock (0xDD925118): 2LKREGMON JIT-QueueSlotMonitor-181 lock (0xDD925170): 2LKREGMON Thread public flags mutex lock (0xDD9251C8): 2LKREGMON JIT-QueueSlotMonitor-197 lock (0xDD925220): 2LKREGMON Thread public flags mutex lock (0xDD9252D0): 2LKREGMON JIT-QueueSlotMonitor-160 lock (0xDD925328): 2LKREGMON JIT-QueueSlotMonitor-161 lock (0xDD925380): 2LKREGMON JIT-QueueSlotMonitor-162 lock (0xDD9253D8): 2LKREGMON JIT-QueueSlotMonitor-163 lock (0xDD925430): 2LKREGMON JIT-QueueSlotMonitor-164 lock (0xDD925488): 2LKREGMON JIT-QueueSlotMonitor-165 lock (0xDD9254E0): 2LKREGMON JIT-QueueSlotMonitor-166 lock (0xDD925538): 2LKREGMON JIT-QueueSlotMonitor-168 lock (0xDD925590): 2LKREGMON JIT-QueueSlotMonitor-169 lock (0xDD9255E8): 2LKREGMON JIT-QueueSlotMonitor-170 lock (0xDD925640): 2LKREGMON JIT-QueueSlotMonitor-171 lock (0xDD925698): 2LKREGMON JIT-QueueSlotMonitor-172 lock (0xDD9256F0): 2LKREGMON JIT-QueueSlotMonitor-173 lock (0xDD925748): 2LKREGMON JIT-QueueSlotMonitor-174 lock (0xDD9257A0): 2LKREGMON JIT-QueueSlotMonitor-175 lock (0xDD9257F8): 2LKREGMON JIT-QueueSlotMonitor-176 lock (0xDD925850): 2LKREGMON JIT-QueueSlotMonitor-177 lock (0xDD9258A8): 2LKREGMON JIT-QueueSlotMonitor-178 lock (0xDD925900): 2LKREGMON JIT-QueueSlotMonitor-179 lock (0xDD925958): 2LKREGMON JIT-QueueSlotMonitor-180 lock (0xDD9259B0): 2LKREGMON JIT-QueueSlotMonitor-188 lock (0xDD925A08): 2LKREGMON JIT-QueueSlotMonitor-189 lock (0xDD925A60): 2LKREGMON JIT-QueueSlotMonitor-190 lock (0xDD925B10): 2LKREGMON JIT-QueueSlotMonitor-191 lock (0xDD925B68): 2LKREGMON JIT-QueueSlotMonitor-186 lock (0x108EF238): 2LKREGMON JIT-QueueSlotMonitor-193 lock (0x108EF340): 2LKREGMON JIT-QueueSlotMonitor-194 lock (0x108EF398): 2LKREGMON JIT-QueueSlotMonitor-195 lock (0x108EF3F0): 2LKREGMON JIT-QueueSlotMonitor-183 lock (0x108EF448): 2LKREGMON JIT-QueueSlotMonitor-182 lock (0x108EF4A0): 2LKREGMON JVM_RawMonitor lock (0x108EF4F8): 2LKREGMON JIT-QueueSlotMonitor-158 lock (0x108EF550): 2LKREGMON JIT-QueueSlotMonitor-152 lock (0x108EF708): 2LKREGMON JIT-QueueSlotMonitor-151 lock (0x108EF760): 2LKREGMON JVM_RawMonitor lock (0x108EF7B8): 2LKREGMON JIT-QueueSlotMonitor-150 lock (0x108EF810): 2LKREGMON JIT-QueueSlotMonitor-198 lock (0x108EF8C0): 2LKREGMON JIT-QueueSlotMonitor-199 lock (0x108EF918): 2LKREGMON JIT-QueueSlotMonitor-200 lock (0x108EF970): 2LKREGMON JIT-QueueSlotMonitor-201 lock (0x108EF9C8): 2LKREGMON JIT-QueueSlotMonitor-202 lock (0x108EFA20): 2LKREGMON JIT-QueueSlotMonitor-203 lock (0x108EFA78): 2LKREGMON JIT-QueueSlotMonitor-204 lock (0x108EFAD0): 2LKREGMON JIT-QueueSlotMonitor-205 lock (0x108EFB28): 2LKREGMON JIT-QueueSlotMonitor-206 lock (0x108EFB80): 2LKREGMON JIT-QueueSlotMonitor-207 lock (0x108EFBD8): 2LKREGMON JIT-QueueSlotMonitor-208 lock (0x108EFC30): 2LKREGMON JIT-QueueSlotMonitor-209 lock (0x108EFC88): 2LKREGMON JIT-QueueSlotMonitor-210 lock (0x108EFCE0): 2LKREGMON JIT-QueueSlotMonitor-211 lock (0x108EFD38): 2LKREGMON JIT-QueueSlotMonitor-212 lock (0x108EFD90): 2LKREGMON JIT-QueueSlotMonitor-213 lock (0x108EFDE8): 2LKREGMON JIT-QueueSlotMonitor-214 lock (0x108EFE40): 2LKREGMON JIT-QueueSlotMonitor-215 lock (0x108EFE98): 2LKREGMON JIT-QueueSlotMonitor-216 lock (0x108EFEF0): 2LKREGMON JIT-QueueSlotMonitor-217 lock (0x108EFF48): 2LKREGMON JIT-QueueSlotMonitor-218 lock (0x108EFFA0): 2LKREGMON JIT-QueueSlotMonitor-219 lock (0x108EFFF8): 2LKREGMON JIT-QueueSlotMonitor-220 lock (0x108F0050): 2LKREGMON JIT-QueueSlotMonitor-221 lock (0x108F00A8): 2LKREGMON JIT-QueueSlotMonitor-222 lock (0x108F0100): 2LKREGMON JIT-QueueSlotMonitor-223 lock (0x108F0158): 2LKREGMON JIT-QueueSlotMonitor-224 lock (0x108F01B0): 2LKREGMON JIT-QueueSlotMonitor-225 lock (0x108F0208): 2LKREGMON JIT-QueueSlotMonitor-226 lock (0x108F0260): 2LKREGMON JIT-QueueSlotMonitor-227 lock (0x108F02B8): 2LKREGMON JIT-QueueSlotMonitor-228 lock (0x108F0310): 2LKREGMON JIT-QueueSlotMonitor-229 lock (0x108F0368): 2LKREGMON JIT-QueueSlotMonitor-230 lock (0x108F03C0): 2LKREGMON JIT-QueueSlotMonitor-231 lock (0x108F0418): 2LKREGMON JIT-QueueSlotMonitor-232 lock (0x108F0470): 2LKREGMON JIT-QueueSlotMonitor-233 lock (0x108F04C8): 2LKREGMON JIT-QueueSlotMonitor-234 lock (0x108F0520): 2LKREGMON JIT-QueueSlotMonitor-235 lock (0x108F0578): 2LKREGMON JIT-QueueSlotMonitor-236 lock (0x108F05D0): 2LKREGMON JIT-QueueSlotMonitor-237 lock (0x108F0628): 2LKREGMON JIT-QueueSlotMonitor-238 lock (0x108F0680): 2LKREGMON JIT-QueueSlotMonitor-239 lock (0x108F06D8): 2LKREGMON JIT-QueueSlotMonitor-240 lock (0x108F0730): 2LKREGMON JIT-QueueSlotMonitor-241 lock (0x108F0788): 2LKREGMON JIT-QueueSlotMonitor-242 lock (0x108F07E0): 2LKREGMON JIT-QueueSlotMonitor-243 lock (0x10A7F020): 2LKREGMON JIT-QueueSlotMonitor-244 lock (0x10A7F078): 2LKREGMON JIT-QueueSlotMonitor-245 lock (0x10A7F0D0): 2LKREGMON JIT-QueueSlotMonitor-246 lock (0x10A7F128): 2LKREGMON JIT-QueueSlotMonitor-247 lock (0x10A7F180): 2LKREGMON JIT-QueueSlotMonitor-248 lock (0x10A7F1D8): 2LKREGMON JIT-QueueSlotMonitor-249 lock (0x10A7F230): 2LKREGMON JIT-QueueSlotMonitor-250 lock (0x10A7F288): 2LKREGMON JIT-QueueSlotMonitor-251 lock (0x10A7F2E0): 2LKREGMON JIT-QueueSlotMonitor-252 lock (0x10A7F338): 2LKREGMON JIT-QueueSlotMonitor-253 lock (0x10A7F390): 2LKREGMON JIT-QueueSlotMonitor-254 lock (0x10A7F3E8): 2LKREGMON JIT-QueueSlotMonitor-255 lock (0x10A7F440): 2LKREGMON JIT-QueueSlotMonitor-256 lock (0x10A7F498): 2LKREGMON JIT-QueueSlotMonitor-257 lock (0x10A7F4F0): 2LKREGMON JIT-QueueSlotMonitor-258 lock (0x10A7F548): 2LKREGMON JIT-QueueSlotMonitor-259 lock (0x10A7F5A0): 2LKREGMON JIT-QueueSlotMonitor-260 lock (0x10A7F5F8): 2LKREGMON JIT-QueueSlotMonitor-261 lock (0x10A7F650): 2LKREGMON JIT-QueueSlotMonitor-262 lock (0x10A7F6A8): 2LKREGMON JIT-QueueSlotMonitor-263 lock (0x10A7F700): 2LKREGMON JIT-QueueSlotMonitor-264 lock (0x10A7F758): 2LKREGMON JIT-QueueSlotMonitor-265 lock (0x10A7F7B0): 2LKREGMON JIT-QueueSlotMonitor-266 lock (0x10A7F808): 2LKREGMON JIT-QueueSlotMonitor-267 lock (0x10A7F860): 2LKREGMON JIT-QueueSlotMonitor-268 lock (0x10A7F8B8): 2LKREGMON JIT-QueueSlotMonitor-269 lock (0x10A7F910): 2LKREGMON JIT-QueueSlotMonitor-270 lock (0x10A7F968): 2LKREGMON JIT-QueueSlotMonitor-271 lock (0x10A7F9C0): 2LKREGMON JIT-QueueSlotMonitor-272 lock (0x10A7FA18): 2LKREGMON JIT-QueueSlotMonitor-273 lock (0x10A7FA70): 2LKREGMON JIT-QueueSlotMonitor-274 lock (0x10A7FAC8): 2LKREGMON JIT-QueueSlotMonitor-275 lock (0x10A7FB20): 2LKREGMON JIT-QueueSlotMonitor-276 lock (0x10A7FB78): 2LKREGMON JIT-QueueSlotMonitor-277 lock (0x10A7FBD0): 2LKREGMON JIT-QueueSlotMonitor-278 lock (0x10A7FC28): 2LKREGMON JIT-QueueSlotMonitor-279 lock (0x10A7FC80): 2LKREGMON JIT-QueueSlotMonitor-280 lock (0x10A7FCD8): 2LKREGMON JIT-QueueSlotMonitor-281 lock (0x10A7FD30): 2LKREGMON JIT-QueueSlotMonitor-282 lock (0x10A7FD88): 2LKREGMON JIT-QueueSlotMonitor-283 lock (0x10A7FDE0): 2LKREGMON JIT-QueueSlotMonitor-284 lock (0x10A7FE38): 2LKREGMON JIT-QueueSlotMonitor-285 lock (0x10A7FE90): 2LKREGMON JIT-QueueSlotMonitor-286 lock (0x10A7FEE8): 2LKREGMON JIT-QueueSlotMonitor-287 lock (0x10A7FF40): 2LKREGMON JIT-QueueSlotMonitor-288 lock (0x10A7FF98): 2LKREGMON JIT-QueueSlotMonitor-289 lock (0x10A7FFF0): 2LKREGMON JIT-QueueSlotMonitor-290 lock (0x10A80048): 2LKREGMON JIT-QueueSlotMonitor-291 lock (0x10A800A0): 2LKREGMON JIT-QueueSlotMonitor-292 lock (0x10A800F8): 2LKREGMON JIT-QueueSlotMonitor-293 lock (0x10A80150): 2LKREGMON JIT-QueueSlotMonitor-294 lock (0x10A801A8): 2LKREGMON JIT-QueueSlotMonitor-295 lock (0x10A80200): 2LKREGMON JIT-QueueSlotMonitor-296 lock (0x10A80258): 2LKREGMON JIT-QueueSlotMonitor-297 lock (0x10A802B0): 2LKREGMON JIT-QueueSlotMonitor-298 lock (0x10A80308): 2LKREGMON JIT-QueueSlotMonitor-299 lock (0x10A80360): 2LKREGMON JIT-QueueSlotMonitor-300 lock (0x10A803B8): 2LKREGMON JIT-QueueSlotMonitor-301 lock (0x10A80410): 2LKREGMON JIT-QueueSlotMonitor-302 lock (0x10A80468): 2LKREGMON JIT-QueueSlotMonitor-303 lock (0x10A804C0): 2LKREGMON JIT-QueueSlotMonitor-304 lock (0x10A80518): 2LKREGMON JIT-QueueSlotMonitor-305 lock (0x10A80570): 2LKREGMON JIT-QueueSlotMonitor-306 lock (0x10A805C8): 2LKREGMON JIT-QueueSlotMonitor-307 lock (0x10C445D0): 2LKREGMON JIT-QueueSlotMonitor-308 lock (0x10C44628): 2LKREGMON JIT-QueueSlotMonitor-309 lock (0x10C44680): 2LKREGMON JIT-QueueSlotMonitor-310 lock (0x10C446D8): 2LKREGMON JIT-QueueSlotMonitor-311 lock (0x10C44730): 2LKREGMON JIT-QueueSlotMonitor-312 lock (0x10C44788): 2LKREGMON JIT-QueueSlotMonitor-313 lock (0x10C447E0): 2LKREGMON JIT-QueueSlotMonitor-314 lock (0x10C44838): 2LKREGMON JIT-QueueSlotMonitor-315 lock (0x10C44890): 2LKREGMON JIT-QueueSlotMonitor-316 lock (0x10C448E8): 2LKREGMON JIT-QueueSlotMonitor-317 lock (0x10C44940): 2LKREGMON JIT-QueueSlotMonitor-318 lock (0x10C44998): 2LKREGMON JIT-QueueSlotMonitor-319 lock (0x10C449F0): 2LKREGMON JIT-QueueSlotMonitor-320 lock (0x10C44A48): 2LKREGMON JIT-QueueSlotMonitor-321 lock (0x10C44AA0): 2LKREGMON JIT-QueueSlotMonitor-322 lock (0x10C44AF8): 2LKREGMON JIT-QueueSlotMonitor-323 lock (0x10C44B50): 2LKREGMON JIT-QueueSlotMonitor-324 lock (0x10C44BA8): 2LKREGMON JIT-QueueSlotMonitor-325 lock (0x10C44C00): 2LKREGMON JIT-QueueSlotMonitor-326 lock (0x10C44C58): 2LKREGMON JIT-QueueSlotMonitor-327 lock (0x10C44CB0): 2LKREGMON JIT-QueueSlotMonitor-328 lock (0x10C44D08): 2LKREGMON JIT-QueueSlotMonitor-329 lock (0x10C44D60): 2LKREGMON JIT-QueueSlotMonitor-330 lock (0x10C44DB8): 2LKREGMON JIT-QueueSlotMonitor-331 lock (0x10C44E10): 2LKREGMON JIT-QueueSlotMonitor-332 lock (0x10C44E68): 2LKREGMON JIT-QueueSlotMonitor-333 lock (0x10C44EC0): 2LKREGMON JIT-QueueSlotMonitor-334 lock (0x10C44F18): 2LKREGMON JIT-QueueSlotMonitor-335 lock (0x10C44F70): 2LKREGMON JIT-QueueSlotMonitor-336 lock (0x10C44FC8): 2LKREGMON JIT-QueueSlotMonitor-337 lock (0x10C45020): 2LKREGMON JIT-QueueSlotMonitor-338 lock (0x10C45078): 2LKREGMON JIT-QueueSlotMonitor-339 lock (0x10C45128): 2LKREGMON JIT-QueueSlotMonitor-340 lock (0x10C45180): 2LKREGMON JIT-QueueSlotMonitor-341 lock (0x10C451D8): 2LKREGMON JIT-QueueSlotMonitor-342 lock (0x10C45230): 2LKREGMON JIT-QueueSlotMonitor-343 lock (0x10C45288): 2LKREGMON JIT-QueueSlotMonitor-344 lock (0x10C452E0): 2LKREGMON JIT-QueueSlotMonitor-345 lock (0x10C45338): 2LKREGMON JIT-QueueSlotMonitor-346 lock (0x10C45390): 2LKREGMON JIT-QueueSlotMonitor-347 lock (0x10C453E8): 2LKREGMON JIT-QueueSlotMonitor-348 lock (0x10C45440): 2LKREGMON JIT-QueueSlotMonitor-349 lock (0x10C45498): 2LKREGMON JIT-QueueSlotMonitor-350 lock (0x10C454F0): 2LKREGMON JIT-QueueSlotMonitor-351 lock (0x10C45548): 2LKREGMON JIT-QueueSlotMonitor-352 lock (0x10C455A0): 2LKREGMON JIT-QueueSlotMonitor-353 lock (0x10C455F8): 2LKREGMON JIT-QueueSlotMonitor-354 lock (0x10C45650): 2LKREGMON JIT-QueueSlotMonitor-355 lock (0x10C456A8): 2LKREGMON JIT-QueueSlotMonitor-356 lock (0x10C45700): 2LKREGMON JIT-QueueSlotMonitor-357 lock (0x10C45758): 2LKREGMON JIT-QueueSlotMonitor-373 lock (0x10C457B0): 2LKREGMON JIT-QueueSlotMonitor-372 lock (0x10C45808): 2LKREGMON JIT-QueueSlotMonitor-371 lock (0x10C45860): 2LKREGMON JIT-QueueSlotMonitor-367 lock (0x10C45910): 2LKREGMON JIT-QueueSlotMonitor-358 lock (0x10C45968): 2LKREGMON JIT-QueueSlotMonitor-359 lock (0x10C459C0): 2LKREGMON JIT-QueueSlotMonitor-360 lock (0x10C45A18): 2LKREGMON JIT-QueueSlotMonitor-361 lock (0x10C45A70): 2LKREGMON JIT-QueueSlotMonitor-362 lock (0x10C45AC8): 2LKREGMON JIT-QueueSlotMonitor-363 lock (0x10C45B20): 2LKREGMON JIT-QueueSlotMonitor-364 lock (0x10C45B78): 2LKREGMON JIT-QueueSlotMonitor-365 lock (0xDB391F90): 2LKREGMON JIT-QueueSlotMonitor-366 lock (0xDB391FE8): 2LKREGMON JIT-QueueSlotMonitor-368 lock (0xDB392040): 2LKREGMON JIT-QueueSlotMonitor-369 lock (0xDB392098): 2LKREGMON JIT-QueueSlotMonitor-370 lock (0xDB3920F0): 2LKREGMON JIT-QueueSlotMonitor-374 lock (0xDB392148): 2LKREGMON JIT-QueueSlotMonitor-375 lock (0xDB3921A0): 2LKREGMON JIT-QueueSlotMonitor-376 lock (0xDB3921F8): 2LKREGMON JIT-QueueSlotMonitor-377 lock (0xDB392250): 2LKREGMON JIT-QueueSlotMonitor-378 lock (0xDB3922A8): 2LKREGMON JIT-QueueSlotMonitor-379 lock (0xDB392300): 2LKREGMON JVM_RawMonitor lock (0xDB392358): 2LKREGMON JVM_RawMonitor lock (0xDB3923B0): 2LKREGMON JVM_RawMonitor lock (0xDB392408): 2LKREGMON JIT-QueueSlotMonitor-380 lock (0xDB392460): 2LKREGMON JIT-QueueSlotMonitor-381 lock (0xDB392510): 2LKREGMON JVM_RawMonitor lock (0xDB392568): 2LKREGMON JVM_RawMonitor lock (0xDB3925C0): 2LKREGMON JVM_RawMonitor lock (0xDB392618): 2LKREGMON JVM_RawMonitor lock (0xDB392670): 2LKREGMON JVM_RawMonitor lock (0xDB3926C8): 2LKREGMON JVM_RawMonitor lock (0xDB392720): 2LKREGMON JVM_RawMonitor lock (0xDB392778): 2LKREGMON JVM_RawMonitor lock (0xDB3927D0): 2LKREGMON JVM_RawMonitor lock (0xDB392828): 2LKREGMON JVM_RawMonitor lock (0xDB392880): 2LKREGMON JVM_RawMonitor lock (0xDB3928D8): 2LKREGMON JVM_RawMonitor lock (0xDB392930): 2LKREGMON JVM_RawMonitor lock (0xDB392988): 2LKREGMON JVM_RawMonitor lock (0xDB3929E0): 2LKREGMON JVM_RawMonitor lock (0xDB392A38): 2LKREGMON JVM_RawMonitor lock (0xDB392A90): 2LKREGMON JVM_RawMonitor lock (0xDB392AE8): 2LKREGMON JVM_RawMonitor lock (0xDB392B40): 2LKREGMON JVM_RawMonitor lock (0xDB392B98): 2LKREGMON JVM_RawMonitor lock (0xDB392BF0): 2LKREGMON JVM_RawMonitor lock (0xDB392C48): 2LKREGMON JVM_RawMonitor lock (0xDB392CA0): 2LKREGMON JVM_RawMonitor lock (0xDB392CF8): 2LKREGMON JVM_RawMonitor lock (0xDB392D50): 2LKREGMON JVM_RawMonitor lock (0xDB392DA8): 2LKREGMON JVM_RawMonitor lock (0xDB392E00): 2LKREGMON JVM_RawMonitor lock (0xDB392E58): 2LKREGMON JVM_RawMonitor lock (0xDB392EB0): 2LKREGMON JVM_RawMonitor lock (0xDB392F08): 2LKREGMON JVM_RawMonitor lock (0xDB392F60): 2LKREGMON JVM_RawMonitor lock (0xDB392FB8): 2LKREGMON JVM_RawMonitor lock (0xDB393010): 2LKREGMON JVM_RawMonitor lock (0xDB393068): 2LKREGMON JVM_RawMonitor lock (0xDB3930C0): 2LKREGMON JVM_RawMonitor lock (0xDB393118): 2LKREGMON JVM_RawMonitor lock (0xDB393170): 2LKREGMON JVM_RawMonitor lock (0xDB3931C8): 2LKREGMON JVM_RawMonitor lock (0xDB393220): 2LKREGMON JVM_RawMonitor lock (0xDB393278): 2LKREGMON JVM_RawMonitor lock (0xDB3932D0): 2LKREGMON JVM_RawMonitor lock (0xDB393328): 2LKREGMON JVM_RawMonitor lock (0xDB393380): 2LKREGMON JVM_RawMonitor lock (0xDB3933D8): 2LKREGMON JVM_RawMonitor lock (0xDB393430): 2LKREGMON JVM_RawMonitor lock (0xDB393488): 2LKREGMON JVM_RawMonitor lock (0xDB3934E0): 2LKREGMON JVM_RawMonitor lock (0xDB393538): 2LKREGMON JVM_RawMonitor lock (0x10CEE360): 2LKREGMON JVM_RawMonitor lock (0x10CEE3B8): 2LKREGMON JVM_RawMonitor lock (0x10CEE410): 2LKREGMON JVM_RawMonitor lock (0x10CEE468): 2LKREGMON JVM_RawMonitor lock (0x10CEE4C0): 2LKREGMON JVM_RawMonitor lock (0x10CEE518): 2LKREGMON JVM_RawMonitor lock (0x10CEE570): 2LKREGMON JVM_RawMonitor lock (0x10CEE5C8): 2LKREGMON JVM_RawMonitor lock (0x10CEE620): 2LKREGMON JVM_RawMonitor lock (0x10CEE678): 2LKREGMON JVM_RawMonitor lock (0x10CEE6D0): 2LKREGMON JVM_RawMonitor lock (0x10CEE728): 2LKREGMON JVM_RawMonitor lock (0x10CEE780): 2LKREGMON JVM_RawMonitor lock (0x10CEE7D8): 2LKREGMON JVM_RawMonitor lock (0x10CEE830): 2LKREGMON JVM_RawMonitor lock (0x10CEE888): 2LKREGMON JVM_RawMonitor lock (0x10CEE8E0): 2LKREGMON JVM_RawMonitor lock (0x10CEE938): 2LKREGMON JVM_RawMonitor lock (0x10CEE990): 2LKREGMON JVM_RawMonitor lock (0x10CEE9E8): 2LKREGMON JVM_RawMonitor lock (0x10CEEA40): 2LKREGMON JVM_RawMonitor lock (0x10CEEA98): 2LKREGMON JVM_RawMonitor lock (0x10CEEAF0): 2LKREGMON JVM_RawMonitor lock (0x10CEEB48): 2LKREGMON JVM_RawMonitor lock (0x10CEEBA0): 2LKREGMON JVM_RawMonitor lock (0x10CEEBF8): 2LKREGMON JVM_RawMonitor lock (0x10CEEC50): 2LKREGMON JVM_RawMonitor lock (0x10CEECA8): 2LKREGMON JVM_RawMonitor lock (0x10CEED00): 2LKREGMON JVM_RawMonitor lock (0x10CEED58): 2LKREGMON JVM_RawMonitor lock (0x10CEEDB0): 2LKREGMON JVM_RawMonitor lock (0x10CEEE08): 2LKREGMON JVM_RawMonitor lock (0x10CEEE60): 2LKREGMON JVM_RawMonitor lock (0x10CEEEB8): 2LKREGMON JVM_RawMonitor lock (0x10CEEF10): 2LKREGMON JVM_RawMonitor lock (0x10CEEF68): 2LKREGMON JVM_RawMonitor lock (0x10CEEFC0): 2LKREGMON JVM_RawMonitor lock (0x10CEF018): 2LKREGMON JVM_RawMonitor lock (0x10CEF070): 2LKREGMON JVM_RawMonitor lock (0x10CEF0C8): 2LKREGMON JVM_RawMonitor lock (0x10CEF120): 2LKREGMON JVM_RawMonitor lock (0x10CEF178): 2LKREGMON JVM_RawMonitor lock (0x10CEF1D0): 2LKREGMON JVM_RawMonitor lock (0x10CEF228): 2LKREGMON JVM_RawMonitor lock (0x10CEF280): 2LKREGMON JVM_RawMonitor lock (0x10CEF2D8): 2LKREGMON JVM_RawMonitor lock (0x10CEF330): 2LKREGMON JVM_RawMonitor lock (0x10CEF388): 2LKREGMON JVM_RawMonitor lock (0x10CEF3E0): 2LKREGMON JVM_RawMonitor lock (0x10CEF438): 2LKREGMON JVM_RawMonitor lock (0x10CEF490): 2LKREGMON JVM_RawMonitor lock (0x10CEF4E8): 2LKREGMON JVM_RawMonitor lock (0x10CEF540): 2LKREGMON JVM_RawMonitor lock (0x10CEF598): 2LKREGMON JVM_RawMonitor lock (0x10CEF5F0): 2LKREGMON JVM_RawMonitor lock (0x10CEF648): 2LKREGMON JVM_RawMonitor lock (0x10CEF6A0): 2LKREGMON JVM_RawMonitor lock (0x10CEF6F8): 2LKREGMON JVM_RawMonitor lock (0x10CEF750): 2LKREGMON Thread public flags mutex lock (0x10CEF800): 2LKREGMON Thread public flags mutex lock (0x10EEEB20): 2LKREGMON Thread public flags mutex lock (0x10EEEC80): 2LKREGMON JIT-CodeCacheMonitor-?? lock (0x10EEEDE0): 2LKREGMON Thread public flags mutex lock (0x10EEEE90): 2LKREGMON Thread public flags mutex lock (0x10EEEF40): 2LKREGMON Thread public flags mutex lock (0x10EEF150): 2LKREGMON Thread public flags mutex lock (0x10EEF318): 2LKREGMON JVM_RawMonitor lock (0x10EEF420): NULL NULL ------------------------------------------------------------------------ 0SECTION THREADS subcomponent dump routine NULL ================================= NULL 1XMCURTHDINFO Current Thread Details NULL ---------------------- NULL 1XMTHDINFO All Thread Details NULL ------------------ NULL 2XMFULLTHDDUMP Full thread dump J9 VM (J2RE 5.0 IBM J9 2.3 Linux ppc-32 build 20081126_26240_bHdSMr, native threads): 3XMTHREADINFO &quot;main&quot; (TID:0x10053900, sys_thread_t:0x10027E48, state:CW, native ID:0x00004FE8) prio=6 4XESTACKTRACE at java/io/UnixFileSystem.getBooleanAttributes0(Native Method) 4XESTACKTRACE at java/io/UnixFileSystem.getBooleanAttributes(UnixFileSystem.java:258(Compiled Code)) 4XESTACKTRACE at java/io/File.isDirectory(File.java:752(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/ide/filesystem/FileSystemStructureProvider.isRecursiveLink(FileSystemStructureProvider.java:63(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/ide/filesystem/FileSystemStructureProvider.getChildren(FileSystemStructureProvider.java:47(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/wizards/datatransfer/MinimizedFileSystemElement.populate(MinimizedFileSystemElement.java:76(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/wizards/datatransfer/MinimizedFileSystemElement.getFiles(MinimizedFileSystemElement.java:44(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1$13.getChildren(WizardFileSystemResourceImportPage1.java:665(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/model/BaseWorkbenchContentProvider.getElements(BaseWorkbenchContentProvider.java:73(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup.findAllSelectedListElements(ResourceTreeAndListGroup.java:411(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup.findAllSelectedListElements(ResourceTreeAndListGroup.java:424(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup.findAllSelectedListElements(ResourceTreeAndListGroup.java:424(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup.findAllSelectedListElements(ResourceTreeAndListGroup.java:424(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup.findAllSelectedListElements(ResourceTreeAndListGroup.java:424(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup.findAllSelectedListElements(ResourceTreeAndListGroup.java:424(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup.findAllSelectedListElements(ResourceTreeAndListGroup.java:424(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup.findAllSelectedListElements(ResourceTreeAndListGroup.java:424(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup.findAllSelectedListElements(ResourceTreeAndListGroup.java:424(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup.findAllSelectedListElements(ResourceTreeAndListGroup.java:424(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup.findAllSelectedListElements(ResourceTreeAndListGroup.java:424) 4XESTACKTRACE at org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup.getAllListItems(ResourceTreeAndListGroup.java:548) 4XESTACKTRACE at org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1.allItemsAreChecked(WizardFileSystemResourceImportPage1.java:1210) 4XESTACKTRACE at org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1.importResources(WizardFileSystemResourceImportPage1.java:833) 4XESTACKTRACE at org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1.finish(WizardFileSystemResourceImportPage1.java:646) 4XESTACKTRACE at org/eclipse/ui/wizards/datatransfer/FileSystemImportWizard.performFinish(FileSystemImportWizard.java:101) 4XESTACKTRACE at org/eclipse/jface/wizard/WizardDialog.finishPressed(WizardDialog.java:811) 4XESTACKTRACE at org/eclipse/jface/wizard/WizardDialog.buttonPressed(WizardDialog.java:430) 4XESTACKTRACE at org/eclipse/jface/dialogs/Dialog$2.widgetSelected(Dialog.java:624) 4XESTACKTRACE at org/eclipse/swt/widgets/TypedListener.handleEvent(TypedListener.java:234(Compiled Code)) 4XESTACKTRACE at org/eclipse/swt/widgets/EventTable.sendEvent(EventTable.java:84(Compiled Code)) 4XESTACKTRACE at org/eclipse/swt/widgets/Widget.sendEvent(Widget.java:1234(Compiled Code)) 4XESTACKTRACE at org/eclipse/swt/widgets/Display.runDeferredEvents(Display.java:3540(Compiled Code)) 4XESTACKTRACE at org/eclipse/swt/widgets/Display.readAndDispatch(Display.java:3159(Compiled Code)) 4XESTACKTRACE at org/eclipse/jface/window/Window.runEventLoop(Window.java:825) 4XESTACKTRACE at org/eclipse/jface/window/Window.open(Window.java:801) 4XESTACKTRACE at org/eclipse/ui/internal/handlers/WizardHandler$Import.executeHandler(WizardHandler.java:147) 4XESTACKTRACE at org/eclipse/ui/internal/handlers/WizardHandler.execute(WizardHandler.java:274) 4XESTACKTRACE at org/eclipse/ui/internal/handlers/HandlerProxy.execute(HandlerProxy.java:293) 4XESTACKTRACE at org/eclipse/core/commands/Command.executeWithChecks(Command.java:476) 4XESTACKTRACE at org/eclipse/core/commands/ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508) 4XESTACKTRACE at org/eclipse/ui/internal/handlers/HandlerService.executeCommand(HandlerService.java:169) 4XESTACKTRACE at org/eclipse/ui/internal/handlers/SlaveHandlerService.executeCommand(SlaveHandlerService.java:241) 4XESTACKTRACE at org/eclipse/ui/internal/actions/CommandAction.runWithEvent(CommandAction.java:157) 4XESTACKTRACE at org/eclipse/jface/action/ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:584) 4XESTACKTRACE at org/eclipse/jface/action/ActionContributionItem.access$2(ActionContributionItem.java:501) 4XESTACKTRACE at org/eclipse/jface/action/ActionContributionItem$5.handleEvent(ActionContributionItem.java:411) 4XESTACKTRACE at org/eclipse/swt/widgets/EventTable.sendEvent(EventTable.java:84(Compiled Code)) 4XESTACKTRACE at org/eclipse/swt/widgets/Widget.sendEvent(Widget.java:1234(Compiled Code)) 4XESTACKTRACE at org/eclipse/swt/widgets/Display.runDeferredEvents(Display.java:3540(Compiled Code)) 4XESTACKTRACE at org/eclipse/swt/widgets/Display.readAndDispatch(Display.java:3159(Compiled Code)) 4XESTACKTRACE at org/eclipse/ui/internal/Workbench.runEventLoop(Workbench.java:2624) 4XESTACKTRACE at org/eclipse/ui/internal/Workbench.runUI(Workbench.java:2588) 4XESTACKTRACE at org/eclipse/ui/internal/Workbench.access$4(Workbench.java:2422) 4XESTACKTRACE at org/eclipse/ui/internal/Workbench$7.run(Workbench.java:670) 4XESTACKTRACE at org/eclipse/core/databinding/observable/Realm.runWithDefault(Realm.java:332) 4XESTACKTRACE at org/eclipse/ui/internal/Workbench.createAndRunWorkbench(Workbench.java:663) 4XESTACKTRACE at org/eclipse/ui/PlatformUI.createAndRunWorkbench(PlatformUI.java:149) 4XESTACKTRACE at org/eclipse/ui/internal/ide/application/IDEApplication.start(IDEApplication.java:115) 4XESTACKTRACE at org/eclipse/equinox/internal/app/EclipseAppHandle.run(EclipseAppHandle.java:196) 4XESTACKTRACE at org/eclipse/core/runtime/internal/adaptor/EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110) 4XESTACKTRACE at org/eclipse/core/runtime/internal/adaptor/EclipseAppLauncher.start(EclipseAppLauncher.java:79) 4XESTACKTRACE at org/eclipse/core/runtime/adaptor/EclipseStarter.run(EclipseStarter.java:369) 4XESTACKTRACE at org/eclipse/core/runtime/adaptor/EclipseStarter.run(EclipseStarter.java:179) 4XESTACKTRACE at sun/reflect/NativeMethodAccessorImpl.invoke0(Native Method) 4XESTACKTRACE at sun/reflect/NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79) 4XESTACKTRACE at sun/reflect/DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 4XESTACKTRACE at java/lang/reflect/Method.invoke(Method.java:618) 4XESTACKTRACE at org/eclipse/equinox/launcher/Main.invokeFramework(Main.java:619) 4XESTACKTRACE at org/eclipse/equinox/launcher/Main.basicRun(Main.java:574) 4XESTACKTRACE at org/eclipse/equinox/launcher/Main.run(Main.java:1407) 4XESTACKTRACE at org/eclipse/equinox/launcher/Main.main(Main.java:1383) 3XMTHREADINFO &quot;JIT Compilation Thread&quot; (TID:0x10053D00, sys_thread_t:0x10028368, state:CW, native ID:0x00004FEA) prio=11 3XMTHREADINFO &quot;Signal Dispatcher&quot; (TID:0x10054100, sys_thread_t:0x10028888, state:R, native ID:0x00004FEC) prio=5 4XESTACKTRACE at com/ibm/misc/SignalDispatcher.waitForSignal(Native Method) 4XESTACKTRACE at com/ibm/misc/SignalDispatcher.run(SignalDispatcher.java:84) 3XMTHREADINFO &quot;Gc Slave Thread&quot; (TID:0x1019EE00, sys_thread_t:0xDE55A648, state:CW, native ID:0x00004FEF) prio=5 3XMTHREADINFO &quot;Gc Slave Thread&quot; (TID:0x1019F200, sys_thread_t:0xDE55A8D8, state:CW, native ID:0x00004FF0) prio=5 3XMTHREADINFO &quot;Gc Slave Thread&quot; (TID:0x1019F600, sys_thread_t:0xDE55AB68, state:CW, native ID:0x00004FF1) prio=5 3XMTHREADINFO &quot;Java indexing&quot; (TID:0xDDEDC300, sys_thread_t:0xDE55ADF8, state:CW, native ID:0x00005001) prio=4 4XESTACKTRACE at java/lang/Object.wait(Native Method) 4XESTACKTRACE at java/lang/Object.wait(Object.java:199) 4XESTACKTRACE at org/eclipse/jdt/internal/core/search/processing/JobManager.run(JobManager.java:381) 4XESTACKTRACE at java/lang/Thread.run(Thread.java:810) 3XMTHREADINFO &quot;Framework Event Dispatcher&quot; (TID:0xDDEDC700, sys_thread_t:0xDE55B088, state:CW, native ID:0x00004FF3) prio=5 4XESTACKTRACE at java/lang/Object.wait(Native Method) 4XESTACKTRACE at java/lang/Object.wait(Object.java:199(Compiled Code)) 4XESTACKTRACE at org/eclipse/osgi/framework/eventmgr/EventManager$EventThread.getNextEvent(EventManager.java:397(Compiled Code)) 4XESTACKTRACE at org/eclipse/osgi/framework/eventmgr/EventManager$EventThread.run(EventManager.java:333) 3XMTHREADINFO &quot;Start Level Event Dispatcher&quot; (TID:0xDDEDCB00, sys_thread_t:0xDDEF8598, state:CW, native ID:0x00004FF5) prio=5 4XESTACKTRACE at java/lang/Object.wait(Native Method) 4XESTACKTRACE at java/lang/Object.wait(Object.java:199(Compiled Code)) 4XESTACKTRACE at org/eclipse/osgi/framework/eventmgr/EventManager$EventThread.getNextEvent(EventManager.java:397(Compiled Code)) 4XESTACKTRACE at org/eclipse/osgi/framework/eventmgr/EventManager$EventThread.run(EventManager.java:333) 3XMTHREADINFO &quot;Bundle File Closer&quot; (TID:0xDDCA5D00, sys_thread_t:0xDDEF8828, state:CW, native ID:0x00004FF6) prio=5 4XESTACKTRACE at java/lang/Object.wait(Native Method) 4XESTACKTRACE at java/lang/Object.wait(Object.java:199(Compiled Code)) 4XESTACKTRACE at org/eclipse/osgi/framework/eventmgr/EventManager$EventThread.getNextEvent(EventManager.java:397(Compiled Code)) 4XESTACKTRACE at org/eclipse/osgi/framework/eventmgr/EventManager$EventThread.run(EventManager.java:333) 3XMTHREADINFO &quot;Finalizer thread&quot; (TID:0xDDCA6100, sys_thread_t:0xDDEF8AB8, state:CW, native ID:0x00004FF7) prio=5 3XMTHREADINFO &quot;Worker-JM&quot; (TID:0xDDCA6500, sys_thread_t:0xDDEF8D48, state:CW, native ID:0x00004FFB) prio=5 4XESTACKTRACE at java/lang/Object.wait(Native Method) 4XESTACKTRACE at java/lang/Object.wait(Object.java:231(Compiled Code)) 4XESTACKTRACE at org/eclipse/core/internal/jobs/InternalWorker.run(InternalWorker.java:58) 3XMTHREADINFO &quot;[Timer] - Main Queue Handler&quot; (TID:0x10361900, sys_thread_t:0xDDEF8FD8, state:CW, native ID:0x00004FFA) prio=5 4XESTACKTRACE at java/lang/Object.wait(Native Method) 4XESTACKTRACE at java/lang/Object.wait(Object.java:231(Compiled Code)) 4XESTACKTRACE at org/eclipse/equinox/internal/util/impl/tpt/timer/TimerImpl.run(TimerImpl.java:141) 4XESTACKTRACE at java/lang/Thread.run(Thread.java:810) 3XMTHREADINFO &quot;Worker-28&quot; (TID:0x10361D00, sys_thread_t:0x105AB3C0, state:CW, native ID:0x0000517E) prio=5 4XESTACKTRACE at java/lang/Object.wait(Native Method) 4XESTACKTRACE at java/lang/Object.wait(Object.java:231(Compiled Code)) 4XESTACKTRACE at org/eclipse/core/internal/jobs/WorkerPool.sleep(WorkerPool.java:180(Compiled Code)) 4XESTACKTRACE at org/eclipse/core/internal/jobs/WorkerPool.startJob(WorkerPool.java:217(Compiled Code)) 4XESTACKTRACE at org/eclipse/core/internal/jobs/Worker.run(Worker.java:50(Compiled Code)) 3XMTHREADINFO &quot;Provisioning Event Dispatcher&quot; (TID:0x10362100, sys_thread_t:0x105AB130, state:CW, native ID:0x00004FFD) prio=5 4XESTACKTRACE at java/lang/Object.wait(Native Method) 4XESTACKTRACE at java/lang/Object.wait(Object.java:199(Compiled Code)) 4XESTACKTRACE at org/eclipse/osgi/framework/eventmgr/EventManager$EventThread.getNextEvent(EventManager.java:397(Compiled Code)) 4XESTACKTRACE at org/eclipse/osgi/framework/eventmgr/EventManager$EventThread.run(EventManager.java:333) 3XMTHREADINFO &quot;org.eclipse.jdt.internal.ui.text.JavaReconciler&quot; (TID:0xDCB11A00, sys_thread_t:0x105ABE00, state:CW, native ID:0x000050B6) prio=1 4XESTACKTRACE at java/lang/Object.wait(Native Method) 4XESTACKTRACE at java/lang/Object.wait(Object.java:231(Compiled Code)) 4XESTACKTRACE at org/eclipse/jface/text/reconciler/AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:179) 3XMTHREADINFO &quot;Connect thread ottcvs1 session&quot; (TID:0xDCB11E00, sys_thread_t:0x105ABB70, state:R, native ID:0x0000503E) prio=6 4XESTACKTRACE at java/net/SocketInputStream.socketRead0(Native Method) 4XESTACKTRACE at java/net/SocketInputStream.read(SocketInputStream.java:155(Compiled Code)) 4XESTACKTRACE at com/jcraft/jsch/IO.getByte(IO.java:82(Compiled Code)) 4XESTACKTRACE at com/jcraft/jsch/Session.read(Session.java:808(Compiled Code)) 4XESTACKTRACE at com/jcraft/jsch/Session.run(Session.java:1193) 4XESTACKTRACE at java/lang/Thread.run(Thread.java:810) 3XMTHREADINFO &quot;[ThreadPool Manager] - Idle Thread&quot; (TID:0xDCB12200, sys_thread_t:0x105AB8E0, state:CW, native ID:0x00005000) prio=5 4XESTACKTRACE at java/lang/Object.wait(Native Method) 4XESTACKTRACE at java/lang/Object.wait(Object.java:199) 4XESTACKTRACE at org/eclipse/equinox/internal/util/impl/tpt/threadpool/Executor.run(Executor.java:106) 3XMTHREADINFO &quot;org.eclipse.jdt.internal.ui.text.JavaReconciler&quot; (TID:0xDB15BF00, sys_thread_t:0x1041ED40, state:CW, native ID:0x00005057) prio=1 4XESTACKTRACE at java/lang/Object.wait(Native Method) 4XESTACKTRACE at java/lang/Object.wait(Object.java:231(Compiled Code)) 4XESTACKTRACE at org/eclipse/jface/text/reconciler/AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:179) 3XMTHREADINFO &quot;org.eclipse.jdt.internal.ui.text.JavaReconciler&quot; (TID:0xDB15C700, sys_thread_t:0xDDEF9268, state:CW, native ID:0x00005120) prio=1 4XESTACKTRACE at java/lang/Object.wait(Native Method) 4XESTACKTRACE at java/lang/Object.wait(Object.java:231(Compiled Code)) 4XESTACKTRACE at org/eclipse/jface/text/reconciler/AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:179) 3XMTHREADINFO &quot;org.eclipse.jdt.internal.ui.text.JavaReconciler&quot; (TID:0xDAD2BB00, sys_thread_t:0x1041E820, state:CW, native ID:0x00005123) prio=1 4XESTACKTRACE at java/lang/Object.wait(Native Method) 4XESTACKTRACE at java/lang/Object.wait(Object.java:231(Compiled Code)) 4XESTACKTRACE at org/eclipse/jface/text/reconciler/AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:179) 3XMTHREADINFO &quot;Worker-24&quot; (TID:0xDAD2BF00, sys_thread_t:0x1041E070, state:CW, native ID:0x000050B8) prio=5 4XESTACKTRACE at java/lang/Object.wait(Native Method) 4XESTACKTRACE at java/lang/Object.wait(Object.java:231(Compiled Code)) 4XESTACKTRACE at org/eclipse/core/internal/jobs/WorkerPool.sleep(WorkerPool.java:180(Compiled Code)) 4XESTACKTRACE at org/eclipse/core/internal/jobs/WorkerPool.startJob(WorkerPool.java:217(Compiled Code)) 4XESTACKTRACE at org/eclipse/core/internal/jobs/Worker.run(Worker.java:50(Compiled Code)) 3XMTHREADINFO &quot;org.eclipse.jdt.internal.ui.text.JavaReconciler&quot; (TID:0xD9079500, sys_thread_t:0x1041E300, state:CW, native ID:0x00005126) prio=1 4XESTACKTRACE at java/lang/Object.wait(Native Method) 4XESTACKTRACE at java/lang/Object.wait(Object.java:231(Compiled Code)) 4XESTACKTRACE at org/eclipse/jface/text/reconciler/AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:179) NULL ------------------------------------------------------------------------ 0SECTION CLASSES subcomponent dump routine NULL ================================= 1CLTEXTCLLOS Classloader summaries 1CLTEXTCLLSS 12345678: 1=primordial,2=extension,3=shareable,4=middleware,5=system,6=trusted,7=application,8=delegating 2CLTEXTCLLOADER p---st-- Loader *System*(0xDFDCE0E0) 3CLNMBRLOADEDLIB Number of loaded libraries 5 3CLNMBRLOADEDCL Number of loaded classes 1484 2CLTEXTCLLOADER -x--st-- Loader sun/misc/Launcher$ExtClassLoader(0xDFDCEB20), Parent *none*(0x00000000) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 53 2CLTEXTCLLOADER -----ta- Loader sun/misc/Launcher$AppClassLoader(0xDFDF5CE8), Parent sun/misc/Launcher$ExtClassLoader(0xDFDCEB20) 3CLNMBRLOADEDLIB Number of loaded libraries 1 3CLNMBRLOADEDCL Number of loaded classes 5 2CLTEXTCLLOADER ----st-- Loader org/eclipse/equinox/launcher/Main$StartupClassLoader(0xDFF35C88), Parent *none*(0x00000000) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 415 2CLTEXTCLLOADER ----st-- Loader org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568), Parent *none*(0x00000000) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 0 2CLTEXTCLLOADER ----st-- Loader org/eclipse/osgi/framework/util/SecureAction$2(0xE05D1198), Parent *none*(0x00000000) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 0 2CLTEXTCLLOADER -----t-- Loader org/eclipse/core/runtime/internal/adaptor/ContextFinder(0xE0643408), Parent sun/misc/Launcher$AppClassLoader(0xDFDF5CE8) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 0 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A682F0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 14 2CLTEXTCLLOADER -----t-- Loader sun/reflect/DelegatingClassLoader(0xE0A5B9B0), Parent sun/misc/Launcher$AppClassLoader(0xDFDF5CE8) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 1 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE069C948), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 62 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06AE260), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 42 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06AFE50), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 27 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06C3E80), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 8 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06DBE38), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 1 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A47FB8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 23 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A49420), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 87 2CLTEXTCLLOADER ----st-- Loader sun/reflect/DelegatingClassLoader(0xE0A8BC48), Parent *none*(0x00000000) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 1 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0652EF0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 2 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06569C0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 44 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06945F0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 47 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06B21C0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 19 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE07136E0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 7 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE074EAA8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 6 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE09B2F10), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 25 2CLTEXTCLLOADER ----st-- Loader sun/reflect/DelegatingClassLoader(0xE09C81A0), Parent *none*(0x00000000) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 1 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE09CCE88), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 6 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE09D3720), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 62 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE09D6A78), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 161 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE09DD2C0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 8 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE09EB9B8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 36 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE09FE328), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 18 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A06B90), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 67 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A52620), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 27 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A562A0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 20 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A83518), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 21 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0ACCD18), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 23 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0AE7708), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 5 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0AFF5A8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 1 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0B27F88), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 10 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0B3CEF0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 2 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0B41A48), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 1726 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0B509E0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 7 3CLNMBRLOADEDCL Number of loaded classes 443 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0B518D8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 467 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0B8D978), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 4 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0BD2280), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 83 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0C59518), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 9 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0C68508), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 5 2CLTEXTCLLOADER ----st-- Loader sun/reflect/DelegatingClassLoader(0xE037E050), Parent *none*(0x00000000) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 1 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE03B8F60), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 23 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0428898), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 12 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0693F88), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 3 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06CD108), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 4 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0C01480), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 17 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0C44FE0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 332 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE04AFB38), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 325 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE04EC5C0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 1 3CLNMBRLOADEDCL Number of loaded classes 21 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE00C33C8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 44 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0CA9A60), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 4 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0CABC70), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 13 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0CBDD78), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 191 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0552AB0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 54 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0585B48), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 0 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06E1648), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 52 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE093FAB8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 32 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0052AA8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 1357 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE009ADB0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 1268 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0322D10), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 207 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE033B080), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 136 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE033D268), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 415 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0348C00), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 119 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0196170), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 39 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0EBE4B0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 5 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE071B678), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 50 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A0A578), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 122 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0278FD8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 99 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE02D4F10), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 6 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE031E7F8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 51 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0EB5AE8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 16 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0EC4BA8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 100 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0FBDBC0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 121 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0BA5798), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 4 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0BF9358), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 3 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0C541A8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 4 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0C84608), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 5 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0380CC0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 9 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0FC89F0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 298 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0FC9148), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 80 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0FC9B38), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 166 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE052FCA0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 3 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0531A90), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 12 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1619EE8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 10 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE161BD40), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 12 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE10032C8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 64 2CLTEXTCLLOADER -----t-- Loader sun/reflect/DelegatingClassLoader(0xE10103E8), Parent org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0C44FE0) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 1 2CLTEXTCLLOADER -----t-- Loader sun/reflect/DelegatingClassLoader(0xE0D81168), Parent org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0C44FE0) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 1 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE103DA68), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 3 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE17C8D90), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 163 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE17D2E88), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 197 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1B99440), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 13 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1B99DE8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 72 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1B9BF98), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 87 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE10A89F0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 10 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE17E92E8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 2 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1BDD0C8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 64 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1846908), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 48 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1847468), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 120 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE14C3CD0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 19 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE111DF50), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 16 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1E676C0), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 5 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1F29F40), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 234 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1F62638), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 98 2CLTEXTCLLOADER -----t-- Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1F62DB8), Parent org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 3CLNMBRLOADEDLIB Number of loaded libraries 0 3CLNMBRLOADEDCL Number of loaded classes 55 1CLTEXTCLLIB ClassLoader loaded libraries 2CLTEXTCLLIB Loader *System*(0xDFDCE0E0) 3CLTEXTLIB /bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/bin/java 3CLTEXTLIB /bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/bin/jclscar_23 3CLTEXTLIB /bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/bin/zip 3CLTEXTLIB /bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/bin/net 3CLTEXTLIB /bluebird/teamswt/swt-builddir/JDKs/PPC/ibm-java2-ppc-50/jre/bin/nio 2CLTEXTCLLIB Loader sun/misc/Launcher$AppClassLoader(0xDFDF5CE8) 3CLTEXTLIB /bluebird/teamswt/ggayed/36RC1/ppc/eclipse/plugins/org.eclipse.equinox.launcher.gtk.linux.ppc_1.1.0.v20100503/eclipse_1307.so 2CLTEXTCLLIB Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0B509E0) 3CLTEXTLIB /bluebird/teamswt/ggayed/36RC1/ppc/eclipse/configuration/org.eclipse.osgi/bundles/150/1/.cp/libswt-gtk-3647.so 3CLTEXTLIB /bluebird/teamswt/ggayed/36RC1/ppc/eclipse/configuration/org.eclipse.osgi/bundles/150/1/.cp/libswt-pi-gtk-3647.so 3CLTEXTLIB /bluebird/teamswt/ggayed/36RC1/ppc/eclipse/configuration/org.eclipse.osgi/bundles/150/1/.cp/libswt-atk-gtk-3647.so 3CLTEXTLIB /bluebird/teamswt/ggayed/36RC1/ppc/eclipse/configuration/org.eclipse.osgi/bundles/150/1/.cp/libcairo-swt.so 3CLTEXTLIB /bluebird/teamswt/ggayed/36RC1/ppc/eclipse/configuration/org.eclipse.osgi/bundles/150/1/.cp/libswt-cairo-gtk-3647.so 3CLTEXTLIB /bluebird/teamswt/ggayed/36RC1/ppc/eclipse/configuration/org.eclipse.osgi/bundles/150/1/.cp/libswt-xpcominit-gtk-3647.so 3CLTEXTLIB /bluebird/teamswt/ggayed/36RC1/ppc/eclipse/configuration/org.eclipse.osgi/bundles/150/1/.cp/libswt-gnome-gtk-3647.so 2CLTEXTCLLIB Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE04EC5C0) 3CLTEXTLIB /bluebird/teamswt/ggayed/36RC1/ppc/eclipse/configuration/org.eclipse.osgi/bundles/30/1/.cp/os/linux/ppc/liblocalfile_1_0_0.so 1CLTEXTCLLOD ClassLoader loaded classes 2CLTEXTCLLOAD Loader *System*(0xDFDCE0E0) 3CLTEXTCLASS sun/nio/cs/StreamDecoder$CharsetSD(0x1005ED58) 3CLTEXTCLASS java/lang/ClassCircularityError(0x1005F1B0) 3CLTEXTCLASS java/lang/ClassFormatError(0x1005F308) 3CLTEXTCLASS java/lang/UnsupportedClassVersionError(0x1005F460) 3CLTEXTCLASS java/lang/VerifyError(0x1005F5C0) 3CLTEXTCLASS [Ljava/lang/InterruptedException;(0x1005F6F0) 3CLTEXTCLASS java/util/regex/Pattern$NotCtype(0x1005F7B0) 3CLTEXTCLASS java/util/regex/Pattern$Sub(0x1005F998) 3CLTEXTCLASS java/util/regex/Pattern$Dollar(0x1005FB10) 3CLTEXTCLASS java/util/Observer(0x1005FC88) 3CLTEXTCLASS sun/nio/cs/StreamEncoder$CharsetSE(0x1005FDA0) 3CLTEXTCLASS org/w3c/dom/DOMImplementation(0x10060208) 3CLTEXTCLASS org/w3c/dom/ls/DOMImplementationLS(0x100602E8) 3CLTEXTCLASS org/apache/xerces/dom/CoreDOMImplementationImpl(0x10060420) 3CLTEXTCLASS org/apache/xerces/dom/DOMImplementationImpl(0x10060B18) 3CLTEXTCLASS sun/text/Normalizer(0x10060DD8) 3CLTEXTCLASS sun/text/Normalizer$Mode(0x10061648) 3CLTEXTCLASS sun/text/Normalizer$NFDMode(0x10061828) 3CLTEXTCLASS sun/text/Normalizer$NFKDMode(0x10061A40) 3CLTEXTCLASS sun/text/Normalizer$NFCMode(0x10061C58) 3CLTEXTCLASS sun/text/Normalizer$NFKCMode(0x10061E70) 3CLTEXTCLASS sun/text/Normalizer$FCDMode(0x10062088) 3CLTEXTCLASS sun/text/Normalizer$QuickCheckResult(0x100621E0) 3CLTEXTCLASS sun/text/NormalizerImpl(0x100622F0) 3CLTEXTCLASS sun/text/NormalizerImpl$1(0x10062DA8) 3CLTEXTCLASS sun/text/ICUBinary$Authenticate(0x10063008) 3CLTEXTCLASS sun/text/NormalizerDataReader(0x100630E0) 3CLTEXTCLASS sun/text/ICUBinary(0x100632A8) 3CLTEXTCLASS sun/text/Trie$DataManipulate(0x10063428) 3CLTEXTCLASS sun/text/NormalizerImpl$FCDTrieImpl(0x100634F0) 3CLTEXTCLASS sun/text/NormalizerImpl$NormTrieImpl(0x10063630) 3CLTEXTCLASS sun/text/Trie(0x10063798) 3CLTEXTCLASS sun/text/IntTrie(0x10063AE0) 3CLTEXTCLASS sun/text/CharTrie(0x10063E38) 3CLTEXTCLASS sun/nio/cs/Surrogate(0x10064100) 3CLTEXTCLASS [Ljava/lang/CharSequence;(0x100642A8) 3CLTEXTCLASS javax/crypto/CipherSpi(0xDA9A0220) 3CLTEXTCLASS javax/crypto/ShortBufferException(0xDA9A0690) 3CLTEXTCLASS java/util/jar/JarException(0xDA9A07F0) 3CLTEXTCLASS javax/crypto/spec/IvParameterSpec(0xDA9A0928) 3CLTEXTCLASS javax/crypto/d(0xDA9A0BD8) 3CLTEXTCLASS javax/crypto/d$0(0xDA9A1098) 3CLTEXTCLASS com/ibm/security/validator/ValidatorException(0xDA9A11E0) 3CLTEXTCLASS com/ibm/security/jgss/IBMJGSSProvider(0xDA9A14F8) 3CLTEXTCLASS com/ibm/security/jgss/d(0xDA9A17E8) 3CLTEXTCLASS org/ietf/jgss/GSSManager(0xDA9A1A00) 3CLTEXTCLASS com/ibm/security/jgss/GSSManagerImpl(0xDA9A1D28) 3CLTEXTCLASS org/ietf/jgss/Oid(0xDA9A2378) 3CLTEXTCLASS com/ibm/security/jgss/Debug(0xDA9A2628) 3CLTEXTCLASS com/ibm/security/jgss/a(0xDA9A2C10) 3CLTEXTCLASS com/ibm/security/cert/IBMCertPath(0xDA9A2E20) 3CLTEXTCLASS com/ibm/security/cert/IBMCertPath$1(0xDA9A30D0) 3CLTEXTCLASS javax/crypto/spec/DESedeKeySpec(0xDA9A3258) 3CLTEXTCLASS javax/crypto/SecretKeyFactory(0xDA9A3468) 3CLTEXTCLASS javax/crypto/SecretKeyFactorySpi(0xDA9A3840) 3CLTEXTCLASS javax/crypto/KeyGeneratorSpi(0xDA9A3970) 3CLTEXTCLASS javax/crypto/NullCipher(0xDA9A3B20) 3CLTEXTCLASS java/security/KeyPairGeneratorSpi(0xDA9A3CA0) 3CLTEXTCLASS java/security/KeyPairGenerator(0xDA9A3DF8) 3CLTEXTCLASS java/security/KeyPairGenerator$Delegate(0xDA9A4140) 3CLTEXTCLASS java/security/KeyPairGenerator$Delegate$Lock(0xDA9A4440) 3CLTEXTCLASS javax/crypto/KeyAgreement(0xDA9A4578) 3CLTEXTCLASS javax/crypto/spec/DHParameterSpec(0xDA9A4B30) 3CLTEXTCLASS sun/security/jca/JCAUtil(0xDA9A4CA8) 3CLTEXTCLASS javax/crypto/interfaces/DHKey(0xDA9A4E08) 3CLTEXTCLASS javax/crypto/interfaces/DHPublicKey(0xDA9A4EB8) 3CLTEXTCLASS javax/crypto/interfaces/DHPrivateKey(0xDA9A4F90) 3CLTEXTCLASS java/security/KeyPair(0xDA9A5088) 3CLTEXTCLASS javax/crypto/KeyAgreementSpi(0xDA9A51E8) 3CLTEXTCLASS javax/crypto/spec/DHPublicKeySpec(0xDA9A5350) 3CLTEXTCLASS com/ibm/security/x509/AlgIdRSA(0xDA9A54E0) 3CLTEXTCLASS java/security/interfaces/RSAPrivateCrtKey(0xDA9A56D8) 3CLTEXTCLASS javax/crypto/Mac(0xDA9A5858) 3CLTEXTCLASS javax/crypto/MacSpi(0xDA9A5EF0) 3CLTEXTCLASS org/xml/sax/SAXNotRecognizedException(0xDA9A6148) 3CLTEXTCLASS org/xml/sax/SAXNotSupportedException(0xDA9A62A8) 3CLTEXTCLASS org/apache/xerces/jaxp/validation/XSGrammarPoolContainer(0xDA9A63C8) 3CLTEXTCLASS org/apache/xerces/xni/XNIException(0xDA9A64C8) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLParseException(0xDA9A6688) 3CLTEXTCLASS java/net/SocketTimeoutException(0xDA9A69A0) 3CLTEXTCLASS sun/net/ConnectionResetException(0xDA9A6B00) 3CLTEXTCLASS java/util/ConcurrentModificationException(0xDA9A6C60) 3CLTEXTCLASS java/util/regex/Pattern$Add(0xDA9A6D98) 3CLTEXTCLASS [[S(0xDA9A6F68) 3CLTEXTCLASS java/lang/CharacterData00(0xDA9A7020) 3CLTEXTCLASS java/util/Collections$SingletonSet$1(0xDA9A7458) 3CLTEXTCLASS java/util/IdentityHashMap$KeySet(0xDA9A7620) 3CLTEXTCLASS java/util/IdentityHashMap$IdentityHashMapIterator(0xDA9A7888) 3CLTEXTCLASS java/util/IdentityHashMap$KeyIterator(0xDA9A7AF8) 3CLTEXTCLASS java/nio/charset/MalformedInputException(0xDA9A7C70) 3CLTEXTCLASS javax/crypto/Cipher(0xDB1D0D10) 3CLTEXTCLASS javax/crypto/Cipher$a_(0xDB1D1BA0) 3CLTEXTCLASS javax/crypto/b(0xDB1D1E90) 3CLTEXTCLASS javax/crypto/b$0(0xDB1D2820) 3CLTEXTCLASS java/security/cert/CRLException(0xDB1D2A68) 3CLTEXTCLASS java/security/cert/CRL(0xDB1D2BD8) 3CLTEXTCLASS java/security/cert/X509CRL(0xDB1D2D68) 3CLTEXTCLASS com/ibm/security/x509/X509CRLImpl(0xDB1D3148) 3CLTEXTCLASS com/ibm/security/pkcsutil/PKCSDerObject(0xDB1D3E38) 3CLTEXTCLASS com/ibm/security/pkcs7/Content(0xDB1D4350) 3CLTEXTCLASS com/ibm/security/pkcs7/SignedData(0xDB1D4620) 3CLTEXTCLASS com/ibm/security/util/Cache(0xDB1D55B0) 3CLTEXTCLASS com/ibm/security/util/MemoryCache(0xDB1D5798) 3CLTEXTCLASS java/security/spec/InvalidParameterSpecException(0xDB1D5AD8) 3CLTEXTCLASS com/ibm/security/x509/AlgIdDSA(0xDB1D5C48) 3CLTEXTCLASS com/ibm/security/validator/Validator(0xDB1D60E8) 3CLTEXTCLASS com/ibm/security/validator/SimpleValidator(0xDB1D6410) 3CLTEXTCLASS com/ibm/security/validator/EndEntityChecker(0xDB1D69B0) 3CLTEXTCLASS [Lcom/ibm/security/util/DerOutputStream;(0xDB1D6E10) 3CLTEXTCLASS javax/security/auth/x500/X500Principal(0xDB1D6ED0) 3CLTEXTCLASS [Ljava/security/PublicKey;(0xDB1D7298) 3CLTEXTCLASS javax/crypto/a(0xDB1D7358) 3CLTEXTCLASS javax/crypto/f(0xDB1D7910) 3CLTEXTCLASS java/util/jar/JarFile$1(0xDB1D7D20) 3CLTEXTCLASS javax/crypto/CryptoPolicyParser(0xDB1D7EC8) 3CLTEXTCLASS java/io/StreamTokenizer(0xDB1D8500) 3CLTEXTCLASS javax/crypto/CryptoPolicyParser$GrantEntry(0xDB1D89C8) 3CLTEXTCLASS [Ljavax/crypto/CryptoPermission;(0xDB1D8B50) 3CLTEXTCLASS java/net/InetAddress(0xDB1B22C8) 3CLTEXTCLASS sun/security/action/GetBooleanAction(0xDB1B2E10) 3CLTEXTCLASS java/net/InetAddress$Cache(0xDB1B2F50) 3CLTEXTCLASS sun/net/InetAddressCachePolicy(0xDB1B3148) 3CLTEXTCLASS sun/net/InetAddressCachePolicy$1(0xDB1B33E8) 3CLTEXTCLASS sun/security/action/GetIntegerAction(0xDB1B3508) 3CLTEXTCLASS sun/net/InetAddressCachePolicy$2(0xDB1B3670) 3CLTEXTCLASS java/net/InetAddress$Lock(0xDB1B3790) 3CLTEXTCLASS java/net/InetAddressImplFactory(0xDB1B3898) 3CLTEXTCLASS java/net/InetAddressImpl(0xDB1B39C0) 3CLTEXTCLASS java/net/Inet6AddressImpl(0xDB1B3AF0) 3CLTEXTCLASS sun/net/spi/nameservice/NameService(0xDB1B3DB0) 3CLTEXTCLASS java/net/InetAddress$2(0xDB1B3E90) 3CLTEXTCLASS java/net/Inet4Address(0xDB1B4018) 3CLTEXTCLASS java/net/Inet6Address(0xDB1B43C8) 3CLTEXTCLASS [Ljava/net/InetAddress;(0xDB1B4A48) 3CLTEXTCLASS [[[B(0xDB1B4B00) 3CLTEXTCLASS org/apache/xerces/dom/DOMMessageFormatter(0xDB1B4BB8) 3CLTEXTCLASS java/lang/ArithmeticException(0xDB1B4E98) 3CLTEXTCLASS java/lang/NegativeArraySizeException(0xDB1B4FF0) 3CLTEXTCLASS java/nio/charset/IllegalCharsetNameException(0xDB1B5148) 3CLTEXTCLASS java/nio/charset/UnsupportedCharsetException(0xDB1B52C8) 3CLTEXTCLASS java/nio/charset/CharacterCodingException(0xDB1B5448) 3CLTEXTCLASS java/util/regex/PatternSyntaxException(0xDB1B5590) 3CLTEXTCLASS java/nio/StringCharBuffer(0xDB1B58B0) 3CLTEXTCLASS java/util/regex/Pattern$SliceU(0xDB1B5C58) 3CLTEXTCLASS java/io/InterruptedIOException(0xDB1B5E28) 3CLTEXTCLASS java/util/regex/Pattern$BackRef(0xDB1B5F70) 3CLTEXTCLASS java/net/NoRouteToHostException(0xDB1B6118) 3CLTEXTCLASS java/net/SocketAddress(0xDB1B6250) 3CLTEXTCLASS java/net/InetSocketAddress(0xDB1B6350) 3CLTEXTCLASS java/net/Socket(0xDB1B6740) 3CLTEXTCLASS [Ljava/net/Socket;(0xDB1B7220) 3CLTEXTCLASS [Ljava/lang/Exception;(0xDB1B72D8) 3CLTEXTCLASS java/net/Socket$Lock(0xDB1B7390) 3CLTEXTCLASS java/net/SocketOptions(0xDB1B7488) 3CLTEXTCLASS java/net/SocketImpl(0xDB1B7600) 3CLTEXTCLASS java/net/PlainSocketImpl(0xDB1B7AA0) 3CLTEXTCLASS java/net/PlainSocketImpl$Lock(0xDB1B83B8) 3CLTEXTCLASS java/net/Inet4AddressImpl(0xDB1B84E0) 3CLTEXTCLASS java/net/InetAddress$CacheEntry(0xDB1B8768) 3CLTEXTCLASS java/net/Socket$2(0xDB1B8868) 3CLTEXTCLASS java/net/SocketInputStream(0xDB1B89D0) 3CLTEXTCLASS java/net/Socket$3(0xDB1B8CF0) 3CLTEXTCLASS java/net/SocketOutputStream(0xDB1B8E40) 3CLTEXTCLASS javax/crypto/SecretKey(0xDB1B90D8) 3CLTEXTCLASS javax/crypto/spec/SecretKeySpec(0xDB1B91A8) 3CLTEXTCLASS javax/crypto/CryptoPolicyParser$CryptoPermissionEntry(0xDB1B9490) 3CLTEXTCLASS javax/crypto/CryptoPermission(0xDB1B9650) 3CLTEXTCLASS javax/crypto/CryptoAllPermission(0xDB1B9A80) 3CLTEXTCLASS javax/crypto/CryptoAllPermissionCollection(0xDB1B9C98) 3CLTEXTCLASS javax/crypto/spec/RC2ParameterSpec(0xDB1B9EB8) 3CLTEXTCLASS javax/crypto/b$1(0xDB1BA108) 3CLTEXTCLASS org/apache/xml/serializer/ToStream(0xDB589F60) 3CLTEXTCLASS org/apache/xml/serializer/ToXMLStream(0xDB58B4D0) 3CLTEXTCLASS org/apache/xml/serializer/CharInfo(0xDB58BDF8) 3CLTEXTCLASS org/apache/xml/serializer/CharInfo$1(0xDB58C438) 3CLTEXTCLASS org/apache/xml/serializer/CharInfo$CharKey(0xDB58C588) 3CLTEXTCLASS org/xml/sax/helpers/AttributesImpl(0xDB58C728) 3CLTEXTCLASS org/apache/xml/serializer/AttributesImplSerializer(0xDB58CB90) 3CLTEXTCLASS org/apache/xml/serializer/ElemContext(0xDB58CE50) 3CLTEXTCLASS org/apache/xml/serializer/ToStream$BoolStack(0xDB58D030) 3CLTEXTCLASS org/apache/xml/serializer/EncodingInfo(0xDB58D268) 3CLTEXTCLASS org/apache/xml/serializer/NamespaceMappings(0xDB58D488) 3CLTEXTCLASS org/apache/xml/serializer/NamespaceMappings$MappingRecord(0xDB58D870) 3CLTEXTCLASS org/apache/xml/serializer/OutputPropertyUtils(0xDB58D980) 3CLTEXTCLASS org/apache/xml/serializer/Encodings(0xDB58DAC0) 3CLTEXTCLASS org/apache/xml/serializer/SecuritySupport12$6(0xDB58DF30) 3CLTEXTCLASS [Lorg/apache/xml/serializer/EncodingInfo;(0xDB58E078) 3CLTEXTCLASS org/apache/xml/serializer/WriterChain(0xDB58E118) 3CLTEXTCLASS org/apache/xml/serializer/WriterToUTF8Buffered(0xDB58E2A8) 3CLTEXTCLASS javax/xml/transform/stream/StreamSource(0xDB58E598) 3CLTEXTCLASS javax/xml/transform/sax/SAXSource(0xDB58E860) 3CLTEXTCLASS org/apache/xml/serializer/TreeWalker(0xDB58EAC0) 3CLTEXTCLASS org/xml/sax/helpers/LocatorImpl(0xDB58EF80) 3CLTEXTCLASS org/apache/xml/serializer/utils/DOM2Helper(0xDB58F1D0) 3CLTEXTCLASS org/apache/xml/serializer/utils/AttList(0xDB58F368) 3CLTEXTCLASS org/apache/xalan/transformer/SerializerSwitcher(0xDB58F650) 3CLTEXTCLASS org/apache/xml/serializer/WriterToASCI(0xDB58F890) 3CLTEXTCLASS org/apache/xerces/dom/DeferredProcessingInstructionImpl(0xDB58FC18) 3CLTEXTCLASS [Ljava/lang/reflect/InvocationTargetException;(0xDB58FF10) 3CLTEXTCLASS java/util/TreeMap$2(0xDB58FFF8) 3CLTEXTCLASS java/util/TreeMap$ValueIterator(0xDB5901F0) 3CLTEXTCLASS [[[C(0xDB590338) 3CLTEXTCLASS [[[[C(0xDB5903F0) 3CLTEXTCLASS [[[[[C(0xDB5904A8) 3CLTEXTCLASS java/lang/ProcessBuilder(0xDB590588) 3CLTEXTCLASS java/lang/ProcessImpl(0xDB590910) 3CLTEXTCLASS java/lang/ProcessEnvironment(0xDB590B08) 3CLTEXTCLASS java/lang/ProcessEnvironment$ExternalData(0xDB590EE0) 3CLTEXTCLASS java/lang/ProcessEnvironment$Variable(0xDB591060) 3CLTEXTCLASS java/lang/ProcessEnvironment$Value(0xDB591270) 3CLTEXTCLASS java/lang/ProcessEnvironment$StringEnvironment(0xDB5914B8) 3CLTEXTCLASS java/lang/SystemPipe(0xDB591890) 3CLTEXTCLASS java/lang/UNIXProcess$Gate(0xDB591A70) 3CLTEXTCLASS [[J(0xDB591C18) 3CLTEXTCLASS org/apache/xalan/transformer/TransformerIdentityImpl(0xDB581DD0) 3CLTEXTCLASS org/apache/xml/utils/UnImplNode(0xDB582AF0) 3CLTEXTCLASS org/apache/xml/utils/PrefixResolver(0xDB583620) 3CLTEXTCLASS javax/xml/transform/SourceLocator(0xDB583700) 3CLTEXTCLASS org/apache/xpath/ExpressionNode(0xDB5837E0) 3CLTEXTCLASS org/apache/xpath/WhitespaceStrippingElementMatcher(0xDB5838D8) 3CLTEXTCLASS org/apache/xalan/templates/XSLTVisitable(0xDB583998) 3CLTEXTCLASS org/apache/xalan/templates/ElemTemplateElement(0xDB583CF8) 3CLTEXTCLASS org/apache/xalan/templates/OutputProperties(0xDB584EB8) 3CLTEXTCLASS org/apache/xml/serializer/OutputPropertiesFactory(0xDB585818) 3CLTEXTCLASS org/apache/xml/serializer/OutputPropertiesFactory$1(0xDB585D68) 3CLTEXTCLASS javax/xml/transform/sax/SAXResult(0xDB585F18) 3CLTEXTCLASS javax/xml/transform/dom/DOMResult(0xDB586100) 3CLTEXTCLASS org/apache/xml/serializer/SerializerFactory(0xDB586368) 3CLTEXTCLASS org/apache/xml/serializer/ObjectFactory(0xDB5865A0) 3CLTEXTCLASS org/apache/xml/serializer/SecuritySupport(0xDB586AB0) 3CLTEXTCLASS org/apache/xml/serializer/SecuritySupport12(0xDB586D40) 3CLTEXTCLASS org/apache/xml/serializer/SecuritySupport12$1(0xDB587000) 3CLTEXTCLASS org/apache/xml/serializer/SecuritySupport12$2(0xDB587130) 3CLTEXTCLASS org/apache/xml/serializer/SecuritySupport12$3(0xDB587258) 3CLTEXTCLASS org/apache/xml/serializer/ExtendedContentHandler(0xDB587378) 3CLTEXTCLASS org/apache/xml/serializer/ExtendedLexicalHandler(0xDB587570) 3CLTEXTCLASS org/apache/xml/serializer/XSLOutputAttributes(0xDB587628) 3CLTEXTCLASS org/apache/xml/serializer/DOMSerializer(0xDB587808) 3CLTEXTCLASS org/apache/xml/serializer/Serializer(0xDB5878B8) 3CLTEXTCLASS org/apache/xml/serializer/SerializationHandler(0xDB587A00) 3CLTEXTCLASS org/apache/xml/serializer/SerializerConstants(0xDB587BA8) 3CLTEXTCLASS org/apache/xml/serializer/SerializerBase(0xDB587EB0) 3CLTEXTCLASS java/lang/UNIXProcess(0xDB588EC0) 3CLTEXTCLASS java/lang/UNIXProcess$1(0xDB589480) 3CLTEXTCLASS java/lang/ProcessInputStream(0xDB5897A0) 3CLTEXTCLASS java/lang/ProcessPipedInputStream(0xDB589A68) 3CLTEXTCLASS org/apache/xerces/dom/ElementNSImpl(0xDBC871A8) 3CLTEXTCLASS org/apache/xerces/dom/DeferredElementNSImpl(0xDBC879E8) 3CLTEXTCLASS org/apache/xerces/xs/XSObject(0xDBC87E10) 3CLTEXTCLASS org/apache/xerces/xs/XSTypeDefinition(0xDBC87EF0) 3CLTEXTCLASS org/apache/xerces/dom/AttrNSImpl(0xDBC881C8) 3CLTEXTCLASS org/apache/xerces/dom/DeferredAttrNSImpl(0xDBC888E0) 3CLTEXTCLASS [Ljava/util/Properties;(0xDBC88C88) 3CLTEXTCLASS javax/xml/transform/TransformerConfigurationException(0xDBC88D78) 3CLTEXTCLASS org/w3c/dom/Comment(0xDBC88F08) 3CLTEXTCLASS org/apache/xerces/dom/CommentImpl(0xDBC89130) 3CLTEXTCLASS org/apache/xerces/dom/DeferredCommentImpl(0xDBC89558) 3CLTEXTCLASS org/apache/xerces/dom/DeepNodeListImpl(0xDBC89848) 3CLTEXTCLASS [Lorg/w3c/dom/Element;(0xDBC89AD0) 3CLTEXTCLASS [Ljava/util/List;(0xDBC89B88) 3CLTEXTCLASS [Ljava/util/ListIterator;(0xDBC89C40) 3CLTEXTCLASS java/util/Collections$SingletonSet(0xDBC89D28) 3CLTEXTCLASS [Ljava/util/Map$Entry;(0xDBC89EE0) 3CLTEXTCLASS java/text/DontCareFieldPosition(0xDBC89FB0) 3CLTEXTCLASS java/text/Format$FieldDelegate(0xDBC8A108) 3CLTEXTCLASS java/text/DontCareFieldPosition$1(0xDBC8A1E8) 3CLTEXTCLASS java/text/NumberFormat$Field(0xDBC8A328) 3CLTEXTCLASS javax/xml/transform/TransformerFactoryConfigurationError(0xDBC8A5E8) 3CLTEXTCLASS java/text/StringCharacterIterator(0xDBC8A7C0) 3CLTEXTCLASS java/util/Hashtable$3(0xDBC8AB38) 3CLTEXTCLASS java/util/WeakHashMap$EntrySet(0xDBC8AD30) 3CLTEXTCLASS java/util/WeakHashMap$HashIterator(0xDBC8AFE0) 3CLTEXTCLASS java/util/WeakHashMap$EntryIterator(0xDBC8B230) 3CLTEXTCLASS java/lang/ref/Finalizer(0xDBC8B380) 3CLTEXTCLASS javax/xml/parsers/FactoryConfigurationError(0xDBC8B4E8) 3CLTEXTCLASS java/lang/Process(0xDBC8B6B0) 3CLTEXTCLASS org/w3c/dom/ProcessingInstruction(0xDBC8B7F8) 3CLTEXTCLASS org/apache/xerces/dom/ProcessingInstructionImpl(0xDBC8BA58) 3CLTEXTCLASS javax/xml/transform/dom/DOMSource(0xDBC8BD98) 3CLTEXTCLASS javax/xml/transform/stream/StreamResult(0xDBC8BF60) 3CLTEXTCLASS javax/xml/transform/TransformerFactory(0xDBC8C228) 3CLTEXTCLASS javax/xml/transform/FactoryFinder(0xDBC8C478) 3CLTEXTCLASS javax/xml/transform/SecuritySupport(0xDBC8C8E8) 3CLTEXTCLASS javax/xml/transform/SecuritySupport12(0xDBC8CB48) 3CLTEXTCLASS javax/xml/transform/SecuritySupport12$2(0xDBC8CDA8) 3CLTEXTCLASS javax/xml/transform/SecuritySupport12$1(0xDBC8CED8) 3CLTEXTCLASS javax/xml/transform/SecuritySupport12$5(0xDBC8D008) 3CLTEXTCLASS javax/xml/transform/SecuritySupport12$4(0xDBC8D150) 3CLTEXTCLASS javax/xml/transform/sax/SAXTransformerFactory(0xDBC8D2E0) 3CLTEXTCLASS org/apache/xalan/processor/TransformerFactoryImpl(0xDBC8D4E0) 3CLTEXTCLASS javax/xml/transform/ErrorListener(0xDBC8DC68) 3CLTEXTCLASS org/apache/xml/utils/DefaultErrorHandler(0xDBC8DD68) 3CLTEXTCLASS javax/xml/transform/Transformer(0xDBC8E150) 3CLTEXTCLASS org/xml/sax/ext/LexicalHandler(0xDBC8E330) 3CLTEXTCLASS javax/xml/transform/sax/TransformerHandler(0xDBC8E440) 3CLTEXTCLASS org/xml/sax/ext/DeclHandler(0xDBC8E538) 3CLTEXTCLASS java/io/PipedInputStream(0xDBC8E660) 3CLTEXTCLASS java/lang/UNIXProcess$2(0xDBC8EA10) 3CLTEXTCLASS java/lang/UNIXProcess$2$1(0xDBC8EC50) 3CLTEXTCLASS [[[J(0xDBC8EEE0) 3CLTEXTCLASS java/text/DecimalFormat(0xDCC56FA8) 3CLTEXTCLASS java/text/DecimalFormat$1(0xDCC58028) 3CLTEXTCLASS java/text/FieldPosition(0xDCC58170) 3CLTEXTCLASS [Ljava/text/FieldPosition;(0xDCC58480) 3CLTEXTCLASS java/text/ParsePosition(0xDCC58548) 3CLTEXTCLASS java/text/DigitList(0xDCC58770) 3CLTEXTCLASS java/lang/ArrayStoreException(0xDCC58C98) 3CLTEXTCLASS java/lang/AbstractMethodError(0xDCC58DF0) 3CLTEXTCLASS [Ljava/util/Map;(0xDCC58F28) 3CLTEXTCLASS [[C(0xDCC58FE0) 3CLTEXTCLASS java/util/TimerTask(0xDCC590A0) 3CLTEXTCLASS java/text/ParseException(0xDCC59258) 3CLTEXTCLASS java/io/StringReader(0xDCC593C0) 3CLTEXTCLASS [Ljava/lang/Throwable;(0xDCC59658) 3CLTEXTCLASS java/util/Collections$UnmodifiableSortedMap(0xDCC59758) 3CLTEXTCLASS java/util/regex/Pattern$Dot(0xDCC59978) 3CLTEXTCLASS java/util/regex/Pattern$BnM(0xDCC59B08) 3CLTEXTCLASS java/util/regex/Pattern$SliceS(0xDCC59D48) 3CLTEXTCLASS java/util/TreeMap$3(0xDCC59ED8) 3CLTEXTCLASS java/util/TreeMap$PrivateEntryIterator(0xDCC5A0E8) 3CLTEXTCLASS java/util/TreeMap$EntryIterator(0xDCC5A310) 3CLTEXTCLASS [Ljava/util/Set;(0xDCC5A460) 3CLTEXTCLASS java/util/TreeMap$KeyIterator(0xDCC5A528) 3CLTEXTCLASS sun/reflect/UnsafeQualifiedStaticIntegerFieldAccessorImpl(0xDCC5A6B8) 3CLTEXTCLASS sun/io/ByteToCharASCII(0xDCC5AA60) 3CLTEXTCLASS java/text/CharacterIterator(0xDCC5AC48) 3CLTEXTCLASS java/text/MessageFormat(0xDCC5AE10) 3CLTEXTCLASS [Ljava/text/Format;(0xDCC5B7A8) 3CLTEXTCLASS [Ljava/lang/StringBuffer;(0xDCC5B860) 3CLTEXTCLASS java/text/MessageFormat$Field(0xDCC5B920) 3CLTEXTCLASS java/net/UnknownHostException(0xDCC5BAD0) 3CLTEXTCLASS java/io/FileWriter(0xDCC5BC38) 3CLTEXTCLASS [Ljava/util/HashMap;(0xDCC5BDE0) 3CLTEXTCLASS org/w3c/dom/DOMException(0xDCC5BEC0) 3CLTEXTCLASS javax/xml/transform/Source(0xDCC5C020) 3CLTEXTCLASS javax/xml/transform/Result(0xDCC5C0E0) 3CLTEXTCLASS javax/xml/transform/TransformerException(0xDCC5C208) 3CLTEXTCLASS java/util/Observable(0xDCC5C678) 3CLTEXTCLASS java/util/Collections$SingletonMap(0xDCC5C8F0) 3CLTEXTCLASS java/text/ChoiceFormat(0xDCC5CBB0) 3CLTEXTCLASS java/io/ObjectStreamException(0xDCC5D110) 3CLTEXTCLASS java/io/InvalidObjectException(0xDCC5D268) 3CLTEXTCLASS java/util/SimpleTimeZone(0xDCC5D3E0) 3CLTEXTCLASS org/apache/xerces/util/URI(0xDCC5DD40) 3CLTEXTCLASS java/lang/IllegalThreadStateException(0xDCC5E738) 3CLTEXTCLASS java/util/WeakHashMap$KeySet(0xDCC5E8A0) 3CLTEXTCLASS java/util/WeakHashMap$KeyIterator(0xDCC5EB18) 3CLTEXTCLASS javax/crypto/e(0xDCC5EC70) 3CLTEXTCLASS org/apache/xerces/dom/DeferredAttrImpl(0x106CECD0) 3CLTEXTCLASS org/apache/xerces/dom/CharacterDataImpl(0x106CF190) 3CLTEXTCLASS org/w3c/dom/CharacterData(0x106CF698) 3CLTEXTCLASS org/w3c/dom/Text(0x106CF7C0) 3CLTEXTCLASS org/apache/xerces/dom/TextImpl(0x106CFA58) 3CLTEXTCLASS org/apache/xerces/dom/DeferredTextImpl(0x106D01F8) 3CLTEXTCLASS org/apache/xerces/dom/CharacterDataImpl$1(0x106D0520) 3CLTEXTCLASS org/apache/xerces/dom/NodeListCache(0x106D0640) 3CLTEXTCLASS java/io/SequenceInputStream(0x106D0780) 3CLTEXTCLASS java/util/zip/Deflater(0x106D0A30) 3CLTEXTCLASS sun/io/MalformedInputException(0x106D0F50) 3CLTEXTCLASS sun/io/UnknownCharacterException(0x106D10B0) 3CLTEXTCLASS java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet(0x106D1218) 3CLTEXTCLASS java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1(0x106D14B0) 3CLTEXTCLASS java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(0x106D16A0) 3CLTEXTCLASS sun/net/www/protocol/http/Handler(0x106D18A8) 3CLTEXTCLASS java/util/Collections$SynchronizedList(0x106D1A98) 3CLTEXTCLASS java/util/Collections$SynchronizedRandomAccessList(0x106D1E60) 3CLTEXTCLASS [Ljava/net/URI;(0x106D2030) 3CLTEXTCLASS java/util/Collections$UnmodifiableSortedSet(0x106D2130) 3CLTEXTCLASS java/util/ResourceBundleEnumeration(0x106D2360) 3CLTEXTCLASS [Ljava/lang/Runnable;(0x106D2550) 3CLTEXTCLASS java/text/AttributedCharacterIterator$Attribute(0x106D2610) 3CLTEXTCLASS java/text/Format$Field(0x106D28B0) 3CLTEXTCLASS java/text/DateFormat$Field(0x106D29A8) 3CLTEXTCLASS [Ljava/text/DateFormat$Field;(0x106D2D68) 3CLTEXTCLASS java/util/Calendar(0x106D2EE0) 3CLTEXTCLASS java/util/GregorianCalendar(0x106D3D50) 3CLTEXTCLASS java/text/NumberFormat(0x106D4A50) 3CLTEXTCLASS java/text/DecimalFormatSymbols(0x106D5250) 3CLTEXTCLASS java/util/Currency(0x106D58D0) 3CLTEXTCLASS java/util/Currency$1(0x106D5CF0) 3CLTEXTCLASS java/util/CurrencyData(0x106D5EF8) 3CLTEXTCLASS sun/reflect/UnsafeQualifiedStaticFieldAccessorImpl(0x106D6160) 3CLTEXTCLASS sun/reflect/UnsafeQualifiedStaticObjectFieldAccessorImpl(0x106D62F8) 3CLTEXTCLASS javax/crypto/spec/RC5ParameterSpec(0x106D6628) 3CLTEXTCLASS javax/crypto/a$0(0x106D68C8) 3CLTEXTCLASS org/w3c/dom/Document(0x106B6AC0) 3CLTEXTCLASS org/apache/xerces/dom/CoreDocumentImpl(0x106B7088) 3CLTEXTCLASS org/w3c/dom/traversal/DocumentTraversal(0x106B8820) 3CLTEXTCLASS org/w3c/dom/events/DocumentEvent(0x106B88E0) 3CLTEXTCLASS org/w3c/dom/ranges/DocumentRange(0x106B8990) 3CLTEXTCLASS org/apache/xerces/dom/DocumentImpl(0x106B8D98) 3CLTEXTCLASS org/apache/xerces/dom/DeferredNode(0x106B9AE8) 3CLTEXTCLASS org/apache/xerces/dom/DeferredDocumentImpl(0x106B9FF0) 3CLTEXTCLASS org/apache/xerces/dom/DeferredDocumentImpl$RefCount(0x106BB0A0) 3CLTEXTCLASS org/apache/xerces/xs/ItemPSVI(0x106BB180) 3CLTEXTCLASS org/apache/xerces/xs/AttributePSVI(0x106BB300) 3CLTEXTCLASS org/w3c/dom/Element(0x106BB3B8) 3CLTEXTCLASS org/w3c/dom/TypeInfo(0x106BB5B0) 3CLTEXTCLASS org/apache/xerces/dom/ElementImpl(0x106BB888) 3CLTEXTCLASS org/apache/xerces/dom/DeferredElementImpl(0x106BC4C8) 3CLTEXTCLASS org/w3c/dom/DocumentType(0x106BC880) 3CLTEXTCLASS org/apache/xerces/dom/DocumentTypeImpl(0x106BCB20) 3CLTEXTCLASS org/w3c/dom/NamedNodeMap(0x106BD0F0) 3CLTEXTCLASS org/apache/xerces/dom/NamedNodeMapImpl(0x106BD298) 3CLTEXTCLASS org/apache/xerces/dom/AttributeMap(0x106BD850) 3CLTEXTCLASS org/w3c/dom/Attr(0x106BDD10) 3CLTEXTCLASS org/apache/xerces/dom/AttrImpl(0x106BDFD8) 3CLTEXTCLASS javax/net/ssl/SSLSocketFactory(0x104A6140) 3CLTEXTCLASS [[Ljava/lang/Class;(0x104A64D0) 3CLTEXTCLASS java/net/SocketException(0x104A65B0) 3CLTEXTCLASS java/net/ConnectException(0x104A6708) 3CLTEXTCLASS java/net/Authenticator(0x104A6860) 3CLTEXTCLASS java/util/zip/GZIPInputStream(0x104A6B88) 3CLTEXTCLASS java/lang/AssertionError(0x104A6F68) 3CLTEXTCLASS java/net/HttpURLConnection(0x104A7260) 3CLTEXTCLASS javax/net/ssl/HttpsURLConnection(0x104A7978) 3CLTEXTCLASS [Ljava/lang/Comparable;(0x104A7DB8) 3CLTEXTCLASS java/util/zip/ZipInputStream(0x104A7EA0) 3CLTEXTCLASS java/util/jar/JarInputStream(0x104A84A0) 3CLTEXTCLASS java/util/zip/ZipOutputStream(0x104A8838) 3CLTEXTCLASS java/util/jar/JarOutputStream(0x104A8F20) 3CLTEXTCLASS java/lang/ExceptionInInitializerError(0x104A91A8) 3CLTEXTCLASS java/util/zip/CheckedInputStream(0x104A9360) 3CLTEXTCLASS java/util/Collections$UnmodifiableSet(0x104A9540) 3CLTEXTCLASS org/apache/xerces/jaxp/DocumentBuilderFactoryImpl(0x104A9740) 3CLTEXTCLASS javax/xml/parsers/DocumentBuilder(0x104A9BF0) 3CLTEXTCLASS org/apache/xerces/jaxp/DocumentBuilderImpl(0x104A9ED8) 3CLTEXTCLASS org/apache/xerces/parsers/AbstractDOMParser(0x104AA548) 3CLTEXTCLASS org/apache/xerces/parsers/DOMParser(0x104AB868) 3CLTEXTCLASS org/w3c/dom/Node(0x104ABE90) 3CLTEXTCLASS org/w3c/dom/NodeList(0x104AC1E8) 3CLTEXTCLASS org/w3c/dom/events/EventTarget(0x104AC2A8) 3CLTEXTCLASS org/apache/xerces/dom/NodeImpl(0x104AC4D0) 3CLTEXTCLASS org/apache/xerces/dom/ChildNode(0x104AD260) 3CLTEXTCLASS org/apache/xerces/dom/ParentNode(0x104AD6B8) 3CLTEXTCLASS java/security/cert/CertificateParsingException(0x104ADED0) 3CLTEXTCLASS java/text/SimpleDateFormat(0xDD52F638) 3CLTEXTCLASS [[[I(0xDD530130) 3CLTEXTCLASS [Ljava/lang/Integer;(0xDD5301E8) 3CLTEXTCLASS [Ljava/lang/Long;(0xDD5302A0) 3CLTEXTCLASS [Ljava/lang/Float;(0xDD530358) 3CLTEXTCLASS [Ljava/lang/Double;(0xDD530410) 3CLTEXTCLASS [Ljava/lang/Short;(0xDD5304C8) 3CLTEXTCLASS [Ljava/lang/Character;(0xDD530580) 3CLTEXTCLASS java/nio/HeapByteBuffer(0xDD530760) 3CLTEXTCLASS java/nio/Bits(0xDD530F68) 3CLTEXTCLASS java/nio/ByteOrder(0xDD531CC8) 3CLTEXTCLASS java/nio/CharBuffer(0xDD531F10) 3CLTEXTCLASS java/nio/HeapCharBuffer(0xDD5326B0) 3CLTEXTCLASS sun/nio/cs/ThreadLocalCoders(0xDD532B20) 3CLTEXTCLASS sun/nio/cs/ThreadLocalCoders$Cache(0xDD532CD8) 3CLTEXTCLASS sun/nio/cs/ThreadLocalCoders$1(0xDD532E88) 3CLTEXTCLASS sun/nio/cs/ThreadLocalCoders$2(0xDD533048) 3CLTEXTCLASS java/nio/charset/CharsetDecoder(0xDD533258) 3CLTEXTCLASS com/ibm/nio/cs/IBMCharsetDecoder(0xDD5338F0) 3CLTEXTCLASS com/ibm/nio/cs/UTF8_Decoder(0xDD533AE8) 3CLTEXTCLASS java/nio/charset/CodingErrorAction(0xDD534018) 3CLTEXTCLASS sun/nio/cs/Surrogate$Generator(0xDD534190) 3CLTEXTCLASS java/nio/charset/CoderResult(0xDD534350) 3CLTEXTCLASS java/nio/charset/CoderResult$Cache(0xDD534728) 3CLTEXTCLASS java/nio/charset/CoderResult$1(0xDD534918) 3CLTEXTCLASS java/nio/charset/CoderResult$2(0xDD534A28) 3CLTEXTCLASS [Ljava/lang/reflect/Method;(0xDD534B38) 3CLTEXTCLASS java/io/FileFilter(0xDD534BD8) 3CLTEXTCLASS java/util/zip/DeflaterOutputStream(0xDD534CB8) 3CLTEXTCLASS java/util/zip/GZIPOutputStream(0xDD534F98) 3CLTEXTCLASS java/net/ProtocolException(0xDD535268) 3CLTEXTCLASS java/net/URLEncoder$ResettableBufferedOutputStreamWriter(0xDD5353A0) 3CLTEXTCLASS java/nio/charset/CharsetEncoder(0xDD5356C8) 3CLTEXTCLASS com/ibm/nio/cs/IBMCharsetEncoder(0xDD535E38) 3CLTEXTCLASS com/ibm/nio/cs/UTF8_Encoder(0xDD536048) 3CLTEXTCLASS java/io/FileReader(0xDD5364A0) 3CLTEXTCLASS javax/crypto/BadPaddingException(0xDD536628) 3CLTEXTCLASS javax/crypto/IllegalBlockSizeException(0xDD536788) 3CLTEXTCLASS javax/crypto/NoSuchPaddingException(0xDD5368E8) 3CLTEXTCLASS java/security/spec/InvalidKeySpecException(0xDD536A48) 3CLTEXTCLASS java/security/InvalidAlgorithmParameterException(0xDD536BD8) 3CLTEXTCLASS javax/crypto/spec/PBEKeySpec(0xDD536D50) 3CLTEXTCLASS java/io/PipedOutputStream(0xDD537080) 3CLTEXTCLASS javax/net/ssl/TrustManager(0xDD537290) 3CLTEXTCLASS javax/net/ssl/X509TrustManager(0xDD537328) 3CLTEXTCLASS org/apache/xerces/impl/dtd/XMLDTDValidator(0x1047E140) 3CLTEXTCLASS org/apache/xerces/impl/dtd/XMLNSDTDValidator(0x1047F280) 3CLTEXTCLASS org/apache/xerces/impl/dv/ValidationContext(0x1047F5C0) 3CLTEXTCLASS org/apache/xerces/impl/validation/ValidationState(0x1047F780) 3CLTEXTCLASS org/apache/xerces/impl/dtd/XMLElementDecl(0x1047FBC0) 3CLTEXTCLASS org/apache/xerces/impl/dtd/XMLSimpleType(0x1047FD80) 3CLTEXTCLASS org/apache/xerces/impl/dtd/XMLAttributeDecl(0x1047FF78) 3CLTEXTCLASS org/apache/xerces/impl/dtd/DTDGrammarBucket(0x10480120) 3CLTEXTCLASS org/apache/xerces/impl/dv/DTDDVFactory(0x10480320) 3CLTEXTCLASS org/apache/xerces/impl/dv/ObjectFactory(0x104804E0) 3CLTEXTCLASS org/apache/xerces/impl/dv/SecuritySupport(0x10480968) 3CLTEXTCLASS org/apache/xerces/impl/dv/SecuritySupport$1(0x10480C78) 3CLTEXTCLASS org/apache/xerces/impl/dv/SecuritySupport$2(0x10480DA8) 3CLTEXTCLASS org/apache/xerces/impl/dv/SecuritySupport$3(0x10480ED0) 3CLTEXTCLASS org/apache/xerces/impl/dv/dtd/DTDDVFactoryImpl(0x10481010) 3CLTEXTCLASS org/apache/xerces/impl/dv/DatatypeValidator(0x10481278) 3CLTEXTCLASS org/apache/xerces/impl/dv/dtd/StringDatatypeValidator(0x10481340) 3CLTEXTCLASS org/apache/xerces/impl/dv/dtd/IDDatatypeValidator(0x10481440) 3CLTEXTCLASS org/apache/xerces/impl/dv/dtd/IDREFDatatypeValidator(0x104815A8) 3CLTEXTCLASS org/apache/xerces/impl/dv/dtd/ListDatatypeValidator(0x10481700) 3CLTEXTCLASS org/apache/xerces/impl/dv/dtd/ENTITYDatatypeValidator(0x10481880) 3CLTEXTCLASS org/apache/xerces/impl/dv/dtd/NOTATIONDatatypeValidator(0x104819B0) 3CLTEXTCLASS org/apache/xerces/impl/dv/dtd/NMTOKENDatatypeValidator(0x10481AB0) 3CLTEXTCLASS org/apache/xerces/impl/validation/ValidationManager(0x10481BF8) 3CLTEXTCLASS org/apache/xerces/impl/XMLVersionDetector(0x10481DF8) 3CLTEXTCLASS org/apache/xerces/util/MessageFormatter(0x10482150) 3CLTEXTCLASS org/apache/xerces/impl/msg/XMLMessageFormatter(0x10482218) 3CLTEXTCLASS org/xml/sax/AttributeList(0x104823F8) 3CLTEXTCLASS org/xml/sax/Attributes(0x104824F8) 3CLTEXTCLASS org/xml/sax/ext/Attributes2(0x10482660) 3CLTEXTCLASS org/apache/xerces/parsers/AbstractSAXParser$AttributesProxy(0x104827D0) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLErrorHandler(0x10482BD0) 3CLTEXTCLASS org/xml/sax/ext/EntityResolver2(0x10482CA0) 3CLTEXTCLASS org/apache/xerces/util/EntityResolverWrapper(0x10482D88) 3CLTEXTCLASS org/apache/xerces/impl/ExternalSubsetResolver(0x10482F88) 3CLTEXTCLASS org/apache/xerces/util/ErrorHandlerWrapper(0x10483068) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLInputSource(0x10483358) 3CLTEXTCLASS org/apache/xerces/util/SecurityManager(0x10483600) 3CLTEXTCLASS org/apache/xerces/impl/XMLEntityManager$RewindableInputStream(0x10483798) 3CLTEXTCLASS org/apache/xerces/impl/io/UTF8Reader(0x10483A60) 3CLTEXTCLASS org/apache/xerces/impl/XMLEntityManager$ScannedEntity(0x10483E10) 3CLTEXTCLASS org/apache/xerces/util/XMLChar(0x10484208) 3CLTEXTCLASS org/apache/xerces/util/XMLSymbols(0x10484548) 3CLTEXTCLASS org/apache/xerces/xni/grammars/XMLGrammarPool(0x10484798) 3CLTEXTCLASS org/xml/sax/Locator(0x10484898) 3CLTEXTCLASS org/xml/sax/ext/Locator2(0x10484978) 3CLTEXTCLASS org/apache/xerces/parsers/AbstractSAXParser$LocatorProxy(0x10484A70) 3CLTEXTCLASS org/apache/xerces/impl/Constants(0x10484C50) 3CLTEXTCLASS org/apache/xerces/impl/Constants$ArrayEnumeration(0x10485490) 3CLTEXTCLASS org/apache/xerces/impl/io/MalformedByteSequenceException(0x10485620) 3CLTEXTCLASS java/util/Hashtable$2(0x10485840) 3CLTEXTCLASS java/util/SortedSet(0x10485A10) 3CLTEXTCLASS java/util/TreeSet(0x10485B88) 3CLTEXTCLASS org/apache/xerces/impl/XMLDocumentFragmentScannerImpl(0x10476148) 3CLTEXTCLASS org/apache/xerces/impl/XMLDocumentScannerImpl(0x10476EF0) 3CLTEXTCLASS org/apache/xerces/impl/XMLNSDocumentScannerImpl(0x104777E8) 3CLTEXTCLASS org/apache/xerces/xni/XMLString(0x10477DF0) 3CLTEXTCLASS org/apache/xerces/util/XMLStringBuffer(0x10478008) 3CLTEXTCLASS org/apache/xerces/impl/XMLDocumentFragmentScannerImpl$ElementStack(0x10478250) 3CLTEXTCLASS org/apache/xerces/xni/QName(0x104783D0) 3CLTEXTCLASS [Lorg/apache/xerces/xni/QName;(0x10478630) 3CLTEXTCLASS org/apache/xerces/impl/XMLDocumentFragmentScannerImpl$Dispatcher(0x104786D0) 3CLTEXTCLASS org/apache/xerces/impl/XMLDocumentFragmentScannerImpl$FragmentContentDispatcher(0x104787A8) 3CLTEXTCLASS org/apache/xerces/impl/XMLDocumentScannerImpl$ContentDispatcher(0x10478B98) 3CLTEXTCLASS org/apache/xerces/impl/XMLNSDocumentScannerImpl$NSContentDispatcher(0x10478ED8) 3CLTEXTCLASS org/apache/xerces/xni/XMLAttributes(0x104790E8) 3CLTEXTCLASS org/apache/xerces/util/XMLAttributesImpl(0x10479428) 3CLTEXTCLASS org/apache/xerces/util/XMLAttributesImpl$Attribute(0x10479B58) 3CLTEXTCLASS [Lorg/apache/xerces/util/XMLAttributesImpl$Attribute;(0x10479C88) 3CLTEXTCLASS org/apache/xerces/impl/XMLEntityManager$Entity(0x10479D50) 3CLTEXTCLASS org/apache/xerces/impl/XMLEntityManager$ExternalEntity(0x10479EF8) 3CLTEXTCLASS org/apache/xerces/xni/NamespaceContext(0x1047A088) 3CLTEXTCLASS org/apache/xerces/util/NamespaceSupport(0x1047A250) 3CLTEXTCLASS org/apache/xerces/impl/XMLDocumentScannerImpl$XMLDeclDispatcher(0x1047A540) 3CLTEXTCLASS org/apache/xerces/impl/XMLDocumentScannerImpl$PrologDispatcher(0x1047A7F0) 3CLTEXTCLASS org/apache/xerces/impl/XMLDocumentScannerImpl$DTDDispatcher(0x1047AAC8) 3CLTEXTCLASS org/apache/xerces/impl/XMLDocumentScannerImpl$TrailingMiscDispatcher(0x1047ADF0) 3CLTEXTCLASS org/apache/xerces/xni/grammars/XMLGrammarDescription(0x1047B008) 3CLTEXTCLASS org/apache/xerces/xni/grammars/XMLDTDDescription(0x1047B0D8) 3CLTEXTCLASS org/apache/xerces/impl/dtd/XMLDTDDescription(0x1047B1F0) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLDTDSource(0x1047B480) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLDTDContentModelSource(0x1047B540) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLDTDScanner(0x1047B600) 3CLTEXTCLASS org/apache/xerces/impl/XMLDTDScannerImpl(0x1047B7C0) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLDTDFilter(0x1047C6E0) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLDTDContentModelFilter(0x1047C788) 3CLTEXTCLASS org/apache/xerces/impl/dtd/XMLDTDProcessor(0x1047C908) 3CLTEXTCLASS org/apache/xerces/impl/dtd/XMLEntityDecl(0x1047D648) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLDocumentFilter(0x1047D7A0) 3CLTEXTCLASS org/apache/xerces/impl/dtd/XMLDTDValidatorFilter(0x1047D848) 3CLTEXTCLASS org/apache/xerces/impl/RevalidationHandler(0x1047D920) 3CLTEXTCLASS java/util/TreeMap$1(0x1047DA30) 3CLTEXTCLASS java/text/Format(0x1047DC28) 3CLTEXTCLASS org/apache/xerces/jaxp/SAXParserImpl$JAXPSAXParser(0x103CEFF8) 3CLTEXTCLASS org/apache/xerces/parsers/ObjectFactory(0x103CF530) 3CLTEXTCLASS org/apache/xerces/parsers/SecuritySupport(0x103CF9B8) 3CLTEXTCLASS org/apache/xerces/parsers/SecuritySupport$1(0x103CFCC8) 3CLTEXTCLASS org/apache/xerces/parsers/SecuritySupport$2(0x103CFDF8) 3CLTEXTCLASS org/apache/xerces/parsers/SecuritySupport$3(0x103CFF20) 3CLTEXTCLASS org/apache/xerces/parsers/SecuritySupport$4(0x103D0058) 3CLTEXTCLASS org/apache/xerces/parsers/SecuritySupport$7(0x103D0188) 3CLTEXTCLASS org/apache/xerces/parsers/SecuritySupport$8(0x103D02D0) 3CLTEXTCLASS org/apache/xerces/parsers/SecuritySupport$5(0x103D0418) 3CLTEXTCLASS org/apache/xerces/parsers/SecuritySupport$6(0x103D0550) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLComponentManager(0x103D0680) 3CLTEXTCLASS org/apache/xerces/util/ParserConfigurationSettings(0x103D0778) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLParserConfiguration(0x103D0A30) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLPullParserConfiguration(0x103D0C18) 3CLTEXTCLASS org/apache/xerces/parsers/XML11Configurable(0x103D0CF8) 3CLTEXTCLASS org/apache/xerces/parsers/XML11Configuration(0x103D0E30) 3CLTEXTCLASS org/apache/xerces/parsers/XIncludeAwareParserConfiguration(0x103D1D70) 3CLTEXTCLASS org/apache/xerces/util/SymbolTable(0x103D2200) 3CLTEXTCLASS org/apache/xerces/util/SymbolTable$Entry(0x103D2500) 3CLTEXTCLASS [Lorg/apache/xerces/util/SymbolTable$Entry;(0x103D2660) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLComponent(0x103D2700) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLEntityResolver(0x103D2810) 3CLTEXTCLASS org/apache/xerces/impl/XMLEntityManager(0x103D2960) 3CLTEXTCLASS [Ljava/lang/Boolean;(0x103D3A30) 3CLTEXTCLASS org/apache/xerces/xni/XMLResourceIdentifier(0x103D3AD0) 3CLTEXTCLASS org/apache/xerces/util/XMLResourceIdentifierImpl(0x103D3C60) 3CLTEXTCLASS org/apache/xerces/xni/Augmentations(0x103D3F50) 3CLTEXTCLASS org/apache/xerces/util/AugmentationsImpl(0x103D4068) 3CLTEXTCLASS org/apache/xerces/util/AugmentationsImpl$AugmentationsItemsContainer(0x103D4270) 3CLTEXTCLASS org/apache/xerces/util/AugmentationsImpl$SmallContainer(0x103D4410) 3CLTEXTCLASS org/apache/xerces/impl/XMLEntityManager$CharacterBufferPool(0x103D4680) 3CLTEXTCLASS org/apache/xerces/impl/XMLEntityManager$CharacterBuffer(0x103D4878) 3CLTEXTCLASS [Lorg/apache/xerces/impl/XMLEntityManager$CharacterBuffer;(0x103D49A8) 3CLTEXTCLASS org/apache/xerces/xni/XMLLocator(0x103D4A48) 3CLTEXTCLASS org/apache/xerces/impl/XMLEntityScanner(0x103D4C08) 3CLTEXTCLASS org/apache/xerces/impl/XMLEntityScanner$1(0x103D52B8) 3CLTEXTCLASS org/apache/xerces/impl/XMLErrorReporter(0x103D5430) 3CLTEXTCLASS org/apache/xerces/impl/XMLScanner(0x103D5960) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLDocumentSource(0x103D6490) 3CLTEXTCLASS org/apache/xerces/xni/parser/XMLDocumentScanner(0x103D6550) 3CLTEXTCLASS org/apache/xerces/impl/XMLEntityHandler(0x103D6618) 3CLTEXTCLASS java/text/DateFormat(0x103D6740) 3CLTEXTCLASS java/io/ObjectInputStream(0x10397400) 3CLTEXTCLASS java/util/zip/ZipFile$3(0x10398418) 3CLTEXTCLASS java/lang/StringIndexOutOfBoundsException(0x10398698) 3CLTEXTCLASS java/io/ObjectOutput(0x10398800) 3CLTEXTCLASS java/io/ObjectOutputStream(0x103989A0) 3CLTEXTCLASS java/io/DataOutputStream(0x10399640) 3CLTEXTCLASS java/io/UTFDataFormatException(0x10399A28) 3CLTEXTCLASS java/io/EOFException(0x10399B80) 3CLTEXTCLASS org/xml/sax/SAXException(0x10399CD8) 3CLTEXTCLASS javax/xml/parsers/ParserConfigurationException(0x10399ED0) 3CLTEXTCLASS [Ljava/lang/reflect/Field;(0x1039A000) 3CLTEXTCLASS org/xml/sax/EntityResolver(0x1039A0A0) 3CLTEXTCLASS org/xml/sax/DTDHandler(0x1039A150) 3CLTEXTCLASS org/xml/sax/ContentHandler(0x1039A210) 3CLTEXTCLASS org/xml/sax/ErrorHandler(0x1039A368) 3CLTEXTCLASS org/xml/sax/helpers/DefaultHandler(0x1039A490) 3CLTEXTCLASS org/xml/sax/SAXParseException(0x1039A770) 3CLTEXTCLASS [Ljava/util/ArrayList;(0x1039A9A8) 3CLTEXTCLASS javax/xml/parsers/FactoryFinder(0x1039AA60) 3CLTEXTCLASS javax/xml/parsers/SecuritySupport(0x1039AED0) 3CLTEXTCLASS javax/xml/parsers/SecuritySupport12(0x1039B130) 3CLTEXTCLASS javax/xml/parsers/SecuritySupport12$2(0x1039B390) 3CLTEXTCLASS javax/xml/parsers/SecuritySupport12$1(0x1039B4C0) 3CLTEXTCLASS javax/xml/parsers/SecuritySupport12$5(0x1039B5F0) 3CLTEXTCLASS javax/xml/parsers/SecuritySupport12$4(0x1039B738) 3CLTEXTCLASS org/apache/xerces/jaxp/SAXParserFactoryImpl(0x1039B8A8) 3CLTEXTCLASS org/xml/sax/InputSource(0x1039BBF0) 3CLTEXTCLASS javax/xml/parsers/SAXParser(0x1039BE90) 3CLTEXTCLASS org/apache/xerces/jaxp/JAXPConstants(0x1039C210) 3CLTEXTCLASS org/apache/xerces/xs/PSVIProvider(0x1039C2D0) 3CLTEXTCLASS org/apache/xerces/jaxp/SAXParserImpl(0x1039C410) 3CLTEXTCLASS org/apache/xerces/parsers/XMLParser(0x1039C950) 3CLTEXTCLASS org/apache/xerces/xni/XMLDocumentHandler(0x1039CAC8) 3CLTEXTCLASS org/apache/xerces/xni/XMLDTDHandler(0x1039CC98) 3CLTEXTCLASS org/apache/xerces/xni/XMLDTDContentModelHandler(0x1039CEB0) 3CLTEXTCLASS org/apache/xerces/parsers/AbstractXMLDocumentParser(0x1039D110) 3CLTEXTCLASS org/xml/sax/Parser(0x1039D758) 3CLTEXTCLASS org/xml/sax/XMLReader(0x1039D868) 3CLTEXTCLASS org/apache/xerces/parsers/AbstractSAXParser(0x1039DB38) 3CLTEXTCLASS org/apache/xerces/parsers/SAXParser(0x1039EBD8) 3CLTEXTCLASS javax/net/SocketFactory(0x1039EF08) 3CLTEXTCLASS sun/text/resources/LocaleElements(0xDDC48148) 3CLTEXTCLASS sun/text/resources/LocaleElements_en(0xDDC4A000) 3CLTEXTCLASS sun/text/resources/LocaleElements_en_US(0xDDC4A178) 3CLTEXTCLASS sun/text/resources/DateFormatZoneData(0xDDC4A330) 3CLTEXTCLASS sun/text/resources/DateFormatZoneData_en(0xDDC4C730) 3CLTEXTCLASS java/util/ResourceBundle$1(0xDDC4C870) 3CLTEXTCLASS [[Ljava/lang/Object;(0xDDC4C9B8) 3CLTEXTCLASS sun/text/resources/DateFormatZoneData$1(0xDDC4CA78) 3CLTEXTCLASS [Ljava/util/Dictionary;(0xDDC4CC20) 3CLTEXTCLASS [[[Ljava/lang/String;(0xDDC4CCD8) 3CLTEXTCLASS java/util/HashMap$ValueIterator(0xDDC4CDA0) 3CLTEXTCLASS java/security/KeyStoreException(0xDDC4CF10) 3CLTEXTCLASS java/util/Collections$1(0xDDC4D080) 3CLTEXTCLASS java/net/URISyntaxException(0xDDC4D228) 3CLTEXTCLASS java/net/URI(0xDDC4D4B8) 3CLTEXTCLASS java/net/URI$Parser(0xDDC4E7B0) 3CLTEXTCLASS java/io/CharConversionException(0xDDC4EE80) 3CLTEXTCLASS sun/io/ConversionBufferFullException(0xDDC4EFD8) 3CLTEXTCLASS sun/reflect/ClassFileConstants(0xDDC4F110) 3CLTEXTCLASS sun/reflect/AccessorGenerator(0xDDC4F328) 3CLTEXTCLASS sun/reflect/ByteVectorFactory(0xDDC4FC90) 3CLTEXTCLASS sun/reflect/ByteVector(0xDDC4FDA0) 3CLTEXTCLASS sun/reflect/ByteVectorImpl(0xDDC4FED0) 3CLTEXTCLASS java/util/ResourceBundle(0xDDC40110) 3CLTEXTCLASS java/util/PropertyResourceBundle(0xDDC40888) 3CLTEXTCLASS java/util/ResourceBundle$ResourceCacheKey(0xDDC40A58) 3CLTEXTCLASS java/util/Collections$SynchronizedCollection(0xDDC40CE0) 3CLTEXTCLASS java/util/Collections$SynchronizedSet(0xDDC41060) 3CLTEXTCLASS java/util/Hashtable$1(0xDDC41260) 3CLTEXTCLASS javax/xml/parsers/SAXParserFactory(0xDDC41498) 3CLTEXTCLASS javax/xml/parsers/DocumentBuilderFactory(0xDDC41760) 3CLTEXTCLASS java/util/zip/CRC32(0xDDC41AF8) 3CLTEXTCLASS com/ibm/jvm/io/LocalizedOutputStream(0xDDC41D28) 3CLTEXTCLASS com/ibm/jvm/io/LocalizedOutputStream$1(0xDDC41F90) 3CLTEXTCLASS java/util/TimeZone(0xDDC42108) 3CLTEXTCLASS com/ibm/jvm/util/GlobalMap(0xDDC42920) 3CLTEXTCLASS sun/util/calendar/ZoneInfo(0xDDC42BC8) 3CLTEXTCLASS sun/util/calendar/TzIDOldMapping(0xDDC43368) 3CLTEXTCLASS [[Ljava/lang/String;(0xDDC43678) 3CLTEXTCLASS sun/util/calendar/ZoneInfoFile(0xDDC43730) 3CLTEXTCLASS sun/util/calendar/ZoneInfoFile$1(0xDDC43C88) 3CLTEXTCLASS java/util/TimeZone$4(0xDDC43E88) 3CLTEXTCLASS sun/util/calendar/CalendarDate(0xDDC44078) 3CLTEXTCLASS sun/util/calendar/BaseCalendar$Date(0xDDC448D0) 3CLTEXTCLASS sun/util/calendar/Gregorian$Date(0xDDC44C58) 3CLTEXTCLASS sun/util/calendar/CalendarUtils(0xDDC44E70) 3CLTEXTCLASS java/text/DateFormatSymbols(0xDDC450B8) 3CLTEXTCLASS [Ljava/util/ResourceBundle;(0xDDC456F0) 3CLTEXTCLASS sun/text/resources/LocaleData(0xDDC457A8) 3CLTEXTCLASS sun/text/resources/LocaleData$1(0xDDC45D18) 3CLTEXTCLASS java/util/ResourceBundle$LoaderReference(0xDDC45E78) 3CLTEXTCLASS sun/misc/SoftCache$ValueCell(0xDDC45FD0) 3CLTEXTCLASS java/util/ListResourceBundle(0xDDC46240) 3CLTEXTCLASS sun/reflect/MethodAccessorGenerator(0xDDC46460) 3CLTEXTCLASS sun/reflect/ClassFileAssembler(0xDDC46CC8) 3CLTEXTCLASS sun/reflect/UTF8(0xDDC47660) 3CLTEXTCLASS sun/reflect/Label(0xDDC477C8) 3CLTEXTCLASS sun/reflect/Label$PatchInfo(0xDDC47990) 3CLTEXTCLASS sun/reflect/MethodAccessorGenerator$1(0xDDC47AA0) 3CLTEXTCLASS sun/reflect/ClassDefiner(0xDDC47C40) 3CLTEXTCLASS sun/reflect/ClassDefiner$1(0xDDC47DB0) 3CLTEXTCLASS java/net/UnknownServiceException(0xDDC47F10) 3CLTEXTCLASS java/nio/channels/FileLock(0xDDEED558) 3CLTEXTCLASS java/nio/channels/OverlappingFileLockException(0xDDEED810) 3CLTEXTCLASS java/io/DataOutput(0xDDEED918) 3CLTEXTCLASS java/io/RandomAccessFile(0xDDEEDB50) 3CLTEXTCLASS java/nio/channels/Channel(0xDDEEE338) 3CLTEXTCLASS java/nio/channels/InterruptibleChannel(0xDDEEE400) 3CLTEXTCLASS java/nio/channels/spi/AbstractInterruptibleChannel(0xDDEEE4E8) 3CLTEXTCLASS java/nio/channels/ReadableByteChannel(0xDDEEE888) 3CLTEXTCLASS java/nio/channels/WritableByteChannel(0xDDEEE948) 3CLTEXTCLASS java/nio/channels/ByteChannel(0xDDEEEA08) 3CLTEXTCLASS java/nio/channels/GatheringByteChannel(0xDDEEEAC0) 3CLTEXTCLASS java/nio/channels/ScatteringByteChannel(0xDDEEEB98) 3CLTEXTCLASS java/nio/channels/FileChannel(0xDDEEECE8) 3CLTEXTCLASS sun/nio/ch/FileChannelImpl(0xDDEEF068) 3CLTEXTCLASS java/nio/channels/spi/AbstractInterruptibleChannel$FooChannel(0xDDEEFB00) 3CLTEXTCLASS java/nio/channels/spi/AbstractInterruptibleChannel$Lock(0xDDEEFC28) 3CLTEXTCLASS sun/nio/ch/Interruptible(0xDDEEFD20) 3CLTEXTCLASS java/nio/channels/spi/AbstractInterruptibleChannel$1(0xDDEEFDE8) 3CLTEXTCLASS java/nio/channels/spi/AbstractInterruptibleChannel$2(0xDDEEFF38) 3CLTEXTCLASS java/nio/channels/SelectableChannel(0xDDEF0100) 3CLTEXTCLASS sun/nio/ch/Util(0xDDEF02C8) 3CLTEXTCLASS [Ljava/lang/ThreadLocal;(0xDDEF08A0) 3CLTEXTCLASS sun/nio/ch/IOUtil(0xDDEF0958) 3CLTEXTCLASS sun/nio/ch/NativeDispatcher(0xDDEF0D58) 3CLTEXTCLASS sun/nio/ch/FileDispatcher(0xDDEF0F28) 3CLTEXTCLASS sun/nio/ch/Reflect(0xDDEF11E0) 3CLTEXTCLASS java/nio/Buffer(0xDDEF14F0) 3CLTEXTCLASS java/nio/ByteBuffer(0xDDEF1978) 3CLTEXTCLASS java/nio/MappedByteBuffer(0xDDEF22F0) 3CLTEXTCLASS sun/nio/ch/Reflect$1(0xDDEF2618) 3CLTEXTCLASS sun/nio/ch/NativeThreadSet(0xDDEF2750) 3CLTEXTCLASS sun/nio/ch/FileChannelImpl$Lock(0xDDEF2918) 3CLTEXTCLASS sun/nio/ch/FileLockImpl(0xDDEF2A48) 3CLTEXTCLASS java/io/DeleteOnExitHook(0xDDEF2BD8) 3CLTEXTCLASS java/util/zip/Checksum(0xDDEF2DE8) 3CLTEXTCLASS com/ibm/oti/vm/AbstractClassLoader$1(0xDDEF2EE0) 3CLTEXTCLASS java/net/URLClassLoader$3(0xDDEF3020) 3CLTEXTCLASS sun/nio/cs/StreamDecoder(0xDDEF31A0) 3CLTEXTCLASS sun/nio/cs/StreamDecoder$ConverterSD(0xDDEF36B0) 3CLTEXTCLASS java/security/AllPermissionCollection(0xDDEF39F8) 3CLTEXTCLASS java/lang/NullPointerException(0xDDEF3C18) 3CLTEXTCLASS java/lang/IndexOutOfBoundsException(0xDDEF3D70) 3CLTEXTCLASS java/lang/ArrayIndexOutOfBoundsException(0xDDEF3EC8) 3CLTEXTCLASS java/net/Proxy(0xDDEF4050) 3CLTEXTCLASS java/lang/Enum(0xDDEF42B0) 3CLTEXTCLASS java/net/Proxy$Type(0xDDEF4590) 3CLTEXTCLASS [Ljava/net/Proxy$Type;(0xDDEF4758) 3CLTEXTCLASS java/util/Collections$SingletonList(0xDDEF4870) 3CLTEXTCLASS java/util/EventObject(0xDDEF4A88) 3CLTEXTCLASS java/util/MissingResourceException(0xDDEF4C60) 3CLTEXTCLASS sun/reflect/DelegatingClassLoader(0xDDEF4E60) 3CLTEXTCLASS java/io/ObjectInput(0xDDEF5048) 3CLTEXTCLASS java/io/ObjectStreamConstants(0xDDEF5160) 3CLTEXTCLASS com/ibm/security/bootstrap/DSAPublicKeyImpl(0xDE2587B8) 3CLTEXTCLASS com/ibm/security/bootstrap/DSASignature(0xDE258B20) 3CLTEXTCLASS com/ibm/security/bootstrap/InternalSHA(0xDE259000) 3CLTEXTCLASS java/security/interfaces/DSAParams(0xDE259250) 3CLTEXTCLASS java/security/spec/AlgorithmParameterSpec(0xDE259320) 3CLTEXTCLASS java/security/spec/DSAParameterSpec(0xDE2593D8) 3CLTEXTCLASS java/math/SignedMutableBigInteger(0xDE2595C0) 3CLTEXTCLASS java/security/GeneralSecurityException(0xDE259818) 3CLTEXTCLASS java/security/NoSuchAlgorithmException(0xDE2599A8) 3CLTEXTCLASS java/security/InvalidParameterException(0xDE259B38) 3CLTEXTCLASS java/util/Collections$EmptySet$1(0xDE259C80) 3CLTEXTCLASS java/security/SecureRandomSpi(0xDE259E00) 3CLTEXTCLASS java/lang/InternalError(0xDE259F58) 3CLTEXTCLASS java/security/NoSuchProviderException(0xDE25A0B0) 3CLTEXTCLASS [Ljava/lang/reflect/Constructor;(0xDE25A1E8) 3CLTEXTCLASS java/security/DigestException(0xDE25A2C8) 3CLTEXTCLASS java/lang/CloneNotSupportedException(0xDE25A458) 3CLTEXTCLASS java/lang/UnsatisfiedLinkError(0xDE25A5B0) 3CLTEXTCLASS java/util/EventListener(0xDE25A6C8) 3CLTEXTCLASS java/lang/InterruptedException(0xDE25A7A0) 3CLTEXTCLASS java/util/PropertyPermission(0xDE25A8E8) 3CLTEXTCLASS java/util/NoSuchElementException(0xDE25AC28) 3CLTEXTCLASS java/lang/NoSuchMethodException(0xDE25AD80) 3CLTEXTCLASS java/lang/IllegalAccessException(0xDE25AED8) 3CLTEXTCLASS sun/misc/URLClassPath$1(0xDE25B010) 3CLTEXTCLASS java/net/URLClassLoader$4(0xDE25B1E0) 3CLTEXTCLASS java/net/URLClassLoader$4$1(0xDE25B3D8) 3CLTEXTCLASS com/ibm/oti/vm/AbstractClassLoader$2(0xDE25B518) 3CLTEXTCLASS java/util/Vector$1(0xDE25B680) 3CLTEXTCLASS java/lang/ClassLoader$1(0xDE25B800) 3CLTEXTCLASS java/net/JarURLConnection(0xDE25BA80) 3CLTEXTCLASS sun/net/www/protocol/jar/JarURLConnection(0xDE25BEA0) 3CLTEXTCLASS sun/net/www/protocol/jar/JarFileFactory(0xDE25C460) 3CLTEXTCLASS sun/net/www/protocol/jar/URLJarFile(0xDE25C7C0) 3CLTEXTCLASS sun/net/www/protocol/jar/URLJarFile$URLJarFileEntry(0xDE25CC78) 3CLTEXTCLASS sun/net/www/protocol/jar/JarURLConnection$JarURLInputStream(0xDE25CEA8) 3CLTEXTCLASS java/util/HashMap$KeyIterator(0xDE25D020) 3CLTEXTCLASS java/lang/Readable(0xDE25D150) 3CLTEXTCLASS java/io/Reader(0xDE25D240) 3CLTEXTCLASS java/io/InputStreamReader(0xDE25D508) 3CLTEXTCLASS java/lang/UnsupportedOperationException(0xDE25D7A0) 3CLTEXTCLASS java/util/zip/ZipException(0xDE25D930) 3CLTEXTCLASS java/io/PrintWriter(0xDE25DB00) 3CLTEXTCLASS java/lang/IllegalAccessError(0xDE25E2D8) 3CLTEXTCLASS java/security/cert/CertificateException(0xDE25E438) 3CLTEXTCLASS java/security/SignatureException(0xDE25E5C8) 3CLTEXTCLASS java/security/KeyException(0xDE25E758) 3CLTEXTCLASS java/security/InvalidKeyException(0xDE25E8E8) 3CLTEXTCLASS java/io/StringWriter(0xDE25EA98) 3CLTEXTCLASS java/lang/SecurityManager(0xDE25EE88) 3CLTEXTCLASS java/net/ContentHandlerFactory(0xDE25F800) 3CLTEXTCLASS java/lang/ClassCastException(0xDE25F8F0) 3CLTEXTCLASS java/lang/InstantiationException(0xDE25FA88) 3CLTEXTCLASS java/lang/NoSuchFieldException(0xDE25FC08) 3CLTEXTCLASS java/io/BufferedReader(0xDE25FD68) 3CLTEXTCLASS sun/reflect/UnsafeStaticFieldAccessorImpl(0xDE2601A0) 3CLTEXTCLASS sun/reflect/UnsafeStaticObjectFieldAccessorImpl(0xDE260378) 3CLTEXTCLASS java/net/URLConnection(0xDE233568) 3CLTEXTCLASS sun/net/www/URLConnection(0xDE234148) 3CLTEXTCLASS sun/net/www/protocol/file/FileURLConnection(0xDE234680) 3CLTEXTCLASS java/net/ContentHandler(0xDE234D30) 3CLTEXTCLASS java/net/UnknownContentHandler(0xDE234E68) 3CLTEXTCLASS sun/net/www/MessageHeader(0xDE234FB8) 3CLTEXTCLASS java/io/FilePermission(0xDE235480) 3CLTEXTCLASS java/io/FilePermissionCollection(0xDE235960) 3CLTEXTCLASS java/security/AllPermission(0xDE235CB0) 3CLTEXTCLASS java/security/UnresolvedPermission(0xDE235E78) 3CLTEXTCLASS java/security/BasicPermissionCollection(0xDE236410) 3CLTEXTCLASS java/lang/NoClassDefFoundError(0xDE236890) 3CLTEXTCLASS java/security/Policy(0xDE2369D0) 3CLTEXTCLASS java/lang/reflect/InvocationTargetException(0xDE236E38) 3CLTEXTCLASS java/lang/RuntimeException(0xDE236FF0) 3CLTEXTCLASS java/lang/IllegalArgumentException(0xDE237180) 3CLTEXTCLASS java/lang/IllegalStateException(0xDE237310) 3CLTEXTCLASS java/lang/SecurityException(0xDE2374A0) 3CLTEXTCLASS java/lang/NumberFormatException(0xDE237630) 3CLTEXTCLASS java/io/UnsupportedEncodingException(0xDE2377F8) 3CLTEXTCLASS java/net/MalformedURLException(0xDE237950) 3CLTEXTCLASS java/io/FileNotFoundException(0xDE237AA8) 3CLTEXTCLASS java/net/URLDecoder(0xDE237C28) 3CLTEXTCLASS java/net/URLEncoder(0xDE237E68) 3CLTEXTCLASS sun/reflect/UnsafeFieldAccessorFactory(0xDE2380E8) 3CLTEXTCLASS sun/reflect/FieldAccessor(0xDE238608) 3CLTEXTCLASS sun/reflect/FieldAccessorImpl(0xDE238838) 3CLTEXTCLASS sun/reflect/UnsafeFieldAccessorImpl(0xDE238B30) 3CLTEXTCLASS sun/reflect/UnsafeObjectFieldAccessorImpl(0xDE238D88) 3CLTEXTCLASS sun/net/ProgressMonitor(0xDE2390C0) 3CLTEXTCLASS sun/net/ProgressMeteringPolicy(0xDE2393F0) 3CLTEXTCLASS sun/net/DefaultProgressMeteringPolicy(0xDE2394D0) 3CLTEXTCLASS java/io/File$LazyInitialization(0xDE2395F0) 3CLTEXTCLASS java/security/SecureRandom(0xDE2397C8) 3CLTEXTCLASS com/ibm/jsse2/IBMJSSEProvider2(0xDE239CE0) 3CLTEXTCLASS com/ibm/jsse2/Debug(0xDE23A068) 3CLTEXTCLASS com/ibm/jsse2/Debug$0(0xDE23A528) 3CLTEXTCLASS com/ibm/jsse2/IBMJSSEProvider2$0(0xDE23A6B0) 3CLTEXTCLASS java/util/HashSet(0xDE23A918) 3CLTEXTCLASS java/util/LinkedHashSet(0xDE23AD30) 3CLTEXTCLASS java/util/HashMap$Values(0xDE23AEF0) 3CLTEXTCLASS java/util/LinkedHashMap$ValueIterator(0xDE23B0B8) 3CLTEXTCLASS java/util/HashMap$KeySet(0xDE23B230) 3CLTEXTCLASS java/security/interfaces/DSAKey(0xDE23B3F0) 3CLTEXTCLASS com/ibm/security/util/text/Normalizer(0xDE5CCF78) 3CLTEXTCLASS com/ibm/security/util/text/Normalizer$Mode(0xDE5CD7B8) 3CLTEXTCLASS com/ibm/security/util/text/DecompData(0xDE5CD8F0) 3CLTEXTCLASS com/ibm/security/util/text/CompactCharArray(0xDE5CDA90) 3CLTEXTCLASS com/ibm/security/util/text/Utility(0xDE5CDE98) 3CLTEXTCLASS com/ibm/security/util/text/CompactByteArray(0xDE5CE2F0) 3CLTEXTCLASS java/util/SubList(0xDE5CE750) 3CLTEXTCLASS java/util/RandomAccessSubList(0xDE5CEBF0) 3CLTEXTCLASS java/util/ListIterator(0xDE5CED58) 3CLTEXTCLASS java/util/SubList$1(0xDE5CEED0) 3CLTEXTCLASS java/util/AbstractList$ListItr(0xDE5CF1E8) 3CLTEXTCLASS java/security/PrivateKey(0xDE5CF430) 3CLTEXTCLASS java/security/interfaces/RSAPrivateKey(0xDE5CF4E0) 3CLTEXTCLASS com/ibm/security/bootstrap/RSACore(0xDE5CF5D0) 3CLTEXTCLASS com/ibm/security/bootstrap/RSAPadding(0xDE5CF8A8) 3CLTEXTCLASS [[I(0xDE5CFE18) 3CLTEXTCLASS java/math/MutableBigInteger(0xDE5CFF38) 3CLTEXTCLASS java/util/AbstractSequentialList(0xDE5D0690) 3CLTEXTCLASS java/util/Queue(0xDE5D08F8) 3CLTEXTCLASS java/util/LinkedList(0xDE5D0A98) 3CLTEXTCLASS java/util/LinkedList$Entry(0xDE5D10E0) 3CLTEXTCLASS java/security/cert/CertPath(0xDE5D1200) 3CLTEXTCLASS com/ibm/security/cert/CertPathImpl(0xDE5D1538) 3CLTEXTCLASS java/util/LinkedList$ListItr(0xDE5D18C8) 3CLTEXTCLASS java/security/CodeSigner(0xDE5D1C20) 3CLTEXTCLASS sun/security/pkcs/SigningCertificateInfo(0xDE5D1E90) 3CLTEXTCLASS com/ibm/misc/CharacterEncoder(0xDE5D20F8) 3CLTEXTCLASS com/ibm/misc/HexDumpEncoder(0xDE5D2528) 3CLTEXTCLASS sun/security/pkcs/ESSCertId(0xDE5D2808) 3CLTEXTCLASS [Lsun/security/pkcs/ESSCertId;(0xDE5D2A88) 3CLTEXTCLASS sun/security/timestamp/TimestampToken(0xDE5D2B40) 3CLTEXTCLASS java/security/Timestamp(0xDE5D2D48) 3CLTEXTCLASS [Ljava/security/CodeSigner;(0xDE5D2FD0) 3CLTEXTCLASS sun/io/CharToByteISO8859_1(0xDE5D30F8) 3CLTEXTCLASS com/ibm/misc/CEStreamExhausted(0xDE5D33C0) 3CLTEXTCLASS java/util/jar/JarVerifier$VerifierStream(0xDE5D3500) 3CLTEXTCLASS sun/nio/ByteBuffered(0xDE5D36E8) 3CLTEXTCLASS java/security/CodeSource(0xDE5D37C0) 3CLTEXTCLASS java/security/PermissionCollection(0xDE5D3DB0) 3CLTEXTCLASS java/security/Permissions(0xDE5D3FC8) 3CLTEXTCLASS java/util/LinkedHashMap$KeyIterator(0xDE5D4420) 3CLTEXTCLASS java/security/AlgorithmParameters(0xDE5D4588) 3CLTEXTCLASS java/security/AlgorithmParametersSpi(0xDE5D48F0) 3CLTEXTCLASS com/ibm/security/bootstrap/DSAParameters(0xDE5D4A80) 3CLTEXTCLASS java/security/interfaces/DSAPublicKey(0xDE5D4DB0) 3CLTEXTCLASS com/ibm/security/x509/ExtKeyUsageExtension(0xDE2200A0) 3CLTEXTCLASS com/ibm/security/x509/KeyUsageExtension(0xDE220738) 3CLTEXTCLASS com/ibm/security/x509/NetscapeCertTypeExtension(0xDE220E18) 3CLTEXTCLASS com/ibm/security/x509/NetscapeCertTypeExtension$MapEntry(0xDE221508) 3CLTEXTCLASS [Lcom/ibm/security/x509/NetscapeCertTypeExtension$MapEntry;(0xDE221608) 3CLTEXTCLASS com/ibm/security/x509/SubjectAlternativeNameExtension(0xDE2216E8) 3CLTEXTCLASS com/ibm/security/x509/SubjectKeyIdentifierExtension(0xDE221C30) 3CLTEXTCLASS com/ibm/security/x509/KeyIdentifier(0xDE2220F0) 3CLTEXTCLASS com/ibm/security/x509/AuthorityKeyIdentifierExtension(0xDE2223A8) 3CLTEXTCLASS com/ibm/security/x509/AuthorityInfoAccessExtension(0xDE2229E8) 3CLTEXTCLASS com/ibm/security/x509/AccessDescription(0xDE222F58) 3CLTEXTCLASS sun/io/ByteToCharISO8859_1(0xDE223408) 3CLTEXTCLASS sun/security/pkcs/SignerInfo(0xDE223608) 3CLTEXTCLASS [Lsun/security/pkcs/SignerInfo;(0xDE223D08) 3CLTEXTCLASS sun/security/pkcs/PKCS9Attributes(0xDE223DD8) 3CLTEXTCLASS sun/security/pkcs/PKCS9Attribute(0xDE224270) 3CLTEXTCLASS [Lcom/ibm/security/util/ObjectIdentifier;(0xDE224BD0) 3CLTEXTCLASS [Ljava/lang/Byte;(0xDE224C88) 3CLTEXTCLASS [[Ljava/lang/Byte;(0xDE224D40) 3CLTEXTCLASS java/security/SignatureSpi(0xDE224E30) 3CLTEXTCLASS java/security/Signature(0xDE225200) 3CLTEXTCLASS sun/security/jca/ServiceId(0xDE225AA0) 3CLTEXTCLASS [Lsun/security/jca/ServiceId;(0xDE225BA0) 3CLTEXTCLASS java/util/Arrays$ArrayList(0xDE225CB8) 3CLTEXTCLASS com/ibm/security/bootstrap/RSASignature(0xDE225F18) 3CLTEXTCLASS com/ibm/security/bootstrap/RSASignature$SHA1withRSA(0xDE226430) 3CLTEXTCLASS java/security/MessageDigestSpi(0xDE226588) 3CLTEXTCLASS java/security/MessageDigest(0xDE226840) 3CLTEXTCLASS com/ibm/security/bootstrap/DigestBase(0xDE226D28) 3CLTEXTCLASS com/ibm/security/bootstrap/SHA(0xDE227120) 3CLTEXTCLASS java/security/MessageDigest$Delegate(0xDE2273D8) 3CLTEXTCLASS java/security/Signature$Delegate(0xDE2276D0) 3CLTEXTCLASS java/security/Signature$Delegate$Lock(0xDE227D00) 3CLTEXTCLASS [Ljava/security/Principal;(0xDE227E10) 3CLTEXTCLASS java/security/spec/DSAPublicKeySpec(0xDE227ED8) 3CLTEXTCLASS sun/security/jca/ProviderList$ServiceList(0xDE5EE418) 3CLTEXTCLASS sun/security/jca/ProviderList$ServiceList$1(0xDE5EE770) 3CLTEXTCLASS java/security/KeyFactorySpi(0xDE5EE938) 3CLTEXTCLASS com/ibm/security/bootstrap/RSAKeyFactory(0xDE5EEA80) 3CLTEXTCLASS java/security/spec/RSAPublicKeySpec(0xDE5EEEE8) 3CLTEXTCLASS java/security/spec/RSAPrivateKeySpec(0xDE5EF030) 3CLTEXTCLASS java/security/spec/RSAPrivateCrtKeySpec(0xDE5EF190) 3CLTEXTCLASS java/security/spec/PKCS8EncodedKeySpec(0xDE5EF368) 3CLTEXTCLASS sun/security/x509/X509Key(0xDE5EF4B0) 3CLTEXTCLASS java/security/interfaces/RSAKey(0xDE5EFA48) 3CLTEXTCLASS java/security/interfaces/RSAPublicKey(0xDE5EFAF8) 3CLTEXTCLASS com/ibm/security/bootstrap/RSAPublicKeyImpl(0xDE5EFC18) 3CLTEXTCLASS com/ibm/security/bootstrap/AlgorithmId(0xDE5EFFE8) 3CLTEXTCLASS com/ibm/security/x509/X509AttributeName(0xDE5F0A88) 3CLTEXTCLASS com/ibm/security/x509/CertificateExtensions(0xDE5F0CB0) 3CLTEXTCLASS com/ibm/security/x509/Extension(0xDE5F14D0) 3CLTEXTCLASS com/ibm/security/x509/OIDMap(0xDE5F1908) 3CLTEXTCLASS com/ibm/security/x509/BasicConstraintsExtension(0xDE5F1FC8) 3CLTEXTCLASS java/io/IOException(0xDE5F2578) 3CLTEXTCLASS sun/reflect/NativeConstructorAccessorImpl(0xDE5F26B0) 3CLTEXTCLASS sun/reflect/DelegatingConstructorAccessorImpl(0xDE5F2898) 3CLTEXTCLASS com/ibm/security/x509/PKIXExtensions(0xDE5F29D8) 3CLTEXTCLASS com/ibm/security/x509/CertificatePoliciesExtension(0xDE5F2FF0) 3CLTEXTCLASS com/ibm/security/x509/PolicyInformation(0xDE5F3568) 3CLTEXTCLASS com/ibm/security/x509/PolicyQualifierInfo(0xDE5F3A38) 3CLTEXTCLASS com/ibm/security/x509/Qualifier(0xDE5F3F00) 3CLTEXTCLASS com/ibm/security/x509/CPSuri(0xDE5F3FE8) 3CLTEXTCLASS com/ibm/security/x509/CRLDistributionPointsExtension(0xDE5F4420) 3CLTEXTCLASS com/ibm/security/x509/DistributionPoint(0xDE5F4A90) 3CLTEXTCLASS com/ibm/security/x509/GeneralNames(0xDE5F50F0) 3CLTEXTCLASS com/ibm/security/x509/GeneralName(0xDE5F5530) 3CLTEXTCLASS com/ibm/security/x509/URIName(0xDE5F59B0) 3CLTEXTCLASS [Lcom/ibm/security/x509/DistributionPoint;(0xDE5F5E50) 3CLTEXTCLASS com/ibm/security/bootstrap/DSAKeyFactory(0xDE5F5F18) 3CLTEXTCLASS java/lang/SecurityManager$Lock(0xDE5F6208) 3CLTEXTCLASS com/ibm/security/x509/RDN(0xDE5D6388) 3CLTEXTCLASS [Lcom/ibm/security/x509/RDN;(0xDE5D6980) 3CLTEXTCLASS com/ibm/security/x509/AVA(0xDE5D6A68) 3CLTEXTCLASS [Lcom/ibm/security/x509/AVA;(0xDE5D75D8) 3CLTEXTCLASS com/ibm/security/x509/AVAKeyword(0xDE5D7690) 3CLTEXTCLASS com/ibm/security/x509/CertificateValidity(0xDE5D7B20) 3CLTEXTCLASS com/ibm/security/util/calendar/CalendarSystem(0xDE5D8120) 3CLTEXTCLASS com/ibm/security/util/calendar/AbstractCalendar(0xDE5D85B0) 3CLTEXTCLASS com/ibm/security/util/calendar/BaseCalendar(0xDE5D8B38) 3CLTEXTCLASS com/ibm/security/util/calendar/Gregorian(0xDE5D9358) 3CLTEXTCLASS com/ibm/security/util/calendar/CalendarDate(0xDE5D95E0) 3CLTEXTCLASS com/ibm/security/util/calendar/BaseCalendar$Date(0xDE5D9E38) 3CLTEXTCLASS com/ibm/security/util/calendar/Gregorian$Date(0xDE5DA1C0) 3CLTEXTCLASS com/ibm/security/util/calendar/CalendarUtils(0xDE5DA3D8) 3CLTEXTCLASS java/util/Date(0xDE5DA638) 3CLTEXTCLASS sun/util/calendar/CalendarSystem(0xDE5DAFC0) 3CLTEXTCLASS sun/util/calendar/AbstractCalendar(0xDE5DB450) 3CLTEXTCLASS sun/util/calendar/BaseCalendar(0xDE5DB9D8) 3CLTEXTCLASS sun/util/calendar/Gregorian(0xDE5DC1F8) 3CLTEXTCLASS com/ibm/security/x509/CertificateSubjectName(0xDE5DC3E0) 3CLTEXTCLASS com/ibm/security/x509/CertificateX509Key(0xDE5DC7D0) 3CLTEXTCLASS java/security/Key(0xDE5DCBF8) 3CLTEXTCLASS java/security/PublicKey(0xDE5DCCD8) 3CLTEXTCLASS com/ibm/security/x509/X509Key(0xDE5DCDD8) 3CLTEXTCLASS com/ibm/security/util/BitArray(0xDE5DD688) 3CLTEXTCLASS java/security/spec/KeySpec(0xDE5DD9C8) 3CLTEXTCLASS java/security/spec/EncodedKeySpec(0xDE5DDA80) 3CLTEXTCLASS java/security/spec/X509EncodedKeySpec(0xDE5DDBE0) 3CLTEXTCLASS java/security/KeyFactory(0xDE5DDD18) 3CLTEXTCLASS java/security/KeyFactory$Lock(0xDE5DE0E8) 3CLTEXTCLASS java/io/SyncFailedException(0xDE5DE220) 3CLTEXTCLASS com/ibm/misc/Debug$2(0xDE5C0588) 3CLTEXTCLASS java/security/cert/CertificateFactory(0xDE5C06D0) 3CLTEXTCLASS java/security/cert/CertificateFactorySpi(0xDE5C09F8) 3CLTEXTCLASS sun/security/jca/GetInstance(0xDE5C0BA0) 3CLTEXTCLASS sun/security/jca/ProviderConfig$1(0xDE5C0F60) 3CLTEXTCLASS com/ibm/jvm/ClassLoader(0xDE5C1110) 3CLTEXTCLASS sun/security/jca/ProviderConfig$3(0xDE5C1320) 3CLTEXTCLASS java/util/LinkedHashMap$LinkedHashIterator(0xDE5C1598) 3CLTEXTCLASS java/util/LinkedHashMap$EntryIterator(0xDE5C17C0) 3CLTEXTCLASS java/security/Provider$Service(0xDE5C1930) 3CLTEXTCLASS com/ibm/security/cert/CertificateFactoryImpl(0xDE5C21A0) 3CLTEXTCLASS java/util/Collections$UnmodifiableCollection(0xDE5C28F8) 3CLTEXTCLASS java/util/Collections$UnmodifiableList(0xDE5C2C58) 3CLTEXTCLASS java/util/Collections$UnmodifiableRandomAccessList(0xDE5C3008) 3CLTEXTCLASS java/util/Collections$UnmodifiableCollection$1(0xDE5C31C0) 3CLTEXTCLASS sun/security/jca/GetInstance$Instance(0xDE5C3368) 3CLTEXTCLASS java/security/cert/X509Extension(0xDE5C3488) 3CLTEXTCLASS java/security/cert/X509Certificate(0xDE5C3600) 3CLTEXTCLASS [Ljava/security/cert/X509Certificate;(0xDE5C3958) 3CLTEXTCLASS com/ibm/security/x509/X509CertImpl(0xDE5C3AD0) 3CLTEXTCLASS com/ibm/security/x509/CertAttrSet(0xDE5C50C8) 3CLTEXTCLASS com/ibm/security/x509/X509CertInfo(0xDE5C5228) 3CLTEXTCLASS com/ibm/security/x509/CertificateVersion(0xDE5C6160) 3CLTEXTCLASS com/ibm/security/x509/CertificateSerialNumber(0xDE5C6688) 3CLTEXTCLASS com/ibm/security/x509/SerialNumber(0xDE5C6AA8) 3CLTEXTCLASS com/ibm/security/x509/CertificateAlgorithmId(0xDE5C6DE0) 3CLTEXTCLASS com/ibm/security/x509/CertificateIssuerName(0xDE5C7238) 3CLTEXTCLASS java/security/Principal(0xDE5C75F8) 3CLTEXTCLASS com/ibm/security/x509/GeneralNameInterface(0xDE5C76D8) 3CLTEXTCLASS com/ibm/security/x509/X500Name(0xDE5C7870) 3CLTEXTCLASS com/ibm/security/util/ObjectIdentifier(0xDE5B0938) 3CLTEXTCLASS com/ibm/security/util/DerInputStream(0xDE5B0D80) 3CLTEXTCLASS com/ibm/security/util/DerIndefLenConverter(0xDE5B1588) 3CLTEXTCLASS com/ibm/security/util/DerInputBuffer(0xDE5B1B30) 3CLTEXTCLASS com/ibm/security/util/DerValue(0xDE5B1F68) 3CLTEXTCLASS [Lcom/ibm/security/util/DerValue;(0xDE5B2A18) 3CLTEXTCLASS com/ibm/security/util/DerEncoder(0xDE5B2AB8) 3CLTEXTCLASS com/ibm/security/util/DerOutputStream(0xDE5B2C38) 3CLTEXTCLASS com/ibm/security/util/ByteArrayLexOrder(0xDE5B3300) 3CLTEXTCLASS com/ibm/security/util/ByteArrayTagOrder(0xDE5B3410) 3CLTEXTCLASS com/ibm/security/pkcsutil/PKCSOID(0xDE5B3520) 3CLTEXTCLASS java/math/BigInteger(0xDE5B3FD8) 3CLTEXTCLASS [Ljava/math/BigInteger;(0xDE5B51D0) 3CLTEXTCLASS java/io/ObjectStreamClass(0xDE5B5338) 3CLTEXTCLASS sun/misc/SoftCache(0xDE5B66F8) 3CLTEXTCLASS java/lang/LinkageError(0xDE5B6A90) 3CLTEXTCLASS java/lang/IncompatibleClassChangeError(0xDE5B6BE8) 3CLTEXTCLASS java/lang/NoSuchMethodError(0xDE5B6D40) 3CLTEXTCLASS com/ibm/security/x509/AlgorithmId(0xDE5B6EA8) 3CLTEXTCLASS [Lcom/ibm/security/x509/AlgorithmId;(0xDE5B8098) 3CLTEXTCLASS com/ibm/misc/Debug(0xDE5B81A8) 3CLTEXTCLASS java/util/regex/Pattern$JavaDefined(0xDE5A8910) 3CLTEXTCLASS java/util/regex/Pattern$JavaLetter(0xDE5A8A40) 3CLTEXTCLASS java/util/regex/Pattern$JavaLetterOrDigit(0xDE5A8B70) 3CLTEXTCLASS java/util/regex/Pattern$JavaJavaIdentifierStart(0xDE5A8CA0) 3CLTEXTCLASS java/util/regex/Pattern$JavaJavaIdentifierPart(0xDE5A8DD0) 3CLTEXTCLASS java/util/regex/Pattern$JavaUnicodeIdentifierStart(0xDE5A8F00) 3CLTEXTCLASS java/util/regex/Pattern$JavaUnicodeIdentifierPart(0xDE5A9030) 3CLTEXTCLASS java/util/regex/Pattern$JavaIdentifierIgnorable(0xDE5A9160) 3CLTEXTCLASS java/util/regex/Pattern$JavaSpaceChar(0xDE5A9290) 3CLTEXTCLASS java/util/regex/Pattern$JavaWhitespace(0xDE5A93C0) 3CLTEXTCLASS java/util/regex/Pattern$JavaISOControl(0xDE5A94F0) 3CLTEXTCLASS java/util/regex/Pattern$JavaMirrored(0xDE5A9620) 3CLTEXTCLASS java/util/HashMap$EntrySet(0xDE5A9770) 3CLTEXTCLASS java/util/HashMap$HashIterator(0xDE5A9978) 3CLTEXTCLASS java/util/HashMap$EntryIterator(0xDE5A9BA0) 3CLTEXTCLASS [[B(0xDE5A9CF0) 3CLTEXTCLASS com/ibm/misc/CharacterDecoder(0xDE5A9DD8) 3CLTEXTCLASS com/ibm/misc/BASE64Decoder(0xDE5AA0F0) 3CLTEXTCLASS sun/security/util/SignatureFileVerifier(0xDE5AA310) 3CLTEXTCLASS java/util/AbstractList$Itr(0xDE5AAB30) 3CLTEXTCLASS sun/security/util/ManifestDigester(0xDE5AAD60) 3CLTEXTCLASS sun/security/util/ManifestDigester$Position(0xDE5AAFF8) 3CLTEXTCLASS sun/security/util/ManifestDigester$Entry(0xDE5AB0E8) 3CLTEXTCLASS sun/security/jca/Providers(0xDE5AB280) 3CLTEXTCLASS java/lang/InheritableThreadLocal(0xDE5AB5C8) 3CLTEXTCLASS sun/security/jca/ProviderList(0xDE5AB758) 3CLTEXTCLASS sun/security/jca/ProviderConfig(0xDE5ABDB0) 3CLTEXTCLASS [Lsun/security/jca/ProviderConfig;(0xDE5AC278) 3CLTEXTCLASS [Ljava/security/Provider;(0xDE5AC330) 3CLTEXTCLASS sun/security/jca/ProviderList$3(0xDE5AC448) 3CLTEXTCLASS sun/security/jca/ProviderList$1(0xDE5AC690) 3CLTEXTCLASS sun/security/jca/ProviderList$2(0xDE5AC830) 3CLTEXTCLASS java/security/Security(0xDE5AC948) 3CLTEXTCLASS java/security/Security$1(0xDE5AD308) 3CLTEXTCLASS java/util/Properties$LineReader(0xDE5AD418) 3CLTEXTCLASS java/util/concurrent/ConcurrentMap(0xDE5AD580) 3CLTEXTCLASS java/util/concurrent/ConcurrentHashMap(0xDE5AD6D0) 3CLTEXTCLASS java/util/concurrent/locks/Lock(0xDE5ADCB8) 3CLTEXTCLASS java/util/concurrent/locks/ReentrantLock(0xDE5ADE18) 3CLTEXTCLASS java/util/concurrent/ConcurrentHashMap$Segment(0xDE5AE2C0) 3CLTEXTCLASS [Ljava/util/concurrent/ConcurrentHashMap$Segment;(0xDE5AE5D0) 3CLTEXTCLASS java/util/concurrent/locks/AbstractQueuedSynchronizer(0xDE5AE708) 3CLTEXTCLASS java/util/concurrent/locks/ReentrantLock$Sync(0xDE5AF110) 3CLTEXTCLASS java/util/concurrent/locks/ReentrantLock$NonfairSync(0xDE5AF440) 3CLTEXTCLASS java/util/concurrent/locks/AbstractQueuedSynchronizer$Node(0xDE5AF628) 3CLTEXTCLASS java/util/concurrent/ConcurrentHashMap$HashEntry(0xDE5AF7F0) 3CLTEXTCLASS [Ljava/util/concurrent/ConcurrentHashMap$HashEntry;(0xDE5AF900) 3CLTEXTCLASS sun/security/jca/ProviderConfig$Lock(0xDE5AF9B8) 3CLTEXTCLASS sun/security/pkcs/PKCS7(0xDE5AFAF0) 3CLTEXTCLASS sun/security/pkcs/ContentInfo(0xDE5B02D8) 3CLTEXTCLASS com/ibm/misc/Debug$1(0xDE5B0768) 3CLTEXTCLASS java/util/zip/Inflater(0xDE55B400) 3CLTEXTCLASS java/util/jar/Manifest(0xDE55B880) 3CLTEXTCLASS java/io/ByteArrayInputStream(0xDE55BD18) 3CLTEXTCLASS java/util/jar/Attributes(0xDE55BF98) 3CLTEXTCLASS java/util/jar/Manifest$FastInputStream(0xDE55C590) 3CLTEXTCLASS java/util/jar/Attributes$Name(0xDE55C7F0) 3CLTEXTCLASS sun/misc/ASCIICaseInsensitiveComparator(0xDE55CB90) 3CLTEXTCLASS java/util/jar/JarVerifier(0xDE55CDA8) 3CLTEXTCLASS java/io/ByteArrayOutputStream(0xDE55D330) 3CLTEXTCLASS java/net/URLClassLoader$ClassFinder(0xDE55D5E0) 3CLTEXTCLASS sun/misc/URLClassPath$3(0xDE55D788) 3CLTEXTCLASS sun/misc/URLClassPath$Loader(0xDE55DA70) 3CLTEXTCLASS sun/misc/URLClassPath$JarLoader(0xDE55DCE0) 3CLTEXTCLASS sun/misc/FileURLMapper(0xDE55E2D8) 3CLTEXTCLASS sun/misc/JarIndex(0xDE55E4A0) 3CLTEXTCLASS sun/misc/ExtensionDependency(0xDE55E958) 3CLTEXTCLASS java/security/PrivilegedActionException(0xDE55F068) 3CLTEXTCLASS sun/misc/Resource(0xDE55F260) 3CLTEXTCLASS sun/misc/URLClassPath$JarLoader$1(0xDE55F518) 3CLTEXTCLASS com/ibm/oti/vm/AbstractClassLoader$3(0xDE55F750) 3CLTEXTCLASS sun/security/util/ManifestEntryVerifier(0xDE55F898) 3CLTEXTCLASS sun/security/util/ManifestEntryVerifier$1(0xDE55FD40) 3CLTEXTCLASS java/security/Provider(0xDE55FEF0) 3CLTEXTCLASS com/ibm/security/bootstrap/BootstrapProvider(0xDE560818) 3CLTEXTCLASS java/security/Provider$ServiceKey(0xDE560CA0) 3CLTEXTCLASS sun/misc/FloatingDecimal(0xDE560E48) 3CLTEXTCLASS sun/misc/FloatingDecimal$1(0xDE561850) 3CLTEXTCLASS java/util/regex/Pattern$GroupTail(0xDE561970) 3CLTEXTCLASS java/util/regex/Pattern$BitClass(0xDE561AD8) 3CLTEXTCLASS java/util/regex/Pattern$Ques(0xDE561D00) 3CLTEXTCLASS java/util/regex/Pattern$Dummy(0xDE561E88) 3CLTEXTCLASS java/util/regex/Pattern$Branch(0xDE561FA8) 3CLTEXTCLASS java/util/regex/Pattern$Single(0xDE562158) 3CLTEXTCLASS java/util/regex/Pattern$categoryNames(0xDE562338) 3CLTEXTCLASS java/util/regex/Pattern$Category(0xDE562910) 3CLTEXTCLASS java/util/regex/Pattern$Range(0xDE562AD8) 3CLTEXTCLASS java/util/regex/Pattern$All(0xDE562CF0) 3CLTEXTCLASS java/util/regex/Pattern$JavaTypeClass(0xDE562EB8) 3CLTEXTCLASS java/util/regex/Pattern$JavaLowerCase(0xDE5630E8) 3CLTEXTCLASS java/util/regex/Pattern$JavaUpperCase(0xDE563218) 3CLTEXTCLASS java/util/IdentityHashMap(0xDE54FCA8) 3CLTEXTCLASS com/ibm/misc/SystemIntialization$1(0xDE550398) 3CLTEXTCLASS sun/reflect/ReflectionFactory$1(0xDE5504E8) 3CLTEXTCLASS sun/reflect/NativeMethodAccessorImpl(0xDE550690) 3CLTEXTCLASS sun/reflect/DelegatingMethodAccessorImpl(0xDE550888) 3CLTEXTCLASS java/util/Hashtable$HashIterator(0xDE5509D8) 3CLTEXTCLASS java/util/MapEntry$Type(0xDE550CA0) 3CLTEXTCLASS java/util/MapEntry$Type$1(0xDE550E50) 3CLTEXTCLASS java/util/MapEntry$Type$2(0xDE550F90) 3CLTEXTCLASS java/util/MapEntry$Type$3(0xDE5510D0) 3CLTEXTCLASS java/util/MapEntry$Type$4(0xDE551210) 3CLTEXTCLASS java/util/MapEntry$Type$5(0xDE551350) 3CLTEXTCLASS java/util/regex/Pattern(0xDE551488) 3CLTEXTCLASS java/util/regex/Pattern$Node(0xDE552760) 3CLTEXTCLASS java/util/regex/Pattern$LastNode(0xDE552928) 3CLTEXTCLASS java/util/regex/Pattern$GroupHead(0xDE552A70) 3CLTEXTCLASS [Ljava/util/regex/Pattern$GroupHead;(0xDE552BC0) 3CLTEXTCLASS java/util/regex/Pattern$Ctype(0xDE552C80) 3CLTEXTCLASS java/util/regex/ASCII(0xDE552E58) 3CLTEXTCLASS java/util/regex/Pattern$Curly(0xDE5531E8) 3CLTEXTCLASS java/util/regex/Pattern$Slice(0xDE553420) 3CLTEXTCLASS java/util/regex/Pattern$Begin(0xDE5535B8) 3CLTEXTCLASS java/util/regex/Pattern$First(0xDE553708) 3CLTEXTCLASS java/util/regex/Pattern$Start(0xDE5538B8) 3CLTEXTCLASS java/util/regex/Pattern$TreeInfo(0xDE553A68) 3CLTEXTCLASS java/util/regex/MatchResult(0xDE553B78) 3CLTEXTCLASS java/util/regex/Matcher(0xDE553D28) 3CLTEXTCLASS com/ibm/misc/JavaRuntimeVersion(0xDE554498) 3CLTEXTCLASS java/lang/ThreadDeath(0xDE5545C0) 3CLTEXTCLASS java/util/WeakHashMap(0xDE554710) 3CLTEXTCLASS java/lang/ref/ReferenceQueue(0xDE554D40) 3CLTEXTCLASS java/lang/ref/PhantomReference(0xDE554F58) 3CLTEXTCLASS sun/misc/Cleaner(0xDE5550A0) 3CLTEXTCLASS [Ljava/lang/ref/Reference;(0xDE5552E0) 3CLTEXTCLASS java/util/WeakHashMap$Entry(0xDE5553C0) 3CLTEXTCLASS [Ljava/util/WeakHashMap$Entry;(0xDE555670) 3CLTEXTCLASS com/ibm/jvm/Trace(0xDE555728) 3CLTEXTCLASS java/util/jar/JarFile(0xDE555D08) 3CLTEXTCLASS sun/misc/JavaUtilJarAccess(0xDE556448) 3CLTEXTCLASS java/util/jar/JavaUtilJarAccessImpl(0xDE556510) 3CLTEXTCLASS java/util/zip/ZipEntry(0xDE556660) 3CLTEXTCLASS java/util/jar/JarEntry(0xDE556BC8) 3CLTEXTCLASS java/util/jar/JarFile$JarFileEntry(0xDE556DE0) 3CLTEXTCLASS java/io/DataInput(0xDE557008) 3CLTEXTCLASS java/io/DataInputStream(0xDE557218) 3CLTEXTCLASS java/util/zip/InflaterInputStream(0xDE5576B8) 3CLTEXTCLASS java/util/regex/Pattern$JavaTitleCase(0xDE557AA0) 3CLTEXTCLASS java/security/ProtectionDomain(0xDE544748) 3CLTEXTCLASS [Ljava/security/ProtectionDomain;(0xDE544BF0) 3CLTEXTCLASS sun/misc/Launcher$AppClassLoader(0xDE544D58) 3CLTEXTCLASS sun/misc/Launcher$AppClassLoader$1(0xDE545100) 3CLTEXTCLASS java/lang/Class$2(0xDE545268) 3CLTEXTCLASS java/lang/reflect/AccessibleObject(0xDE545430) 3CLTEXTCLASS java/lang/reflect/Member(0xDE5456E0) 3CLTEXTCLASS java/lang/reflect/Method(0xDE545848) 3CLTEXTCLASS java/lang/reflect/Field(0xDE546068) 3CLTEXTCLASS java/lang/reflect/ReflectPermission(0xDE5468A0) 3CLTEXTCLASS sun/reflect/ReflectionFactory$GetReflectionFactoryAction(0xDE5469C0) 3CLTEXTCLASS sun/reflect/ReflectionFactory(0xDE546B08) 3CLTEXTCLASS java/lang/RuntimePermission(0xDE5470D8) 3CLTEXTCLASS java/lang/annotation/Annotation(0xDE547338) 3CLTEXTCLASS [Ljava/lang/annotation/Annotation;(0xDE547430) 3CLTEXTCLASS java/lang/reflect/Constructor(0xDE547550) 3CLTEXTCLASS java/io/BufferedInputStream(0xDE547C98) 3CLTEXTCLASS java/util/concurrent/atomic/AtomicReferenceFieldUpdater(0xDE548020) 3CLTEXTCLASS java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl(0xDE5481C0) 3CLTEXTCLASS sun/reflect/misc/ReflectUtil(0xDE5484F0) 3CLTEXTCLASS java/lang/reflect/Modifier(0xDE548720) 3CLTEXTCLASS sun/reflect/LangReflectAccess(0xDE548A28) 3CLTEXTCLASS java/lang/reflect/ReflectAccess(0xDE548C00) 3CLTEXTCLASS java/io/FileInputStream(0xDE548F10) 3CLTEXTCLASS com/ibm/jvm/io/ConsoleInputStream(0xDE549278) 3CLTEXTCLASS java/lang/Terminator(0xDE549518) 3CLTEXTCLASS sun/misc/SignalHandler(0xDE549690) 3CLTEXTCLASS java/lang/Terminator$1(0xDE5497A0) 3CLTEXTCLASS sun/misc/Signal(0xDE5498D8) 3CLTEXTCLASS com/ibm/misc/AbstractSignalInfo(0xDE549C78) 3CLTEXTCLASS com/ibm/misc/SignalInfo(0xDE549EB8) 3CLTEXTCLASS sun/misc/NativeSignalHandler(0xDE54A0E8) 3CLTEXTCLASS java/lang/Void(0xDE54A248) 3CLTEXTCLASS java/lang/Boolean(0xDE54A378) 3CLTEXTCLASS java/lang/Byte(0xDE54A660) 3CLTEXTCLASS java/lang/Short(0xDE54AA58) 3CLTEXTCLASS java/lang/StringBuffer(0xDE54AF20) 3CLTEXTCLASS com/ibm/misc/SignalDispatcher(0xDE54B840) 3CLTEXTCLASS java/lang/Shutdown(0xDE54BCB0) 3CLTEXTCLASS java/lang/Shutdown$Lock(0xDE54BFA8) 3CLTEXTCLASS java/lang/ApplicationShutdownHooks(0xDE54C0B0) 3CLTEXTCLASS java/util/zip/ZipFile$2(0xDE54C358) 3CLTEXTCLASS java/util/regex/Pattern$JavaDigit(0xDE54C598) 3CLTEXTCLASS com/ibm/nio/cs/IBMCharsets(0xDE5296D8) 3CLTEXTCLASS sun/nio/cs/StandardCharsets(0xDE52B290) 3CLTEXTCLASS java/util/SortedMap(0xDE52B3A8) 3CLTEXTCLASS java/util/TreeMap(0xDE52B518) 3CLTEXTCLASS java/util/TreeMap$Entry(0xDE52BE70) 3CLTEXTCLASS java/lang/Long(0xDE52C0B0) 3CLTEXTCLASS java/nio/charset/Charset$Lock(0xDE52C698) 3CLTEXTCLASS sun/nio/cs/HistoricallyNamedCharset(0xDE52C788) 3CLTEXTCLASS com/ibm/nio/cs/Converter(0xDE52C890) 3CLTEXTCLASS java/util/ArrayList(0xDE52D1C0) 3CLTEXTCLASS java/lang/reflect/Array(0xDE52D6C8) 3CLTEXTCLASS java/io/ExpiringCache$Entry(0xDE52D9E0) 3CLTEXTCLASS sun/net/www/ParseUtil(0xDE52DB40) 3CLTEXTCLASS java/util/BitSet(0xDE52DF30) 3CLTEXTCLASS java/net/URL(0xDE52E600) 3CLTEXTCLASS java/net/URL$Lock(0xDE52EF10) 3CLTEXTCLASS java/net/Parts(0xDE52F020) 3CLTEXTCLASS java/net/URLStreamHandler(0xDE52F1D0) 3CLTEXTCLASS sun/net/www/protocol/file/Handler(0xDE52F690) 3CLTEXTCLASS [Ljava/net/URL;(0xDE52F960) 3CLTEXTCLASS com/ibm/jvm/util/HashMapRT(0xDE52FA80) 3CLTEXTCLASS com/ibm/jvm/util/HashMapRT$Entry(0xDE530300) 3CLTEXTCLASS [Lcom/ibm/jvm/util/HashMapRT$Entry;(0xDE530540) 3CLTEXTCLASS com/ibm/oti/shared/Shared(0xDE5305F8) 3CLTEXTCLASS com/ibm/oti/shared/Shared$Monitor(0xDE530848) 3CLTEXTCLASS com/ibm/oti/util/PriviAction(0xDE530950) 3CLTEXTCLASS sun/misc/URLClassPath(0xDE530B78) 3CLTEXTCLASS java/util/Stack(0xDE531350) 3CLTEXTCLASS java/security/Guard(0xDE531588) 3CLTEXTCLASS java/util/Vector(0xDE51BF68) 3CLTEXTCLASS java/util/zip/ZipFile$ZipFileInputStream(0xDE51C7E8) 3CLTEXTCLASS com/ibm/jvm/io/LocalizedInputStream$1(0xDE51CA10) 3CLTEXTCLASS java/io/Writer(0xDE51CB80) 3CLTEXTCLASS java/io/OutputStreamWriter(0xDE51CEA0) 3CLTEXTCLASS sun/nio/cs/StreamEncoder(0xDE51D180) 3CLTEXTCLASS sun/nio/cs/StreamEncoder$ConverterSE(0xDE51D5F8) 3CLTEXTCLASS java/io/BufferedWriter(0xDE51D8E0) 3CLTEXTCLASS com/ibm/misc/SystemIntialization(0xDE51DC18) 3CLTEXTCLASS com/ibm/oti/vm/AbstractClassLoader(0xDE51E0B0) 3CLTEXTCLASS com/ibm/oti/vm/BootstrapClassLoader(0xDE51E878) 3CLTEXTCLASS com/ibm/oti/vm/AbstractClassLoader$CacheLock(0xDE51EC60) 3CLTEXTCLASS com/ibm/oti/vm/AbstractClassLoader$ManifestLock(0xDE51ED68) 3CLTEXTCLASS java/util/Arrays(0xDE51EE70) 3CLTEXTCLASS com/ibm/oti/vm/BootstrapClassLoader$FindClassLock(0xDE51FB98) 3CLTEXTCLASS java/lang/ClassLoader$AssertionLock(0xDE51FCA0) 3CLTEXTCLASS java/lang/ClassLoader$LazyInitLock(0xDE51FDA8) 3CLTEXTCLASS sun/misc/Launcher(0xDE51FEB0) 3CLTEXTCLASS java/lang/Package(0xDE520330) 3CLTEXTCLASS java/util/Hashtable$HashtableCacheHashEntry(0xDE5208B0) 3CLTEXTCLASS java/net/URLStreamHandlerFactory(0xDE5209E8) 3CLTEXTCLASS sun/misc/Launcher$Factory(0xDE520AB0) 3CLTEXTCLASS java/security/SecureClassLoader(0xDE520D58) 3CLTEXTCLASS java/net/URLClassLoader(0xDE5211E0) 3CLTEXTCLASS sun/misc/Launcher$ExtClassLoader(0xDE521CF0) 3CLTEXTCLASS sun/security/util/Debug(0xDE5220D8) 3CLTEXTCLASS java/util/StringTokenizer(0xDE522578) 3CLTEXTCLASS [Ljava/io/File;(0xDE5228B8) 3CLTEXTCLASS sun/misc/Launcher$ExtClassLoader$1(0xDE522970) 3CLTEXTCLASS java/io/FilenameFilter(0xDE522A88) 3CLTEXTCLASS sun/misc/JarFilter(0xDE522B50) 3CLTEXTCLASS java/nio/charset/Charset(0xDE522CB0) 3CLTEXTCLASS java/nio/charset/Charset$1(0xDE523438) 3CLTEXTCLASS java/nio/charset/spi/CharsetProvider(0xDE523568) 3CLTEXTCLASS com/ibm/nio/cs/CharsetContains(0xDE5236A0) 3CLTEXTCLASS sun/net/www/protocol/jar/Handler(0xDE523900) 3CLTEXTCLASS java/security/Permission(0xDE523C00) 3CLTEXTCLASS java/lang/StringBuilder(0xDE510688) 3CLTEXTCLASS sun/io/ByteToCharUTF8(0xDE510FB8) 3CLTEXTCLASS sun/misc/VM(0xDE511348) 3CLTEXTCLASS java/lang/StringCoding$EncoderCache(0xDE5116C0) 3CLTEXTCLASS java/lang/StringCoding$4(0xDE511898) 3CLTEXTCLASS java/lang/StringCoding$EncoderCache$1(0xDE5119B8) 3CLTEXTCLASS sun/io/CharToByteConverter(0xDE511B60) 3CLTEXTCLASS sun/io/CharToByteUTF8(0xDE5120C8) 3CLTEXTCLASS java/io/Closeable(0xDE5123E8) 3CLTEXTCLASS java/io/Flushable(0xDE512498) 3CLTEXTCLASS java/io/OutputStream(0xDE512570) 3CLTEXTCLASS java/io/FilterOutputStream(0xDE512730) 3CLTEXTCLASS java/io/BufferedOutputStream(0xDE5128F8) 3CLTEXTCLASS java/io/FileOutputStream(0xDE512AF0) 3CLTEXTCLASS java/io/FileDescriptor(0xDE512E68) 3CLTEXTCLASS java/io/PrintStream(0xDE513148) 3CLTEXTCLASS com/ibm/jvm/io/ConsolePrintStream(0xDE5139F0) 3CLTEXTCLASS java/io/InputStream(0xDE513FB8) 3CLTEXTCLASS java/io/FilterInputStream(0xDE514260) 3CLTEXTCLASS com/ibm/jvm/io/LocalizedInputStream(0xDE514480) 3CLTEXTCLASS java/util/zip/ZipConstants(0xDE5147C0) 3CLTEXTCLASS java/util/zip/ZipFile(0xDE514938) 3CLTEXTCLASS sun/security/action/LoadLibraryAction(0xDE5151F0) 3CLTEXTCLASS java/io/File(0xDE5153A0) 3CLTEXTCLASS java/io/FileSystem(0xDE515E48) 3CLTEXTCLASS java/io/UnixFileSystem(0xDE516280) 3CLTEXTCLASS java/io/ExpiringCache(0xDE5168A0) 3CLTEXTCLASS java/util/LinkedHashMap(0xDE516BB8) 3CLTEXTCLASS java/io/ExpiringCache$1(0xDE516FC8) 3CLTEXTCLASS java/util/LinkedHashMap$Entry(0xDE517170) 3CLTEXTCLASS sun/misc/JavaIODeleteOnExitAccess(0xDE517308) 3CLTEXTCLASS java/io/File$1(0xDE5173D8) 3CLTEXTCLASS sun/misc/SharedSecrets(0xDE517508) 3CLTEXTCLASS sun/misc/Unsafe(0xDE517860) 3CLTEXTCLASS java/security/BasicPermission(0xDE5182C8) 3CLTEXTCLASS sun/io/CharacterEncoding(0xDE5080B0) 3CLTEXTCLASS java/util/AbstractMap(0xDE509870) 3CLTEXTCLASS java/util/HashMap(0xDE509CC8) 3CLTEXTCLASS java/lang/Float(0xDE50A5E0) 3CLTEXTCLASS java/util/HashMap$Entry(0xDE50AA20) 3CLTEXTCLASS [Ljava/util/HashMap$Entry;(0xDE50AC88) 3CLTEXTCLASS java/lang/Integer(0xDE50AD60) 3CLTEXTCLASS java/util/Collections(0xDE50B3D8) 3CLTEXTCLASS java/util/Random(0xDE50BEB0) 3CLTEXTCLASS java/lang/Iterable(0xDE50C160) 3CLTEXTCLASS java/util/Collection(0xDE50C210) 3CLTEXTCLASS java/util/AbstractCollection(0xDE50C3F8) 3CLTEXTCLASS java/util/Set(0xDE50C740) 3CLTEXTCLASS java/util/AbstractSet(0xDE50C930) 3CLTEXTCLASS java/util/Collections$EmptySet(0xDE50CB80) 3CLTEXTCLASS java/util/List(0xDE50CD28) 3CLTEXTCLASS java/util/AbstractList(0xDE50CFF8) 3CLTEXTCLASS java/util/RandomAccess(0xDE50D448) 3CLTEXTCLASS java/util/Collections$EmptyList(0xDE50D558) 3CLTEXTCLASS java/util/Collections$EmptyMap(0xDE50D7B0) 3CLTEXTCLASS java/util/Collections$ReverseComparator(0xDE50D9E0) 3CLTEXTCLASS java/util/Collections$UnmodifiableMap(0xDE50DB78) 3CLTEXTCLASS java/util/Locale(0xDE50DF10) 3CLTEXTCLASS java/lang/Character(0xDE50E868) 3CLTEXTCLASS java/lang/CharacterDataLatin1(0xDE50F7C0) 3CLTEXTCLASS java/lang/Appendable(0xDE50FB10) 3CLTEXTCLASS sun/reflect/Reflection(0xDE50FBF8) 3CLTEXTCLASS java/security/SecurityPermission(0xDE50FF40) 3CLTEXTCLASS com/ibm/oti/vm/VM(0x100E7C28) 3CLTEXTCLASS [Ljava/lang/String;(0x100E7FA8) 3CLTEXTCLASS java/security/cert/Certificate(0x100E8078) 3CLTEXTCLASS [Ljava/security/cert/Certificate;(0x100E82C8) 3CLTEXTCLASS java/lang/System(0x100E8380) 3CLTEXTCLASS java/lang/Runtime(0x100E8BC8) 3CLTEXTCLASS java/lang/Math(0x100E9120) 3CLTEXTCLASS com/ibm/jvm/Util(0x100EA058) 3CLTEXTCLASS java/lang/Exception(0x100EA250) 3CLTEXTCLASS java/lang/ClassNotFoundException(0x100EA3D8) 3CLTEXTCLASS java/lang/Number(0x100EA580) 3CLTEXTCLASS java/lang/Double(0x100EA728) 3CLTEXTCLASS java/util/Dictionary(0x100EAC18) 3CLTEXTCLASS java/util/Map(0x100EAD78) 3CLTEXTCLASS java/util/Hashtable(0x100EAF58) 3CLTEXTCLASS java/util/Properties(0x100EB750) 3CLTEXTCLASS java/util/Enumeration(0x100EBC98) 3CLTEXTCLASS java/util/Hashtable$EmptyEnumerator(0x100EBD78) 3CLTEXTCLASS java/util/Iterator(0x100EBEB8) 3CLTEXTCLASS java/util/Hashtable$EmptyIterator(0x100EBFA8) 3CLTEXTCLASS java/util/Map$Entry(0x100EC118) 3CLTEXTCLASS java/util/MapEntry(0x100EC228) 3CLTEXTCLASS java/util/Hashtable$Entry(0x100EC420) 3CLTEXTCLASS [Ljava/util/Hashtable$Entry;(0x100EC618) 3CLTEXTCLASS com/ibm/oti/util/Util(0x100EC6D0) 3CLTEXTCLASS java/lang/StringCoding(0x100ECAB0) 3CLTEXTCLASS java/lang/ThreadLocal(0x100ED0D0) 3CLTEXTCLASS java/lang/ThreadLocal$ThreadLocalMap(0x100ED350) 3CLTEXTCLASS java/lang/ref/Reference(0x100ED690) 3CLTEXTCLASS java/lang/ref/WeakReference(0x100ED8A8) 3CLTEXTCLASS java/lang/ThreadLocal$ThreadLocalMap$Entry(0x100ED9F8) 3CLTEXTCLASS [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;(0x100EDB58) 3CLTEXTCLASS java/lang/StringCoding$DecoderCache(0x100EDC10) 3CLTEXTCLASS java/security/PrivilegedAction(0x100EDDD0) 3CLTEXTCLASS java/lang/StringCoding$2(0x100EDE98) 3CLTEXTCLASS java/security/AccessController(0x100EDFB8) 3CLTEXTCLASS java/security/PrivilegedExceptionAction(0x100EE310) 3CLTEXTCLASS java/lang/StringCoding$DecoderCache$1(0x100EE3D8) 3CLTEXTCLASS sun/io/Converters(0x100EE510) 3CLTEXTCLASS java/lang/ref/SoftReference(0x100EEA80) 3CLTEXTCLASS [Ljava/lang/ref/SoftReference;(0x100EEBD0) 3CLTEXTCLASS [[Ljava/lang/ref/SoftReference;(0x100EEC88) 3CLTEXTCLASS sun/security/action/GetPropertyAction(0x100EED40) 3CLTEXTCLASS sun/io/ByteToCharConverter(0x100EEEE8) 3CLTEXTCLASS java/util/Collections$SynchronizedMap(0x100EF348) 3CLTEXTCLASS java/security/AccessControlContext(0x100EF708) 3CLTEXTCLASS com/ibm/security/x509/DistributionPointName(0x100EFB28) 3CLTEXTCLASS java/lang/Object(0x100BDEB8) 3CLTEXTCLASS java/lang/J9VMInternals(0x100BE0C8) 3CLTEXTCLASS java/io/Serializable(0x100BE5A0) 3CLTEXTCLASS java/lang/reflect/GenericDeclaration(0x100BE638) 3CLTEXTCLASS java/lang/reflect/Type(0x100BE6E8) 3CLTEXTCLASS java/lang/reflect/AnnotatedElement(0x100BE780) 3CLTEXTCLASS java/lang/Class(0x100BE960) 3CLTEXTCLASS void(0x100BFFB8) 3CLTEXTCLASS boolean(0x100C0048) 3CLTEXTCLASS java/lang/Cloneable(0x100C00D8) 3CLTEXTCLASS [Z(0x100C0188) 3CLTEXTCLASS char(0x100C0238) 3CLTEXTCLASS [C(0x100C02E0) 3CLTEXTCLASS float(0x100C0380) 3CLTEXTCLASS [F(0x100C0428) 3CLTEXTCLASS double(0x100C04C8) 3CLTEXTCLASS [D(0x100C0570) 3CLTEXTCLASS byte(0x100C0610) 3CLTEXTCLASS [B(0x100C06B8) 3CLTEXTCLASS short(0x100C0758) 3CLTEXTCLASS [S(0x100C0800) 3CLTEXTCLASS int(0x100C08A0) 3CLTEXTCLASS [I(0x100C0948) 3CLTEXTCLASS long(0x100C09E8) 3CLTEXTCLASS [J(0x100C0A90) 3CLTEXTCLASS java/lang/Comparable(0x100C0B30) 3CLTEXTCLASS java/lang/CharSequence(0x100C0BE0) 3CLTEXTCLASS java/lang/String(0x100C0D98) 3CLTEXTCLASS java/util/Comparator(0x100C1A78) 3CLTEXTCLASS java/lang/String$CaseInsensitiveComparator(0x100C1B58) 3CLTEXTCLASS java/io/ObjectStreamField(0x100C1CF0) 3CLTEXTCLASS [Ljava/io/ObjectStreamField;(0x100C20D8) 3CLTEXTCLASS [Ljava/lang/Class;(0x100C2190) 3CLTEXTCLASS [Ljava/lang/Object;(0x100C2248) 3CLTEXTCLASS java/lang/Class$CacheKey(0x100C2300) 3CLTEXTCLASS java/lang/Runnable(0x100C2460) 3CLTEXTCLASS java/lang/Thread(0x100C25A0) 3CLTEXTCLASS java/lang/Thread$UniqueIdLock(0x100C3140) 3CLTEXTCLASS java/lang/StackTraceElement(0x100C3258) 3CLTEXTCLASS java/lang/Throwable(0x100C3518) 3CLTEXTCLASS java/lang/Error(0x100C39B0) 3CLTEXTCLASS java/lang/VirtualMachineError(0x100C3B38) 3CLTEXTCLASS java/lang/OutOfMemoryError(0x100C3C90) 3CLTEXTCLASS sun/reflect/MagicAccessorImpl(0x100C3DC0) 3CLTEXTCLASS sun/reflect/ConstructorAccessor(0x100C3E90) 3CLTEXTCLASS sun/reflect/ConstructorAccessorImpl(0x100C3F58) 3CLTEXTCLASS sun/reflect/MethodAccessor(0x100C4048) 3CLTEXTCLASS sun/reflect/MethodAccessorImpl(0x100C4110) 3CLTEXTCLASS java/lang/Thread$UncaughtExceptionHandler(0x100C4200) 3CLTEXTCLASS java/lang/ThreadGroup(0x100C4330) 3CLTEXTCLASS [Ljava/lang/Thread;(0x100C4A70) 3CLTEXTCLASS [Ljava/lang/ThreadGroup;(0x100C4B28) 3CLTEXTCLASS java/lang/ThreadGroup$ChildrenGroupsLock(0x100C4BE0) 3CLTEXTCLASS java/lang/ThreadGroup$ChildrenThreadsLock(0x100C4CE8) 3CLTEXTCLASS java/lang/Thread$ThreadLock(0x100C4DF0) 3CLTEXTCLASS java/lang/ClassLoader(0x100C4F90) 2CLTEXTCLLOAD Loader sun/misc/Launcher$ExtClassLoader(0xDFDCEB20) 3CLTEXTCLASS com/ibm/crypto/provider/vb(0xDA3B6F80) 3CLTEXTCLASS com/ibm/crypto/provider/dc(0xDA3B7320) 3CLTEXTCLASS com/ibm/crypto/provider/fc(0xDA3B76B8) 3CLTEXTCLASS com/ibm/crypto/provider/DESedeKeyFactory(0xDA3B79F8) 3CLTEXTCLASS com/ibm/crypto/provider/DESedeKey(0xDA3B7CF0) 3CLTEXTCLASS com/ibm/crypto/provider/DESKeyGenerator(0xDA3B7FE8) 3CLTEXTCLASS com/ibm/crypto/provider/RC4(0xDA3B8300) 3CLTEXTCLASS com/ibm/crypto/provider/DHKeyPairGenerator(0xDA3B8770) 3CLTEXTCLASS com/ibm/crypto/provider/DHPublicKey(0xDA3B8B50) 3CLTEXTCLASS com/ibm/crypto/provider/DHPrivateKey(0xDA3B90F0) 3CLTEXTCLASS com/ibm/crypto/provider/b(0xDA3B96A0) 3CLTEXTCLASS com/ibm/crypto/provider/DHKeyAgreement(0xDA3B9770) 3CLTEXTCLASS com/ibm/crypto/provider/DHKeyFactory(0xDA3B9BF8) 3CLTEXTCLASS com/ibm/crypto/provider/RSAKeyFactory(0xDA3BA008) 3CLTEXTCLASS com/ibm/crypto/provider/RSAPublicKey(0xDA3BA588) 3CLTEXTCLASS com/ibm/crypto/provider/oc(0xDA3BA950) 3CLTEXTCLASS com/ibm/crypto/provider/SHA1withRSA(0xDA3BADE0) 3CLTEXTCLASS com/ibm/crypto/provider/c(0xDA3BAFE0) 3CLTEXTCLASS com/ibm/crypto/provider/HmacMD5(0xDA3BB390) 3CLTEXTCLASS com/ibm/crypto/provider/qb(0xDA90BA70) 3CLTEXTCLASS com/ibm/crypto/provider/rb(0xDA90BBD8) 3CLTEXTCLASS com/ibm/crypto/provider/ac(0xDA90BF68) 3CLTEXTCLASS com/ibm/crypto/provider/Padding(0xDA90C180) 3CLTEXTCLASS com/ibm/crypto/provider/FeedbackCipher(0xDA90C260) 3CLTEXTCLASS com/ibm/crypto/provider/ub(0xDA90C368) 3CLTEXTCLASS com/ibm/crypto/provider/wb(0xDA90C768) 3CLTEXTCLASS com/ibm/crypto/provider/ec(0xDA90CB70) 3CLTEXTCLASS com/ibm/crypto/provider/gc(0xDA90CF70) 3CLTEXTCLASS com/ibm/crypto/provider/xb(0xDA90D330) 3CLTEXTCLASS com/ibm/crypto/provider/m(0xDA90D728) 3CLTEXTCLASS com/ibm/crypto/provider/p(0xDA90D878) 3CLTEXTCLASS com/ibm/crypto/provider/q(0xDA90DE08) 3CLTEXTCLASS com/ibm/crypto/provider/lb(0xDA90DF60) 3CLTEXTCLASS com/ibm/security/sasl/IBMSASL(0xDA90E1E8) 3CLTEXTCLASS com/ibm/security/sasl/IBMSASL$1(0xDA90E3B8) 3CLTEXTCLASS com/ibm/crypto/provider/e(0xDA90E528) 3CLTEXTCLASS com/ibm/crypto/provider/DESedeCipher(0xDA90E628) 3CLTEXTCLASS com/ibm/crypto/provider/yb(0xDA90EEE0) 3CLTEXTCLASS com/ibm/crypto/provider/zb(0xDA90F390) 3CLTEXTCLASS com/ibm/crypto/provider/tb(0xDA90F5C0) 3CLTEXTCLASS com/ibm/crypto/provider/DSAParameters(0xDB1F8D08) 3CLTEXTCLASS com/ibm/crypto/provider/DSAKeyFactory(0xDB1F90D8) 3CLTEXTCLASS com/ibm/crypto/provider/DSAPublicKey(0xDB1F9518) 3CLTEXTCLASS com/ibm/crypto/provider/SHA(0xDB1F98A0) 3CLTEXTCLASS com/ibm/crypto/provider/SHA1withDSA(0xDB1F9CB8) 3CLTEXTCLASS com/ibm/crypto/provider/a(0xDB1FA270) 3CLTEXTCLASS com/ibm/crypto/provider/AESCipher(0xDB1FA370) 3CLTEXTCLASS com/ibm/crypto/provider/MD5(0xDE253570) 3CLTEXTCLASS com/ibm/crypto/provider/X509Factory(0xDE253BA0) 3CLTEXTCLASS com/ibm/crypto/provider/nc(0xDE54F2C8) 3CLTEXTCLASS com/ibm/crypto/provider/SecureRandom(0xDE54F668) 3CLTEXTCLASS com/ibm/crypto/provider/j(0xDE5BDFF8) 3CLTEXTCLASS com/ibm/crypto/provider/IBMJCE(0xDE56E190) 2CLTEXTCLLOAD Loader sun/misc/Launcher$AppClassLoader(0xDFDF5CE8) 3CLTEXTCLASS org/eclipse/equinox/launcher/Main(0xDE24B560) 3CLTEXTCLASS org/eclipse/equinox/launcher/Main$SplashHandler(0xDE24D0C8) 3CLTEXTCLASS org/eclipse/equinox/launcher/Main$EclipsePolicy(0xDE24D2A8) 3CLTEXTCLASS org/eclipse/equinox/launcher/Main$StartupClassLoader(0xDE24D560) 3CLTEXTCLASS org/eclipse/equinox/launcher/JNIBridge(0xDE24D7C8) 2CLTEXTCLLOAD Loader org/eclipse/equinox/launcher/Main$StartupClassLoader(0xDFF35C88) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/StateWriter(0x107970A8) 3CLTEXTCLASS [Lorg/eclipse/osgi/framework/internal/core/BundleContextImpl;(0x10797A20) 3CLTEXTCLASS org/eclipse/osgi/internal/serviceregistry/ServiceUse$2(0x10797AD8) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/Msg(0x10797C40) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/NativeCodeSpecificationImpl(0x10797ED8) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/ImportsHolder(0x10798258) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/RequiresHolder(0x107983F8) 3CLTEXTCLASS org/eclipse/osgi/internal/loader/BundleLoader$ClassContext(0x101D0FE0) 3CLTEXTCLASS [Lorg/eclipse/osgi/internal/module/VersionSupplier;(0x101D1180) 3CLTEXTCLASS [Lorg/eclipse/osgi/internal/module/GroupingChecker$PackageRoots;(0x101D1238) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/PackageAdminImpl$2(0x101D12F0) 3CLTEXTCLASS org/eclipse/osgi/internal/permadmin/PermissionInfoCollection(0x101D1440) 3CLTEXTCLASS [Lorg/eclipse/osgi/internal/permadmin/PermissionInfoCollection;(0x101D1878) 3CLTEXTCLASS org/eclipse/osgi/framework/eventmgr/EventManager$EventThread$Queued(0x101D1930) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/AbstractBundle$1(0x101D1A48) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/StartLevelEvent(0x101D1BC0) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/loader/ParallelClassLoader(0x101D1D18) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0x101D1ED0) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/loader/ClasspathManager(0x101D2678) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/loader/FragmentClasspath(0x101D2F80) 3CLTEXTCLASS [Lorg/eclipse/osgi/baseadaptor/loader/FragmentClasspath;(0x101D3150) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/loader/ClasspathEntry(0x101D3220) 3CLTEXTCLASS [Lorg/eclipse/osgi/baseadaptor/loader/ClasspathEntry;(0x101D33F0) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/ClasspathManifest(0x101D34B8) 3CLTEXTCLASS [Lorg/eclipse/osgi/framework/internal/core/FilterImpl;(0x101D3758) 3CLTEXTCLASS org/osgi/util/tracker/ServiceTracker$1(0x101D3810) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/StartLevelManager$1(0x101D3968) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/bundlefile/FileBundleEntry(0x101D3AC0) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/BundleSpecificationImpl(0x101D3D30) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/ResolverError(0x101D3F70) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/ResolverErrorImpl(0x101D40C8) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/StateHelper(0x101D42D0) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/StateHelperImpl(0x101D4478) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/ComputeNodeOrder(0x101D4C40) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/ComputeNodeOrder$Digraph(0x101D4DE0) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/ComputeNodeOrder$Digraph$Vertex(0x101D5130) 3CLTEXTCLASS [Lorg/eclipse/osgi/framework/internal/core/BundleFragment;(0x101D5280) 3CLTEXTCLASS [Lorg/eclipse/osgi/framework/internal/core/BundleHost;(0x101D5338) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/ReadOnlyState(0x101D54A0) 3CLTEXTCLASS [Lorg/eclipse/osgi/service/resolver/ResolverError;(0x101D5AC0) 3CLTEXTCLASS org/osgi/service/url/URLStreamHandlerService(0x101D5B60) 3CLTEXTCLASS org/osgi/service/url/AbstractURLStreamHandlerService(0x101D5CE0) 3CLTEXTCLASS [Lorg/eclipse/osgi/baseadaptor/loader/ClasspathManager;(0x101D5F50) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/AbstractBundle$6(0x101D6010) 3CLTEXTCLASS org/osgi/framework/FrameworkUtil(0x101D6200) 3CLTEXTCLASS org/osgi/framework/FrameworkUtil$FilterImpl(0x101D6380) 3CLTEXTCLASS org/osgi/framework/FrameworkUtil$ServiceReferenceDictionary(0x101D6B80) 3CLTEXTCLASS org/osgi/framework/FrameworkUtil$CaseInsensitiveDictionary(0x101D6D58) 3CLTEXTCLASS org/osgi/framework/FrameworkUtil$FilterImpl$Parser(0x101D6FC8) 3CLTEXTCLASS [Lorg/eclipse/osgi/internal/loader/BundleLoaderProxy;(0x101D7330) 3CLTEXTCLASS org/eclipse/osgi/internal/serviceregistry/ServiceUse$1(0x101D73E8) 3CLTEXTCLASS [Lorg/eclipse/osgi/internal/loader/PackageSource;(0x101D7540) 3CLTEXTCLASS [Lorg/eclipse/osgi/internal/loader/SingleSourcePackage;(0x101D75F8) 3CLTEXTCLASS org/eclipse/osgi/util/NLS$MessagesProperties(0x101D7720) 3CLTEXTCLASS org/eclipse/osgi/service/runnable/ParameterizedRunnable(0x101D79A8) 3CLTEXTCLASS org/eclipse/osgi/service/runnable/ApplicationRunnable(0x101D7A58) 3CLTEXTCLASS org/eclipse/osgi/service/runnable/ApplicationLauncher(0x101D7B10) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/AdaptorMsg(0x101D7BE8) 3CLTEXTCLASS [Lorg/osgi/framework/Filter;(0x101D7DB8) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/EclipseAppLauncher(0x101D7E80) 3CLTEXTCLASS org/eclipse/osgi/util/TextProcessor(0x101D8328) 3CLTEXTCLASS org/eclipse/osgi/framework/debug/EclipseDebugTrace(0x101D8638) 3CLTEXTCLASS org/eclipse/osgi/internal/module/VersionHashMap(0xDDC62728) 3CLTEXTCLASS org/eclipse/osgi/internal/module/GroupingChecker(0xDDC62A78) 3CLTEXTCLASS org/eclipse/osgi/internal/module/GroupingChecker$PackageRoots(0xDDC62E18) 3CLTEXTCLASS [Lorg/eclipse/osgi/internal/module/GenericCapability;(0xDDC630C8) 3CLTEXTCLASS [Lorg/eclipse/osgi/internal/module/ResolverImport;(0xDDC63180) 3CLTEXTCLASS [Lorg/eclipse/osgi/internal/module/ResolverExport;(0xDDC63238) 3CLTEXTCLASS [Lorg/eclipse/osgi/internal/module/BundleConstraint;(0xDDC632F0) 3CLTEXTCLASS org/eclipse/osgi/internal/module/GenericConstraint(0xDDC633F8) 3CLTEXTCLASS [Lorg/eclipse/osgi/internal/module/GenericConstraint;(0xDDC63628) 3CLTEXTCLASS [Lorg/eclipse/osgi/internal/module/ResolverBundle;(0xDDC636E0) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/VersionConstraintImpl(0xDDC637C0) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/HostSpecificationImpl(0xDDC63A98) 3CLTEXTCLASS [Lorg/eclipse/osgi/service/resolver/BundleDelta;(0xDDC63D28) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/EclipseCommandProvider(0xDDC63DF0) 3CLTEXTCLASS org/eclipse/osgi/service/localization/BundleLocalization(0xDDC642F0) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/BundleLocalizationImpl(0xDDC643B8) 3CLTEXTCLASS org/eclipse/osgi/service/security/TrustEngine(0xDDC644F0) 3CLTEXTCLASS org/eclipse/osgi/internal/service/security/KeyStoreTrustEngine(0xDDC64728) 3CLTEXTCLASS org/eclipse/osgi/internal/provisional/verifier/CertificateVerifierFactory(0xDDC64C68) 3CLTEXTCLASS org/eclipse/osgi/internal/signedcontent/LegacyVerifierFactory(0xDDC64D48) 3CLTEXTCLASS org/eclipse/osgi/internal/provisional/verifier/CertificateVerifier(0xDDC64EC8) 3CLTEXTCLASS org/osgi/framework/BundleEvent(0xDDC64FC8) 3CLTEXTCLASS [Lorg/eclipse/osgi/internal/serviceregistry/ServiceReferenceImpl;(0xDDC65130) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/protocol/reference/Handler(0xDDC65218) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/protocol/reference/ReferenceURLConnection(0xDDC65440) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/ReferenceInputStream(0xDDC65810) 3CLTEXTCLASS org/eclipse/osgi/framework/adaptor/FilePath(0xDDC65980) 3CLTEXTCLASS org/eclipse/core/runtime/adaptor/EclipseStarter$InitialBundle(0xDDC65D30) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/adaptor/EclipseStarter$InitialBundle;(0xDDC65E40) 3CLTEXTCLASS [Lorg/osgi/framework/Bundle;(0xDDC65EF8) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/Framework$1(0xDDC65FB0) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/BundleSource(0xDDC661D8) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/Framework$3(0xDDC663A0) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/BundleInstall(0xDDC66528) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/BaseStorage$1(0xDDC66928) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/ImportPackageSpecificationImpl(0xDDC66AA0) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/VersionRange(0xDDC66F70) 3CLTEXTCLASS org/eclipse/osgi/framework/eventmgr/EventManager$1(0xDDC67260) 3CLTEXTCLASS org/eclipse/osgi/framework/eventmgr/EventManager$EventThread(0xDDC67428) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/Semaphore(0xDDC67760) 3CLTEXTCLASS org/eclipse/core/runtime/adaptor/EclipseStarter$StartupEventListener(0xDDC67928) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/PackageAdminImpl$1(0xDDC67AD0) 3CLTEXTCLASS org/eclipse/osgi/event/BatchBundleListener(0xDDC67C10) 3CLTEXTCLASS org/osgi/service/packageadmin/RequiredBundle(0xDDC67CE0) 3CLTEXTCLASS org/eclipse/osgi/internal/loader/BundleLoaderProxy(0xDDC67E28) 3CLTEXTCLASS org/eclipse/osgi/framework/adaptor/ClassLoaderDelegate(0xDDC68410) 3CLTEXTCLASS org/eclipse/osgi/internal/loader/BundleLoader(0xDDC68598) 3CLTEXTCLASS org/eclipse/osgi/internal/loader/SystemBundleLoader(0xDDC69610) 3CLTEXTCLASS org/eclipse/osgi/internal/loader/PackageSource(0xDDC69A50) 3CLTEXTCLASS org/eclipse/osgi/internal/loader/SingleSourcePackage(0xDDC69CA8) 3CLTEXTCLASS org/eclipse/osgi/internal/loader/FilteredSourcePackage(0xDDC69F10) 3CLTEXTCLASS org/eclipse/osgi/internal/loader/MultiSourcePackage(0xDDC6A1C0) 3CLTEXTCLASS org/eclipse/osgi/internal/loader/NullPackageSource(0xDDC6A388) 3CLTEXTCLASS org/eclipse/osgi/internal/loader/BundleLoader$1(0xDDC6A5B0) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/StateObjectFactoryImpl(0xDDED42A0) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/NativeCodeDescription(0xDDED4E80) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/VersionConstraint(0xDDED4FB0) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/NativeCodeSpecification(0xDDED50B8) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/BundleSpecification(0xDDED5188) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/HostSpecification(0xDDED5258) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/ImportPackageSpecification(0xDDED5328) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/ExportPackageDescription(0xDDED5450) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/GenericDescription(0xDDED5548) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/GenericSpecification(0xDDED5620) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/UserState(0xDDED5828) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/StateDelta(0xDDED5B00) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/BaseDescriptionImpl(0xDDED5BF8) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/BundleDescriptionImpl(0xDDED5EC0) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/DisabledInfo(0xDDED6BC0) 3CLTEXTCLASS [Lorg/eclipse/osgi/service/resolver/DisabledInfo;(0xDDED6D90) 3CLTEXTCLASS org/eclipse/osgi/internal/module/ResolverImpl(0xDDED6E80) 3CLTEXTCLASS org/eclipse/osgi/internal/module/VersionSupplier(0xDDED84B8) 3CLTEXTCLASS org/eclipse/osgi/internal/module/ResolverExport(0xDDED86B0) 3CLTEXTCLASS org/eclipse/osgi/internal/module/GenericCapability(0xDDED8888) 3CLTEXTCLASS org/eclipse/osgi/internal/module/ResolverBundle(0xDDED8AA0) 3CLTEXTCLASS org/eclipse/osgi/internal/module/ResolverConstraint(0xDDED95D8) 3CLTEXTCLASS org/eclipse/osgi/internal/module/BundleConstraint(0xDDED9980) 3CLTEXTCLASS org/eclipse/osgi/internal/module/ResolverImport(0xDDED9B38) 3CLTEXTCLASS org/eclipse/osgi/internal/module/MappedList(0xDDED9D28) 3CLTEXTCLASS org/eclipse/osgi/internal/module/PermissionChecker(0xDDED9FB0) 3CLTEXTCLASS org/osgi/framework/PackagePermission(0xDDEDA230) 3CLTEXTCLASS org/osgi/framework/BundlePermission(0xDDEDA6C0) 3CLTEXTCLASS org/eclipse/osgi/framework/util/KeyedHashSet$EquinoxSetIterator(0xDDEDA9F0) 3CLTEXTCLASS [Lorg/eclipse/osgi/service/resolver/BundleDescription;(0xDDEDABA8) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/StateBuilder(0xDDEDAC60) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/ExportPackageDescriptionImpl(0xDDEDB920) 3CLTEXTCLASS [Lorg/eclipse/osgi/service/resolver/ImportPackageSpecification;(0xDDEDBD28) 3CLTEXTCLASS [Lorg/eclipse/osgi/service/resolver/BundleSpecification;(0xDDEDBDE0) 3CLTEXTCLASS [Lorg/eclipse/osgi/service/resolver/ExportPackageDescription;(0xDDEDBE98) 3CLTEXTCLASS [Lorg/eclipse/osgi/service/resolver/GenericSpecification;(0xDDEDBF50) 3CLTEXTCLASS [Lorg/eclipse/osgi/service/resolver/GenericDescription;(0xDDEDC008) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/BundleDescriptionImpl$LazyData(0xDDEDC0C0) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/FilterImpl(0xDDC380D8) 3CLTEXTCLASS org/eclipse/osgi/internal/serviceregistry/ServiceProperties(0xDDC38A80) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/FilterImpl$ServiceReferenceDictionary(0xDDC38DD0) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/FilterImpl$Parser(0xDDC38F90) 3CLTEXTCLASS org/osgi/framework/hooks/service/ListenerHook$ListenerInfo(0xDDC392E8) 3CLTEXTCLASS org/eclipse/osgi/internal/serviceregistry/FilteredServiceListener(0xDDC39400) 3CLTEXTCLASS [Lorg/osgi/framework/ServiceReference;(0xDDC397C8) 3CLTEXTCLASS org/eclipse/osgi/internal/serviceregistry/ShrinkableCollection(0xDDC398B0) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/protocol/ContentHandlerFactory(0xDDC39BC8) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/protocol/MultiplexingContentHandler(0xDDC3A0F0) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/protocol/ContentHandlerProxy(0xDDC3A250) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/BundleRepository(0xDDC3A590) 3CLTEXTCLASS [Lorg/eclipse/osgi/framework/internal/core/AbstractBundle;(0xDDC3A8B8) 3CLTEXTCLASS org/eclipse/osgi/service/runnable/StartupMonitor(0xDDC3A958) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/DefaultStartupMonitor(0xDDC3AA38) 3CLTEXTCLASS org/osgi/framework/ServiceFactory(0xDDC3AC90) 3CLTEXTCLASS org/eclipse/osgi/internal/serviceregistry/ServiceRegistry$2(0xDDC3AD68) 3CLTEXTCLASS org/eclipse/osgi/internal/serviceregistry/ServiceRegistrationImpl(0xDDC3AEE0) 3CLTEXTCLASS org/osgi/framework/ServiceEvent(0xDDC3B578) 3CLTEXTCLASS org/eclipse/osgi/internal/serviceregistry/ModifiedServiceEvent(0xDDC3B6E0) 3CLTEXTCLASS org/eclipse/osgi/internal/serviceregistry/ServiceReferenceImpl(0xDDC3B890) 3CLTEXTCLASS org/eclipse/osgi/framework/eventmgr/CopyOnWriteIdentityMap$EntrySet(0xDDC3BB18) 3CLTEXTCLASS org/eclipse/osgi/framework/eventmgr/ListenerQueue(0xDDC3BCB8) 3CLTEXTCLASS org/eclipse/osgi/framework/eventmgr/CopyOnWriteIdentityMap$EntryIterator(0xDDC3BF20) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/ConsoleManager(0xDDC3C0F8) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/ConsoleManager$1(0xDDC3C5E8) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/ConsoleManager$2(0xDDC3C728) 3CLTEXTCLASS org/eclipse/osgi/framework/console/CommandProvider(0xDDC3C858) 3CLTEXTCLASS org/eclipse/osgi/framework/console/ConsoleSession(0xDDC3C938) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/FrameworkCommandProvider(0xDDC3CBC0) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/BaseDescription(0xDDC3E270) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/BundleDescription(0xDDC3E340) 3CLTEXTCLASS org/eclipse/osgi/internal/serviceregistry/ServiceUse(0xDDC3E5E0) 3CLTEXTCLASS org/osgi/framework/FrameworkEvent(0xDDC3E978) 3CLTEXTCLASS [Lorg/osgi/framework/FrameworkEvent;(0xDDC3EB18) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/Util(0xDDC3EBD0) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/SystemBundleActivator(0xDDC3EDD8) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/BundleContextImpl$1(0xDDC3F1E8) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/ManifestLocalization(0xDDC3F3E0) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/ManifestLocalization$BundleResourceBundle(0xDDC3F7E0) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/ManifestLocalization$LocalizationResourceBundle(0xDDC3F8D8) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/ManifestLocalization$EmptyResouceBundle(0xDDC3FA50) 3CLTEXTCLASS org/eclipse/osgi/framework/util/Headers$ArrayEnumeration(0xDDC3FBF8) 3CLTEXTCLASS org/eclipse/osgi/service/debug/DebugOptionsListener(0xDDC3FD40) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/EclipseAdaptorHook$ParsingService(0xDDC3FE18) 3CLTEXTCLASS org/eclipse/osgi/service/urlconversion/URLConverter(0xDDC3FFB0) 3CLTEXTCLASS org/eclipse/osgi/internal/serviceregistry/ServiceRegistry(0xDDC200C0) 3CLTEXTCLASS org/osgi/framework/ServiceReference(0xDDC20CB0) 3CLTEXTCLASS org/osgi/framework/ServicePermission(0xDDC20DE8) 3CLTEXTCLASS org/osgi/framework/ServiceException(0xDDC21340) 3CLTEXTCLASS org/osgi/framework/ServiceListener(0xDDC214D8) 3CLTEXTCLASS org/eclipse/osgi/framework/adaptor/BundleProtectionDomain(0xDDC215C0) 3CLTEXTCLASS org/osgi/framework/hooks/service/FindHook(0xDDC21708) 3CLTEXTCLASS org/osgi/framework/hooks/service/EventHook(0xDDC217B8) 3CLTEXTCLASS org/osgi/framework/hooks/service/ListenerHook(0xDDC21868) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/BundleFragment(0xDDC21A58) 3CLTEXTCLASS org/eclipse/osgi/service/internal/composite/CompositeModule(0xDDC21F48) 3CLTEXTCLASS org/eclipse/osgi/internal/composite/CompositeBase(0xDDC221C8) 3CLTEXTCLASS org/osgi/service/framework/CompositeBundle(0xDDC22610) 3CLTEXTCLASS org/eclipse/osgi/internal/composite/CompositeImpl(0xDDC22898) 3CLTEXTCLASS org/osgi/service/framework/SurrogateBundle(0xDDC22FD8) 3CLTEXTCLASS org/eclipse/osgi/internal/composite/SurrogateImpl(0xDDC23238) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/AbstractBundle$BundleStatusException(0xDDC236A0) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/InternalSystemBundle$SystemBundleHeaders(0xDDC23838) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/BaseData(0xDDC23B28) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/SystemBundleData(0xDDC24608) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/protocol/bundleentry/Handler(0xDDC24B30) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/SystemBundleData$1(0xDDC24D08) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/bundlefile/DirZipBundleEntry(0xDDC24EA8) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/bundlefile/ZipBundleEntry(0xDDC250F8) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/bundlefile/ZipBundleEntry$ZipBundleEntryInputStream(0xDDC25398) 3CLTEXTCLASS [Lorg/eclipse/osgi/util/ManifestElement;(0xDDC255D8) 3CLTEXTCLASS org/osgi/framework/ServiceRegistration(0xDDC25678) 3CLTEXTCLASS org/osgi/framework/BundleActivator(0xDDC25748) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/BundleURLConnection(0xDDC258C8) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/protocol/MultiplexingFactory(0xDDC25BF8) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/protocol/StreamHandlerFactory(0xDDC260A8) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/protocol/MultiplexingURLStreamHandler(0xDDC26738) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/protocol/URLStreamHandlerProxy(0xDDC26CF8) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/protocol/URLStreamHandlerFactoryProxyFor15(0xDDC27138) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/protocol/MultiplexingFactory$InternalSecurityManager(0xDDC27418) 3CLTEXTCLASS org/osgi/util/tracker/ServiceTracker(0xDDC27618) 3CLTEXTCLASS org/osgi/util/tracker/AbstractTracked(0xDDC27C08) 3CLTEXTCLASS org/osgi/framework/AllServiceListener(0xDDC27F50) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/StateImpl(0xDDEE5608) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/SystemState(0xDDEE6948) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/StateObjectFactory(0xDDEE6B38) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/Resolver(0xDDEE6DF0) 3CLTEXTCLASS org/eclipse/osgi/storagemanager/StorageManager(0xDDEE6F90) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/reliablefile/ReliableFileInputStream(0xDDEE7968) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/reliablefile/ReliableFileOutputStream(0xDDEE7C30) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/Locker_JavaNio(0xDDEE7F18) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/reliablefile/ReliableFile(0xDDEE8190) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/Tokenizer(0xDDEE8A00) 3CLTEXTCLASS org/osgi/service/packageadmin/PackageAdmin(0xDDEE8BC8) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/PackageAdminImpl(0xDDEE8D80) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/PackageAdminImpl$GetBundleAction(0xDDEE9A18) 3CLTEXTCLASS org/osgi/service/permissionadmin/PermissionAdmin(0xDDEE9B38) 3CLTEXTCLASS org/osgi/service/condpermadmin/ConditionalPermissionAdmin(0xDDEE9C28) 3CLTEXTCLASS org/eclipse/osgi/internal/permadmin/SecurityAdmin(0xDDEE9DA8) 3CLTEXTCLASS org/osgi/service/condpermadmin/ConditionalPermissionInfo(0xDDEEA988) 3CLTEXTCLASS org/osgi/service/condpermadmin/ConditionalPermissionUpdate(0xDDEEAAD8) 3CLTEXTCLASS org/eclipse/osgi/internal/permadmin/BundlePermissions(0xDDEEABC8) 3CLTEXTCLASS org/osgi/service/permissionadmin/PermissionInfo(0xDDEEAE08) 3CLTEXTCLASS [Lorg/osgi/service/permissionadmin/PermissionInfo;(0xDDEEB110) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/BasePermissionStorage(0xDDEEB1E0) 3CLTEXTCLASS org/eclipse/osgi/storagemanager/StorageManager$Entry(0xDDEEB470) 3CLTEXTCLASS org/eclipse/osgi/internal/permadmin/PermissionAdminTable(0xDDEEB620) 3CLTEXTCLASS org/eclipse/osgi/internal/permadmin/SecurePermissionStorage(0xDDEEB830) 3CLTEXTCLASS org/eclipse/osgi/internal/permadmin/SecurityTable(0xDDEEBAC8) 3CLTEXTCLASS org/eclipse/osgi/internal/permadmin/SecurityRow(0xDDEEBDA8) 3CLTEXTCLASS [Lorg/eclipse/osgi/internal/permadmin/SecurityRow;(0xDDEEC5C0) 3CLTEXTCLASS org/osgi/service/startlevel/StartLevel(0xDDEEC660) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/StartLevelManager(0xDDEEC7E8) 3CLTEXTCLASS org/osgi/util/tracker/ServiceTracker$Tracked(0xDDEED0D0) 3CLTEXTCLASS org/osgi/util/tracker/ServiceTracker$AllTracked(0xDDEED340) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/AbstractBundle(0xDDEDD5F8) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/BundleHost(0xDDEDE760) 3CLTEXTCLASS org/osgi/framework/launch/Framework(0xDDEDF0A0) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/InternalSystemBundle(0xDDEDF368) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/Framework$DuplicateBundleException(0xDDEDFAD8) 3CLTEXTCLASS org/osgi/framework/AdminPermission(0xDDEDFC70) 3CLTEXTCLASS org/eclipse/osgi/internal/permadmin/EquinoxSecurityManager(0xDDEE02A0) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/BundleContextImpl(0xDDEE07E0) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/ContextFinder(0xDDEE1270) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/AliasMapper(0xDDEE1720) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/Framework$GetDataFileAction(0xDDEE19A0) 3CLTEXTCLASS org/osgi/framework/Constants(0xDDEE1AD0) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/Constants(0xDDEE1FA8) 3CLTEXTCLASS org/eclipse/osgi/util/NLS(0xDDEE2380) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/ContextFinder$2(0xDDEE2978) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/ContextFinder$1(0xDDEE2B08) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/ContextFinder$Finder(0xDDEE2D38) 3CLTEXTCLASS org/eclipse/osgi/service/pluginconversion/PluginConverter(0xDDEE2EC0) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/PluginConverterImpl(0xDDEE2FB8) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/IPluginInfo(0xDDEE3F70) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/StateManager(0xDDEE4178) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/State(0xDDEE4878) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/BaseStorage$StateSaver(0xDDEE4C20) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/URLConverterImpl(0xDDEE4F38) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/reliablefile/ReliableFile$CacheInfo(0xDDEE50B8) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/StateDeltaImpl(0xDDEE51E8) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/EclipseAdaptorHook(0xDDECC210) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/EclipseClassLoadingHook(0xDDECC938) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/EclipseLazyStarter(0xDDECCF48) 3CLTEXTCLASS org/eclipse/osgi/framework/adaptor/StatusException(0xDDECD5D0) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/EclipseLazyStarter$TerminatingClassNotFoundException(0xDDECD6E8) 3CLTEXTCLASS org/eclipse/core/runtime/internal/stats/StatsManager(0xDDECD888) 3CLTEXTCLASS org/eclipse/osgi/service/debug/DebugOptions(0xDDECDFF0) 3CLTEXTCLASS org/osgi/util/tracker/ServiceTrackerCustomizer(0xDDECE188) 3CLTEXTCLASS org/eclipse/osgi/framework/debug/FrameworkDebugOptions(0xDDECE2C8) 3CLTEXTCLASS org/eclipse/osgi/service/debug/DebugTrace(0xDDECEBC0) 3CLTEXTCLASS org/osgi/framework/InvalidSyntaxException(0xDDECED20) 3CLTEXTCLASS org/eclipse/osgi/framework/debug/Debug(0xDDECEEB8) 3CLTEXTCLASS org/eclipse/osgi/signedcontent/SignedContentFactory(0xDDECF430) 3CLTEXTCLASS org/eclipse/osgi/internal/signedcontent/SignedBundleHook(0xDDECF538) 3CLTEXTCLASS org/eclipse/osgi/internal/signedcontent/SignedContentConstants(0xDDED0088) 3CLTEXTCLASS org/eclipse/osgi/signedcontent/SignedContent(0xDDED02B0) 3CLTEXTCLASS org/eclipse/osgi/internal/signedcontent/SignedBundleFile(0xDDED0430) 3CLTEXTCLASS org/osgi/framework/Filter(0xDDED0920) 3CLTEXTCLASS org/osgi/service/framework/CompositeBundleFactory(0xDDED0A20) 3CLTEXTCLASS org/eclipse/osgi/internal/module/CompositeResolveHelperRegistry(0xDDED0AE8) 3CLTEXTCLASS org/eclipse/osgi/internal/composite/CompositeConfigurator(0xDDED0BF8) 3CLTEXTCLASS org/eclipse/osgi/internal/module/CompositeResolveHelper(0xDDED1248) 3CLTEXTCLASS org/osgi/framework/BundleReference(0xDDED12F8) 3CLTEXTCLASS org/eclipse/osgi/framework/adaptor/BundleClassLoader(0xDDED13A8) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/loader/BaseClassLoader(0xDDED1508) 3CLTEXTCLASS org/eclipse/osgi/framework/log/FrameworkLogEntry(0xDDED1658) 3CLTEXTCLASS [Lorg/eclipse/osgi/framework/log/FrameworkLogEntry;(0xDDED1870) 3CLTEXTCLASS org/eclipse/core/runtime/adaptor/EclipseLog(0xDDED1988) 3CLTEXTCLASS org/eclipse/osgi/framework/adaptor/EventPublisher(0xDDED2418) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/Framework(0xDDED2588) 3CLTEXTCLASS org/osgi/framework/BundleContext(0xDDED3F20) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/BaseStorage(0xDDEC4268) 3CLTEXTCLASS org/eclipse/osgi/storagemanager/ManagedOutputStream(0xDDEC5848) 3CLTEXTCLASS org/eclipse/osgi/framework/adaptor/PermissionStorage(0xDDEC5A88) 3CLTEXTCLASS org/eclipse/osgi/framework/adaptor/BundleOperation(0xDDEC5B78) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/bundlefile/BundleFile(0xDDEC5C90) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/bundlefile/DirBundleFile(0xDDEC6148) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/bundlefile/ZipBundleFile(0xDDEC6418) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/bundlefile/NestedDirBundleFile(0xDDEC6AC8) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/bundlefile/BundleFileWrapperChain(0xDDEC6D10) 3CLTEXTCLASS org/eclipse/osgi/framework/eventmgr/EventDispatcher(0xDDEC6F40) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/bundlefile/MRUBundleFileList(0xDDEC7020) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/protocol/ProtocolActivator(0xDDEC7438) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/BundleResourceHandler(0xDDEC7538) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/protocol/bundleresource/Handler(0xDDEC7AA8) 3CLTEXTCLASS org/eclipse/osgi/framework/util/SecureAction(0xDDEC7CB0) 3CLTEXTCLASS org/eclipse/osgi/framework/util/SecureAction$1(0xDDEC83C8) 3CLTEXTCLASS org/eclipse/osgi/framework/util/SecureAction$2(0xDDEC85E0) 3CLTEXTCLASS org/eclipse/osgi/framework/util/SecureAction$3(0xDDEC8770) 3CLTEXTCLASS [Lorg/eclipse/osgi/baseadaptor/bundlefile/BundleFile;(0xDDEC8888) 3CLTEXTCLASS org/eclipse/osgi/framework/eventmgr/EventManager(0xDDEC8948) 3CLTEXTCLASS org/eclipse/osgi/framework/eventmgr/CopyOnWriteIdentityMap(0xDDEC8BB0) 3CLTEXTCLASS org/eclipse/osgi/framework/eventmgr/CopyOnWriteIdentityMap$Entry(0xDDEC8F30) 3CLTEXTCLASS [Lorg/eclipse/osgi/framework/eventmgr/CopyOnWriteIdentityMap$Entry;(0xDDEC90A8) 3CLTEXTCLASS org/eclipse/osgi/framework/util/KeyedHashSet(0xDDEC91A8) 3CLTEXTCLASS [Lorg/eclipse/osgi/framework/util/KeyedElement;(0xDDEC95F8) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/BaseClassLoadingHook(0xDDEC96C8) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/DevClassLoadingHook(0xDDEC9A68) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/DevClassPathHelper(0xDDEC9E60) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/EclipseStorageHook(0xDDECA150) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/CachedManifest(0xDDECADC8) 3CLTEXTCLASS org/eclipse/osgi/service/pluginconversion/PluginConversionException(0xDDECB2A8) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/EclipseLogHook(0xDDECB448) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/EclipseErrorHandler(0xDDECB950) 3CLTEXTCLASS org/osgi/framework/Bundle(0xDDECBC50) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/BundleDelta(0xDDECBED8) 3CLTEXTCLASS [Lorg/eclipse/osgi/framework/util/Headers;(0xDDECBFF0) 3CLTEXTCLASS [Lorg/osgi/framework/ServiceRegistration;(0xDDECC0A8) 3CLTEXTCLASS org/eclipse/osgi/framework/util/Headers(0xDDE22028) 3CLTEXTCLASS org/eclipse/osgi/framework/adaptor/FrameworkAdaptor(0xDDE22498) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/BaseAdaptor(0xDDE22758) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xDDE23080) 3CLTEXTCLASS org/eclipse/osgi/framework/adaptor/BundleData(0xDDE231E8) 3CLTEXTCLASS org/eclipse/osgi/framework/adaptor/BundleWatcher(0xDDE23450) 3CLTEXTCLASS org/eclipse/osgi/service/resolver/PlatformAdmin(0xDDE23520) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/HookRegistry(0xDDE236B8) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/hooks/AdaptorHook(0xDDE23CE8) 3CLTEXTCLASS [Lorg/eclipse/osgi/baseadaptor/hooks/AdaptorHook;(0xDDE23E20) 3CLTEXTCLASS [Lorg/eclipse/osgi/framework/adaptor/BundleWatcher;(0xDDE23ED8) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/hooks/ClassLoadingHook(0xDDE23F78) 3CLTEXTCLASS [Lorg/eclipse/osgi/baseadaptor/hooks/ClassLoadingHook;(0xDDE24090) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/hooks/ClassLoadingStatsHook(0xDDE24130) 3CLTEXTCLASS [Lorg/eclipse/osgi/baseadaptor/hooks/ClassLoadingStatsHook;(0xDDE24238) 3CLTEXTCLASS org/eclipse/osgi/framework/adaptor/ClassLoaderDelegateHook(0xDDE242D8) 3CLTEXTCLASS [Lorg/eclipse/osgi/framework/adaptor/ClassLoaderDelegateHook;(0xDDE24410) 3CLTEXTCLASS org/eclipse/osgi/framework/util/KeyedElement(0xDDE244B0) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/hooks/StorageHook(0xDDE24580) 3CLTEXTCLASS [Lorg/eclipse/osgi/baseadaptor/hooks/StorageHook;(0xDDE246E8) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/hooks/BundleFileFactoryHook(0xDDE24788) 3CLTEXTCLASS [Lorg/eclipse/osgi/baseadaptor/hooks/BundleFileFactoryHook;(0xDDE24850) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/hooks/BundleFileWrapperFactoryHook(0xDDE248F0) 3CLTEXTCLASS [Lorg/eclipse/osgi/baseadaptor/hooks/BundleFileWrapperFactoryHook;(0xDDE249B8) 3CLTEXTCLASS org/eclipse/osgi/util/ManifestElement(0xDDE24A98) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/HookConfigurator(0xDDE25060) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/BaseHookConfigurator(0xDDE25128) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/BaseStorageHook(0xDDE25320) 3CLTEXTCLASS org/eclipse/core/runtime/adaptor/LocationManager(0xDDE1DF68) 3CLTEXTCLASS org/eclipse/osgi/service/datalocation/Location(0xDDE1E678) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/LocationHelper(0xDDE1E918) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/BasicLocation(0xDDE1EB38) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/Locker(0xDDE1F148) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/AdaptorUtil(0xDDE1F230) 3CLTEXTCLASS org/osgi/framework/Version(0xDDE1F7A0) 3CLTEXTCLASS org/eclipse/osgi/internal/baseadaptor/InvalidVersion(0xDDE1FB20) 3CLTEXTCLASS org/eclipse/osgi/baseadaptor/bundlefile/BundleEntry(0xDDE1FC70) 3CLTEXTCLASS org/osgi/framework/SynchronousBundleListener(0xDDE1FE90) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/core/FrameworkProperties(0xDDE1CF38) 3CLTEXTCLASS org/eclipse/osgi/service/environment/EnvironmentInfo(0xDDE1D418) 3CLTEXTCLASS org/eclipse/core/runtime/internal/adaptor/EclipseEnvironmentInfo(0xDDE1D5B0) 3CLTEXTCLASS org/eclipse/osgi/internal/resolver/BundleDeltaImpl(0xDDE1DB50) 3CLTEXTCLASS org/osgi/service/url/URLStreamHandlerSetter(0xDDE1DDF8) 3CLTEXTCLASS org/osgi/framework/BundleException(0xDDE1C738) 3CLTEXTCLASS org/eclipse/osgi/internal/profile/Profile(0xDDE1C948) 3CLTEXTCLASS org/eclipse/osgi/internal/profile/ProfileLogger(0xDDE1CD00) 3CLTEXTCLASS org/eclipse/osgi/framework/log/FrameworkLog(0xDE2E67B8) 3CLTEXTCLASS org/osgi/framework/FrameworkListener(0xDE2E68D8) 3CLTEXTCLASS org/osgi/framework/BundleListener(0xDE2E6990) 3CLTEXTCLASS org/eclipse/osgi/framework/internal/protocol/URLStreamHandlerSetter(0xDE2E6A68) 3CLTEXTCLASS org/eclipse/core/runtime/adaptor/EclipseStarter(0xDDE18060) 2CLTEXTCLLOAD Loader org/eclipse/osgi/baseadaptor/BaseAdaptor$1(0xE0264568) 2CLTEXTCLLOAD Loader org/eclipse/osgi/framework/util/SecureAction$2(0xE05D1198) 2CLTEXTCLLOAD Loader org/eclipse/core/runtime/internal/adaptor/ContextFinder(0xE0643408) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A682F0) 3CLTEXTCLASS org/eclipse/equinox/internal/simpleconfigurator/utils/SimpleConfiguratorUtils(0x101DEC00) 3CLTEXTCLASS org/eclipse/equinox/internal/simpleconfigurator/utils/BundleInfo(0x101DF198) 3CLTEXTCLASS [Lorg/eclipse/equinox/internal/simpleconfigurator/utils/BundleInfo;(0x101DF470) 3CLTEXTCLASS org/eclipse/equinox/internal/simpleconfigurator/ConfigApplier$1(0x101DF528) 3CLTEXTCLASS org/eclipse/equinox/internal/simpleconfigurator/utils/StateResolverUtils(0x101DF668) 3CLTEXTCLASS org/eclipse/equinox/internal/simpleconfigurator/SimpleConfiguratorFactory(0x101DF968) 3CLTEXTCLASS org/eclipse/equinox/internal/simpleconfigurator/console/ConfiguratorCommandProvider(0x101DFAC0) 3CLTEXTCLASS org/eclipse/equinox/internal/simpleconfigurator/ConfigApplier(0x100E1040) 3CLTEXTCLASS org/eclipse/equinox/internal/simpleconfigurator/utils/URIUtil(0x100E1768) 3CLTEXTCLASS org/eclipse/equinox/internal/simpleconfigurator/SimpleConfiguratorImpl(0x100C6F20) 3CLTEXTCLASS org/eclipse/equinox/internal/simpleconfigurator/utils/Utils(0x100C7240) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/configurator/Configurator(0x101AE3A8) 3CLTEXTCLASS org/eclipse/equinox/internal/simpleconfigurator/utils/EquinoxUtils(0x101AE490) 3CLTEXTCLASS org/eclipse/equinox/internal/simpleconfigurator/Activator(0x1018C568) 2CLTEXTCLLOAD Loader sun/reflect/DelegatingClassLoader(0xE0A5B9B0) 3CLTEXTCLASS sun/reflect/GeneratedMethodAccessor1(0xDE5FCE90) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE069C948) 3CLTEXTCLASS org/eclipse/core/internal/runtime/FindSupport(0xDD395528) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/IPath;(0xDD395A18) 3CLTEXTCLASS org/eclipse/core/runtime/QualifiedName(0xDD395AD8) 3CLTEXTCLASS org/eclipse/core/internal/runtime/ReferenceHashSet(0xDD395CD8) 3CLTEXTCLASS org/eclipse/core/internal/runtime/ReferenceHashSet$HashedReference(0xDD396028) 3CLTEXTCLASS [Lorg/eclipse/core/internal/runtime/ReferenceHashSet$HashedReference;(0xDD396100) 3CLTEXTCLASS org/eclipse/core/internal/runtime/ReferenceHashSet$HashableWeakReference(0xDD3961D8) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/IAdaptable;(0xDD3963C0) 3CLTEXTCLASS org/eclipse/core/runtime/IBundleGroupProvider(0xDD396460) 3CLTEXTCLASS org/eclipse/core/runtime/IBundleGroup(0xDD396520) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/IBundleGroup;(0xDD396648) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/IBundleGroupProvider;(0xDD396700) 3CLTEXTCLASS org/eclipse/core/internal/runtime/ReferenceHashSet$StrongReference(0xDD3967B8) 3CLTEXTCLASS org/eclipse/core/internal/runtime/IAdapterFactoryExt(0xDD3968F8) 3CLTEXTCLASS org/eclipse/core/runtime/ProgressMonitorWrapper(0xDD3969F8) 3CLTEXTCLASS org/eclipse/core/runtime/SubProgressMonitor(0xDD396CA8) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/CoreException;(0xDD396F28) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/QualifiedName;(0xDD396FE0) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/ILogListener;(0xDD397098) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/Path;(0xDD397150) 3CLTEXTCLASS org/eclipse/core/runtime/Status(0x10429E20) 3CLTEXTCLASS org/eclipse/core/runtime/MultiStatus(0x1042A270) 3CLTEXTCLASS org/eclipse/core/internal/runtime/LocalizationUtils(0x1042A4E8) 3CLTEXTCLASS org/eclipse/core/internal/runtime/CommonMessages(0x1042A648) 3CLTEXTCLASS org/eclipse/core/runtime/Assert(0x1042A840) 3CLTEXTCLASS org/eclipse/core/runtime/AssertionFailedException(0x1042AA40) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/IStatus;(0x1042AB60) 3CLTEXTCLASS org/eclipse/core/internal/runtime/IAdapterManagerProvider(0x1042AC00) 3CLTEXTCLASS org/eclipse/core/runtime/IPath(0x1042ACB0) 3CLTEXTCLASS org/eclipse/core/runtime/ILogListener(0x1042AFB0) 3CLTEXTCLASS org/eclipse/core/internal/runtime/MetaDataKeeper(0x1042B080) 3CLTEXTCLASS org/eclipse/core/internal/runtime/DataArea(0x1042B1E0) 3CLTEXTCLASS org/eclipse/core/internal/runtime/RuntimeLog(0x1042B658) 3CLTEXTCLASS org/eclipse/core/runtime/Path(0x1042B920) 3CLTEXTCLASS org/eclipse/core/runtime/IAdaptable(0x1042C1E0) 3CLTEXTCLASS org/eclipse/core/runtime/PlatformObject(0x1042C2A8) 3CLTEXTCLASS org/eclipse/core/runtime/IProgressMonitor(0x1042C3A8) 3CLTEXTCLASS org/eclipse/core/runtime/OperationCanceledException(0x1042C510) 3CLTEXTCLASS org/eclipse/core/runtime/URIUtil(0x1042C648) 3CLTEXTCLASS org/eclipse/core/runtime/NullProgressMonitor(0x1042CB80) 3CLTEXTCLASS org/eclipse/core/runtime/SafeRunner(0x1042CD50) 3CLTEXTCLASS org/eclipse/core/runtime/IProgressMonitorWithBlocking(0x1042CF48) 3CLTEXTCLASS org/eclipse/core/runtime/SubMonitor(0x1042D058) 3CLTEXTCLASS org/eclipse/core/runtime/SubMonitor$RootInfo(0x1042D478) 3CLTEXTCLASS org/eclipse/core/runtime/FileLocator(0x1042D680) 3CLTEXTCLASS org/eclipse/core/internal/boot/PlatformURLHandler(0x101ED698) 3CLTEXTCLASS org/eclipse/core/internal/runtime/PlatformURLFragmentConnection(0x101EDAA8) 3CLTEXTCLASS org/eclipse/core/internal/runtime/PlatformURLMetaConnection(0x101EDED8) 3CLTEXTCLASS org/eclipse/core/internal/runtime/PlatformURLConfigConnection(0x101EE378) 3CLTEXTCLASS org/eclipse/core/internal/boot/PlatformURLBaseConnection(0x101EE830) 3CLTEXTCLASS org/eclipse/core/runtime/IStatus(0x101EEB28) 3CLTEXTCLASS org/eclipse/core/runtime/CoreException(0x101EECB8) 3CLTEXTCLASS org/eclipse/core/runtime/ISafeRunnable(0x101EEE88) 3CLTEXTCLASS org/eclipse/core/runtime/ListenerList(0x101EEF78) 3CLTEXTCLASS org/eclipse/core/internal/runtime/ResourceTranslator(0x101EF180) 3CLTEXTCLASS org/eclipse/core/internal/boot/PlatformURLConnection(0x101EC6F0) 3CLTEXTCLASS org/eclipse/core/internal/runtime/PlatformURLPluginConnection(0x101ED0E0) 3CLTEXTCLASS org/eclipse/core/internal/runtime/AdapterManager(0x102578A8) 3CLTEXTCLASS org/eclipse/core/runtime/IAdapterFactory(0x10257EA8) 3CLTEXTCLASS org/eclipse/core/internal/runtime/PlatformURLConverter(0x10292A10) 3CLTEXTCLASS org/eclipse/core/runtime/IAdapterManager(0x10292B78) 3CLTEXTCLASS org/eclipse/core/internal/runtime/Activator(0x10292240) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06AE260) 3CLTEXTCLASS org/eclipse/equinox/internal/util/xml/impl/XMLParserImpl(0x102AEB20) 3CLTEXTCLASS org/eclipse/equinox/internal/util/xml/Tag(0x102AF5A0) 3CLTEXTCLASS org/eclipse/equinox/internal/util/string/CharBuffer(0x102AF728) 3CLTEXTCLASS org/eclipse/equinox/internal/util/xml/impl/TagImpl(0x102AFA68) 3CLTEXTCLASS org/eclipse/equinox/internal/util/xml/impl/TagImpl$1(0x102B0098) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/model/ServiceComponent(0x102B0260) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/storage/file/DBObject(0x102B0F88) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/SCRManager$QueuedJob(0x102B1168) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/model/ComponentReference(0x102B1368) 3CLTEXTCLASS org/eclipse/equinox/internal/util/io/HashtableEnumerator(0x102B1CD0) 3CLTEXTCLASS org/eclipse/equinox/internal/util/io/PDataStream(0x102B1E78) 3CLTEXTCLASS [Lorg/eclipse/equinox/internal/ds/model/ServiceComponentProp;(0x102B2218) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/InstanceProcess$Counter(0x102B22D0) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/impl/ComponentInstanceImpl(0x102B23D8) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/impl/ComponentContextImpl(0x102B2700) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/InstanceProcess(0x10391140) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/FactoryReg(0x10391AD0) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/ServiceReg(0x10391D20) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/model/ServiceComponentProp(0x10392108) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/ComponentStorage(0x10392E48) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/storage/file/FileStorage(0x10393170) 3CLTEXTCLASS org/eclipse/equinox/internal/util/xml/ExTagListener(0x103936C0) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/model/DeclarationParser(0x103937A0) 3CLTEXTCLASS org/eclipse/equinox/internal/util/io/Externalizable(0x10394268) 3CLTEXTCLASS org/eclipse/equinox/internal/util/io/ExternalizableDictionary(0x10394378) 3CLTEXTCLASS org/eclipse/equinox/internal/util/io/XObjectInputStream(0x10394F08) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/Resolver(0x10287940) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/CircularityException(0x102884D0) 3CLTEXTCLASS org/apache/felix/scr/Component(0x10288600) 3CLTEXTCLASS org/apache/felix/scr/Reference(0x10288838) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/Reference(0x102889F8) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/SCRUtil(0x10289028) 3CLTEXTCLASS org/eclipse/equinox/internal/util/io/HashtableEntry(0x10289468) 3CLTEXTCLASS [Lorg/eclipse/equinox/internal/util/io/HashtableEntry;(0x102895C0) 3CLTEXTCLASS org/apache/felix/scr/ScrService(0x10289660) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/ScrServiceImpl(0x10289758) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/SCRManager(0x10285428) 3CLTEXTCLASS org/eclipse/equinox/internal/util/xml/XMLParser(0x10285FF8) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/WorkThread(0x10280720) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/WorkPerformer(0x10280A00) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/SCRCommandProvider(0x1027DD60) 3CLTEXTCLASS org/eclipse/equinox/internal/ds/Activator(0x10261110) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06AFE50) 3CLTEXTCLASS org/eclipse/equinox/internal/util/impl/tpt/timer/TimerImpl(0x1035C7D8) 3CLTEXTCLASS org/eclipse/equinox/internal/util/impl/tpt/timer/TimerQueue(0x1035CD08) 3CLTEXTCLASS org/eclipse/equinox/internal/util/impl/tpt/timer/TimerQueueNode(0x1035CFB0) 3CLTEXTCLASS org/eclipse/equinox/internal/util/impl/tpt/timer/TimerQueue$QueueElement(0x1035D378) 3CLTEXTCLASS [Lorg/eclipse/equinox/internal/util/impl/tpt/timer/TimerQueue$QueueElement;(0x1035D470) 3CLTEXTCLASS org/eclipse/equinox/internal/util/threadpool/ThreadContext(0x1035D510) 3CLTEXTCLASS org/eclipse/equinox/internal/util/impl/tpt/threadpool/Executor(0x1035D668) 3CLTEXTCLASS org/eclipse/equinox/internal/util/pool/ObjectPool(0x102828D0) 3CLTEXTCLASS org/eclipse/equinox/internal/util/security/PrivilegedRunner$PA(0x10282C48) 3CLTEXTCLASS org/eclipse/equinox/internal/util/event/Queue(0x10282DF0) 3CLTEXTCLASS org/eclipse/equinox/internal/util/threadpool/ThreadPoolManager(0x10282FC8) 3CLTEXTCLASS org/eclipse/equinox/internal/util/ref/TimerRef(0x102830B0) 3CLTEXTCLASS org/eclipse/equinox/internal/util/impl/tpt/ServiceFactoryImpl(0x10283218) 3CLTEXTCLASS org/eclipse/equinox/internal/util/threadpool/ThreadPoolFactory(0x102834C0) 3CLTEXTCLASS org/eclipse/equinox/internal/util/impl/tpt/threadpool/ThreadPoolFactoryImpl(0x102835B0) 3CLTEXTCLASS org/eclipse/equinox/internal/util/impl/tpt/threadpool/ThreadPoolManagerImpl(0x10283A00) 3CLTEXTCLASS org/eclipse/equinox/internal/util/impl/tpt/threadpool/Job(0x10283F98) 3CLTEXTCLASS org/eclipse/equinox/internal/util/impl/tpt/timer/TimerFactory(0x102841E8) 3CLTEXTCLASS org/eclipse/equinox/internal/util/security/SecurityUtil(0x1027F768) 3CLTEXTCLASS org/eclipse/equinox/internal/util/UtilActivator(0x1027FE40) 3CLTEXTCLASS org/eclipse/equinox/internal/util/timer/TimerListener(0x10280318) 3CLTEXTCLASS org/eclipse/equinox/internal/util/timer/Timer(0x102803C8) 3CLTEXTCLASS org/eclipse/equinox/internal/util/pool/ObjectCreator(0x102804D8) 3CLTEXTCLASS org/eclipse/equinox/internal/util/ref/Log(0x102624B0) 3CLTEXTCLASS org/eclipse/equinox/internal/util/security/PrivilegedRunner$PrivilegedDispatcher(0x10261FF8) 3CLTEXTCLASS org/eclipse/equinox/internal/util/security/PrivilegedRunner(0x102620C0) 3CLTEXTCLASS org/eclipse/equinox/internal/util/ref/LogInterface(0x10261D70) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06C3E80) 3CLTEXTCLASS org/osgi/service/component/ComponentContext(0x103A2010) 3CLTEXTCLASS [Lorg/osgi/service/cm/Configuration;(0x103A2170) 3CLTEXTCLASS org/osgi/service/component/ComponentInstance(0x103A2210) 3CLTEXTCLASS org/osgi/service/log/LogService(0x103A22D0) 3CLTEXTCLASS org/osgi/service/cm/ConfigurationListener(0x10284F98) 3CLTEXTCLASS org/osgi/service/component/ComponentException(0x10285088) 3CLTEXTCLASS org/osgi/service/cm/Configuration(0x102851F0) 3CLTEXTCLASS org/osgi/service/cm/ConfigurationAdmin(0x102812C0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06DBE38) 3CLTEXTCLASS org/eclipse/equinox/internal/event/Activator(0x10395150) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A47FB8) 3CLTEXTCLASS org/eclipse/core/internal/preferences/legacy/PreferenceForwarder(0xDCCB6190) 3CLTEXTCLASS org/eclipse/core/runtime/PerformanceStats(0xDCCB6B68) 3CLTEXTCLASS org/eclipse/core/runtime/Plugin$2(0xDCCB71B8) 3CLTEXTCLASS org/eclipse/core/internal/runtime/Log(0xDCCB7348) 3CLTEXTCLASS org/eclipse/core/runtime/Preferences$PropertyChangeEvent(0xDCCB7560) 3CLTEXTCLASS org/eclipse/core/runtime/Preferences$1(0xDCCB76E8) 3CLTEXTCLASS org/eclipse/core/runtime/Platform(0x1052FB28) 3CLTEXTCLASS org/eclipse/core/internal/runtime/Messages(0x10530548) 3CLTEXTCLASS org/eclipse/core/runtime/IProduct(0x10530780) 3CLTEXTCLASS org/eclipse/core/internal/runtime/Product(0x105308B0) 3CLTEXTCLASS org/eclipse/core/runtime/Preferences$IPropertyChangeListener(0x10530A68) 3CLTEXTCLASS org/eclipse/core/runtime/Preferences(0x10530BC0) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/Preferences;(0x105314E0) 3CLTEXTCLASS org/eclipse/core/runtime/Plugin$1(0x10531598) 3CLTEXTCLASS org/eclipse/core/internal/runtime/PlatformLogWriter(0xDD905730) 3CLTEXTCLASS org/eclipse/core/internal/preferences/legacy/ProductPreferencesService(0xDD905928) 3CLTEXTCLASS org/eclipse/core/internal/preferences/legacy/InitLegacyPreferences(0xDD905CA0) 3CLTEXTCLASS org/eclipse/core/internal/runtime/CompatibilityHelper(0xDD905E40) 3CLTEXTCLASS org/eclipse/core/runtime/IPluginRegistry(0xDD906158) 3CLTEXTCLASS org/eclipse/core/internal/runtime/InternalPlatform(0xDD929710) 3CLTEXTCLASS org/eclipse/core/internal/runtime/PlatformActivator(0x103C6458) 3CLTEXTCLASS org/eclipse/core/runtime/ILog(0x103C6618) 3CLTEXTCLASS org/eclipse/core/runtime/Plugin(0x103CD558) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A49420) 3CLTEXTCLASS org/eclipse/core/internal/registry/ConfigurationElementHandle(0x10413BD8) 3CLTEXTCLASS org/eclipse/core/internal/registry/BaseExtensionHandle(0x104140D0) 3CLTEXTCLASS org/eclipse/core/internal/registry/ExtensionHandle(0x10414430) 3CLTEXTCLASS org/eclipse/core/internal/registry/BaseExtensionPointHandle(0x10414638) 3CLTEXTCLASS org/eclipse/core/internal/registry/ExtensionPointHandle(0x10414A60) 3CLTEXTCLASS org/eclipse/core/internal/registry/ThirdLevelConfigurationElementHandle(0x10414C48) 3CLTEXTCLASS [Lorg/eclipse/core/internal/registry/ExtensionHandle;(0x10414DF8) 3CLTEXTCLASS org/eclipse/core/internal/registry/KeyedHashSet(0x10414EE0) 3CLTEXTCLASS [Lorg/eclipse/core/internal/registry/KeyedElement;(0x10415250) 3CLTEXTCLASS org/eclipse/core/internal/registry/HashtableOfStringAndInt(0x10415328) 3CLTEXTCLASS org/eclipse/core/internal/registry/osgi/EclipseBundleListener(0x104156E0) 3CLTEXTCLASS org/eclipse/core/runtime/ContributorFactoryOSGi(0x10415C18) 3CLTEXTCLASS org/eclipse/core/runtime/IContributor(0x10415D78) 3CLTEXTCLASS org/eclipse/core/runtime/spi/RegistryContributor(0x10415E50) 3CLTEXTCLASS org/eclipse/core/internal/registry/RegistryMessages(0x10416030) 3CLTEXTCLASS org/eclipse/core/internal/registry/ExtensionsParser(0x104162C0) 3CLTEXTCLASS org/eclipse/core/internal/registry/Contribution(0x10416F70) 3CLTEXTCLASS [Lorg/eclipse/core/internal/registry/ExtensionPoint;(0x10417300) 3CLTEXTCLASS org/eclipse/core/internal/registry/ReferenceMap$SoftRef(0x104173E8) 3CLTEXTCLASS [Lorg/eclipse/core/internal/registry/Extension;(0x10417590) 3CLTEXTCLASS [Lorg/eclipse/core/internal/registry/ConfigurationElement;(0x10417648) 3CLTEXTCLASS org/eclipse/core/internal/registry/CombinedEventDelta(0x10417720) 3CLTEXTCLASS [Lorg/eclipse/core/internal/registry/RegistryObject;(0x10417AE0) 3CLTEXTCLASS org/eclipse/core/internal/registry/RegistryIndexElement(0x10417BB8) 3CLTEXTCLASS org/eclipse/core/internal/registry/RegistryIndexChildren(0x10417E38) 3CLTEXTCLASS org/eclipse/core/internal/registry/TemporaryObjectManager(0x10418018) 3CLTEXTCLASS org/eclipse/core/internal/registry/osgi/RegistryProviderOSGI(0x104182C8) 3CLTEXTCLASS org/eclipse/core/internal/registry/RegistryProviderFactory(0x104184E8) 3CLTEXTCLASS org/eclipse/core/internal/registry/osgi/RegistryCommandProvider(0x10418670) 3CLTEXTCLASS org/eclipse/core/runtime/IRegistryEventListener(0x104189C8) 3CLTEXTCLASS org/eclipse/core/internal/adapter/AdapterManagerListener(0x10418AE0) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/IExtension;(0x10418DA0) 3CLTEXTCLASS [Lorg/eclipse/core/internal/registry/ExtensionPointHandle;(0x10418E58) 3CLTEXTCLASS [Lorg/eclipse/core/internal/registry/Handle;(0x10418F10) 3CLTEXTCLASS [Lorg/eclipse/core/internal/registry/ConfigurationElementHandle;(0x10418FC8) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/IConfigurationElement;(0x10419080) 3CLTEXTCLASS org/eclipse/core/internal/registry/ExtensionRegistry$ListenerInfo(0x10419138) 3CLTEXTCLASS org/eclipse/core/runtime/IExecutableExtension(0x10419258) 3CLTEXTCLASS org/eclipse/core/runtime/IExecutableExtensionFactory(0x10419308) 3CLTEXTCLASS org/eclipse/core/runtime/dynamichelpers/IExtensionChangeHandler(0x104193B8) 3CLTEXTCLASS org/eclipse/core/runtime/dynamichelpers/IExtensionTracker(0x10419478) 3CLTEXTCLASS org/eclipse/core/runtime/dynamichelpers/ExtensionTracker(0x104195D8) 3CLTEXTCLASS org/eclipse/core/runtime/dynamichelpers/IFilter(0x10419AB8) 3CLTEXTCLASS org/eclipse/core/runtime/dynamichelpers/ExtensionTracker$1(0x10419B80) 3CLTEXTCLASS org/eclipse/core/runtime/dynamichelpers/ExtensionTracker$HandlerWrapper(0x10419CA8) 3CLTEXTCLASS [[Lorg/eclipse/core/runtime/IConfigurationElement;(0x10419DE8) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/IExtensionPoint;(0x10419EA0) 3CLTEXTCLASS org/eclipse/core/runtime/dynamichelpers/ExtensionTracker$2(0x10419F58) 3CLTEXTCLASS org/eclipse/core/internal/adapter/AdapterFactoryProxy(0x1041A098) 3CLTEXTCLASS org/eclipse/core/internal/registry/RegistrySupport(0x1041A450) 3CLTEXTCLASS org/eclipse/core/internal/registry/ExtensionRegistry(0x103FA7C0) 3CLTEXTCLASS org/eclipse/core/runtime/IExtension(0x103FBD18) 3CLTEXTCLASS org/eclipse/core/runtime/IExtensionPoint(0x103FBE80) 3CLTEXTCLASS org/eclipse/core/internal/registry/KeyedElement(0x103FC008) 3CLTEXTCLASS org/eclipse/core/internal/registry/RegistryObject(0x103FC120) 3CLTEXTCLASS org/eclipse/core/internal/registry/ExtensionPoint(0x103FC478) 3CLTEXTCLASS org/eclipse/core/runtime/IExtensionDelta(0x103FC828) 3CLTEXTCLASS org/eclipse/core/runtime/IRegistryChangeListener(0x103FC900) 3CLTEXTCLASS org/eclipse/core/internal/registry/RegistryObjectFactory(0x103FC9E8) 3CLTEXTCLASS org/eclipse/core/internal/registry/RegistryObjectFactoryMulti(0x103FCC08) 3CLTEXTCLASS org/eclipse/core/internal/registry/Extension(0x103FCE48) 3CLTEXTCLASS org/eclipse/core/internal/registry/ConfigurationElement(0x103FD2D0) 3CLTEXTCLASS org/eclipse/core/internal/registry/ReadWriteMonitor(0x103FD820) 3CLTEXTCLASS org/eclipse/core/internal/registry/TableReader(0x103FDA98) 3CLTEXTCLASS org/eclipse/core/internal/registry/BufferedRandomInputStream(0x103FE3F8) 3CLTEXTCLASS org/eclipse/core/runtime/InvalidRegistryObjectException(0x103E4B70) 3CLTEXTCLASS org/eclipse/core/internal/registry/ReferenceMap(0x103E4CA8) 3CLTEXTCLASS org/eclipse/core/internal/registry/ReferenceMap$IEntry(0x103E4FA0) 3CLTEXTCLASS [Lorg/eclipse/core/internal/registry/ReferenceMap$IEntry;(0x103E5098) 3CLTEXTCLASS org/eclipse/core/runtime/RegistryFactory(0x103E5150) 3CLTEXTCLASS org/eclipse/core/runtime/IExtensionRegistry(0x103E52B8) 3CLTEXTCLASS org/eclipse/core/runtime/spi/IDynamicExtensionRegistry(0x103E5500) 3CLTEXTCLASS org/eclipse/core/internal/registry/RegistryTimestamp(0x103E5600) 3CLTEXTCLASS org/eclipse/core/internal/registry/RegistryProperties$1(0x103E5790) 3CLTEXTCLASS org/eclipse/core/internal/registry/IObjectManager(0x103E58C0) 3CLTEXTCLASS org/eclipse/core/internal/registry/RegistryObjectManager(0x103E5A88) 3CLTEXTCLASS org/eclipse/core/internal/registry/Handle(0x103E6750) 3CLTEXTCLASS org/eclipse/core/runtime/IConfigurationElement(0x103E6888) 3CLTEXTCLASS org/eclipse/core/internal/registry/osgi/RegistryStrategyOSGI(0x103504B0) 3CLTEXTCLASS org/eclipse/core/runtime/spi/IRegistryProvider(0x10350B30) 3CLTEXTCLASS org/eclipse/core/internal/registry/osgi/EquinoxRegistryStrategy(0x10350C48) 3CLTEXTCLASS org/eclipse/core/internal/registry/RegistryProperties(0x10350F18) 3CLTEXTCLASS org/eclipse/core/internal/registry/osgi/EquinoxUtils(0x10351168) 3CLTEXTCLASS org/eclipse/core/runtime/spi/RegistryStrategy(0x103C9DA0) 3CLTEXTCLASS org/eclipse/core/internal/registry/osgi/OSGIUtils(0x103CA170) 3CLTEXTCLASS org/eclipse/core/internal/registry/osgi/Activator(0x103C8840) 3CLTEXTCLASS org/eclipse/core/runtime/IPluginDescriptor(0x103CEAB8) 2CLTEXTCLLOAD Loader sun/reflect/DelegatingClassLoader(0xE0A8BC48) 3CLTEXTCLASS sun/reflect/GeneratedMethodAccessor2(0x104397E0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0652EF0) 3CLTEXTCLASS org/eclipse/core/internal/runtime/auth/Activator(0xDD927798) 3CLTEXTCLASS org/eclipse/core/internal/runtime/auth/AuthorizationHandler(0xDD9860D8) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06569C0) 3CLTEXTCLASS org/eclipse/core/runtime/preferences/BundleDefaultsScope(0xDB19A238) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/preferences/IScopeContext;(0xDB19A370) 3CLTEXTCLASS org/eclipse/core/internal/preferences/EclipsePreferences(0xDD9DE540) 3CLTEXTCLASS org/eclipse/core/internal/preferences/RootPreferences(0xDD9DF7A8) 3CLTEXTCLASS org/eclipse/core/runtime/preferences/IExportedPreferences(0xDD9DFAC0) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/preferences/IEclipsePreferences;(0xDD9DFB98) 3CLTEXTCLASS org/eclipse/core/internal/preferences/ImmutableMap(0xDD9DFC68) 3CLTEXTCLASS org/eclipse/core/internal/preferences/ImmutableMap$EmptyMap(0xDD9DFED8) 3CLTEXTCLASS org/eclipse/core/internal/preferences/ImmutableMap$ArrayMap(0xDD9E0090) 3CLTEXTCLASS org/eclipse/core/internal/preferences/BundleDefaultPreferences(0xDD9E03D0) 3CLTEXTCLASS org/eclipse/core/internal/preferences/DefaultPreferences(0xDD9E0890) 3CLTEXTCLASS org/eclipse/core/internal/preferences/InstancePreferences(0xDD9E12F0) 3CLTEXTCLASS org/eclipse/core/internal/preferences/ConfigurationPreferences(0xDD9E19D0) 3CLTEXTCLASS org/osgi/service/prefs/PreferencesService(0xDD9E1DB8) 3CLTEXTCLASS org/eclipse/core/internal/preferences/OSGiPreferencesServiceManager(0xDD9E1EB0) 3CLTEXTCLASS org/eclipse/core/runtime/preferences/ConfigurationScope(0xDD9E21A0) 3CLTEXTCLASS org/eclipse/core/runtime/preferences/AbstractPreferenceInitializer(0xDD9E2340) 3CLTEXTCLASS org/eclipse/core/internal/preferences/PreferencesService(0xDD9CB430) 3CLTEXTCLASS org/osgi/service/prefs/BackingStoreException(0xDD9CC2A8) 3CLTEXTCLASS org/osgi/service/prefs/Preferences(0xDD9CC3F8) 3CLTEXTCLASS org/eclipse/core/runtime/preferences/IEclipsePreferences(0xDD9CC650) 3CLTEXTCLASS org/eclipse/core/runtime/preferences/IPreferenceNodeVisitor(0xDD9CC768) 3CLTEXTCLASS org/eclipse/core/runtime/preferences/IScope(0xDD9CC818) 3CLTEXTCLASS org/eclipse/core/internal/preferences/StringPool(0xDD9CC8E8) 3CLTEXTCLASS org/eclipse/core/runtime/preferences/IEclipsePreferences$NodeChangeEvent(0xDD9CCA60) 3CLTEXTCLASS org/eclipse/core/internal/preferences/PreferenceServiceRegistryHelper(0xDD9CCBB0) 3CLTEXTCLASS org/eclipse/core/runtime/preferences/IEclipsePreferences$IPreferenceChangeListener(0xDD9CD1C0) 3CLTEXTCLASS org/eclipse/core/runtime/preferences/IEclipsePreferences$INodeChangeListener(0xDD9CD270) 3CLTEXTCLASS org/eclipse/core/internal/preferences/PreferencesOSGiUtils(0xDD9BA570) 3CLTEXTCLASS org/eclipse/core/runtime/preferences/IPreferencesService(0xDD9BA918) 3CLTEXTCLASS org/eclipse/core/internal/preferences/EclipsePreferences$1(0xDD9BAB18) 3CLTEXTCLASS org/eclipse/core/internal/preferences/PreferenceServiceRegistryHelper$1(0xDD9BAC98) 3CLTEXTCLASS org/eclipse/core/runtime/preferences/InstanceScope(0xDD9BADF0) 3CLTEXTCLASS org/eclipse/core/runtime/preferences/IEclipsePreferences$PreferenceChangeEvent(0xDD9BAF38) 3CLTEXTCLASS org/eclipse/core/internal/preferences/EclipsePreferences$2(0xDD9BB0E8) 3CLTEXTCLASS org/eclipse/core/internal/preferences/LookupOrder(0xDD9BB248) 3CLTEXTCLASS [Lorg/osgi/service/prefs/Preferences;(0xDD9BB370) 3CLTEXTCLASS org/eclipse/core/runtime/preferences/DefaultScope(0xDD983268) 3CLTEXTCLASS org/eclipse/core/internal/preferences/Activator(0xDD9833B0) 3CLTEXTCLASS org/eclipse/core/internal/preferences/PreferencesService$5(0xDD9837D0) 3CLTEXTCLASS org/eclipse/core/internal/preferences/exchange/ILegacyPreferences(0xDD958650) 3CLTEXTCLASS org/eclipse/core/runtime/preferences/IScopeContext(0xDD958700) 3CLTEXTCLASS org/eclipse/core/internal/preferences/AbstractScope(0xDD9587F0) 3CLTEXTCLASS org/eclipse/core/internal/preferences/exchange/IProductPreferencesService(0xDD958408) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06945F0) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobListeners$1(0xDD9F8B58) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobListeners$2(0xDD9F8C78) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobListeners$3(0xDD9F8D98) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobListeners$4(0xDD9F8EB8) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobListeners$5(0xDD9F8FD8) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobListeners$6(0xDD9F90F8) 3CLTEXTCLASS org/eclipse/core/internal/jobs/LockManager(0xDD9F9248) 3CLTEXTCLASS org/eclipse/core/internal/jobs/DeadlockDetector(0xDD9F9690) 3CLTEXTCLASS org/eclipse/core/internal/jobs/Deadlock(0xDD9F9DB8) 3CLTEXTCLASS org/eclipse/core/internal/jobs/Counter(0xDD9F9F10) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobQueue(0xDD9FA040) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobQueue$1(0xDD9FA3B8) 3CLTEXTCLASS org/eclipse/core/internal/jobs/WorkerPool(0xDD9FA5D0) 3CLTEXTCLASS org/eclipse/core/internal/jobs/Worker(0xDD9FAA78) 3CLTEXTCLASS [Lorg/eclipse/core/internal/jobs/Worker;(0xDD9FADA0) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobChangeEvent(0xDD9FAE60) 3CLTEXTCLASS org/eclipse/core/internal/jobs/OrderedLock(0xDD9FAFF0) 3CLTEXTCLASS org/eclipse/core/internal/jobs/Queue(0xDD9FB490) 3CLTEXTCLASS org/eclipse/core/internal/jobs/Semaphore(0xDD9FB7D0) 3CLTEXTCLASS org/eclipse/core/runtime/jobs/LockListener(0xDD9FB9F0) 3CLTEXTCLASS org/eclipse/core/runtime/jobs/MultiRule(0xDD9FBB78) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/jobs/ISchedulingRule;(0xDD9FBDD8) 3CLTEXTCLASS org/eclipse/core/runtime/jobs/ProgressProvider(0xDD9FBEA0) 3CLTEXTCLASS org/eclipse/core/runtime/jobs/JobChangeAdapter(0xDD9FC020) 3CLTEXTCLASS org/eclipse/core/internal/jobs/ObjectMap(0xDD9FC1D0) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobMessages(0xDD9FC5C8) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/jobs/Job;(0xDD9FC810) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobManager$3(0xDD9FC8E0) 3CLTEXTCLASS org/eclipse/core/runtime/jobs/ISchedulingRule(0xDD9F6B10) 3CLTEXTCLASS org/eclipse/core/runtime/jobs/IJobChangeListener(0xDD9F6BD0) 3CLTEXTCLASS org/eclipse/core/runtime/jobs/ILock(0xDD9F6CD0) 3CLTEXTCLASS org/eclipse/core/runtime/jobs/IJobStatus(0xDD9F6DB0) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobStatus(0xDD9F6EB8) 3CLTEXTCLASS org/eclipse/core/internal/jobs/ThreadJob(0xDD9F7120) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobManager$5(0xDD9F78C0) 3CLTEXTCLASS org/eclipse/core/internal/jobs/InternalWorker(0xDD9F7B60) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobManager$1(0xDD9F7DA0) 3CLTEXTCLASS org/eclipse/core/internal/jobs/ImplicitJobs(0xDD9F7EF0) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobListeners(0xDD9F84D0) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobListeners$IListenerDoit(0xDD9F88E8) 3CLTEXTCLASS org/eclipse/core/runtime/jobs/IJobChangeEvent(0xDD9F8998) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobManager(0xDD9F47C0) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobActivator(0xDD9F2EB8) 3CLTEXTCLASS org/eclipse/core/internal/jobs/JobOSGiUtils(0xDD9F3158) 3CLTEXTCLASS org/eclipse/core/runtime/jobs/IJobManager(0xDD9F3470) 3CLTEXTCLASS org/eclipse/core/runtime/jobs/Job(0xDD9F28E8) 3CLTEXTCLASS org/eclipse/core/internal/jobs/InternalJob(0xDD9CD4D0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06B21C0) 3CLTEXTCLASS org/eclipse/equinox/internal/app/EclipseAppHandle(0xDD563940) 3CLTEXTCLASS org/eclipse/equinox/internal/app/EclipseAppContainer$RegisterService(0xDD564220) 3CLTEXTCLASS org/eclipse/equinox/internal/app/AppCommands(0xDD5643B0) 3CLTEXTCLASS org/eclipse/equinox/app/IApplication(0xDD564A60) 3CLTEXTCLASS org/eclipse/equinox/internal/app/ProductExtensionBranding(0xDD564BA8) 3CLTEXTCLASS org/eclipse/equinox/internal/app/EclipseAppHandle$2(0xDD564E50) 3CLTEXTCLASS org/eclipse/equinox/internal/app/EclipseAppHandle$1(0xDD564FB0) 3CLTEXTCLASS org/eclipse/equinox/internal/app/EclipseAppContainer(0xDD561900) 3CLTEXTCLASS org/eclipse/equinox/internal/app/IBranding(0xDD562588) 3CLTEXTCLASS org/osgi/service/application/ApplicationDescriptor(0xDD5626E0) 3CLTEXTCLASS org/eclipse/equinox/internal/app/EclipseAppDescriptor(0xDD563058) 3CLTEXTCLASS org/osgi/service/application/ApplicationException(0xDD555ED8) 3CLTEXTCLASS org/osgi/service/application/ScheduledApplication(0xDD556090) 3CLTEXTCLASS org/osgi/service/application/ApplicationAdminPermission(0xDD556248) 3CLTEXTCLASS org/osgi/service/application/ApplicationHandle(0xDD5566A8) 3CLTEXTCLASS org/eclipse/equinox/app/IApplicationContext(0xDD556900) 3CLTEXTCLASS org/eclipse/equinox/internal/app/AppPersistence(0xDD53E708) 3CLTEXTCLASS org/eclipse/equinox/internal/app/Activator(0xDD53E120) 3CLTEXTCLASS org/eclipse/equinox/internal/app/CommandLineArgs(0xDD9FCBF0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE07136E0) 3CLTEXTCLASS org/eclipse/core/internal/plugins/PluginDescriptor(0xDD57E730) 3CLTEXTCLASS org/eclipse/core/internal/plugins/PluginClassLoader(0xDD57F1A0) 3CLTEXTCLASS org/eclipse/core/internal/plugins/DefaultPlugin(0xDD57F500) 3CLTEXTCLASS org/eclipse/core/internal/plugins/PluginRegistry(0xDD575C88) 3CLTEXTCLASS org/eclipse/core/internal/plugins/PluginRegistry$RegistryListener(0xDD5760D0) 3CLTEXTCLASS org/eclipse/core/internal/plugins/CompatibilityActivator(0xDD5712E0) 3CLTEXTCLASS org/eclipse/core/internal/plugins/InternalPlatform(0xDD555B60) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE074EAA8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/reconciler/dropins/ProfileSynchronizer(0xDDCB8D70) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/reconciler/dropins/ProfileSynchronizer$ReconcilerProfileChangeRequest(0xDDCB9988) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/reconciler/dropins/ProfileSynchronizer$1(0xDDCB9AE8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/reconciler/dropins/DropinsRepositoryListener(0xDD5B3A90) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/reconciler/dropins/PlatformXmlListener(0xDD90A190) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/reconciler/dropins/Activator(0xDD589080) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE09B2F10) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/core/ProvisioningEventBus(0xDD5F21C0) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/p2/core/eventbus/SynchronousProvisioningListener(0xDD5F24E8) 3CLTEXTCLASS org/eclipse/equinox/p2/core/UIServices$AuthenticationInfo(0xDD5F25B0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/core/helpers/Tracing(0xDD5F2708) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/core/helpers/OrderedProperties(0xDD5F2AA8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/core/helpers/OrderedProperties$UnmodifiableProperties(0xDD5F2F98) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/core/helpers/CollectionUtils(0xDD5F31A0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/core/helpers/CollectionUtils$UnmodifiableArrayList(0xDD5F3480) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/core/StringPool(0xDD5F3748) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/core/helpers/CollectionUtils$UnmodifiableArrayList$1(0xDD5F38F0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/core/ProvisioningAgent(0xDD59AA00) 3CLTEXTCLASS org/eclipse/equinox/p2/core/spi/IAgentService(0xDD59AE78) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/core/helpers/ServiceHelper(0xDD59AF50) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/core/helpers/URLUtil(0xDD59B088) 3CLTEXTCLASS org/eclipse/equinox/p2/core/spi/IAgentServiceFactory(0xDD59B280) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/p2/core/eventbus/ProvisioningListener(0xDD59B3B0) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/p2/core/eventbus/IProvisioningEventBus(0xDD59B468) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/core/EventBusComponent(0xDD59B5E0) 3CLTEXTCLASS org/eclipse/equinox/p2/core/IAgentLocation(0xDD595950) 3CLTEXTCLASS org/eclipse/equinox/p2/core/IProvisioningAgentProvider(0xDD595A88) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/core/DefaultAgentProvider(0xDD595BD0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/core/AgentLocation(0xDD595E00) 3CLTEXTCLASS org/eclipse/equinox/p2/core/IProvisioningAgent(0xDD595F70) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/core/Activator(0xDD58BE00) 3CLTEXTCLASS org/eclipse/equinox/p2/core/ProvisionException(0xDD58BB98) 2CLTEXTCLLOAD Loader sun/reflect/DelegatingClassLoader(0xE09C81A0) 3CLTEXTCLASS sun/reflect/GeneratedMethodAccessor3(0xDD598B00) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE09CCE88) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/p2/directorywatcher/DirectoryWatcher(0x1063ECD0) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/p2/directorywatcher/EntryAdvice(0xDD5C4CC0) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/p2/directorywatcher/CachingArtifactRepository(0xDD5C4F80) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/p2/directorywatcher/RepositoryListener(0xDD5B31F0) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/p2/directorywatcher/Activator(0xDD596A78) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/p2/directorywatcher/DirectoryChangeListener(0xDD596818) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE09D3720) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/artifact/spi/ArtifactDescriptor(0x10498150) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/persistence/XMLParser(0x10498610) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/persistence/XMLParser$AbstractHandler(0x10498F88) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/persistence/XMLParser$RootHandler(0x104994B8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/persistence/XMLParser$DocHandler(0x104996C8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/persistence/XMLParser$PropertiesHandler(0x10499918) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/persistence/XMLParser$PropertyHandler(0x10499BA8) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/artifact/IProcessingStepDescriptor(0x10499D70) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/artifact/spi/ProcessingStepDescriptor(0x10499E60) 3CLTEXTCLASS [Lorg/eclipse/equinox/p2/repository/artifact/spi/ProcessingStepDescriptor;(0x1049A080) 3CLTEXTCLASS [Lorg/eclipse/equinox/p2/repository/artifact/IArtifactDescriptor;(0x1049A138) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/metadata/spi/AbstractMetadataRepository$RepositoryState(0x1049A1F0) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/IRepositoryReference(0x1049A2C0) 3CLTEXTCLASS [Lorg/eclipse/equinox/p2/repository/IRepositoryReference;(0x1049A3B8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/persistence/XMLParser$TextHandler(0x1049A4E0) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/artifact/ArtifactKeyQuery(0x1049A710) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/IRunnableWithProgress(0x1049A970) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/Credentials$HostEntry(0x10237048) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/FileReader(0x102372E8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/FileReader$CancelHandler(0x10237C90) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/FileReader$1(0x10237F60) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/Messages(0x102381E0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/RepositoryStatusHelper(0x10238418) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/RepositoryStatus(0x10238A00) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/DownloadStatus(0x10238D88) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/p2/repository/IStateful(0x10238F88) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/helpers/LocationProperties(0x10239070) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/helpers/Messages(0x102394A0) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/metadata/spi/MetadataRepositoryFactory(0x10239630) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/spi/AbstractRepository(0x102397D0) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/metadata/spi/AbstractMetadataRepository(0x10239C50) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/ICompositeRepository(0x10239EA8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/persistence/XMLWriter$EndWithoutStartError(0x10239FE0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/persistence/XMLWriter$AttributeAfterNestedContentError(0x1023A160) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/persistence/XMLWriter$ProcessingInstruction(0x1023A280) 3CLTEXTCLASS [Lorg/eclipse/equinox/internal/p2/persistence/XMLWriter$ProcessingInstruction;(0x1023A440) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/artifact/IArtifactRepositoryManager(0x1023A4E0) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/artifact/IArtifactRequest(0x1023A680) 3CLTEXTCLASS [Lorg/eclipse/equinox/p2/repository/artifact/IArtifactRequest;(0x1023A768) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/artifact/spi/ArtifactRepositoryFactory(0x1023A830) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/artifact/spi/AbstractArtifactRepository(0x1023AA10) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/artifact/IFileArtifactRepository(0x1023ADA0) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/p2/repository/RepositoryEvent(0xDD5EDA98) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/Transport(0xDD5EDD38) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/RepositoryTransport(0xDD5EDE40) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/persistence/XMLConstants(0xDD5EE1E8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/persistence/XMLWriter(0xDD5EE460) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/helpers/AbstractRepositoryManager$RepositoryInfo(0xDD5EEA70) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/AuthenticationFailedException(0xDD5EEB98) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/Credentials$LoginCanceledException(0xDD5EECE8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/JREHttpClientRequiredException(0xDD5EEE30) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/RepositoryPreferences(0xDD5EEF58) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/Credentials(0xDD5EF070) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/helpers/DebugHelper(0xDD5EF6B0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/helpers/AbstractRepositoryManager(0xDD5EB150) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/repository/Activator(0xDD5BB880) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/artifact/IArtifactDescriptor(0xDD5BBBC0) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/metadata/IMetadataRepository(0xDD5BBD10) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/IRepositoryManager(0xDD5BBE28) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/artifact/IArtifactRepository(0xDD5B7790) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/metadata/IMetadataRepositoryManager(0xDD5B7958) 3CLTEXTCLASS org/eclipse/equinox/p2/repository/IRepository(0xDD5B7560) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE09D6A78) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/CoercingComparator$ClassCoercer(0xDDCBD4D0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/CoercingComparator$BooleanCoercer(0xDDCBD718) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/CoercingComparator$LongCoercer(0xDDCBD950) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/CoercingComparator$IntegerCoercer(0xDDCBDB90) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/CoercingComparator$VersionCoercer(0xDDCBDDD0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/CoercingComparator$StringCoercer(0xDDCBE000) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/TranslationSupport(0xDDCBE210) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/index/Index(0xDDCBE890) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/index/IdIndex(0xDDCBEB38) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/IInstallableUnitPatch(0xDDCBECE0) 3CLTEXTCLASS org/eclipse/equinox/p2/query/CompoundQueryable(0xDDCBEDF0) 3CLTEXTCLASS [Lorg/eclipse/equinox/p2/query/IQueryable;(0xDDCBF0E8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/CollectionFilter(0x10612C80) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Exists(0x106130C8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Member$DynamicMember(0x106132E8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Equals(0x106136A0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/At(0x106138F0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/index/IndexProvider(0x10613C50) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/QueryResult(0x10613E00) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/RepeatableIterator(0x10614118) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/RepeatableIterator$IndexProviderIterator(0x106144D8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/IUMap$MapIterator(0x106146D0) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/IArtifactKey(0x106148F8) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/expression/IMemberProvider(0x106149E0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormat$TreeInfo(0x10614B28) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormat$StateInfo(0x10614DA0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/ArtifactKey(0x10614EB8) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/ILicense(0x10615280) 3CLTEXTCLASS [Lorg/eclipse/equinox/p2/metadata/ILicense;(0x10615378) 3CLTEXTCLASS [Lorg/eclipse/equinox/p2/metadata/IInstallableUnit;(0x10615430) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/MetadataFactory$InstallableUnitDescription(0x10615560) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/MetadataFactory$InstallableUnitPatchDescription(0x10615AF8) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/MetadataFactory$InstallableUnitFragmentDescription(0x10615DC0) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/MetadataFactory(0x10615FB8) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/ITouchpointData(0x10616770) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/IProvidedCapability(0x10616840) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/IRequirementChange(0x10616920) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/ICopyright(0x10616A00) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/ITouchpointInstruction(0x10616AC0) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/ITouchpointType(0x10616B90) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/IUpdateDescriptor(0x10616CA0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/TouchpointData(0x10616DB8) 3CLTEXTCLASS [Lorg/eclipse/equinox/p2/metadata/ITouchpointType;(0x10616FF8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Compare(0x106170F0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/ProvidedCapability(0x106173A0) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/ITouchpointType$1(0x10617658) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/TouchpointType(0x106177A0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/InstallableUnit(0x10617A58) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/InstallableUnit$1(0x10618570) 3CLTEXTCLASS [Lorg/eclipse/equinox/p2/metadata/IProvidedCapability;(0x106186E8) 3CLTEXTCLASS [Lorg/eclipse/equinox/p2/metadata/IRequirement;(0x106187A0) 3CLTEXTCLASS [Lorg/eclipse/equinox/p2/metadata/IArtifactKey;(0x10618858) 3CLTEXTCLASS [Lorg/eclipse/equinox/p2/metadata/ITouchpointData;(0x10618910) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/UpdateDescriptor(0x106189D8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/TouchpointInstruction(0x10618BC0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/IRequiredCapability(0x10618E20) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/RequiredCapability(0x10618F38) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/IInstallableUnitFragment(0x10619610) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/InstallableUnitFragment(0x106197A0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Expression$Compacter(0x106199B8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/LDAPFilter(0x10619BB8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/License(0x10619EE8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/Copyright(0x1061A1E8) 3CLTEXTCLASS org/eclipse/equinox/p2/query/Collector$1(0x1061A378) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/CoercingComparator(0x1061A4B0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/CoercingComparator$FromStringCoercer(0x1061A8E8) 3CLTEXTCLASS [Lorg/eclipse/equinox/internal/p2/metadata/expression/CoercingComparator;(0x1061AAD0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/parser/ExpressionParser(0x1060AD10) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/parser/QLParser(0x1060B660) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/expression/ExpressionParseException(0x1060BC60) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/expression/IExpressionFactory(0x1060BDC0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/ExpressionFactory(0x1060C278) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/expression/IContextExpression(0x1060CE20) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/expression/IFilterExpression(0x1060CF08) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Expression(0x1060D028) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Literal(0x1060D6A0) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/expression/IMatchExpression(0x1060DAA0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Variable(0x1060DBE0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/NAry(0x1060DEC0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/And(0x1060E118) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Or(0x1060E340) 3CLTEXTCLASS [Lorg/eclipse/equinox/internal/p2/metadata/expression/Expression;(0x1060E530) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Function(0x1060E630) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/BooleanFunction(0x1060E958) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/FilterFunction(0x1060EB50) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/VersionFunction(0x1060ED30) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/RangeFunction(0x1060EF10) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/ClassFunction(0x1060F0F8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/SetFunction(0x1060F300) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/WrappedIQuery(0x1060F4F8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/parser/LDAPFilterParser(0x1060F748) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/parser/LDAPFilterParser$1(0x1060FC28) 3CLTEXTCLASS org/eclipse/equinox/p2/query/IMatchQuery(0x1060FD88) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/index/IQueryWithIndex(0x1060FE40) 3CLTEXTCLASS org/eclipse/equinox/p2/query/ExpressionMatchQuery(0x1060FF38) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/IRepeatableIterator(0x106102F8) 3CLTEXTCLASS org/eclipse/equinox/p2/query/Collector(0x10610400) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/IVersionedId(0x10610770) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/IInstallableUnit(0x10610830) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Unary(0x10610B10) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/MatchExpression(0x10610DA8) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/expression/IEvaluationContext(0x106110F8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/EvaluationContext(0x10611210) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/EvaluationContext$SingleVariableContext(0x10611540) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/EvaluationContext$MultiVariableContext(0x106116A8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Expression$MembersFinder(0x10611800) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Binary(0x10611A50) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Matches(0x10611DC0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Member(0x10612210) 3CLTEXTCLASS org/eclipse/equinox/p2/query/ExpressionQuery(0x10612510) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Limit(0x10612858) 3CLTEXTCLASS [Lorg/eclipse/equinox/p2/metadata/expression/IExpression;(0x10612B10) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormatParser(0x10606BD8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormatParser$Fragment(0x10607520) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormatParser$ElementFragment(0x106077C8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormatParser$RangeFragment(0x106079F8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormatParser$AutoFragment(0x10607C28) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormatParser$DelimiterFragment(0x10607E40) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormatParser$GroupFragment(0x10608058) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormatParser$LiteralFragment(0x10608320) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormatParser$NumberFragment(0x10608508) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormatParser$PadFragment(0x10608720) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormatParser$QuotedFragment(0x106088F8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormatParser$RawFragment(0x10608AF8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormatParser$StringFragment(0x10608CD0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormatParser$Qualifier(0x10608F68) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionParser(0x10609210) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormatParser$Instructions(0x10609650) 3CLTEXTCLASS [Lorg/eclipse/equinox/internal/p2/metadata/VersionFormatParser$Fragment;(0x10609790) 3CLTEXTCLASS org/eclipse/equinox/p2/query/QueryUtil(0x10609848) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/expression/IExpressionVisitor(0x10609FF0) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/expression/ExpressionUtil(0x1060A0B8) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/expression/IExpressionParser(0x1060A3D8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/IExpressionConstants(0x1060A498) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/ContextExpression(0x1060A800) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionVector$MaxStringValue(0x1052A8A8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionVector$MinValue(0x1052AA08) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/index/IIndexProvider(0x1052AB40) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/index/IIndex(0x1052AC10) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/IUMap(0x1052AD08) 3CLTEXTCLASS org/eclipse/equinox/p2/query/CollectionResult(0x1052B108) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/IRequirement(0x1052B330) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/expression/IExpression(0x1052B440) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/VersionRange(0x1052B5F0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionFormat(0x1052BB00) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/VersionFormatException(0x1052BFF0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/RawFormat(0x1052C120) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/Parameter(0x1052C2B0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/expression/LambdaExpression(0x1052C500) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/OSGiVersion(0x10561738) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/OmniVersion(0x10561C38) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionVector(0x10562120) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionVector$MinMaxComparable(0x10562508) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/Version(0x1058A710) 3CLTEXTCLASS org/eclipse/equinox/p2/metadata/IVersionFormat(0x1058A9F8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/BasicVersion(0x1058AB20) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/VersionVector$MaxValue(0x1058ACC0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/MetadataActivator(0xDD5B8DA8) 3CLTEXTCLASS org/eclipse/equinox/p2/query/IQuery(0xDD5B8EF8) 3CLTEXTCLASS org/eclipse/equinox/p2/query/IQueryResult(0xDD5B8FB8) 3CLTEXTCLASS org/eclipse/equinox/p2/query/IQueryable(0xDDC81F50) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE09DD2C0) 3CLTEXTCLASS org/eclipse/equinox/p2/publisher/PublisherResult(0x10659688) 3CLTEXTCLASS org/eclipse/equinox/p2/publisher/IPublisherResult(0xDD5BCAF0) 3CLTEXTCLASS org/eclipse/equinox/p2/publisher/actions/IPropertyAdvice(0xDD5BCC20) 3CLTEXTCLASS org/eclipse/equinox/p2/publisher/PublisherInfo(0xDD5BCD40) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/publisher/Activator(0xDD5BC6E0) 3CLTEXTCLASS org/eclipse/equinox/p2/publisher/IPublisherAction(0xDD5BC838) 3CLTEXTCLASS org/eclipse/equinox/p2/publisher/IPublisherInfo(0xDD5BC8E8) 3CLTEXTCLASS org/eclipse/equinox/p2/publisher/IPublisherAdvice(0xDDC9B698) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE09EB9B8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$RequirementHandler(0x1069DC70) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$RequiredCapabilitiesHandler(0x1069E0C8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$LicensesHandler(0x1069E368) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$LicenseHandler(0x1069E640) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$CopyrightHandler(0x1069E8A0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/LocalMetadataRepository(0x105E7BC8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/MetadataRepositoryIO(0x105E8558) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/MetadataRepositoryIO$XMLConstants(0x105E87E0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/MetadataRepositoryIO$Writer(0x105E89A8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser(0x105E8DC0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/MetadataRepositoryIO$Parser(0x105E9098) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/MetadataRepositoryIO$Parser$RepositoryHandler(0x105E9470) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/MetadataRepositoryIO$Parser$RepositoryDocHandler(0x105E9928) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$AbstractMetadataHandler(0x105E9B98) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$InstallableUnitsHandler(0x105E9DA8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$InstallableUnitHandler(0x105EA068) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$ProvidedCapabilitiesHandler(0x105EA868) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$ProvidedCapabilityHandler(0x105EAB00) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$TouchpointTypeHandler(0x105EAD40) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$UpdateDescriptorHandler(0x105EAFB0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$ArtifactsHandler(0x105EB2D0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$ArtifactHandler(0x105EB590) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$TouchpointDataHandler(0x105EB7F8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/URLMetadataRepository(0x10559908) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/Messages(0x10559E70) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/CompositeMetadataRepositoryFactory(0x10559FF8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/CompositeMetadataRepository(0x1055A4D0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$TouchpointInstructionsHandler(0x1055AF58) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$TouchpointInstructionHandler(0x1055B208) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser$HostRequiredCapabilitiesHandler(0x1055B4B0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataWriter(0xDD318238) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/SimpleMetadataRepositoryFactory(0xDD318B38) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/MetadataRepositoryManager(0xDD5EC2C8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/io/XMLConstants(0xDD5EC5F8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/Activator(0xDDC830C0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/metadata/repository/MetadataRepositoryComponent(0xDD5C2590) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE09FE328) 3CLTEXTCLASS org/eclipse/equinox/internal/security/storage/SecurePreferencesWrapper(0x103FE780) 3CLTEXTCLASS org/eclipse/equinox/internal/security/storage/SecurePreferences(0x1044AF68) 3CLTEXTCLASS org/eclipse/equinox/internal/security/storage/friends/IStorageConstants(0x1044B878) 3CLTEXTCLASS org/eclipse/equinox/internal/security/storage/SecurePreferencesRoot(0x1044BA18) 3CLTEXTCLASS org/eclipse/equinox/security/storage/provider/IPreferencesContainer(0x1044C288) 3CLTEXTCLASS org/eclipse/equinox/internal/security/storage/JavaEncryption(0x1044C3A0) 3CLTEXTCLASS org/eclipse/equinox/internal/security/storage/friends/IStorageTask(0x1044CA10) 3CLTEXTCLASS org/eclipse/equinox/internal/security/storage/PasswordExt(0x1044CAE0) 3CLTEXTCLASS org/eclipse/equinox/internal/security/storage/PersistedPath(0x1044CC20) 3CLTEXTCLASS org/eclipse/equinox/internal/security/storage/SecurePreferencesMapper(0x103959D0) 3CLTEXTCLASS org/eclipse/equinox/internal/security/storage/StorageUtils(0x10395E30) 3CLTEXTCLASS org/eclipse/equinox/internal/security/storage/SecurePreferencesContainer(0x10396178) 3CLTEXTCLASS org/eclipse/equinox/security/storage/ISecurePreferences(0x103963E0) 3CLTEXTCLASS org/eclipse/equinox/internal/security/storage/SlashEncode(0xDD5F97A0) 3CLTEXTCLASS org/eclipse/equinox/security/storage/StorageException(0xDD5F9958) 3CLTEXTCLASS org/eclipse/equinox/security/storage/SecurePreferencesFactory(0xDD5F9AE0) 3CLTEXTCLASS org/eclipse/equinox/internal/security/auth/AuthPlugin(0xDD5F9300) 3CLTEXTCLASS org/eclipse/equinox/security/storage/EncodingUtils(0xDDC92B50) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A06B90) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/Engine(0xDD347420) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/TransactionEvent(0xDD3478B8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/BeginOperationEvent(0xDD3479F0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/RollbackOperationEvent(0xDD347AF8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/CommitOperationEvent(0xDD347C28) 3CLTEXTCLASS org/eclipse/equinox/p2/engine/IProvisioningPlan(0xDD347D10) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ActionManager(0xDD347EB0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/TouchpointManager(0xDD3482E8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ProvisioningPlan(0xDD348690) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/Operand(0xDD348A70) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/PropertyOperand(0xDD348B60) 3CLTEXTCLASS org/eclipse/equinox/p2/engine/PhaseSetFactory(0xDD348D30) 3CLTEXTCLASS org/eclipse/equinox/p2/engine/ISizingPhaseSet(0xDD349100) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/Phase(0xDD349218) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/phases/Property(0xDD349988) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/MissingActionsException(0xDD349B70) 3CLTEXTCLASS [Lorg/eclipse/equinox/internal/p2/engine/Phase;(0xDD349D80) 3CLTEXTCLASS [Lorg/eclipse/equinox/internal/p2/engine/Operand;(0xDD349E38) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry$1(0xDD349EF0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/InstallableUnitEvent(0xDD34A060) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/EngineSession(0xDD34A328) 3CLTEXTCLASS org/eclipse/equinox/p2/engine/spi/Touchpoint(0xDD34AB70) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/EngineSession$ActionsRecord(0xDD34AD10) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/phases/Property$ProfilePropertyAction(0xDD34AE38) 3CLTEXTCLASS org/eclipse/equinox/p2/engine/spi/Memento(0xDD34B030) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/InstallableUnitPropertyOperand(0xDD34B3C0) 3CLTEXTCLASS org/eclipse/equinox/p2/engine/ProfileScope(0xDD34B560) 3CLTEXTCLASS [Lorg/eclipse/equinox/internal/p2/engine/Profile;(0xDD34B7B0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry$Parser(0x106E4C98) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ProfileParser$ProfileHandler(0x106E5200) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry$2(0x106E55E8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ProfileLock(0x106E5738) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry$3(0x106E5A48) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry$Parser$ProfileDocHandler(0x106E5BF8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ProfileParser$IUsPropertiesHandler(0x106E5E68) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ProfileParser$IUPropertiesHandler(0x106E6100) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/Profile(0x106E6438) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/DebugHelper(0x106E6D00) 3CLTEXTCLASS org/eclipse/equinox/p2/engine/IPhaseSet(0x106E71B8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/PhaseSet(0x106E7290) 3CLTEXTCLASS org/eclipse/equinox/p2/engine/spi/ProvisioningAction(0x106E76E0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ProfileWriter$1(0x106E7878) 3CLTEXTCLASS org/eclipse/equinox/p2/engine/ProvisioningContext(0x106E7A18) 3CLTEXTCLASS org/eclipse/equinox/p2/engine/ProvisioningContext$1(0x106E8038) 3CLTEXTCLASS org/eclipse/equinox/p2/engine/query/IUProfilePropertyQuery(0x106E81B8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/Profile$ProfilePropertyIndex(0x106E83C8) 3CLTEXTCLASS org/eclipse/equinox/p2/engine/IEngine(0x106E84F8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/EngineComponent(0x106E8658) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ProfileWriter(0xDD319270) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry$Writer(0xDD3195F8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/SurrogateProfileHandler(0xDD319798) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry$4(0xDD319F20) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ProfilePreferences$SaveJob(0xDD31A150) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/Messages(0xDD31A420) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ProfileMetadataRepositoryFactory(0xDD31A6D8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ProfileMetadataRepository(0xDD31A888) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ProfileParser(0xDD31AF30) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry(0xDD30E058) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ISurrogateProfileHandler(0xDD30EE60) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ProfileRegistryComponent(0xDD300048) 3CLTEXTCLASS org/eclipse/equinox/p2/engine/IProfile(0xDD300190) 3CLTEXTCLASS org/eclipse/equinox/p2/engine/IProfileEvent(0xDD300360) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ProfileEvent(0xDD300450) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ProfileXMLConstants(0xDD3005F8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/EngineActivator(0xDDC94470) 3CLTEXTCLASS org/eclipse/equinox/p2/engine/IProfileRegistry(0xDDC945F8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/engine/ProfilePreferences(0xDDC93D98) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A52620) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/InvalidFileRangeSpecificationException(0x104E84E8) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/events/IIncomingFileTransferEvent(0x104E8690) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/events/IIncomingFileTransferReceiveDoneEvent(0x104E8750) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/events/IFileTransferConnectStartEvent(0x104E8818) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/events/IIncomingFileTransferReceiveStartEvent(0x104E8910) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/events/IIncomingFileTransferReceiveDataEvent(0x104E8A38) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/IncomingFileTransferException(0x10341390) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/IRetrieveFileTransferContainerAdapter(0x103415D8) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/service/IRetrieveFileTransferFactory(0x103416D0) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/service/IRetrieveFileTransfer(0x10341780) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/events/socketfactory/INonconnectedSocketFactory(0x10341828) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/service/IRemoteFileSystemBrowserFactory(0x103418D8) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/IRemoteFileSystemBrowserContainerAdapter(0x10341988) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/service/IRemoteFileSystemBrowser(0x10341A70) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/identity/FileIDFactory(0x10341B38) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/identity/IFileID(0x10341D98) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/IFileTransfer(0x10341E80) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/IIncomingFileTransfer(0x10341F80) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/IFileTransferPausable(0x10342088) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/IFileTransferRunnable(0x10342158) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/events/IFileTransferEvent(0x10342208) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/FileTransferJob(0x103A2948) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/IFileTransferListener(0x103A2BE0) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/IFileRangeSpecification(0x103A2C90) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/identity/FileCreateException(0x103A2D90) 3CLTEXTCLASS org/eclipse/ecf/internal/filetransfer/Activator(0x102BCDD0) 3CLTEXTCLASS org/eclipse/ecf/filetransfer/UserCancelledException(0x101C6718) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A562A0) 3CLTEXTCLASS org/eclipse/ecf/core/identity/GUID$GUIDNamespace(0x103D8BA8) 3CLTEXTCLASS org/eclipse/ecf/core/identity/LongID$LongNamespace(0x103D8E58) 3CLTEXTCLASS org/eclipse/ecf/core/identity/NamespacePermission(0x103D90C0) 3CLTEXTCLASS org/eclipse/ecf/core/util/ECFRuntimeException(0x103D92A8) 3CLTEXTCLASS org/eclipse/ecf/core/identity/IDCreateException(0x103D94C0) 3CLTEXTCLASS org/eclipse/ecf/core/identity/ID(0x103D9638) 3CLTEXTCLASS org/eclipse/ecf/core/identity/BaseID(0x103D9788) 3CLTEXTCLASS org/eclipse/ecf/core/identity/StringID(0x103D9AE8) 3CLTEXTCLASS org/eclipse/ecf/core/identity/GUID(0x103D9E60) 3CLTEXTCLASS org/eclipse/ecf/internal/core/identity/Messages(0x103DA140) 3CLTEXTCLASS org/eclipse/ecf/core/identity/LongID(0x103DA2F0) 3CLTEXTCLASS org/eclipse/ecf/internal/core/identity/Activator$IdentityRegistryManager(0x103DA520) 3CLTEXTCLASS org/eclipse/ecf/core/identity/IIdentifiable(0x103DA688) 3CLTEXTCLASS org/eclipse/ecf/core/identity/Namespace(0x101C8980) 3CLTEXTCLASS org/eclipse/ecf/core/identity/IIDFactory(0x101C8D70) 3CLTEXTCLASS org/eclipse/ecf/core/identity/IDFactory(0x101C8F48) 3CLTEXTCLASS org/eclipse/ecf/core/identity/StringID$StringIDNamespace(0x101C9688) 3CLTEXTCLASS org/eclipse/ecf/internal/core/identity/Activator(0x100F3CE8) 3CLTEXTCLASS org/eclipse/ecf/core/util/Trace(0x103C6B70) 3CLTEXTCLASS org/eclipse/ecf/core/util/ECFException(0x100E2900) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A83518) 3CLTEXTCLASS org/eclipse/ecf/core/ContainerFactory(0x103AB4B8) 3CLTEXTCLASS org/eclipse/ecf/internal/core/IDisposable(0x103ABEC0) 3CLTEXTCLASS org/eclipse/ecf/core/ContainerCreateException(0x103ABFB0) 3CLTEXTCLASS org/eclipse/ecf/internal/core/Messages(0x103AC140) 3CLTEXTCLASS org/eclipse/ecf/core/ContainerFactory$1(0x103AC2E0) 3CLTEXTCLASS org/eclipse/ecf/core/provider/IContainerInstantiator(0x103AC540) 3CLTEXTCLASS org/eclipse/ecf/core/provider/BaseContainerInstantiator(0x103AC658) 3CLTEXTCLASS org/eclipse/ecf/core/BaseContainer$Instantiator(0x103AC9F0) 3CLTEXTCLASS org/eclipse/ecf/core/IContainer(0x103ACC58) 3CLTEXTCLASS org/eclipse/ecf/core/ContainerTypeDescription(0x103ACDD0) 3CLTEXTCLASS org/eclipse/ecf/core/util/Event(0x103AD2F8) 3CLTEXTCLASS org/eclipse/ecf/internal/ssl/ECFSSLSocketFactory(0x102AC928) 3CLTEXTCLASS org/eclipse/ecf/internal/core/ECFPlugin$ECFRegistryManager(0x102ACC10) 3CLTEXTCLASS org/eclipse/ecf/core/IContainerManager(0x102ACD90) 3CLTEXTCLASS org/eclipse/ecf/core/security/Callback(0x102ACEE8) 3CLTEXTCLASS org/eclipse/ecf/core/security/UnsupportedCallbackException(0x102ACFC0) 3CLTEXTCLASS org/eclipse/ecf/internal/ssl/ECFTrustManager(0x1043A028) 3CLTEXTCLASS org/eclipse/ecf/internal/ssl/ECFCertificateException(0x1043A3D0) 3CLTEXTCLASS org/eclipse/ecf/core/IContainerFactory(0x1023B050) 3CLTEXTCLASS org/eclipse/ecf/core/start/IECFStart(0x1023B2A8) 3CLTEXTCLASS org/eclipse/ecf/internal/core/ECFPlugin(0x103CAAA8) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0ACCD18) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/util/TimeoutInputStream(0x104E44A8) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/retrieve/UrlConnectionRetrieveFileTransfer$UrlConnectionAuthenticator(0x104E48A8) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/retrieve/AbstractRetrieveFileTransfer$1(0x104E4A18) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/util/JREProxyHelper(0x104E4CD8) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/util/JREProxyHelper$1(0x104E4F88) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/util/JREProxyHelper$2(0x104E5118) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/util/ProxySetupHelper(0x104E5240) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/retrieve/AbstractRetrieveFileTransfer$3(0x104E54F8) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/retrieve/AbstractRetrieveFileTransfer(0x104E1500) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/retrieve/UrlConnectionRetrieveFileTransfer(0x104E2338) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/util/PollingInputStream(0x104E2F10) 3CLTEXTCLASS org/eclipse/ecf/internal/provider/filetransfer/ssl/ECFURLConnectionModifier(0x104C7380) 3CLTEXTCLASS org/eclipse/ecf/internal/provider/filetransfer/Activator$2(0x104C75A8) 3CLTEXTCLASS org/eclipse/ecf/internal/provider/filetransfer/Activator$ProtocolFactory(0x104C76E0) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/retrieve/MultiProtocolRetrieveAdapter(0x104C7870) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/identity/FileTransferNamespace(0x104C7B60) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/identity/FileTransferID(0x104C7EF0) 3CLTEXTCLASS org/eclipse/ecf/internal/provider/filetransfer/Messages(0x10396A00) 3CLTEXTCLASS org/eclipse/ecf/internal/provider/filetransfer/Activator$1(0x10396C38) 3CLTEXTCLASS org/eclipse/ecf/internal/provider/filetransfer/Activator$DummyURLStreamHandlerService(0x10396E18) 3CLTEXTCLASS org/eclipse/ecf/internal/provider/filetransfer/IURLConnectionModifier(0x10396F80) 3CLTEXTCLASS org/eclipse/ecf/internal/provider/filetransfer/Activator(0x102B6B50) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/IFileTransferProtocolToFactoryMapper(0x1022A070) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0AE7708) 3CLTEXTCLASS org/eclipse/ecf/internal/provider/filetransfer/httpclient/ISSLSocketFactoryModifier(0x102B7980) 3CLTEXTCLASS org/eclipse/ecf/internal/provider/filetransfer/httpclient/ssl/SSLSocketFactoryModifier(0x102B7A78) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/httpclient/HttpClientBrowseFileTransferFactory(0x102B7C28) 3CLTEXTCLASS org/eclipse/ecf/internal/provider/filetransfer/httpclient/Activator(0x1023C4D8) 3CLTEXTCLASS org/eclipse/ecf/provider/filetransfer/httpclient/HttpClientRetrieveFileTransferFactory(0x10403768) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0AFF5A8) 3CLTEXTCLASS org/apache/commons/httpclient/HttpConnectionManager(0x10240C38) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0B27F88) 3CLTEXTCLASS org/eclipse/core/internal/net/ProxyData(0x10507430) 3CLTEXTCLASS org/eclipse/core/internal/net/ProxySelector(0x10507800) 3CLTEXTCLASS [Lorg/eclipse/core/internal/net/ProxyData;(0x10507AF8) 3CLTEXTCLASS org/eclipse/core/net/proxy/IProxyChangeEvent(0x104FE100) 3CLTEXTCLASS org/eclipse/core/net/proxy/IProxyData(0x104FE200) 3CLTEXTCLASS org/eclipse/core/internal/net/ProxyType(0x104FE3B8) 3CLTEXTCLASS [Lorg/eclipse/core/internal/net/ProxyType;(0x104FED40) 3CLTEXTCLASS org/eclipse/core/internal/net/ProxyManager(0x100D3A18) 3CLTEXTCLASS org/eclipse/core/internal/net/Activator(0x10258308) 3CLTEXTCLASS org/eclipse/core/net/proxy/IProxyService(0x10352A68) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0B3CEF0) 3CLTEXTCLASS org/eclipse/ui/internal/net/Activator(0x1058B090) 3CLTEXTCLASS org/eclipse/ui/internal/net/auth/NetAuthenticator(0x10258AF0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0B41A48) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/FilteredPreferenceDialog$PreferenceFilteredTree(0xD9238750) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/PreferenceNodeFilter(0xD9238FF8) 3CLTEXTCLASS org/eclipse/ui/preferences/IWorkingCopyManager(0xD9239160) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/PropertyPageManager(0xD9239260) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/PropertyPageContributorManager$CategorizedPageNode(0xD92393A0) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchPropertyPage(0xD92394A0) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/PreferencePageHistory(0xD9239590) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/PreferencePageHistory$1$HistoryNavigationAction(0xD9239B10) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/PreferencePageHistory$1(0xD9239E58) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/PreferencePageHistory$2(0xD923A180) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/PreferenceBoldLabelProvider(0xD923A440) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/FilteredPreferenceDialog$1(0xD923A5C0) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/FilteredPreferenceDialog$2(0xD923A788) 3CLTEXTCLASS org/eclipse/ui/dialogs/PropertyPage(0xD923AB60) 3CLTEXTCLASS org/eclipse/ui/WorkbenchEncoding$EncodingsRegistryReader(0xD923AD88) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/PreferenceHistoryEntry(0xD923AED8) 3CLTEXTCLASS org/eclipse/ui/dialogs/ListSelectionDialog$1(0xD923B100) 3CLTEXTCLASS org/eclipse/ui/dialogs/ListSelectionDialog$2(0xD923B240) 3CLTEXTCLASS org/eclipse/ui/internal/WWinPluginPulldown$MenuProxy$MenuLoader(0xD923B380) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressManager$5(0xD923B578) 3CLTEXTCLASS org/eclipse/ui/internal/SelectionAdapterFactory$5(0xD923B708) 3CLTEXTCLASS org/eclipse/ui/part/PageSwitcher(0xD923B848) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/CyclePageHandler(0xD923BAE0) 3CLTEXTCLASS org/eclipse/ui/internal/SelectionAdapterFactory$6(0xD923BFF0) 3CLTEXTCLASS [Lorg/eclipse/ui/contexts/IContextActivation;(0xD923C120) 3CLTEXTCLASS org/eclipse/ui/internal/ReopenEditorMenu$2(0xD923C1E0) 3CLTEXTCLASS org/eclipse/ui/internal/ReopenEditorMenu$3(0xD923C3D8) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/NewWizardRegistry(0xD923C558) 3CLTEXTCLASS org/eclipse/ui/dialogs/WorkingSetConfigurationBlock(0xD923C700) 3CLTEXTCLASS org/eclipse/ui/dialogs/WorkingSetConfigurationBlock$1(0xD923CF70) 3CLTEXTCLASS org/eclipse/ui/dialogs/WorkingSetConfigurationBlock$2(0xD923D150) 3CLTEXTCLASS org/eclipse/ui/dialogs/WorkingSetConfigurationBlock$3(0xD923D298) 3CLTEXTCLASS org/eclipse/ui/dialogs/WorkingSetConfigurationBlock$4(0xD923D3C0) 3CLTEXTCLASS org/eclipse/ui/internal/progress/BlockedJobsDialog(0xD923D5E8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/BlockedJobsDialog$BlockedUIElement(0xD923DC80) 3CLTEXTCLASS org/eclipse/ui/internal/progress/BlockedJobsDialog$2(0xD923DED0) 3CLTEXTCLASS org/eclipse/ui/internal/progress/BlockedJobsDialog$3(0xD923E018) 3CLTEXTCLASS org/eclipse/ui/internal/progress/BlockedJobsDialog$1(0xD923E278) 3CLTEXTCLASS org/eclipse/ui/internal/ObjectPluginAction$1(0xD923E4C0) 3CLTEXTCLASS org/eclipse/ui/actions/SimpleWildcardTester(0xD923E628) 3CLTEXTCLASS org/eclipse/ui/IShowEditorInput(0xD923E778) 3CLTEXTCLASS org/eclipse/ui/dialogs/ListDialog(0xD923E978) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/WorkbenchPartReference;(0xD923EE58) 3CLTEXTCLASS org/eclipse/ui/internal/part/NullEditorInput(0xD923EF28) 3CLTEXTCLASS org/eclipse/ui/dialogs/FileSystemElement(0xD923F140) 3CLTEXTCLASS org/eclipse/ui/dialogs/FileSystemElement$1(0xD923F520) 3CLTEXTCLASS org/eclipse/ui/internal/PlaceholderContributionItem(0xD9C8E4E8) 3CLTEXTCLASS org/eclipse/ui/internal/EditorActionBars$Overrides(0xD9C8E8D8) 3CLTEXTCLASS org/eclipse/ui/internal/EditorActionBuilder(0xD9C8EAD8) 3CLTEXTCLASS org/eclipse/ui/internal/EditorActionBuilder$EditorContribution(0xD9C8ECF0) 3CLTEXTCLASS org/eclipse/ui/internal/EditorActionBuilder$ExternalContributor(0xD9C8EEB0) 3CLTEXTCLASS org/eclipse/ui/internal/EditorSiteDragAndDropServiceImpl$MergedDropTarget(0xD9C8F098) 3CLTEXTCLASS org/eclipse/ui/internal/EditorSiteDragAndDropServiceImpl$1(0xD9C8F300) 3CLTEXTCLASS org/eclipse/ui/internal/EditorSiteDragAndDropServiceImpl$2(0xD9C8F4F0) 3CLTEXTCLASS org/eclipse/ui/operations/NonLocalUndoUserApprover(0xD9C8F668) 3CLTEXTCLASS org/eclipse/ui/operations/LinearUndoViolationUserApprover(0xD9C8FA10) 3CLTEXTCLASS org/eclipse/ui/SaveablesLifecycleEvent(0xD9C8FCC0) 3CLTEXTCLASS org/eclipse/ui/internal/NavigationHistory$2(0xD9C8FE70) 3CLTEXTCLASS org/eclipse/ui/internal/SaveableHelper(0xD9C90038) 3CLTEXTCLASS org/eclipse/ui/internal/SaveableHelper$6(0xD9C907B0) 3CLTEXTCLASS org/eclipse/ui/internal/SaveableHelper$1(0xD9C90B00) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/ReuseEditorTester(0xD9C90D30) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/NestableHandlerService(0xD9C90EF0) 3CLTEXTCLASS org/eclipse/ui/commands/HandlerEvent(0xD9C91100) 3CLTEXTCLASS org/eclipse/ui/operations/OperationHistoryActionHandler$1(0xD9C91320) 3CLTEXTCLASS org/eclipse/ui/NavigationLocation(0xD9C91480) 3CLTEXTCLASS org/eclipse/ui/internal/NavigationHistoryEditorInfo(0xD9C916D0) 3CLTEXTCLASS org/eclipse/ui/dialogs/AbstractElementListSelectionDialog$4(0xD9C91928) 3CLTEXTCLASS org/eclipse/ui/dialogs/AbstractElementListSelectionDialog$2(0xD9C91AA8) 3CLTEXTCLASS org/eclipse/ui/dialogs/AbstractElementListSelectionDialog$3(0xD9C91C00) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredList(0xD9C92408) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredList$FilterMatcher(0xD9C930D8) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredList$DefaultFilterMatcher(0xD9C931B8) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredList$1(0xD9C93390) 3CLTEXTCLASS org/eclipse/ui/dialogs/TwoArrayQuickSorter(0xD9C934F0) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredList$LabelComparator(0xD9C93688) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredList$TableUpdateJob(0xD9C93920) 3CLTEXTCLASS org/eclipse/ui/dialogs/AbstractElementListSelectionDialog$1(0xD9C93CF0) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredList$Label(0xD9C93E50) 3CLTEXTCLASS [Lorg/eclipse/ui/dialogs/FilteredList$Label;(0xD9C93F98) 3CLTEXTCLASS org/eclipse/ui/internal/MessageLine(0xD9C94700) 3CLTEXTCLASS org/eclipse/ui/internal/SaveableHelper$3(0xD9C94FC8) 3CLTEXTCLASS org/eclipse/ui/internal/SaveableHelper$5(0xD9C951B8) 3CLTEXTCLASS org/eclipse/ui/progress/IJobRunnable(0xD9C952E8) 3CLTEXTCLASS [Lorg/eclipse/ui/progress/IJobRunnable;(0xD9C953B0) 3CLTEXTCLASS [Lorg/eclipse/ui/INavigationLocation;(0xD9C95468) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/PreferencePatternFilter(0xD9C95550) 3CLTEXTCLASS org/eclipse/ui/model/ContributionComparator(0xD9C95808) 3CLTEXTCLASS org/eclipse/ui/internal/preferences/WorkbenchPreferenceExpressionNode(0xDA38E938) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/WorkbenchPreferenceManager$1(0xDA38EB50) 3CLTEXTCLASS org/eclipse/ui/internal/registry/CategorizedPageRegistryReader(0xDA38ED08) 3CLTEXTCLASS org/eclipse/ui/internal/registry/PreferencePageRegistryReader(0xDA38F030) 3CLTEXTCLASS org/eclipse/ui/internal/registry/CategorizedPageRegistryReader$CategoryNode(0xDA38F380) 3CLTEXTCLASS org/eclipse/ui/internal/registry/PreferencePageRegistryReader$PreferencesCategoryNode(0xDA38F5A0) 3CLTEXTCLASS org/eclipse/ui/model/IComparableContribution(0xDA38F6E0) 3CLTEXTCLASS org/eclipse/ui/internal/preferences/WorkbenchPreferenceExtensionNode(0xDA38F830) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/WorkbenchPreferenceNode(0xDA38FD08) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/registry/CategorizedPageRegistryReader$CategoryNode;(0xDA38FF68) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/PluginActionContributionItem;(0xDA390020) 3CLTEXTCLASS org/eclipse/ui/progress/DeferredTreeContentManager$DeferredContentFamily(0xDA3900D8) 3CLTEXTCLASS org/eclipse/ui/progress/PendingUpdateAdapter(0xDA3901F8) 3CLTEXTCLASS org/eclipse/ui/progress/DeferredTreeContentManager$5(0xDA390438) 3CLTEXTCLASS org/eclipse/ui/progress/DeferredTreeContentManager$2(0xDA3905D8) 3CLTEXTCLASS org/eclipse/ui/internal/SelectionAdapterFactory$4(0xDA390720) 3CLTEXTCLASS org/eclipse/ui/internal/ObjectActionContributor$1(0xDA390858) 3CLTEXTCLASS org/eclipse/ui/internal/ObjectPluginAction$2(0xDA390A20) 3CLTEXTCLASS org/eclipse/ui/statushandlers/IStatusAdapterConstants(0xDA390B70) 3CLTEXTCLASS org/eclipse/ui/internal/statushandlers/StatusHandlerRegistry(0xDA390CD0) 3CLTEXTCLASS org/eclipse/ui/internal/statushandlers/StatusHandlerDescriptorsMap(0xDA391100) 3CLTEXTCLASS org/eclipse/ui/statushandlers/WorkbenchStatusDialogManager(0xDA391360) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressAnimationItem$5(0xDA391650) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressAnimationItem$6(0xDA391778) 3CLTEXTCLASS org/eclipse/ui/progress/IProgressConstants2(0xDA391888) 3CLTEXTCLASS org/eclipse/ui/actions/ActionContext(0xDA3919C0) 3CLTEXTCLASS org/eclipse/ui/actions/OpenInNewWindowAction(0xDA391BD0) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/PropertyPageContributorManager(0xDA391F90) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/IPropertyPageContributor(0xDA392330) 3CLTEXTCLASS org/eclipse/ui/internal/registry/PropertyPagesRegistryReader(0xDA392438) 3CLTEXTCLASS org/eclipse/ui/internal/registry/PropertyPagesRegistryReader$PropertyCategoryNode(0xDA392850) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/RegistryPageContributor(0xDA3929E8) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/PropertyPageNode(0xDA393198) 3CLTEXTCLASS org/eclipse/ui/internal/ObjectFilterTest(0xDA393440) 3CLTEXTCLASS [Lorg/eclipse/ui/IEditorPart;(0xDA393680) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressManager$RunnableWithStatus(0xDA393740) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressManager$7(0xDA3939A0) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/EventLoopProgressMonitor(0xDA393B10) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressManager$1(0xDA393E38) 3CLTEXTCLASS org/eclipse/ui/IPathEditorInput(0xDA393F98) 3CLTEXTCLASS [Lorg/eclipse/ui/PartInitException;(0xDA394070) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage$10(0xDA394128) 3CLTEXTCLASS org/eclipse/ui/internal/OverlayIcon(0xDA3942F8) 3CLTEXTCLASS org/eclipse/ui/internal/EditorManager$1(0xDA394510) 3CLTEXTCLASS org/eclipse/ui/internal/EditorManager$2(0xDA3946B0) 3CLTEXTCLASS org/eclipse/ui/INavigationLocation(0xDA394878) 3CLTEXTCLASS org/eclipse/ui/actions/CommandNotMappedException(0xDA394A00) 3CLTEXTCLASS org/eclipse/ui/part/EditorPart$1(0xDA394B38) 3CLTEXTCLASS org/eclipse/ui/internal/EditorSite(0xDA394CF0) 3CLTEXTCLASS org/eclipse/ui/dnd/IDragAndDropService(0xDA395120) 3CLTEXTCLASS org/eclipse/ui/internal/EditorSiteDragAndDropServiceImpl(0xDA395200) 3CLTEXTCLASS org/eclipse/ui/internal/EditorMenuManager(0xDA395588) 3CLTEXTCLASS org/eclipse/ui/internal/expressions/LegacyEditorActionBarExpression(0xDA395A20) 3CLTEXTCLASS org/eclipse/ui/IEditorActionBarContributor(0xDA395CB8) 3CLTEXTCLASS org/eclipse/ui/part/EditorActionBarContributor(0xDA395DC8) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchActionConstants(0xDA395FF8) 3CLTEXTCLASS org/eclipse/ui/internal/EditorMenuManager$Overrides(0xDA396580) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/ShowViewDialog(0x10C63D50) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/ViewPatternFilter(0x10C64760) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/ViewComparator(0x10C648D8) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/CapabilityFilter(0x10C64AA0) 3CLTEXTCLASS [Lorg/eclipse/ui/views/IViewDescriptor;(0x10C64BB8) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/ShowViewDialog$1(0x10C64C70) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/ViewLabelProvider(0x10C64E28) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/ViewContentProvider(0x10C65170) 3CLTEXTCLASS [Lorg/eclipse/ui/views/IViewCategory;(0x10C65460) 3CLTEXTCLASS org/eclipse/ui/internal/registry/ViewRegistry$ViewCategoryProxy(0x10C65530) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/ShowViewDialog$2(0x10C657D0) 3CLTEXTCLASS org/eclipse/ui/progress/IDeferredWorkbenchAdapter(0x10C658E0) 3CLTEXTCLASS org/eclipse/ui/WorkbenchEncoding(0x10C659D0) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/DecoratorManager$2(0x10C65CE8) 3CLTEXTCLASS org/eclipse/ui/model/BaseWorkbenchContentProvider(0x10C65E40) 3CLTEXTCLASS org/eclipse/ui/progress/DeferredTreeContentManager(0x10C660B8) 3CLTEXTCLASS org/eclipse/ui/progress/DeferredTreeContentManager$1(0x10C66698) 3CLTEXTCLASS org/eclipse/ui/progress/IElementCollector(0x10C669D8) 3CLTEXTCLASS org/eclipse/ui/progress/DeferredTreeContentManager$3(0x10C66BB8) 3CLTEXTCLASS org/eclipse/ui/progress/DeferredTreeContentManager$4(0x10C66F48) 3CLTEXTCLASS org/eclipse/ui/part/DrillDownAdapter(0x10C67208) 3CLTEXTCLASS org/eclipse/ui/part/DrillDownAdapter$1(0x10C677C8) 3CLTEXTCLASS org/eclipse/ui/part/DrillDownAdapter$2(0x10C67A30) 3CLTEXTCLASS org/eclipse/ui/part/DrillDownAdapter$3(0x10C67C98) 3CLTEXTCLASS org/eclipse/ui/part/DrillStack(0x10C67E80) 3CLTEXTCLASS org/eclipse/ui/actions/WorkingSetFilterActionGroup(0x10C680A0) 3CLTEXTCLASS org/eclipse/ui/actions/WorkingSetFilterActionGroup$1(0x10C68560) 3CLTEXTCLASS org/eclipse/ui/internal/actions/ClearWorkingSetAction(0x10C68858) 3CLTEXTCLASS org/eclipse/ui/internal/actions/SelectWorkingSetAction(0x10C68B38) 3CLTEXTCLASS org/eclipse/ui/internal/actions/EditWorkingSetAction(0x10C68E68) 3CLTEXTCLASS org/eclipse/ui/actions/ActionDelegate(0x10C69138) 3CLTEXTCLASS org/eclipse/ui/IEditorActionDelegate(0x10C692A0) 3CLTEXTCLASS org/eclipse/ui/commands/AbstractHandler(0x10C693C0) 3CLTEXTCLASS org/eclipse/ui/commands/ActionHandler(0x10C697D8) 3CLTEXTCLASS org/eclipse/ui/commands/CommandException(0x10C69C38) 3CLTEXTCLASS org/eclipse/ui/commands/ExecutionException(0x10C69DB8) 3CLTEXTCLASS org/eclipse/ui/commands/Priority(0x10C69F00) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/LegacyHandlerWrapper(0x10C6A100) 3CLTEXTCLASS org/eclipse/ui/commands/IHandlerListener(0x10C6A460) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/LegacyHandlerListenerWrapper(0x10C6A528) 3CLTEXTCLASS org/eclipse/ui/commands/ActionHandler$1(0x10C6A6F8) 3CLTEXTCLASS org/eclipse/ui/internal/PopupMenuExtender$1(0x10C6A8B0) 3CLTEXTCLASS org/eclipse/ui/internal/ObjectActionContributorManager(0x10C6AAD0) 3CLTEXTCLASS org/eclipse/ui/internal/ObjectActionContributorReader(0x10C6ADB0) 3CLTEXTCLASS org/eclipse/ui/internal/IObjectActionContributor(0x10C6AFA0) 3CLTEXTCLASS org/eclipse/ui/internal/ObjectActionContributor(0x10C6B0D8) 3CLTEXTCLASS org/eclipse/ui/internal/ObjectActionContributor$ObjectContribution(0x10C6B6F8) 3CLTEXTCLASS org/eclipse/ui/internal/ObjectContributorManager$ContributorRecord(0x10C6B9E8) 3CLTEXTCLASS org/eclipse/ui/internal/PopupMenuExtender$2(0x10C6BAF0) 3CLTEXTCLASS org/eclipse/ui/internal/DetachedWindow(0xDBAD2438) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/WorkbenchWizardNode(0xDBAD2DB0) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/ImportExportPage$1(0xDBAD31A8) 3CLTEXTCLASS [Lorg/eclipse/ui/IWorkbenchWizard;(0xDBAD32F0) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/WorkbenchWizardNode$1(0xDBAD33A8) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/WorkbenchWizardNode$2(0xDBAD3520) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog(0xDBAD3888) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorJobsDialog$1(0xDBAD3F50) 3CLTEXTCLASS org/eclipse/ui/internal/progress/DetailedProgressViewer(0xDBAD4240) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog$14(0xDBAD4B88) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog$4(0xDBAD4E50) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog$5(0xDBAD51A8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog$9(0xDBAD5310) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog$8(0xDBAD5480) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog$15(0xDBAD55E0) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorJobsDialog$4(0xDBAD5750) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog$1(0xDBAD5AA8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorJobsDialog$3(0xDBAD5C38) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog$13(0xDBAD5D60) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog$2(0xDBAD5EB0) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog$3(0xDBAD6160) 3CLTEXTCLASS org/eclipse/ui/dialogs/IOverwriteQuery(0xDBAD63B0) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog$12(0xDBAD64B8) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/DecoratorRegistryReader(0xDBAD6630) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/decorators/LightweightDecoratorDefinition;(0xDBAD68E8) 3CLTEXTCLASS org/eclipse/ui/internal/ObjectContributorManager(0xDBAD69F8) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/LightweightDecoratorManager(0xDBAD7348) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/LightweightDecoratorManager$LightweightRunnable(0xDBAD77D8) 3CLTEXTCLASS org/eclipse/ui/IContainmentAdapter(0xDBAD79E0) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/DecorationBuilder(0xDBAD7AE8) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/decorators/DecoratorDefinition;(0xDBAD7F28) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/LightweightDecoratorDefinition$1(0xDBAD7FE8) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/DecorationResult(0xDBAD81B0) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/DecoratorManager$1(0xDBAD8490) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog$11(0xDBAD85D0) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog$7(0xDBAD8728) 3CLTEXTCLASS org/eclipse/ui/internal/SelectionAdapterFactory(0xDBAD8878) 3CLTEXTCLASS org/eclipse/ui/internal/SelectionAdapterFactory$1(0xDBAD8B60) 3CLTEXTCLASS org/eclipse/ui/internal/SelectionAdapterFactory$2(0xDBAD8C60) 3CLTEXTCLASS org/eclipse/ui/internal/SelectionAdapterFactory$3(0xDBAD8D60) 3CLTEXTCLASS org/eclipse/ui/IViewActionDelegate(0xDBAD8E68) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/TabFolderEvent(0xDBAD8F38) 3CLTEXTCLASS org/eclipse/ui/internal/dnd/DragUtil$1(0xDBAD90D8) 3CLTEXTCLASS org/eclipse/ui/presentations/StackDropResult(0xDBAD9270) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/ReplaceDragHandler$DragCookie(0xDBAD93A8) 3CLTEXTCLASS org/eclipse/ui/internal/DragCursors(0xDBAD94A8) 3CLTEXTCLASS org/eclipse/ui/internal/dnd/DragUtil$2(0xDBAD9700) 3CLTEXTCLASS org/eclipse/ui/internal/PartSashContainer$SashContainerDropTarget(0xDBAD9978) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveHelper$ActualDropTarget(0xDBAD9BB0) 3CLTEXTCLASS org/eclipse/ui/internal/DetachedWindow$6(0xDBAD9DD0) 3CLTEXTCLASS org/eclipse/ui/internal/DetachedWindow$1(0xDBAD9F10) 3CLTEXTCLASS org/eclipse/ui/internal/DetachedWindow$2(0xDBADA050) 3CLTEXTCLASS org/eclipse/ui/internal/DetachedWindow$3(0xDBADA1A8) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/ExportPage(0xDCBB09E8) 3CLTEXTCLASS org/eclipse/ui/wizards/IWizardCategory(0xDCBB0DB8) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/AbstractWizardRegistry(0xDCBB0F18) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/AbstractExtensionWizardRegistry(0xDCBB1198) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/ImportWizardRegistry(0xDCBB1568) 3CLTEXTCLASS org/eclipse/ui/internal/registry/WizardsRegistryReader(0xDCBB1748) 3CLTEXTCLASS org/eclipse/ui/internal/registry/WizardsRegistryReader$1(0xDCBB1EA0) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/dialogs/WorkbenchWizardElement;(0xDCBB1FE8) 3CLTEXTCLASS org/eclipse/ui/model/AdaptableList(0xDCBB20D0) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/WizardCollectionElement(0xDCBB2450) 3CLTEXTCLASS org/eclipse/ui/internal/registry/WizardsRegistryReader$CategoryNode(0xDCBB2B60) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/registry/WizardsRegistryReader$CategoryNode;(0xDCBB2D00) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/dialogs/WizardCollectionElement;(0xDCBB2DB8) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/ImportExportPage$CategorizedWizardSelectionTree(0xDCBB2E78) 3CLTEXTCLASS org/eclipse/ui/dialogs/PatternFilter(0xDCBB3218) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/WizardPatternFilter(0xDCBB36F8) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/DataTransferWizardCollectionComparator(0xDCBB3878) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/WizardActivityFilter(0xDCBB3A18) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree(0xDCBB4258) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree$NotifyingTreeViewer(0xDCBB5700) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree$2(0xDCBB5DF0) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree$3(0xDCBB6178) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree$4(0xDCBB6380) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree$6(0xDCBB6548) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree$7(0xDCBB66B8) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree$8(0xDCBB6828) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree$9(0xDCBB6A38) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree$12(0xDCBB6B78) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree$14(0xDCBB6DC0) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree$15(0xDCBB6F50) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree$16(0xDCBB70C0) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree$17(0xDCBB7220) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree$1(0xDCBB7360) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredTree$18(0xDCBB74A8) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/WizardContentProvider(0xDCBB7618) 3CLTEXTCLASS org/eclipse/ui/model/WorkbenchLabelProvider(0xDCBB78A8) 3CLTEXTCLASS org/eclipse/ui/model/WorkbenchLabelProvider$1(0xDCBB7D28) 3CLTEXTCLASS [Lorg/eclipse/ui/wizards/IWizardCategory;(0xDCBB7E68) 3CLTEXTCLASS [Lorg/eclipse/ui/wizards/IWizardDescriptor;(0xDCBB7F20) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/DialogUtil(0xDCBB7FD8) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/ImportPage$1(0xDCBB8238) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/ImportPage$2(0xDCBB8370) 3CLTEXTCLASS org/eclipse/ui/internal/contexts/ContextAuthority$1(0xDCBB8498) 3CLTEXTCLASS org/eclipse/ui/internal/DetachedWindow$4(0xDCBB8650) 3CLTEXTCLASS org/eclipse/ui/internal/DetachedWindow$5(0xDCBB8798) 3CLTEXTCLASS org/eclipse/ui/internal/WWinPluginPulldown$MenuProxy(0xDBC10078) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchWindowPulldownDelegate(0xDBC10218) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchWindowPulldownDelegate2(0xDBC102D8) 3CLTEXTCLASS [Lorg/eclipse/ui/actions/RetargetAction;(0xDBC103B8) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/Perspective;(0xDBC10470) 3CLTEXTCLASS [Lorg/eclipse/ui/IPerspectiveDescriptor;(0xDBC10528) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage$20(0xDBC105E0) 3CLTEXTCLASS org/eclipse/ui/internal/ViewIntroAdapterPart(0xDBC10800) 3CLTEXTCLASS org/eclipse/ui/intro/IIntroSite(0xDBC10D48) 3CLTEXTCLASS org/eclipse/ui/intro/IIntroPart(0xDBC10E48) 3CLTEXTCLASS org/eclipse/ui/part/IntroPart(0xDBC11028) 3CLTEXTCLASS org/eclipse/ui/internal/ViewIntroAdapterPart$3(0xDBC114C0) 3CLTEXTCLASS org/eclipse/ui/internal/ViewIntroAdapterSite(0xDBC11618) 3CLTEXTCLASS org/eclipse/ui/internal/ViewIntroAdapterPart$1(0xDBC11900) 3CLTEXTCLASS org/eclipse/ui/internal/DetachedPlaceHolder(0xDBC11B30) 3CLTEXTCLASS org/eclipse/ui/internal/ViewIntroAdapterPart$2(0xDBC11F30) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$12(0xDBC120A8) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$4(0xDBC121E8) 3CLTEXTCLASS org/eclipse/ui/splash/BasicSplashHandler$2(0xDBC12310) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$5(0xDBC12440) 3CLTEXTCLASS org/eclipse/ui/internal/OpenPerspectivePropertyTester(0xDBC12580) 3CLTEXTCLASS org/eclipse/ui/menus/CommandContributionItem$4(0xDBC126D0) 3CLTEXTCLASS org/eclipse/ui/internal/menus/CommandMessages(0xDBC128A8) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$14(0xDBC12A28) 3CLTEXTCLASS org/eclipse/ui/internal/services/EvaluationServiceFactory(0xDBC12B68) 3CLTEXTCLASS org/eclipse/ui/internal/services/SlaveEvaluationService(0xDBC12D30) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressManager$JobMonitor(0xDBC13050) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$62(0xDBC133A0) 3CLTEXTCLASS org/eclipse/ui/progress/UIJob$1(0xDBC134D0) 3CLTEXTCLASS org/eclipse/ui/internal/EarlyStartupRunnable(0xDBC136A0) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPlugin$1(0xDBC13970) 3CLTEXTCLASS org/eclipse/ui/IStartup(0xDBC13AB8) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/progress/ProgressAnimationItem;(0xDBC13B80) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressAnimationItem$2(0xDBC13C48) 3CLTEXTCLASS org/eclipse/ui/internal/SaveablesList$PostCloseInfo(0xDBC13D80) 3CLTEXTCLASS org/eclipse/ui/ISaveablePart2(0xDBC13F18) 3CLTEXTCLASS org/eclipse/ui/part/ShowInContext(0xDBC14008) 3CLTEXTCLASS org/eclipse/ui/part/MultiPageEditorSite(0xDBC141E0) 3CLTEXTCLASS org/eclipse/ui/internal/AnimationEngine(0xDBC14AC8) 3CLTEXTCLASS org/eclipse/ui/internal/tweaklets/Animations(0xDBC150B0) 3CLTEXTCLASS org/eclipse/ui/internal/tweaklets/LegacyAnimations(0xDBC15270) 3CLTEXTCLASS org/eclipse/ui/internal/LegacyAnimationFeedback(0xDBC153B0) 3CLTEXTCLASS org/eclipse/ui/internal/AnimationFeedbackBase$1(0xDBC156A0) 3CLTEXTCLASS org/eclipse/ui/internal/AnimationEngine$1(0xDBC157E8) 3CLTEXTCLASS org/eclipse/ui/internal/AnimationFeedbackBase$2(0xDBC15968) 3CLTEXTCLASS org/eclipse/ui/internal/AnimationEngine$2(0xDBC15AB0) 3CLTEXTCLASS org/eclipse/ui/internal/AnimationEngine$3(0xDBC15BE8) 3CLTEXTCLASS org/eclipse/ui/internal/UISynchronizer$3(0xDBC15D30) 3CLTEXTCLASS org/eclipse/ui/internal/AnimationEngine$4(0xDBC15E68) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$15(0xDBC15FA8) 3CLTEXTCLASS org/eclipse/ui/internal/EditorHistoryItem(0xDBC16110) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/EditorHistoryItem;(0xDBC164B0) 3CLTEXTCLASS org/eclipse/ui/handlers/HandlerUtil(0xDBC16568) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/ImportExportWizard(0xDBC16C68) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/WorkbenchWizardSelectionPage(0xDBC16FB8) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/ImportExportPage(0xDBC17398) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/ImportPage(0xDBC17AA0) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/TreeManager$TreeItem(0xDBFCB058) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$Category(0xDBFCB3E0) 3CLTEXTCLASS org/eclipse/ui/wizards/IWizardDescriptor(0xDBFCB610) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$DisplayItem(0xDBFCB7A8) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$ShortcutItem(0xDBFCB9D8) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$DynamicContributionItem(0xDBFCBC30) 3CLTEXTCLASS org/eclipse/ui/internal/IActionSetContributionItem(0xDBFCBDC0) 3CLTEXTCLASS org/eclipse/ui/internal/ActionSetContributionItem(0xDBFCBEE8) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/WorkbenchWizardElement(0xDBFCC0D8) 3CLTEXTCLASS org/eclipse/ui/internal/actions/NewWizardShortcutAction(0xDBFCC820) 3CLTEXTCLASS org/eclipse/ui/actions/OpenPerspectiveAction(0xDBFCCD80) 3CLTEXTCLASS org/eclipse/ui/part/AbstractMultiEditor(0xDBFCD118) 3CLTEXTCLASS org/eclipse/ui/internal/MultiEditorInnerPane(0xDBFCD6E8) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage$3(0xDBFCDAA8) 3CLTEXTCLASS org/eclipse/ui/part/MultiEditor(0xDBFCDD28) 3CLTEXTCLASS [Lorg/eclipse/ui/ISaveablePart;(0xDBFCE168) 3CLTEXTCLASS [Lorg/eclipse/ui/ISaveablesSource;(0xDBFCE220) 3CLTEXTCLASS org/eclipse/ui/internal/NavigationHistoryEntry(0xDBFCE2F0) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/NavigationHistoryEntry;(0xDBFCE638) 3CLTEXTCLASS org/eclipse/ui/internal/ActionPresentation(0xDBFCE700) 3CLTEXTCLASS org/eclipse/ui/internal/ActionSetActionBars(0xDBFCEB80) 3CLTEXTCLASS org/eclipse/ui/internal/PluginActionSet(0xDBFCF010) 3CLTEXTCLASS org/eclipse/ui/internal/ActionSetMenuManager(0xDBFCF360) 3CLTEXTCLASS org/eclipse/ui/internal/ActionPresentation$SetRec(0xDBFCF5E8) 3CLTEXTCLASS org/eclipse/ui/internal/PluginActionSetBuilder(0xDBFCF728) 3CLTEXTCLASS org/eclipse/ui/internal/PluginActionSetBuilder$ActionSetContribution(0xDBFCFBE0) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/PluginActionSetBuilder;(0xDBFD01B0) 3CLTEXTCLASS org/eclipse/ui/internal/PluginActionContributionItem(0xDBFD02D8) 3CLTEXTCLASS org/eclipse/ui/internal/PluginActionCoolBarContributionItem(0xDBFD0690) 3CLTEXTCLASS org/eclipse/ui/internal/PluginAction(0xDBFD0938) 3CLTEXTCLASS org/eclipse/ui/internal/ObjectPluginAction(0xDBFD1088) 3CLTEXTCLASS org/eclipse/ui/internal/PartPluginAction(0xDBFD1580) 3CLTEXTCLASS org/eclipse/ui/internal/ViewPluginAction(0xDBFD18B8) 3CLTEXTCLASS org/eclipse/ui/internal/WWinPluginAction(0xDBFD1C38) 3CLTEXTCLASS org/eclipse/ui/internal/EditorPluginAction(0xDBFD2298) 3CLTEXTCLASS org/eclipse/ui/internal/WWinPluginPulldown(0xDBFD2638) 3CLTEXTCLASS org/eclipse/ui/IActionDelegate2(0xDBFD2898) 3CLTEXTCLASS org/eclipse/ui/internal/WWinPluginAction$2(0xDBFD2988) 3CLTEXTCLASS org/eclipse/ui/internal/ActionSetSeparator(0xDBFD2B38) 3CLTEXTCLASS org/eclipse/ui/internal/PluginActionSetBuilder$Binding(0xDBFD2D30) 3CLTEXTCLASS org/eclipse/ui/internal/WWinPluginAction$1(0xDBFD2E80) 3CLTEXTCLASS org/eclipse/ui/internal/ActionDescriptor(0xDBF6E868) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/ActionDescriptor;(0xDBF6EE68) 3CLTEXTCLASS org/eclipse/ui/INestableKeyBindingService(0xDBF6EF08) 3CLTEXTCLASS org/eclipse/ui/internal/KeyBindingService(0xDBF6F018) 3CLTEXTCLASS org/eclipse/ui/contexts/EnabledSubmission(0xDBF6F5F8) 3CLTEXTCLASS org/eclipse/ui/commands/HandlerSubmission(0xDBF6F858) 3CLTEXTCLASS org/eclipse/ui/internal/PartTester(0xDBF6FAF8) 3CLTEXTCLASS org/eclipse/ui/internal/PartTester$1(0xDBF6FE68) 3CLTEXTCLASS org/eclipse/ui/part/IShowInTargetList(0xDBF6FF50) 3CLTEXTCLASS [Lorg/eclipse/ui/Saveable;(0xDBF70018) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/PresentablePart$3(0xDBF700D0) 3CLTEXTCLASS org/eclipse/ui/progress/IWorkbenchSiteProgressService(0xDBF701F0) 3CLTEXTCLASS org/eclipse/ui/internal/progress/IJobBusyListener(0xDBF70320) 3CLTEXTCLASS org/eclipse/ui/internal/progress/WorkbenchSiteProgressService(0xDBF70440) 3CLTEXTCLASS org/eclipse/ui/internal/progress/WorkbenchSiteProgressService$SiteUpdateJob(0xDBF70B00) 3CLTEXTCLASS org/eclipse/ui/internal/progress/WorkbenchSiteProgressService$1(0xDBF70E98) 3CLTEXTCLASS org/eclipse/ui/part/PageBookView(0xDBF71120) 3CLTEXTCLASS org/eclipse/ui/part/IPageSite(0xDBF71B38) 3CLTEXTCLASS org/eclipse/ui/part/IPage(0xDBF71C18) 3CLTEXTCLASS org/eclipse/ui/part/IPageBookViewPage(0xDBF71D08) 3CLTEXTCLASS org/eclipse/ui/part/PageBook(0xDBF72420) 3CLTEXTCLASS org/eclipse/ui/part/PageBookView$1(0xDBF72BD0) 3CLTEXTCLASS org/eclipse/ui/part/PageBookView$2(0xDBF72D48) 3CLTEXTCLASS org/eclipse/ui/part/PageBookView$3(0xDBF72E70) 3CLTEXTCLASS org/eclipse/ui/part/PageBookView$SelectionProvider(0xDBF72FB8) 3CLTEXTCLASS org/eclipse/ui/part/PageBookView$SelectionManager(0xDBF73248) 3CLTEXTCLASS org/eclipse/ui/part/PageBookView$4(0xDBF73408) 3CLTEXTCLASS org/eclipse/ui/part/PageBook$PageBookLayout(0xDBF73630) 3CLTEXTCLASS org/eclipse/ui/part/Page(0xDBF737D8) 3CLTEXTCLASS org/eclipse/ui/part/MessagePage(0xDBF73A10) 3CLTEXTCLASS org/eclipse/ui/part/PageSite(0xDBF73C30) 3CLTEXTCLASS org/eclipse/ui/part/PageSite$1(0xDBF74170) 3CLTEXTCLASS org/eclipse/ui/internal/part/IPageSiteHolder(0xDBF742B0) 3CLTEXTCLASS org/eclipse/ui/part/PageSite$2(0xDBF74378) 3CLTEXTCLASS org/eclipse/ui/part/PageBookView$PageRec(0xDBF74490) 3CLTEXTCLASS org/eclipse/ui/part/IContributedContentsView(0xDBF74588) 3CLTEXTCLASS org/eclipse/ui/internal/LayoutTreeNode$ChildSizes(0xDBF74650) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/PartService$PartJob;(0xDBF74758) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog(0xDBF748F0) 3CLTEXTCLASS org/eclipse/ui/dialogs/CheckedTreeSelectionDialog(0xDBF0E478) 3CLTEXTCLASS org/eclipse/ui/operations/UndoRedoActionGroup(0xDBF0ECE0) 3CLTEXTCLASS org/eclipse/ui/operations/OperationHistoryActionHandler(0xDBF0EF70) 3CLTEXTCLASS org/eclipse/ui/operations/UndoActionHandler(0xDBF0F7B0) 3CLTEXTCLASS org/eclipse/ui/operations/OperationHistoryActionHandler$PartListener(0xDBF0FAD8) 3CLTEXTCLASS org/eclipse/ui/operations/OperationHistoryActionHandler$HistoryListener(0xDBF0FCB0) 3CLTEXTCLASS org/eclipse/ui/operations/RedoActionHandler(0xDBF0FF90) 3CLTEXTCLASS org/eclipse/ui/actions/ImportResourcesAction(0xDBF10360) 3CLTEXTCLASS org/eclipse/ui/actions/ExportResourcesAction(0xDBF10738) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractWorkingSetManager(0xDBF10B18) 3CLTEXTCLASS org/eclipse/ui/internal/WorkingSetManager(0xDBF118B0) 3CLTEXTCLASS org/eclipse/ui/IWorkingSetUpdater(0xDBF11C60) 3CLTEXTCLASS org/eclipse/ui/IWorkingSetElementAdapter(0xDBF11D40) 3CLTEXTCLASS org/eclipse/ui/dialogs/IWorkingSetEditWizard(0xDBF11E00) 3CLTEXTCLASS org/eclipse/ui/dialogs/IWorkingSetNewWizard(0xDBF11EB8) 3CLTEXTCLASS org/eclipse/ui/dialogs/IWorkingSetSelectionDialog(0xDBF11F70) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractWorkingSetManager$10(0xDBF12150) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractWorkingSetManager$2(0xDBF12428) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractWorkingSetManager$3(0xDBF12580) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractWorkingSetManager$1(0xDBF126A0) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractWorkingSet(0xDBF12848) 3CLTEXTCLASS org/eclipse/ui/IAggregateWorkingSet(0xDBF12DD0) 3CLTEXTCLASS org/eclipse/ui/internal/AggregateWorkingSet(0xDBF12F30) 3CLTEXTCLASS org/eclipse/ui/internal/registry/WorkingSetRegistry(0xDBF13540) 3CLTEXTCLASS org/eclipse/ui/internal/registry/WorkingSetRegistryReader(0xDBF13978) 3CLTEXTCLASS org/eclipse/ui/internal/registry/WorkingSetDescriptor(0xDBF13B98) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractWorkingSetManager$6(0xDBF140C0) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractWorkingSetManager$7(0xDBF14228) 3CLTEXTCLASS org/eclipse/ui/XMLMemento(0xDBF143D8) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractWorkingSetManager$WorkingSetRunnable(0xDBF14AA0) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractWorkingSetManager$8(0xDBF14BE8) 3CLTEXTCLASS org/eclipse/ui/XMLMemento$DOMWriter(0xDBF14E18) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/registry/WorkingSetDescriptor;(0xDBF151F8) 3CLTEXTCLASS org/eclipse/ui/internal/LegacyResourceSupport(0xDBF152B0) 3CLTEXTCLASS org/eclipse/ui/OpenAndLinkWithEditorHelper$InternalListener(0xDBF15868) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/CommandLegacyActionWrapper(0xDBF15B28) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/TreeManager$CheckListener(0xDBF16248) 3CLTEXTCLASS org/eclipse/ui/internal/registry/EditorDescriptor(0xDC130DC0) 3CLTEXTCLASS org/eclipse/ui/internal/editorsupport/ComponentSupport(0xDC131678) 3CLTEXTCLASS org/eclipse/ui/internal/registry/EditorRegistry$EditorMap(0xDC131930) 3CLTEXTCLASS org/eclipse/ui/internal/registry/EditorRegistryReader(0xDC131B50) 3CLTEXTCLASS org/eclipse/ui/internal/registry/FileEditorMapping(0xDC131E28) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/registry/FileEditorMapping;(0xDC132318) 3CLTEXTCLASS org/eclipse/ui/internal/registry/EditorRegistry$RelatedRegistry(0xDC1323D8) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/DecoratorManager(0xDC1325E8) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/DecoratorDefinition(0xDC133330) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/FullDecoratorDefinition(0xDC133810) 3CLTEXTCLASS org/eclipse/ui/internal/IObjectContributor(0xDC133A78) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/LightweightDecoratorDefinition(0xDC133BC0) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/DecoratorManager$3(0xDC134178) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/decorators/FullDecoratorDefinition;(0xDC1343D8) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/FullDecoratorRunnable(0xDC134498) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/FullTextDecoratorRunnable(0xDC134658) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/FullImageDecoratorRunnable(0xDC134808) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/DecorationScheduler(0xDC1349E0) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/DecorationScheduler$1(0xDC135098) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/DecorationScheduler$2(0xDC135530) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/DecorationScheduler$3(0xDC135878) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/DecorationReference(0xDC135C90) 3CLTEXTCLASS org/eclipse/ui/internal/decorators/DecoratorManager$ManagedWorkbenchLabelDecorator(0xDC135EF8) 3CLTEXTCLASS org/eclipse/ui/internal/PopupMenuExtender(0xDC136218) 3CLTEXTCLASS org/eclipse/ui/internal/ViewerActionBuilder(0xDC136A58) 3CLTEXTCLASS org/eclipse/ui/internal/PluginActionBuilder$BasicContribution(0xDC136D10) 3CLTEXTCLASS org/eclipse/ui/internal/ViewerActionBuilder$ViewerContribution(0xDC137278) 3CLTEXTCLASS org/eclipse/ui/actions/ActionGroup(0xDC1374D8) 3CLTEXTCLASS [Lorg/eclipse/ui/actions/ActionGroup;(0xDC137658) 3CLTEXTCLASS org/eclipse/ui/actions/SelectionProviderAction(0xDC1377C8) 3CLTEXTCLASS org/eclipse/ui/dialogs/PropertyDialogAction(0xDC137B38) 3CLTEXTCLASS org/eclipse/ui/IObjectActionDelegate(0xDC137E98) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchWizard(0xDC137F50) 3CLTEXTCLASS org/eclipse/ui/IImportWizard(0xDC138008) 3CLTEXTCLASS org/eclipse/ui/INewWizard(0xDC1380B0) 3CLTEXTCLASS org/eclipse/ui/part/EditorPart(0xDC138230) 3CLTEXTCLASS org/eclipse/ui/IReusableEditor(0xDC138618) 3CLTEXTCLASS org/eclipse/ui/INavigationLocationProvider(0xDC1386E8) 3CLTEXTCLASS org/eclipse/ui/IPersistableEditor(0xDC1387A8) 3CLTEXTCLASS org/eclipse/ui/dialogs/ISelectionStatusValidator(0xDC138860) 3CLTEXTCLASS org/eclipse/ui/internal/commands/CommandService$1(0xDC138930) 3CLTEXTCLASS org/eclipse/ui/model/WorkbenchViewerComparator(0xDC138B08) 3CLTEXTCLASS org/eclipse/ui/dialogs/FilteredItemsSelectionDialog(0xDC3D8DB8) 3CLTEXTCLASS org/eclipse/ui/dialogs/TwoPaneElementSelector(0xDC3DA498) 3CLTEXTCLASS org/eclipse/ui/internal/registry/PerspectiveExtensionReader(0xDC3DAC58) 3CLTEXTCLASS org/eclipse/ui/internal/DirtyPerspectiveMarker(0xDC3DB200) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveHelper(0xDC3DB3C0) 3CLTEXTCLASS org/eclipse/ui/internal/misc/StringMatcher(0xDC3DC100) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveHelper$1(0xDC3DC458) 3CLTEXTCLASS org/eclipse/ui/internal/misc/UIListenerLogging(0xDC3DC5E8) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveBarContributionItem(0xDC3DCC18) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveBarContributionItem$1(0xDC3DD118) 3CLTEXTCLASS org/eclipse/ui/internal/ActionSetManager$ActionSetRec(0xDC3DD248) 3CLTEXTCLASS org/eclipse/ui/actions/BaseSelectionListenerAction(0xDC3DD438) 3CLTEXTCLASS [Lorg/eclipse/ui/IEditorReference;(0xDC3DD6E8) 3CLTEXTCLASS [Lorg/eclipse/ui/IWorkbenchPartReference;(0xDC3DD7A0) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$27(0xDC3DD858) 3CLTEXTCLASS org/eclipse/ui/internal/EditorAreaTrimToolBar(0xDC3DDAD8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/PresentablePart(0xDC3DDDE0) 3CLTEXTCLASS org/eclipse/ui/presentations/IPartMenu(0xDC3DE510) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/PresentablePart$1(0xDC3DE5D8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/PresentablePart$2(0xDC3DE700) 3CLTEXTCLASS [Lorg/eclipse/ui/presentations/IPresentablePart;(0xDC3DE860) 3CLTEXTCLASS org/eclipse/ui/internal/ViewPane$ISVPropListener(0xDC3DE918) 3CLTEXTCLASS org/eclipse/ui/internal/ViewPane$1(0xDC3DEAC0) 3CLTEXTCLASS org/eclipse/ui/part/ISetSelectionTarget(0xDC3DEC18) 3CLTEXTCLASS org/eclipse/ui/part/IShowInTarget(0xDC3DECC8) 3CLTEXTCLASS org/eclipse/ui/OpenAndLinkWithEditorHelper(0xDC3DEDA0) 3CLTEXTCLASS org/eclipse/ui/part/IShowInSource(0xDC3DEFC0) 3CLTEXTCLASS org/eclipse/ui/part/ViewPart$1(0xDC3DF088) 3CLTEXTCLASS org/eclipse/ui/internal/tweaklets/InterceptContributions(0xDC3DF1B8) 3CLTEXTCLASS org/eclipse/ui/internal/tweaklets/InterceptContributions$1(0xDC3DF398) 3CLTEXTCLASS org/eclipse/ui/internal/PartSite(0xDC3DF530) 3CLTEXTCLASS org/eclipse/ui/internal/ViewSite(0xDC3DFEB0) 3CLTEXTCLASS org/eclipse/ui/IKeyBindingService(0xDC3E0108) 3CLTEXTCLASS org/eclipse/ui/internal/PartSite$1(0xDC3E0200) 3CLTEXTCLASS org/eclipse/ui/SubActionBars$1(0xDC3E0360) 3CLTEXTCLASS org/eclipse/ui/testing/ContributionInfo(0xDC3E04A8) 3CLTEXTCLASS org/eclipse/ui/internal/testing/ContributionInfoMessages(0xDC3E0600) 3CLTEXTCLASS org/eclipse/ui/part/PluginDropAdapter(0xDC3E0820) 3CLTEXTCLASS [Lorg/eclipse/ui/IEditorDescriptor;(0xDC3E0B18) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewManager(0xDC660BB0) 3CLTEXTCLASS org/eclipse/ui/internal/ViewStackTrimToolBar(0xDC661790) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewManager$2(0xDC661BC0) 3CLTEXTCLASS org/eclipse/ui/internal/AnimationFeedbackBase(0xDC661D68) 3CLTEXTCLASS org/eclipse/ui/internal/RectangleAnimationFeedbackBase(0xDC661FA8) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewManager$1(0xDC662268) 3CLTEXTCLASS org/eclipse/ui/IPerspectiveFactory(0xDC6623D8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/SubTaskInfo(0xDC6624D8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/TaskInfo(0xDC662720) 3CLTEXTCLASS org/eclipse/ui/plugin/AbstractUIPlugin$1(0xDC6629A0) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchPreferencePage(0xDC662AA8) 3CLTEXTCLASS org/eclipse/ui/internal/ViewSashContainer(0xDC662CD0) 3CLTEXTCLASS org/eclipse/ui/internal/ViewSashContainer$1(0xDC6632C8) 3CLTEXTCLASS org/eclipse/ui/internal/registry/IActionSetDescriptor(0xDC6634B0) 3CLTEXTCLASS org/eclipse/ui/internal/registry/ActionSetDescriptor(0xDC663610) 3CLTEXTCLASS org/eclipse/ui/internal/registry/IActionSet(0xDC663AB8) 3CLTEXTCLASS org/eclipse/ui/contexts/ContextManagerEvent(0xDC663BA0) 3CLTEXTCLASS org/eclipse/ui/internal/registry/ActionSetRegistry$ActionSetPartAssociation(0xDC663DE8) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/registry/IActionSetDescriptor;(0xDC663EF0) 3CLTEXTCLASS [Lorg/eclipse/ui/views/IStickyViewDescriptor;(0xDC663FA8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuDetach(0xDC664110) 3CLTEXTCLASS org/eclipse/ui/internal/LayoutPartSash(0xDC6644D0) 3CLTEXTCLASS org/eclipse/ui/internal/LayoutPartSash$1(0xDC664B20) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/LayoutTree;(0xDC664C80) 3CLTEXTCLASS org/eclipse/ui/internal/PlaceholderFolderLayout(0xDC664D40) 3CLTEXTCLASS org/eclipse/ui/internal/ViewLayoutRec(0xDC664F38) 3CLTEXTCLASS org/eclipse/ui/internal/ViewLayout(0xDC665070) 3CLTEXTCLASS org/eclipse/ui/internal/LayoutHelper(0xDC665250) 3CLTEXTCLASS org/eclipse/ui/internal/ReferenceCounter$RefRec(0xDC665460) 3CLTEXTCLASS org/eclipse/ui/internal/ViewActionBars(0xDC6656A0) 3CLTEXTCLASS org/eclipse/ui/IViewSite(0xDC665888) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPartReference$1(0xDC665988) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPartReference$2(0xDC665AC8) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPartReference$3(0xDC665BF0) 3CLTEXTCLASS org/eclipse/ui/internal/ViewPane$PaneMenuManager(0xDC665E38) 3CLTEXTCLASS org/eclipse/ui/internal/PartPane$1(0xDC6660A0) 3CLTEXTCLASS [Lorg/eclipse/ui/IViewReference;(0xDC666228) 3CLTEXTCLASS org/eclipse/ui/dialogs/SelectionStatusDialog(0xDC666408) 3CLTEXTCLASS org/eclipse/ui/dialogs/AbstractElementListSelectionDialog(0xDC666A48) 3CLTEXTCLASS org/eclipse/ui/dialogs/ElementListSelectionDialog(0xDC667450) 3CLTEXTCLASS org/eclipse/ui/part/PluginTransfer(0xDC6677C8) 3CLTEXTCLASS org/eclipse/ui/internal/registry/EditorRegistry(0xDC667B00) 3CLTEXTCLASS org/eclipse/ui/internal/dnd/SwtUtil(0xDC658B28) 3CLTEXTCLASS org/eclipse/ui/internal/EditorManager(0xDC658E40) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchSite(0xDC65A120) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchPartSite(0xDC65A228) 3CLTEXTCLASS org/eclipse/ui/IEditorSite(0xDC65A358) 3CLTEXTCLASS org/eclipse/ui/SubActionBars(0xDC65A500) 3CLTEXTCLASS org/eclipse/ui/SubActionBars2(0xDC65AD80) 3CLTEXTCLASS org/eclipse/ui/internal/EditorActionBars(0xDC65B0B8) 3CLTEXTCLASS org/eclipse/ui/internal/EditorManager$5(0xDC65B820) 3CLTEXTCLASS org/eclipse/ui/internal/InternalSaveable(0xDC65B9D8) 3CLTEXTCLASS org/eclipse/ui/Saveable(0xDC65BB50) 3CLTEXTCLASS org/eclipse/ui/dialogs/SelectionDialog(0xDC65BF38) 3CLTEXTCLASS org/eclipse/ui/dialogs/ListSelectionDialog(0xDC65C4F8) 3CLTEXTCLASS org/eclipse/ui/internal/EditorManager$7(0xDC65CB40) 3CLTEXTCLASS org/eclipse/ui/internal/EditorManager$9(0xDC65CD78) 3CLTEXTCLASS org/eclipse/ui/internal/EditorManager$6(0xDC65CFC0) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage$9(0xDC65D1D8) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewPane(0xDC65D340) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewPane$2(0xDC65DB28) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewPane$5(0xDC65DF88) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewPane$1(0xDC65E148) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuFastViewOrientation(0xDC65E2F8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuSizeFastView(0xDC65E650) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuFastView(0xDC65E8F8) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewPane$3(0xDC65EC58) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewPane$4(0xDC65EE70) 3CLTEXTCLASS org/eclipse/ui/internal/ViewFactory(0xDC65EFF8) 3CLTEXTCLASS org/eclipse/ui/IViewReference(0xDC65F5D8) 3CLTEXTCLASS org/eclipse/ui/internal/ViewReference(0xDC65F7B8) 3CLTEXTCLASS org/eclipse/ui/internal/ReferenceCounter(0xDC6600A8) 3CLTEXTCLASS org/eclipse/ui/IFileEditorMapping(0xDC6602F0) 3CLTEXTCLASS org/eclipse/ui/internal/misc/ExternalProgramImageDescriptor(0xDC660438) 3CLTEXTCLASS org/eclipse/ui/internal/registry/EditorRegistry$1(0xDC660620) 3CLTEXTCLASS org/eclipse/ui/internal/ViewActionBuilder(0xDC6607A0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/PaneFolder(0xDC6401F8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/PaneFolder$3(0xDC640E80) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/PaneFolder$1(0xDC641028) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/PaneFolder$2(0xDC641160) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/PaneFolder$4(0xDC641300) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/PaneFolder$5(0xDC6414E8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/ProxyControl(0xDC641688) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/ProxyControl$4(0xDC641A50) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/ProxyControl$1(0xDC641BD0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/ProxyControl$2(0xDC641D28) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/ProxyControl$3(0xDC641E90) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/defaultpresentation/DefaultTabFolder$3(0xDC641FF8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/defaultpresentation/DefaultTabFolder$4(0xDC642138) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/defaultpresentation/DefaultTabFolder$5(0xDC642278) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/IPresentablePartList(0xDC6423A0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/PresentablePartFolder(0xDC6424F8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/PartInfo(0xDC642C40) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/PresentablePartFolder$1(0xDC642DD0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/PresentablePartFolder$2(0xDC642F38) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/PresentablePartFolder$3(0xDC643088) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/PresentablePartFolder$4(0xDC6431B8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/TabOrder(0xDC643338) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/LeftToRightTabOrder(0xDC6434F8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/TabDragHandler(0xDC643790) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/ReplaceDragHandler(0xDC6438A8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/TabFolderListener(0xDC643AE8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/TabbedStackPresentation$1(0xDC643BE0) 3CLTEXTCLASS org/eclipse/ui/internal/preferences/IDynamicPropertyMap(0xDC643DC8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/StandardViewSystemMenu(0xDC643EC0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/StandardEditorSystemMenu(0xDC644218) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuStateChange(0xDC6444F8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuRestore(0xDC6447F0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuMove(0xDC644AC0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuMovePane(0xDC644E70) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuMoveFolder(0xDC645140) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuMinimize(0xDC645428) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuMaximize(0xDC645680) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuClose(0xDC6458E0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuCloseOthers(0xDC645C08) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuCloseAll(0xDC645F80) 3CLTEXTCLASS org/eclipse/ui/internal/preferences/PropertyMapAdapter(0xDC6461F8) 3CLTEXTCLASS org/eclipse/ui/internal/preferences/PreferenceStoreAdapter(0xDC646548) 3CLTEXTCLASS org/eclipse/ui/internal/preferences/PreferenceStoreAdapter$1(0xDC646940) 3CLTEXTCLASS org/eclipse/ui/internal/preferences/ThemeManagerAdapter(0xDC646AB8) 3CLTEXTCLASS org/eclipse/ui/internal/preferences/ThemeManagerAdapter$1(0xDC646CE8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/TabbedStackPresentation$2(0xDC646E28) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/defaultpresentation/DefaultPartList(0xDC646F68) 3CLTEXTCLASS org/eclipse/ui/internal/preferences/AbstractPropertyListener(0xDC6471E0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/defaultpresentation/DefaultThemeListener(0xDC647328) 3CLTEXTCLASS org/eclipse/ui/internal/preferences/PropertyListenerList(0xDC6476F8) 3CLTEXTCLASS org/eclipse/ui/internal/preferences/PropertyUtil(0xDC647A38) 3CLTEXTCLASS org/eclipse/ui/internal/preferences/ThemeAdapter(0xDC647CE8) 3CLTEXTCLASS org/eclipse/ui/internal/PartPlaceholder(0xDC630180) 3CLTEXTCLASS org/eclipse/ui/internal/PartStack$2(0xDC6303A8) 3CLTEXTCLASS org/eclipse/ui/internal/PartStack$3(0xDC6304F8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/ISelfUpdatingAction(0xDC630688) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/UpdatingActionContributionItem(0xDC6307C8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuSize(0xDC6309D0) 3CLTEXTCLASS org/eclipse/ui/internal/dnd/AbstractDropTarget(0xDC630B80) 3CLTEXTCLASS org/eclipse/ui/internal/PartStack$PartStackDropResult(0xDC630CC0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/SystemMenuPinEditor(0xDC631010) 3CLTEXTCLASS org/eclipse/ui/IPageLayout(0xDC6312D0) 3CLTEXTCLASS org/eclipse/ui/internal/PageLayout(0xDC631668) 3CLTEXTCLASS org/eclipse/ui/IPlaceholderFolderLayout(0xDC632260) 3CLTEXTCLASS org/eclipse/ui/IFolderLayout(0xDC632330) 3CLTEXTCLASS org/eclipse/ui/internal/ContainerPlaceholder(0xDC6324E0) 3CLTEXTCLASS org/eclipse/ui/internal/ViewPane(0xDC632A20) 3CLTEXTCLASS org/eclipse/ui/IViewLayout(0xDC633420) 3CLTEXTCLASS org/eclipse/ui/internal/FolderLayout(0xDC633548) 3CLTEXTCLASS org/eclipse/ui/internal/PartSashContainer$RelationshipInfo(0xDC633820) 3CLTEXTCLASS org/eclipse/ui/internal/Perspective(0xDC633AB0) 3CLTEXTCLASS org/eclipse/ui/internal/Perspective$1(0xDC635858) 3CLTEXTCLASS org/eclipse/ui/internal/Perspective$2(0xDC6359D0) 3CLTEXTCLASS org/eclipse/ui/internal/Perspective$3(0xDC635B48) 3CLTEXTCLASS org/eclipse/ui/internal/Perspective$4(0xDC635C98) 3CLTEXTCLASS org/eclipse/ui/internal/registry/ActionSetRegistry(0xDC635DD8) 3CLTEXTCLASS org/eclipse/ui/internal/Perspective$7(0xDC6363F0) 3CLTEXTCLASS org/eclipse/ui/internal/Perspective$6(0xDC636530) 3CLTEXTCLASS org/eclipse/ui/internal/Perspective$5(0xDC636670) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/PresentationSerializer(0xDC6367B0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/PresentationFactoryUtil(0xDC636980) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/PaneFolderButtonListener(0xDC636AC0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/defaultpresentation/DefaultTabFolder$1(0xDC636BE8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/AbstractTabItem(0xDC636D80) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/WidgetTabItem(0xDC636F30) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/defaultpresentation/DefaultTabItem(0xDC6370E0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/defaultpresentation/DefaultTabFolderColors(0xDC637588) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/AbstractTabFolder$1(0xDC6376D0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/AbstractTabFolder$2(0xDC637828) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/AbstractTabFolder$3(0xDC637988) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/defaultpresentation/DefaultTabFolder$2(0xDC637B00) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/presentations/defaultpresentation/DefaultTabFolderColors;(0xDC637C48) 3CLTEXTCLASS org/eclipse/ui/internal/preferences/AbstractBooleanListener(0xDC637D10) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/defaultpresentation/DefaultMultiTabListener(0xDC637EB8) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/presentations/util/AbstractTabItem;(0xDC637FF8) 3CLTEXTCLASS org/eclipse/ui/internal/NavigationHistory(0xDC6280F8) 3CLTEXTCLASS org/eclipse/ui/internal/NavigationHistory$3(0xDC628B88) 3CLTEXTCLASS org/eclipse/ui/internal/NavigationHistory$1(0xDC628CE0) 3CLTEXTCLASS org/eclipse/ui/internal/IStickyViewManager(0xDC628FF8) 3CLTEXTCLASS org/eclipse/ui/internal/StickyViewManager(0xDC629128) 3CLTEXTCLASS org/eclipse/ui/internal/StickyViewManager32(0xDC629428) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage$1(0xDC6297A0) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage$ActionSwitcher(0xDC629980) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage$2(0xDC629D00) 3CLTEXTCLASS [Lorg/eclipse/ui/IWorkingSet;(0xDC629F08) 3CLTEXTCLASS org/eclipse/ui/internal/ActionSetManager(0xDC629FE0) 3CLTEXTCLASS org/eclipse/ui/internal/contexts/ContextServiceFactory(0xDC62A3F0) 3CLTEXTCLASS org/eclipse/ui/internal/contexts/SlaveContextService(0xDC62A678) 3CLTEXTCLASS org/eclipse/ui/internal/ActionSetManager$1(0xDC62AC10) 3CLTEXTCLASS org/eclipse/ui/internal/EditorAreaHelper(0xDC62ADD8) 3CLTEXTCLASS org/eclipse/ui/internal/PartSashContainer(0xDC62B458) 3CLTEXTCLASS org/eclipse/ui/internal/EditorSashContainer(0xDC62C3E8) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPartReference(0xDC62CED8) 3CLTEXTCLASS org/eclipse/ui/internal/EditorReference(0xDC62DCD0) 3CLTEXTCLASS org/eclipse/ui/internal/EditorStack(0xDC62EAF0) 3CLTEXTCLASS org/eclipse/ui/internal/EditorSashContainer$1(0xDC62F2A8) 3CLTEXTCLASS org/eclipse/ui/internal/EditorSashContainer$2(0xDC62F428) 3CLTEXTCLASS org/eclipse/ui/internal/EditorSashContainer$3(0xDC62F598) 3CLTEXTCLASS org/eclipse/ui/internal/EditorSashContainer$4(0xDC62F7A0) 3CLTEXTCLASS org/eclipse/ui/internal/PartSashContainer$1(0xDC62F908) 3CLTEXTCLASS org/eclipse/ui/presentations/IStackPresentationSite(0xDC62FA18) 3CLTEXTCLASS org/eclipse/ui/internal/DefaultStackPresentationSite(0xDC62FC30) 3CLTEXTCLASS org/eclipse/ui/presentations/IPresentationSerializer(0xDC62FF48) 3CLTEXTCLASS org/eclipse/ui/internal/layout/TrimToolBarBase(0xDC6200A8) 3CLTEXTCLASS org/eclipse/ui/internal/layout/TrimLayout$1(0xDC6208C0) 3CLTEXTCLASS org/eclipse/ui/internal/layout/TrimCommonUIHandle$4(0xDC620A68) 3CLTEXTCLASS org/eclipse/ui/internal/layout/TrimCommonUIHandle$1(0xDC620D30) 3CLTEXTCLASS org/eclipse/ui/internal/layout/TrimCommonUIHandle$2(0xDC620E78) 3CLTEXTCLASS org/eclipse/ui/internal/layout/TrimCommonUIHandle$3(0xDC620FE0) 3CLTEXTCLASS [Lorg/eclipse/ui/WorkbenchException;(0xDC621188) 3CLTEXTCLASS org/eclipse/ui/internal/LayoutPart(0xDC6212F0) 3CLTEXTCLASS org/eclipse/ui/internal/PartPane(0xDC621AB8) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage$5(0xDC622558) 3CLTEXTCLASS org/eclipse/ui/IWorkingSet(0xDC6226A8) 3CLTEXTCLASS org/eclipse/ui/INavigationHistory(0xDC622868) 3CLTEXTCLASS org/eclipse/ui/internal/IReorderListener(0xDC622938) 3CLTEXTCLASS org/eclipse/ui/internal/EditorPane(0xDC622B68) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage$15(0xDC623060) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage$18(0xDC623190) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage$16(0xDC623330) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage$17(0xDC623460) 3CLTEXTCLASS org/eclipse/ui/internal/ILayoutContainer(0xDC623668) 3CLTEXTCLASS org/eclipse/ui/internal/PartStack(0xDC623970) 3CLTEXTCLASS org/eclipse/ui/internal/ViewStack(0xDC624F38) 3CLTEXTCLASS org/eclipse/ui/internal/LayoutTree(0xDC625538) 3CLTEXTCLASS org/eclipse/ui/internal/LayoutTreeNode(0xDC625D18) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage$12(0xDC626580) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage$ActivationList(0xDC6267C8) 3CLTEXTCLASS org/eclipse/ui/internal/PageSelectionService(0xDC626BF8) 3CLTEXTCLASS org/eclipse/ui/internal/PagePartSelectionTracker(0xDC626DE0) 3CLTEXTCLASS org/eclipse/ui/internal/PartList(0xDC6272F0) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPagePartList(0xDC6278A0) 3CLTEXTCLASS org/eclipse/ui/internal/PartList$1(0xDC627B58) 3CLTEXTCLASS org/eclipse/ui/internal/PartList$2(0xDC627CB0) 3CLTEXTCLASS org/eclipse/ui/presentations/IPresentablePart(0xDC627DC0) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressRegion$1(0xDC8EBD20) 3CLTEXTCLASS org/eclipse/ui/internal/progress/AnimationItem$IAnimationContainer(0xDC8EC4A0) 3CLTEXTCLASS org/eclipse/ui/internal/progress/AbstractProgressViewer(0xDC8EC728) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressCanvasViewer(0xDC8ECBA0) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressRegion$4(0xDC8ED190) 3CLTEXTCLASS org/eclipse/ui/internal/progress/AnimationItem(0xDC8ED2F0) 3CLTEXTCLASS org/eclipse/ui/internal/progress/FinishedJobs$KeptJobsListener(0xDC8ED560) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressAnimationItem(0xDC8ED668) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressCanvasViewer$1(0xDC8EDE50) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressCanvasViewer$2(0xDC8EDF88) 3CLTEXTCLASS org/eclipse/ui/internal/progress/AnimationManager(0xDC8EE1E8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/IAnimationProcessor(0xDC8EE4B8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/AnimationManager$1(0xDC8EE6D8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/IJobProgressManagerListener(0xDC8EE918) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressAnimationProcessor(0xDC8EEA70) 3CLTEXTCLASS org/eclipse/ui/progress/WorkbenchJob$1(0xDC8EED40) 3CLTEXTCLASS org/eclipse/ui/internal/progress/AnimationManager$2(0xDC8EEEC8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/JobTreeElement(0xDC8EF1E8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/JobInfo(0xDC8EF488) 3CLTEXTCLASS org/eclipse/ui/internal/progress/AnimationItem$1(0xDC8EFAA8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/FinishedJobs(0xDC8EFC10) 3CLTEXTCLASS org/eclipse/ui/internal/progress/FinishedJobs$1(0xDC8F01A8) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/progress/JobTreeElement;(0xDC8F03A8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressAnimationItem$1(0xDC8F0468) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressAnimationItem$3(0xDC8F0590) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressAnimationItem$4(0xDC8F0708) 3CLTEXTCLASS org/eclipse/ui/internal/progress/AnimationItem$2(0xDC8F0838) 3CLTEXTCLASS org/eclipse/ui/internal/progress/AnimationItem$3(0xDC8F09B0) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressRegion$2(0xDC8F0AF8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressRegion$3(0xDC8F0C70) 3CLTEXTCLASS org/eclipse/ui/internal/progress/IProgressUpdateCollector(0xDC8F0D80) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressContentProvider(0xDC8F0E98) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressViewerContentProvider(0xDC8F10A8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressViewUpdater(0xDC8F13C8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressViewUpdater$1(0xDC8F1960) 3CLTEXTCLASS org/eclipse/ui/internal/progress/GroupInfo(0xDC8F1C80) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressViewUpdater$UpdatesInfo(0xDC8F2120) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/progress/IProgressUpdateCollector;(0xDC8F2350) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressViewerLabelProvider(0xDC8F2438) 3CLTEXTCLASS org/eclipse/ui/internal/menus/TrimBarManager2(0xDC8F25B0) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/menus/MenuLocationURI;(0xDC8F28B0) 3CLTEXTCLASS org/eclipse/ui/internal/menus/TrimBarManager2$STrimBuilder(0xDC8F2970) 3CLTEXTCLASS org/eclipse/ui/internal/menus/TrimContributionManager(0xDC8F2E98) 3CLTEXTCLASS org/eclipse/ui/internal/TrimDropTarget(0xDC8F3390) 3CLTEXTCLASS org/eclipse/ui/internal/dnd/IDropTarget2(0xDC8F3558) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/LayoutPart;(0xDC8F3628) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewBar$4(0xDC8CD6F0) 3CLTEXTCLASS org/eclipse/ui/internal/layout/CellLayout(0xDC8CDEF8) 3CLTEXTCLASS org/eclipse/ui/internal/dnd/IDropTarget(0xDC8CE550) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewBar$1(0xDC8CE638) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewBar$2(0xDC8CE780) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewBar$3(0xDC8CE8E0) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewBarContextMenuContribution(0xDC8CEA90) 3CLTEXTCLASS org/eclipse/ui/internal/IChangeListener(0xDC8CEE28) 3CLTEXTCLASS org/eclipse/ui/internal/Model(0xDC8CEF00) 3CLTEXTCLASS org/eclipse/ui/internal/IntModel(0xDC8CF0F8) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewBarContextMenuContribution$1(0xDC8CF260) 3CLTEXTCLASS org/eclipse/ui/presentations/PresentationUtil(0xDC8CF3B8) 3CLTEXTCLASS org/eclipse/ui/presentations/PresentationUtil$1(0xDC8CF830) 3CLTEXTCLASS org/eclipse/ui/presentations/PresentationUtil$2(0xDC8CF968) 3CLTEXTCLASS org/eclipse/ui/presentations/PresentationUtil$3(0xDC8CFA78) 3CLTEXTCLASS org/eclipse/ui/presentations/PresentationUtil$4(0xDC8CFB88) 3CLTEXTCLASS org/eclipse/ui/internal/layout/Row(0xDC8CFD10) 3CLTEXTCLASS org/eclipse/ui/internal/layout/GridInfo(0xDC8CFEB0) 3CLTEXTCLASS org/eclipse/ui/internal/layout/LayoutCache(0xDC8D00E8) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/layout/SizeCache;(0xDC8D02A8) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewBar$5(0xDC8D0370) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewBar$6(0xDC8D04B0) 3CLTEXTCLASS org/eclipse/ui/internal/layout/CellData(0xDC8D0678) 3CLTEXTCLASS org/eclipse/ui/internal/ShowFastViewContribution(0xDC8D0A90) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewBar$7(0xDC8D0E30) 3CLTEXTCLASS org/eclipse/ui/internal/dnd/DragUtil(0xDC8D0FC8) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/layout/CellData;(0xDC8D13F8) 3CLTEXTCLASS org/eclipse/ui/internal/layout/CellLayoutUtil(0xDC8D14B0) 3CLTEXTCLASS org/eclipse/ui/internal/TrimUtil(0xDC8D1690) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveSwitcher(0xDC8D1920) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveSwitcher$14(0xDC8D2980) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveSwitcher$1(0xDC8D2AE0) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveSwitcher$ChangeListener(0xDC8D2C68) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveSwitcher$5(0xDC8D2E90) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveSwitcher$2(0xDC8D2FF8) 3CLTEXTCLASS org/eclipse/ui/internal/layout/TrimDescriptor(0xDC8D3158) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveBarManager(0xDC8D3470) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveBarNewContributionItem(0xDC8D39B0) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveBarNewContributionItem$1(0xDC8D3CE8) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveBarNewContributionItem$2(0xDC8D3E40) 3CLTEXTCLASS org/eclipse/ui/internal/layout/LayoutUtil(0xDC8D4030) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveSwitcher$6(0xDC8D4198) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveSwitcher$7(0xDC8D42D0) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveSwitcher$3(0xDC8D4418) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveSwitcher$4(0xDC8D4620) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressRegion(0xDC8D47C0) 3CLTEXTCLASS org/eclipse/ui/internal/PartStack$1(0xDC8D4DE0) 3CLTEXTCLASS org/eclipse/ui/internal/SwitchToWindowMenu(0xDC89F738) 3CLTEXTCLASS org/eclipse/ui/internal/SwitchToWindowMenu$1(0xDC89FA28) 3CLTEXTCLASS org/eclipse/ui/internal/menus/WorkbenchMenuService$ManagerPopulationRecord(0xDC89FB70) 3CLTEXTCLASS org/eclipse/ui/menus/IContributionRoot(0xDC89FD68) 3CLTEXTCLASS org/eclipse/ui/internal/menus/ContributionRoot(0xDC89FE50) 3CLTEXTCLASS org/eclipse/ui/internal/expressions/AlwaysEnabledExpression(0xDC8A0130) 3CLTEXTCLASS org/eclipse/ui/internal/menus/WorkbenchMenuService$5(0xDC8A0288) 3CLTEXTCLASS org/eclipse/ui/internal/menus/InternalControlContribution(0xDC8A0600) 3CLTEXTCLASS org/eclipse/ui/activities/IIdentifierListener(0xDC8A07E8) 3CLTEXTCLASS org/eclipse/ui/internal/menus/WorkbenchMenuService$ContributionItemUpdater(0xDC8A08B8) 3CLTEXTCLASS org/eclipse/ui/actions/ContributionItemFactory$2(0xDC8A0B38) 3CLTEXTCLASS org/eclipse/ui/actions/ContributionItemFactory$4(0xDC8A0D50) 3CLTEXTCLASS org/eclipse/ui/internal/tweaklets/TabBehaviour(0xDC8A0FA8) 3CLTEXTCLASS org/eclipse/ui/internal/tweaklets/TabBehaviourMRU(0xDC8A1318) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchPartReference(0xDC8A1660) 3CLTEXTCLASS org/eclipse/ui/IEditorReference(0xDC8A17E8) 3CLTEXTCLASS org/eclipse/ui/IEditorDescriptor(0xDC8A18E0) 3CLTEXTCLASS org/eclipse/ui/internal/tweaklets/TabBehaviourMRU$1(0xDC8A1B10) 3CLTEXTCLASS org/eclipse/ui/IActionBars(0xDC8A1D20) 3CLTEXTCLASS org/eclipse/ui/IActionBars2(0xDC8A1E40) 3CLTEXTCLASS org/eclipse/ui/internal/WWinActionBars(0xDC8A1F30) 3CLTEXTCLASS org/eclipse/ui/internal/menus/DynamicMenuContributionItem(0xDC8A2198) 3CLTEXTCLASS org/eclipse/ui/internal/ShellPool(0xDC8A2508) 3CLTEXTCLASS org/eclipse/ui/internal/ShellPool$1(0xDC8A2770) 3CLTEXTCLASS org/eclipse/ui/internal/ShellPool$2(0xDC8A28D0) 3CLTEXTCLASS org/eclipse/ui/internal/help/WorkbenchHelpSystem$WorkbenchHelpListener(0xDC8A2A88) 3CLTEXTCLASS org/eclipse/ui/internal/contexts/ContextActivation(0xDC8A2C88) 3CLTEXTCLASS org/eclipse/ui/internal/contexts/ContextAuthority$2(0xDC8A2EB0) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$28(0xDC8A3078) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$29(0xDC8A3280) 3CLTEXTCLASS org/eclipse/ui/internal/layout/TrimCommonUIHandle(0xDC8A3A48) 3CLTEXTCLASS org/eclipse/ui/internal/layout/SizeCache(0xDC8A47C0) 3CLTEXTCLASS org/eclipse/ui/internal/layout/TrimArea(0xDC8A4B80) 3CLTEXTCLASS org/eclipse/ui/internal/layout/TrimArea$TrimLine(0xDC8A5118) 3CLTEXTCLASS org/eclipse/ui/internal/layout/CacheWrapper(0xDC8A5340) 3CLTEXTCLASS org/eclipse/ui/internal/layout/CacheWrapper$WrapperLayout(0xDC8A5558) 3CLTEXTCLASS org/eclipse/ui/internal/ActionSetsEvent(0xDC8A5750) 3CLTEXTCLASS org/eclipse/ui/menus/CommandContributionItem$5(0xDC8A5860) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$6(0xDC8A59A8) 3CLTEXTCLASS org/eclipse/ui/internal/FastViewBar(0xDC8A5BC8) 3CLTEXTCLASS org/eclipse/ui/internal/TrimDropTarget$ActualTrimDropTarget(0xDC8A6AF8) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage$PerspectiveList(0xDC8A7070) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/defaultpresentation/DefaultSimpleTabListener(0xDC8A7438) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$9(0xDC8A7588) 3CLTEXTCLASS org/eclipse/ui/internal/ResetPerspectiveAction(0xDC88F738) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/ClosePerspectiveHandler(0xDC88FA58) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/CloseAllPerspectivesHandler(0xDC88FC78) 3CLTEXTCLASS org/eclipse/ui/internal/NavigationHistoryAction(0xDC88FEB0) 3CLTEXTCLASS org/eclipse/ui/internal/NavigationHistoryAction$MenuCreator(0xDC8904F0) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchIntroManager(0xDC8906C8) 3CLTEXTCLASS org/eclipse/ui/intro/IntroContentDetector(0xDC890B10) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchIntroManager$1(0xDC890C10) 3CLTEXTCLASS org/eclipse/ui/internal/IntroAction(0xDC890E00) 3CLTEXTCLASS org/eclipse/ui/internal/intro/IntroMessages(0xDC891118) 3CLTEXTCLASS org/eclipse/ui/internal/IntroAction$1(0xDC8912B0) 3CLTEXTCLASS org/eclipse/ui/actions/QuickMenuCreator(0xDC891438) 3CLTEXTCLASS org/eclipse/ui/menus/CommandContributionItemParameter(0xDC891890) 3CLTEXTCLASS org/eclipse/ui/menus/CommandContributionItem(0xDC891A48) 3CLTEXTCLASS org/eclipse/ui/menus/UIElement(0xDC892970) 3CLTEXTCLASS org/eclipse/ui/menus/CommandContributionItem$2(0xDC892B50) 3CLTEXTCLASS org/eclipse/ui/menus/CommandContributionItem$1(0xDC892D20) 3CLTEXTCLASS org/eclipse/ui/internal/menus/MenuServiceFactory(0xDC892E68) 3CLTEXTCLASS org/eclipse/ui/internal/menus/SlaveMenuService(0xDC893078) 3CLTEXTCLASS org/eclipse/ui/internal/commands/ElementReference(0xDC893380) 3CLTEXTCLASS org/eclipse/ui/menus/CommandContributionItem$3(0xDC893508) 3CLTEXTCLASS org/eclipse/ui/actions/ContributionItemFactory(0xDC893658) 3CLTEXTCLASS org/eclipse/ui/actions/ContributionItemFactory$1(0xDC893900) 3CLTEXTCLASS org/eclipse/ui/actions/ContributionItemFactory$6(0xDC893B48) 3CLTEXTCLASS org/eclipse/ui/actions/ContributionItemFactory$7(0xDC893C90) 3CLTEXTCLASS org/eclipse/ui/actions/ContributionItemFactory$8(0xDC893DD8) 3CLTEXTCLASS org/eclipse/ui/actions/ContributionItemFactory$9(0xDC893F30) 3CLTEXTCLASS org/eclipse/ui/actions/ContributionItemFactory$10(0xDC894078) 3CLTEXTCLASS org/eclipse/ui/actions/ContributionItemFactory$11(0xDC8941C0) 3CLTEXTCLASS org/eclipse/ui/actions/ContributionItemFactory$12(0xDC894308) 3CLTEXTCLASS org/eclipse/ui/actions/ContributionItemFactory$3(0xDC894498) 3CLTEXTCLASS org/eclipse/ui/internal/ReopenEditorMenu(0xDC8946C8) 3CLTEXTCLASS org/eclipse/ui/internal/ReopenEditorMenu$1(0xDC894BD0) 3CLTEXTCLASS org/eclipse/ui/internal/EditorHistory(0xDC894D20) 3CLTEXTCLASS org/eclipse/ui/menus/IWorkbenchContribution(0xDC894FE0) 3CLTEXTCLASS org/eclipse/ui/internal/ShowInMenu(0xDC8950F8) 3CLTEXTCLASS org/eclipse/ui/internal/ShowInMenu$1(0xDC8958A0) 3CLTEXTCLASS org/eclipse/ui/actions/PerspectiveMenu(0xDC895A40) 3CLTEXTCLASS org/eclipse/ui/internal/ChangeToPerspectiveMenu(0xDC896118) 3CLTEXTCLASS org/eclipse/ui/actions/PerspectiveMenu$3(0xDC896500) 3CLTEXTCLASS org/eclipse/ui/actions/PerspectiveMenu$1(0xDC8966E0) 3CLTEXTCLASS org/eclipse/ui/actions/PerspectiveMenu$2(0xDC896818) 3CLTEXTCLASS org/eclipse/ui/internal/ShowViewMenu(0xDC8969B8) 3CLTEXTCLASS org/eclipse/ui/internal/ShowViewMenu$3(0xDC897178) 3CLTEXTCLASS org/eclipse/ui/internal/ShowViewMenu$PluginCCIP(0xDC897380) 3CLTEXTCLASS org/eclipse/ui/internal/ShowViewMenu$1(0xDC8974E0) 3CLTEXTCLASS org/eclipse/ui/internal/SaveAction(0xDC83FA10) 3CLTEXTCLASS org/eclipse/ui/ISaveablePart(0xDC83FDE8) 3CLTEXTCLASS org/eclipse/ui/ISaveablesSource(0xDC83FEE0) 3CLTEXTCLASS org/eclipse/ui/internal/BaseSaveAction$1(0xDC83FFB8) 3CLTEXTCLASS org/eclipse/ui/internal/BaseSaveAction$2(0xDC8400E8) 3CLTEXTCLASS org/eclipse/ui/internal/BaseSaveAction$3(0xDC840218) 3CLTEXTCLASS org/eclipse/ui/internal/SaveAsAction(0xDC840428) 3CLTEXTCLASS org/eclipse/ui/internal/SaveAllAction(0xDC840808) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/NewEditorHandler(0xDC840D20) 3CLTEXTCLASS org/eclipse/ui/actions/RetargetAction$1(0xDC840F28) 3CLTEXTCLASS org/eclipse/ui/actions/RetargetAction$2(0xDC841058) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractEnabledHandler(0xDC8411F8) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractEvaluationHandler(0xDC8413C8) 3CLTEXTCLASS org/eclipse/ui/internal/CloseEditorHandler(0xDC8416B0) 3CLTEXTCLASS org/eclipse/ui/internal/CloseEditorHandler$1(0xDC841890) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractEvaluationHandler$1(0xDC8419F8) 3CLTEXTCLASS org/eclipse/ui/internal/InternalHandlerUtil(0xDC841B58) 3CLTEXTCLASS org/eclipse/ui/IEditorPart(0xDC841D78) 3CLTEXTCLASS org/eclipse/ui/internal/CloseAllHandler(0xDC841EC8) 3CLTEXTCLASS org/eclipse/ui/internal/CloseAllHandler$1(0xDC8420A0) 3CLTEXTCLASS org/eclipse/ui/internal/CloseOthersHandler(0xDC842250) 3CLTEXTCLASS org/eclipse/ui/internal/CloseOthersHandler$1(0xDC842458) 3CLTEXTCLASS org/eclipse/ui/internal/CloseAllSavedAction(0xDC8426B0) 3CLTEXTCLASS org/eclipse/ui/internal/actions/HelpContentsAction(0xDC842B30) 3CLTEXTCLASS org/eclipse/ui/internal/actions/HelpSearchAction(0xDC842F08) 3CLTEXTCLASS org/eclipse/ui/internal/actions/DynamicHelpAction(0xDC8432E0) 3CLTEXTCLASS org/eclipse/ui/internal/OpenPreferencesAction(0xDC8436B0) 3CLTEXTCLASS org/eclipse/ui/splash/BasicSplashHandler$3(0xDC843948) 3CLTEXTCLASS org/eclipse/ui/branding/IBundleGroupConstants(0xDC843A70) 3CLTEXTCLASS org/eclipse/ui/internal/BundleGroupProperties(0xDC843BB0) 3CLTEXTCLASS org/eclipse/ui/preferences/ScopedPreferenceStore$3(0xDC844038) 3CLTEXTCLASS org/eclipse/ui/internal/ShowViewMenuHandler(0xDC8441C0) 3CLTEXTCLASS org/eclipse/ui/internal/ShowViewMenuHandler$1(0xDC8443A8) 3CLTEXTCLASS org/eclipse/ui/internal/ShowPartPaneMenuHandler(0xDC844588) 3CLTEXTCLASS org/eclipse/ui/internal/ShowPartPaneMenuHandler$1(0xDC844770) 3CLTEXTCLASS org/eclipse/ui/internal/CycleBaseHandler(0xDC844960) 3CLTEXTCLASS org/eclipse/ui/internal/CycleEditorHandler(0xDC8451D8) 3CLTEXTCLASS org/eclipse/ui/internal/CycleViewHandler(0xDC845588) 3CLTEXTCLASS org/eclipse/ui/internal/CyclePerspectiveHandler(0xDC845918) 3CLTEXTCLASS org/eclipse/ui/model/PerspectiveLabelProvider(0xDC845C88) 3CLTEXTCLASS org/eclipse/ui/internal/ActivateEditorHandler(0xDC845FC8) 3CLTEXTCLASS org/eclipse/ui/internal/ActivateEditorHandler$1(0xDC8461D0) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/MaximizePartHandler(0xDC846380) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbookEditorsHandler(0xDC846528) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveAction(0xDC846748) 3CLTEXTCLASS org/eclipse/ui/internal/ToggleEditorsVisibilityAction(0xDC846A68) 3CLTEXTCLASS org/eclipse/ui/internal/SavePerspectiveAction(0xDC846DE0) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/EditActionSetsHandler(0xDC847188) 3CLTEXTCLASS org/eclipse/ui/internal/LockToolBarAction(0xDC847390) 3CLTEXTCLASS org/eclipse/ui/internal/LockToolBarAction$1(0xDC847648) 3CLTEXTCLASS org/eclipse/ui/internal/ShowViewMenu$2(0xDC847788) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$25(0xDC82C8A8) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$26(0xDC82CA40) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$27(0xDC82CC30) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$28(0xDC82CD88) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$29(0xDC82CF28) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$30(0xDC82D0E8) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$31(0xDC82D2A0) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$32(0xDC82D458) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$33(0xDC82D610) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$34(0xDC82D7F0) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$35(0xDC82D948) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$36(0xDC82DAE8) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$37(0xDC82DCA8) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$38(0xDC82DE60) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$39(0xDC82E018) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$40(0xDC82E1E0) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$41(0xDC82E378) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$42(0xDC82E530) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$43(0xDC82E710) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$44(0xDC82E8A8) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$45(0xDC82EA40) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$46(0xDC82EB98) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$47(0xDC82ED30) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$48(0xDC82EE88) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$49(0xDC82EFE0) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$50(0xDC82F138) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$51(0xDC82F290) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$52(0xDC82F428) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$53(0xDC82F580) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$54(0xDC82F728) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$55(0xDC82F898) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$56(0xDC82FA00) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$57(0xDC82FB80) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$58(0xDC82FD00) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$59(0xDC82FEE0) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$60(0xDC830080) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$61(0xDC8301D8) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$62(0xDC830330) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$63(0xDC830488) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$64(0xDC830628) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$65(0xDC8307A8) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$IWorkbenchAction(0xDC830908) 3CLTEXTCLASS org/eclipse/ui/actions/PartEventAction(0xDC830A90) 3CLTEXTCLASS org/eclipse/ui/actions/RetargetAction(0xDC830DB0) 3CLTEXTCLASS org/eclipse/ui/actions/LabelRetargetAction(0xDC8313A8) 3CLTEXTCLASS org/eclipse/ui/internal/actions/CommandAction(0xDC831840) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$WorkbenchCommandAction(0xDC831DD0) 3CLTEXTCLASS org/eclipse/ui/internal/actions/CommandAction$1(0xDC831F80) 3CLTEXTCLASS org/eclipse/ui/actions/CompoundContributionItem(0xDC832130) 3CLTEXTCLASS org/eclipse/ui/actions/BaseNewWizardMenu(0xDC832460) 3CLTEXTCLASS org/eclipse/ui/actions/BaseNewWizardMenu$3(0xDC832A50) 3CLTEXTCLASS org/eclipse/ui/actions/CompoundContributionItem$1(0xDC832BF0) 3CLTEXTCLASS org/eclipse/ui/actions/BaseNewWizardMenu$1(0xDC832D30) 3CLTEXTCLASS org/eclipse/ui/actions/BaseNewWizardMenu$2(0xDC832EA0) 3CLTEXTCLASS org/eclipse/ui/actions/NewWizardDropDownAction(0xDC833080) 3CLTEXTCLASS org/eclipse/ui/actions/NewWizardDropDownAction$1(0xDC833400) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveTracker(0xDC833640) 3CLTEXTCLASS org/eclipse/ui/internal/PageEventAction(0xDC833968) 3CLTEXTCLASS org/eclipse/ui/internal/ActiveEditorAction(0xDC833D10) 3CLTEXTCLASS org/eclipse/ui/internal/BaseSaveAction(0xDC834130) 3CLTEXTCLASS org/eclipse/ui/internal/IBackgroundSaveListener(0xDC834620) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$ShowUsedActionSetsFilter(0xDC8346F8) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindowConfigurer(0xDC824900) 3CLTEXTCLASS org/eclipse/ui/application/IActionBarConfigurer(0xDC825170) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindowConfigurer$1(0xDC825280) 3CLTEXTCLASS org/eclipse/ui/presentations/AbstractPresentationFactory(0xDC8253E8) 3CLTEXTCLASS org/eclipse/ui/presentations/WorkbenchPresentationFactory(0xDC825650) 3CLTEXTCLASS [Lorg/eclipse/ui/presentations/AbstractPresentationFactory;(0xDC825950) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/AbstractTabFolder(0xDC825AC0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/defaultpresentation/DefaultTabFolder(0xDC8262B0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/ISystemMenu(0xDC826D30) 3CLTEXTCLASS org/eclipse/ui/internal/preferences/IPropertyMap(0xDC826DF0) 3CLTEXTCLASS org/eclipse/ui/internal/preferences/IPropertyMapListener(0xDC826EE0) 3CLTEXTCLASS org/eclipse/ui/ISizeProvider(0xDC826FA0) 3CLTEXTCLASS org/eclipse/ui/presentations/StackPresentation(0xDC8270D0) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/util/TabbedStackPresentation(0xDC8274A8) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/defaultpresentation/EmptyTabFolder(0xDC827E58) 3CLTEXTCLASS org/eclipse/ui/internal/presentations/DefaultActionBarPresentationFactory(0xDC828268) 3CLTEXTCLASS org/eclipse/ui/application/ActionBarAdvisor(0xDC828450) 3CLTEXTCLASS org/eclipse/ui/part/EditorInputTransfer(0xDC8287E8) 3CLTEXTCLASS [Lorg/eclipse/ui/IWorkbenchPage;(0xDC828C28) 3CLTEXTCLASS org/eclipse/ui/part/EditorInputTransfer$EditorInputData(0xDC828CE0) 3CLTEXTCLASS org/eclipse/ui/IPerspectiveListener2(0xDC828DE0) 3CLTEXTCLASS org/eclipse/ui/IPerspectiveListener3(0xDC828E98) 3CLTEXTCLASS org/eclipse/ui/IPerspectiveListener4(0xDC828F88) 3CLTEXTCLASS org/eclipse/ui/PerspectiveAdapter(0xDC829088) 3CLTEXTCLASS [Lorg/eclipse/ui/IWorkbenchWindow;(0xDC829258) 3CLTEXTCLASS org/eclipse/ui/internal/provisional/application/IActionBarConfigurer2(0xDC8292F8) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindowConfigurer$WindowActionBarConfigurer(0xDC8293F8) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory(0xDC8296D0) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$1(0xDC82A550) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$2(0xDC82A740) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$3(0xDC82A8C0) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$4(0xDC82AA60) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$5(0xDC82ABB8) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$6(0xDC82AD38) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$7(0xDC82AEB8) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$8(0xDC82B038) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$9(0xDC82B1F0) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$10(0xDC82B348) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$11(0xDC82B500) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$12(0xDC82B658) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$13(0xDC82B838) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$14(0xDC82BA18) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$15(0xDC82BC20) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$16(0xDC82BDD8) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$17(0xDC82BFB0) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$18(0xDC82C148) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$19(0xDC82C2E8) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$20(0xDC82C440) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$21(0xDC82C5E0) 3CLTEXTCLASS org/eclipse/ui/internal/WWinPartService$WWinListener(0xDC814830) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractSelectionService(0xDC814AC0) 3CLTEXTCLASS org/eclipse/ui/internal/WindowSelectionService(0xDC814F38) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractPartSelectionTracker(0xDC8150F0) 3CLTEXTCLASS org/eclipse/ui/IPageListener(0xDC815348) 3CLTEXTCLASS org/eclipse/ui/internal/WindowPartSelectionTracker(0xDC815460) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractSelectionService$1(0xDC8156E8) 3CLTEXTCLASS org/eclipse/ui/internal/AbstractSelectionService$2(0xDC815828) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$1(0xDC815970) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$2(0xDC815C40) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$3(0xDC815E30) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$4(0xDC816020) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/IActionCommandMappingService(0xDC816148) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/ActionCommandMappingService(0xDC816238) 3CLTEXTCLASS org/eclipse/ui/internal/menus/LegacyActionPersistence(0xDC816428) 3CLTEXTCLASS org/eclipse/ui/internal/expressions/LegacyActionExpressionWrapper(0xDC816F78) 3CLTEXTCLASS org/eclipse/ui/internal/expressions/LegacySelectionEnablerWrapper(0xDC817278) 3CLTEXTCLASS org/eclipse/ui/internal/expressions/LegacyActionSetExpression(0xDC817578) 3CLTEXTCLASS org/eclipse/ui/internal/expressions/LegacyEditorContributionExpression(0xDC817878) 3CLTEXTCLASS org/eclipse/ui/internal/menus/LegacyActionPersistence$ObjectClassExpression(0xDC817B58) 3CLTEXTCLASS org/eclipse/ui/internal/expressions/LegacyViewContributionExpression(0xDC817D48) 3CLTEXTCLASS org/eclipse/ui/internal/expressions/LegacyViewerContributionExpression(0xDC818028) 3CLTEXTCLASS org/eclipse/ui/internal/menus/LegacyActionPersistence$1(0xDC818338) 3CLTEXTCLASS org/eclipse/ui/internal/services/ServiceLocator$ParentLocator(0xDC8184F0) 3CLTEXTCLASS org/eclipse/ui/internal/commands/CommandServiceFactory(0xDC818650) 3CLTEXTCLASS org/eclipse/ui/internal/commands/SlaveCommandService(0xDC8188B0) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/SlaveHandlerService(0xDC818EA8) 3CLTEXTCLASS org/eclipse/ui/internal/expressions/CompositeExpression(0xDC819418) 3CLTEXTCLASS org/eclipse/ui/internal/expressions/AndExpression(0xDC819668) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/ActionDelegateHandlerProxy(0xDC819948) 3CLTEXTCLASS org/eclipse/ui/SelectionEnabler(0xDC81A2D8) 3CLTEXTCLASS org/eclipse/ui/internal/ActionExpression(0xDC81A8C0) 3CLTEXTCLASS org/eclipse/ui/internal/ActionExpression$AbstractExpression(0xDC81AD98) 3CLTEXTCLASS org/eclipse/ui/internal/ActionExpression$CompositeExpression(0xDC81AF08) 3CLTEXTCLASS org/eclipse/ui/internal/ActionExpression$OrExpression(0xDC81B188) 3CLTEXTCLASS org/eclipse/ui/internal/ActionExpression$AndExpression(0xDC81B310) 3CLTEXTCLASS org/eclipse/ui/internal/ActionExpression$SingleExpression(0xDC81B498) 3CLTEXTCLASS org/eclipse/ui/internal/ActionExpression$NotExpression(0xDC81B6C0) 3CLTEXTCLASS org/eclipse/ui/internal/ActionExpression$ObjectStateExpression(0xDC81B7E8) 3CLTEXTCLASS org/eclipse/ui/internal/ActionExpression$ObjectClassExpression(0xDC81BAC0) 3CLTEXTCLASS org/eclipse/ui/internal/ActionExpression$PluginStateExpression(0xDC81BD40) 3CLTEXTCLASS org/eclipse/ui/internal/ActionExpression$SystemPropertyExpression(0xDC81BF60) 3CLTEXTCLASS org/eclipse/ui/SelectionEnabler$SelectionClass(0xDC81C148) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$22(0xDC81C238) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$23(0xDC81C390) 3CLTEXTCLASS org/eclipse/ui/actions/ActionFactory$24(0xDC81C538) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPage(0xDC80A5A8) 3CLTEXTCLASS org/eclipse/ui/internal/layout/ICachingLayout(0xDC80D548) 3CLTEXTCLASS org/eclipse/ui/internal/layout/ITrimManager(0xDC80D5F8) 3CLTEXTCLASS org/eclipse/ui/internal/layout/TrimLayout(0xDC80D7D8) 3CLTEXTCLASS org/eclipse/ui/internal/layout/IWindowTrim(0xDC80DFE0) 3CLTEXTCLASS org/eclipse/ui/internal/dnd/IDragOverListener(0xDC80E128) 3CLTEXTCLASS org/eclipse/ui/internal/HeapStatus(0xDC80E820) 3CLTEXTCLASS org/eclipse/ui/internal/WindowTrimProxy(0xDC80F9A8) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$7(0xDC80FC78) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$8(0xDC80FDE0) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$10(0xDC80FF20) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$11(0xDC810080) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$12(0xDC8101D0) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$13(0xDC810378) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$14(0xDC8104B8) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$15(0xDC810610) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$19(0xDC810758) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$20(0xDC8108D0) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$21(0xDC810A10) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$22(0xDC810B50) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$16(0xDC810CE0) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$17(0xDC810EE0) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$18(0xDC811048) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$24(0xDC811188) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$25(0xDC8112D8) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$23(0xDC811468) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$26(0xDC8115C8) 3CLTEXTCLASS org/eclipse/ui/internal/provisional/presentations/IActionBarPresentationFactory(0xDC811720) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow$PageList(0xDC811838) 3CLTEXTCLASS org/eclipse/ui/internal/PageListenerList(0xDC811AB8) 3CLTEXTCLASS org/eclipse/ui/internal/PageListenerList$1(0xDC811D38) 3CLTEXTCLASS org/eclipse/ui/internal/PageListenerList$2(0xDC811E80) 3CLTEXTCLASS org/eclipse/ui/internal/PageListenerList$3(0xDC811FC8) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveListenerList$1(0xDC812110) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressManagerUtil(0xDC800048) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressManagerUtil$1(0xDC800640) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMessages(0xDC800758) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressManager$3(0xDC8009B8) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressManager$4(0xDC800E58) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressManager$2(0xDC8010C0) 3CLTEXTCLASS org/eclipse/ui/statushandlers/StatusManager(0xDC801220) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchErrorHandlerProxy(0xDC8016D8) 3CLTEXTCLASS org/eclipse/ui/statushandlers/StatusManager$StatusManagerLogListener(0xDC801830) 3CLTEXTCLASS org/eclipse/ui/application/WorkbenchAdvisor$2(0xDC8019A0) 3CLTEXTCLASS [Lorg/eclipse/ui/application/IWorkbenchConfigurer;(0xDC801AE8) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$47(0xDC801BA0) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$TaskBarDelegatingProgressMontior(0xDC801CE8) 3CLTEXTCLASS org/eclipse/ui/splash/BasicSplashHandler$1(0xDC802090) 3CLTEXTCLASS org/eclipse/ui/splash/BasicSplashHandler$6(0xDC8021E8) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$StartupProgressBundleListener(0xDC802318) 3CLTEXTCLASS org/eclipse/ui/splash/BasicSplashHandler$5(0xDC802540) 3CLTEXTCLASS org/eclipse/ui/internal/registry/PerspectiveRegistry(0xDC8026C0) 3CLTEXTCLASS org/eclipse/ui/IPerspectiveDescriptor(0xDC802FE0) 3CLTEXTCLASS org/eclipse/ui/statushandlers/StatusAdapter(0xDC8030F0) 3CLTEXTCLASS org/eclipse/ui/internal/registry/PerspectiveRegistry$1(0xDC8032F8) 3CLTEXTCLASS org/eclipse/ui/internal/registry/PerspectiveRegistryReader(0xDC8035E8) 3CLTEXTCLASS org/eclipse/ui/internal/registry/PerspectiveDescriptor(0xDC803808) 3CLTEXTCLASS org/eclipse/ui/activities/WorkbenchActivityHelper(0xDC803D60) 3CLTEXTCLASS org/eclipse/ui/internal/activities/Identifier(0xDC804348) 3CLTEXTCLASS org/eclipse/ui/activities/IdentifierEvent(0xDC8047F0) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/WorkbenchWindow;(0xDC804960) 3CLTEXTCLASS org/eclipse/ui/internal/tweaklets/WorkbenchImplementation(0xDC804A28) 3CLTEXTCLASS org/eclipse/ui/internal/tweaklets/Workbench3xImplementation(0xDC804C38) 3CLTEXTCLASS org/eclipse/ui/internal/CompatibleWorkbenchPage(0xDC804DD8) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveListenerList(0xDC8051E8) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveListenerList$2(0xDC805580) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveListenerList$3(0xDC8056D8) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveListenerList$4(0xDC805830) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveListenerList$5(0xDC805998) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveListenerList$6(0xDC805B10) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveListenerList$7(0xDC805C68) 3CLTEXTCLASS org/eclipse/ui/internal/PerspectiveListenerList$8(0xDC805DC0) 3CLTEXTCLASS org/eclipse/ui/internal/WWinPartService(0xDC805F48) 3CLTEXTCLASS org/eclipse/ui/IPartListener2(0xDC8062B8) 3CLTEXTCLASS org/eclipse/ui/internal/PartService(0xDC806428) 3CLTEXTCLASS org/eclipse/ui/internal/PartService$PartJob(0xDC8069F0) 3CLTEXTCLASS org/eclipse/ui/internal/PartService$PartActivated(0xDC806B08) 3CLTEXTCLASS org/eclipse/ui/internal/PartService$PartTop(0xDC806C30) 3CLTEXTCLASS org/eclipse/ui/internal/PartService$PartVisible(0xDC806D58) 3CLTEXTCLASS org/eclipse/ui/internal/PartListenerList(0xDC806EB0) 3CLTEXTCLASS org/eclipse/ui/internal/PartListenerList$1(0xDC8071A0) 3CLTEXTCLASS org/eclipse/ui/internal/PartListenerList$2(0xDC8072E8) 3CLTEXTCLASS org/eclipse/ui/internal/PartListenerList$3(0xDC807430) 3CLTEXTCLASS org/eclipse/ui/internal/PartListenerList$4(0xDC807578) 3CLTEXTCLASS org/eclipse/ui/internal/PartListenerList$5(0xDC8076C0) 3CLTEXTCLASS org/eclipse/ui/internal/PartListenerList2(0xDC807840) 3CLTEXTCLASS org/eclipse/ui/internal/PartListenerList2$1(0xDC807C10) 3CLTEXTCLASS org/eclipse/ui/internal/PartListenerList2$2(0xDC807D58) 3CLTEXTCLASS org/eclipse/ui/internal/PartListenerList2$3(0xDC807EA0) 3CLTEXTCLASS org/eclipse/ui/internal/themes/ThemeElementHelper(0x1077BDD0) 3CLTEXTCLASS org/eclipse/ui/internal/themes/IThemeRegistry$HierarchyComparator(0x1077C260) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchColors(0x1077C3D0) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/themes/ColorDefinition;(0x1077C578) 3CLTEXTCLASS org/eclipse/ui/application/IWorkbenchConfigurer(0x1077C618) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchConfigurer(0x1077C808) 3CLTEXTCLASS org/eclipse/ui/application/IWorkbenchWindowConfigurer(0x1077CB68) 3CLTEXTCLASS org/eclipse/ui/internal/PluginActionBuilder(0x1077CE60) 3CLTEXTCLASS org/eclipse/ui/IEditorInput(0x1077D180) 3CLTEXTCLASS org/eclipse/ui/MultiPartInitException(0x1077D2C0) 3CLTEXTCLASS org/eclipse/ui/model/IWorkbenchAdapter2(0x1077D460) 3CLTEXTCLASS org/eclipse/ui/model/WorkbenchAdapter(0x1077D560) 3CLTEXTCLASS org/eclipse/ui/IActionFilter(0x1077D728) 3CLTEXTCLASS org/eclipse/ui/IElementFactory(0x1077D7D8) 3CLTEXTCLASS org/eclipse/ui/IPersistableElement(0x1077D888) 3CLTEXTCLASS org/eclipse/ui/progress/UIJob(0x1077DA50) 3CLTEXTCLASS org/eclipse/ui/progress/WorkbenchJob(0x1077DE60) 3CLTEXTCLASS org/eclipse/ui/internal/operations/WorkbenchOperationSupport(0x1077E108) 3CLTEXTCLASS org/eclipse/ui/internal/operations/AdvancedValidationUserApprover(0x1077E360) 3CLTEXTCLASS org/eclipse/ui/internal/tweaklets/GrabFocus(0x1077E898) 3CLTEXTCLASS org/eclipse/ui/internal/tweaklets/Tweaklets$TweakKey(0x1077EA88) 3CLTEXTCLASS org/eclipse/ui/internal/tweaklets/AllowGrabFocus(0x1077EBC8) 3CLTEXTCLASS org/eclipse/ui/internal/tweaklets/Tweaklets(0x1077ECE8) 3CLTEXTCLASS org/eclipse/ui/services/ISourceProviderService(0x1077EF68) 3CLTEXTCLASS org/eclipse/ui/internal/services/SourceProviderService(0x1077F058) 3CLTEXTCLASS org/eclipse/ui/ISourceProvider(0x1077F308) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$56(0x1077F418) 3CLTEXTCLASS org/eclipse/ui/AbstractSourceProvider(0x1077F5F0) 3CLTEXTCLASS org/eclipse/ui/ISelectionListener(0x1077F820) 3CLTEXTCLASS org/eclipse/ui/INullSelectionListener(0x1077F8D8) 3CLTEXTCLASS org/eclipse/ui/internal/services/WorkbenchSourceProvider(0x1077F9D0) 3CLTEXTCLASS org/eclipse/ui/IPartListener(0x107804C0) 3CLTEXTCLASS org/eclipse/ui/IPerspectiveListener(0x107805B0) 3CLTEXTCLASS org/eclipse/ui/IPropertyListener(0x10780670) 3CLTEXTCLASS [Lorg/eclipse/ui/ISourceProviderListener;(0x10780738) 3CLTEXTCLASS org/eclipse/ui/internal/services/WorkbenchSourceProvider$1(0x10780800) 3CLTEXTCLASS org/eclipse/ui/internal/services/WorkbenchSourceProvider$2(0x107809A0) 3CLTEXTCLASS org/eclipse/ui/internal/services/WorkbenchSourceProvider$3(0x10780B48) 3CLTEXTCLASS org/eclipse/ui/internal/services/WorkbenchSourceProvider$4(0x10780D20) 3CLTEXTCLASS org/eclipse/ui/internal/services/WorkbenchSourceProvider$5(0x10780ED0) 3CLTEXTCLASS org/eclipse/ui/internal/services/WorkbenchSourceProvider$6(0x10781000) 3CLTEXTCLASS org/eclipse/ui/internal/services/ActionSetSourceProvider(0x10781358) 3CLTEXTCLASS org/eclipse/ui/swt/IFocusService(0x107815A0) 3CLTEXTCLASS org/eclipse/ui/internal/menus/FocusControlSourceProvider(0x107816D0) 3CLTEXTCLASS org/eclipse/ui/internal/services/MenuSourceProvider(0x10781A50) 3CLTEXTCLASS org/eclipse/ui/internal/contexts/ActiveContextSourceProvider(0x10781D20) 3CLTEXTCLASS [Lorg/eclipse/ui/AbstractSourceProvider;(0x10781FF8) 3CLTEXTCLASS [Lorg/eclipse/ui/ISourceProvider;(0x107820B0) 3CLTEXTCLASS org/eclipse/ui/internal/services/EvaluationAuthority$1(0x10782170) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/services/EvaluationReference;(0x10782320) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$57(0x107823E0) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressManager(0x10782690) 3CLTEXTCLASS org/eclipse/ui/statushandlers/StatusManager$INotificationListener(0x10783450) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressManager$6(0x10783610) 3CLTEXTCLASS org/eclipse/ui/progress/IProgressConstants(0x10783860) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/WorkbenchDialogBlockedHandler(0x107839E0) 3CLTEXTCLASS org/eclipse/ui/internal/PartListenerList2$4(0x10783B70) 3CLTEXTCLASS org/eclipse/ui/internal/commands/CommandManagerLegacyWrapper(0x1073CDF8) 3CLTEXTCLASS org/eclipse/ui/commands/ICommand(0x1073D4E8) 3CLTEXTCLASS org/eclipse/ui/commands/IKeyConfiguration(0x1073D648) 3CLTEXTCLASS org/eclipse/ui/keys/ParseException(0x1073D7B0) 3CLTEXTCLASS org/eclipse/ui/keys/SWTKeySupport(0x1073D8D0) 3CLTEXTCLASS org/eclipse/ui/keys/IKeyFormatter(0x1073DE00) 3CLTEXTCLASS org/eclipse/ui/keys/Key(0x1073DEE8) 3CLTEXTCLASS org/eclipse/ui/keys/NaturalKey(0x1073E070) 3CLTEXTCLASS org/eclipse/ui/keys/SpecialKey(0x1073E158) 3CLTEXTCLASS org/eclipse/ui/keys/CharacterKey(0x1073E800) 3CLTEXTCLASS org/eclipse/ui/internal/keys/AbstractKeyFormatter(0x1073EB00) 3CLTEXTCLASS org/eclipse/ui/internal/keys/NativeKeyFormatter(0x1073EE38) 3CLTEXTCLASS org/eclipse/ui/keys/ModifierKey(0x1073F238) 3CLTEXTCLASS org/eclipse/ui/internal/keys/NativeModifierKeyComparator(0x1073F458) 3CLTEXTCLASS org/eclipse/ui/keys/KeyFormatterFactory(0x1073F640) 3CLTEXTCLASS org/eclipse/ui/internal/keys/CompactKeyFormatter(0x1073F858) 3CLTEXTCLASS org/eclipse/ui/internal/keys/FormalKeyFormatter(0x1073FAE0) 3CLTEXTCLASS org/eclipse/ui/internal/keys/AlphabeticModifierKeyComparator(0x1073FC88) 3CLTEXTCLASS org/eclipse/ui/internal/keys/EmacsKeyFormatter(0x1073FDC8) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$33(0x10740038) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$34(0x10740190) 3CLTEXTCLASS org/eclipse/ui/internal/ISelectionConversionService(0x10740290) 3CLTEXTCLASS org/eclipse/ui/internal/SelectionConversionService(0x10740358) 3CLTEXTCLASS org/eclipse/ui/internal/themes/ThemeRegistry(0x10740540) 3CLTEXTCLASS org/eclipse/ui/internal/themes/IThemeElementDefinition(0x10740A98) 3CLTEXTCLASS org/eclipse/ui/internal/themes/ThemeRegistryReader(0x10740BB0) 3CLTEXTCLASS org/eclipse/ui/internal/themes/IThemeDescriptor(0x10741240) 3CLTEXTCLASS org/eclipse/ui/internal/themes/ThemeElementCategory(0x10741360) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/themes/ThemeElementCategory;(0x107415F0) 3CLTEXTCLASS org/eclipse/ui/internal/themes/IThemeRegistry$1(0x107416A8) 3CLTEXTCLASS org/eclipse/ui/internal/themes/IHierarchalThemeElementDefinition(0x107417E0) 3CLTEXTCLASS org/eclipse/ui/internal/themes/ICategorizedThemeElementDefinition(0x10741898) 3CLTEXTCLASS org/eclipse/ui/internal/themes/IEditable(0x10741950) 3CLTEXTCLASS org/eclipse/ui/internal/themes/ColorDefinition(0x10741A38) 3CLTEXTCLASS org/eclipse/ui/internal/themes/FontDefinition(0x10741E10) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/themes/FontDefinition;(0x10742108) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/themes/IThemeDescriptor;(0x107421C0) 3CLTEXTCLASS org/eclipse/ui/internal/themes/ThemeDescriptor(0x107422A0) 3CLTEXTCLASS org/eclipse/ui/themes/IColorFactory(0x107425D8) 3CLTEXTCLASS org/eclipse/ui/internal/themes/LightColorFactory(0x107426A8) 3CLTEXTCLASS org/eclipse/ui/themes/ColorUtil(0x10742988) 3CLTEXTCLASS org/eclipse/ui/internal/themes/RGBContrastFactory(0x10742D30) 3CLTEXTCLASS org/eclipse/ui/themes/RGBBlendColorFactory(0x10742F58) 3CLTEXTCLASS org/eclipse/ui/internal/themes/WorkbenchThemeManager(0x10743138) 3CLTEXTCLASS org/eclipse/ui/themes/ITheme(0x10743798) 3CLTEXTCLASS org/eclipse/ui/internal/themes/WorkbenchThemeManager$1(0x10743908) 3CLTEXTCLASS org/eclipse/ui/internal/themes/WorkbenchThemeManager$2(0x10743AA0) 3CLTEXTCLASS org/eclipse/ui/internal/themes/WorkbenchThemeManager$3(0x10743C10) 3CLTEXTCLASS org/eclipse/ui/internal/themes/Theme(0x10743D88) 3CLTEXTCLASS org/eclipse/ui/internal/themes/CascadingColorRegistry(0x107443C8) 3CLTEXTCLASS org/eclipse/ui/internal/themes/CascadingFontRegistry(0x107446D0) 3CLTEXTCLASS org/eclipse/ui/internal/themes/Theme$2(0x10744998) 3CLTEXTCLASS org/eclipse/ui/internal/themes/Theme$1(0x10744AC8) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/FilteredPreferenceDialog(0xDCB3E028) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/PropertyDialog(0xDCB3EEB8) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/QuitHandler(0xDCB3F440) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/WidgetMethodHandler(0xDCB3F5F8) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/WidgetMethodHandler$1(0xDCB3FA38) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/SelectAllHandler(0xDCB3FBB0) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/OpenInNewWindowHandler(0xDCB3FF88) 3CLTEXTCLASS org/eclipse/ui/internal/quickaccess/QuickAccessHandler(0xDCB401F8) 3CLTEXTCLASS org/eclipse/ui/internal/quickaccess/QuickAccessDialog(0xDCB40470) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/SpyHandler(0xDCB412A8) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/SpyHandler$1(0xDCB41680) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchEditorsHandler(0xDCB418D8) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/MinimizePartHandler(0xDCB41A88) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/ClosePartHandler(0xDCB41C30) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/ShowPreferencePageHandler(0xDCB41DF0) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/ExecutableExtensionHandler(0xDCB41FC0) 3CLTEXTCLASS org/eclipse/ui/IActionDelegate(0xDCB420F0) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchWindowActionDelegate(0xDCB421B0) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/IWorkbenchWindowHandlerDelegate(0xDCB42278) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/WorkbenchWindowHandlerDelegate(0xDCB42380) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/ShowKeyAssistHandler(0xDCB42588) 3CLTEXTCLASS org/eclipse/ui/handlers/ShowViewHandler(0xDCB427A8) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchPart(0xDCB42B18) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/DisplayHelpHandler(0xDCB42CB0) 3CLTEXTCLASS org/eclipse/ui/handlers/ShowPerspectiveHandler(0xDCB42E78) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/TraversePageHandler(0xDCB43248) 3CLTEXTCLASS org/eclipse/ui/internal/ShowInHandler(0xDCB434B8) 3CLTEXTCLASS org/eclipse/ui/internal/help/WorkbenchHelpSystem(0xDCB438E0) 3CLTEXTCLASS org/eclipse/ui/internal/help/WorkbenchHelpSystem$1(0xDCB44198) 3CLTEXTCLASS org/eclipse/ui/internal/help/WorkbenchHelpSystem$6(0xDCB44330) 3CLTEXTCLASS org/eclipse/ui/IPersistable(0xDCB44500) 3CLTEXTCLASS org/eclipse/ui/IViewPart(0xDCB445B0) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchPart2(0xDCB446A8) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchPart3(0xDCB44778) 3CLTEXTCLASS org/eclipse/ui/part/IWorkbenchPartOrientation(0xDCB44880) 3CLTEXTCLASS org/eclipse/ui/part/WorkbenchPart(0xDCB449E0) 3CLTEXTCLASS org/eclipse/ui/part/ViewPart(0xDCB451E8) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/HandlerAuthority$HandlerPropertyListener(0xDCB45518) 3CLTEXTCLASS org/eclipse/ui/internal/services/EvaluationReference(0xDCB456E0) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/HandlerProxy$1(0xDCB45878) 3CLTEXTCLASS org/eclipse/ui/internal/services/EvaluationResultCacheComparator(0xDCB459F8) 3CLTEXTCLASS org/eclipse/ui/LegacyHandlerSubmissionExpression(0xDCB45B40) 3CLTEXTCLASS org/eclipse/ui/internal/menus/WorkbenchMenuService(0x10720CE8) 3CLTEXTCLASS org/eclipse/ui/menus/AbstractContributionFactory(0x107219F8) 3CLTEXTCLASS org/eclipse/ui/internal/menus/AbstractMenuAdditionCacheEntry(0x10721B50) 3CLTEXTCLASS org/eclipse/ui/internal/menus/ProxyMenuAdditionCacheEntry(0x10721C80) 3CLTEXTCLASS org/eclipse/ui/internal/menus/MenuAdditionCacheEntry(0x10721E38) 3CLTEXTCLASS org/eclipse/ui/internal/menus/MenuPersistence(0x10722788) 3CLTEXTCLASS org/eclipse/ui/internal/menus/WorkbenchMenuService$4(0x10722B58) 3CLTEXTCLASS org/eclipse/ui/internal/menus/WorkbenchMenuService$3(0x10722CC8) 3CLTEXTCLASS org/eclipse/ui/internal/menus/WorkbenchMenuService$1(0x10722E00) 3CLTEXTCLASS org/eclipse/ui/internal/menus/MenuPersistence$1(0x10722F80) 3CLTEXTCLASS org/eclipse/ui/internal/menus/MenuLocationURI(0x107230C8) 3CLTEXTCLASS org/eclipse/ui/handlers/IHandlerService(0x10723228) 3CLTEXTCLASS [Lorg/eclipse/ui/handlers/IHandlerService;(0x107233F8) 3CLTEXTCLASS org/eclipse/ui/internal/services/WorkbenchServiceRegistry(0x107234C0) 3CLTEXTCLASS org/eclipse/ui/internal/services/WorkbenchServiceRegistry$1(0x10723A80) 3CLTEXTCLASS org/eclipse/ui/internal/services/WorkbenchServiceRegistry$ServiceFactoryHandle(0x10723BA0) 3CLTEXTCLASS org/eclipse/ui/services/AbstractServiceFactory(0x10723CB8) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/HandlerServiceFactory(0x10723DB0) 3CLTEXTCLASS org/eclipse/ui/internal/expressions/WorkbenchWindowExpression(0x10724060) 3CLTEXTCLASS org/eclipse/ui/internal/expressions/ActivePartExpression(0x10724320) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/HandlerService(0x10724620) 3CLTEXTCLASS org/eclipse/ui/handlers/IHandlerActivation(0x10724B70) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/HandlerAuthority(0x10724CC8) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/HandlerPersistence(0x10725598) 3CLTEXTCLASS org/eclipse/ui/commands/IHandler(0x10725A20) 3CLTEXTCLASS org/eclipse/ui/commands/IElementUpdater(0x10725B10) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/HandlerProxy(0x10725C40) 3CLTEXTCLASS org/eclipse/ui/internal/services/EvaluationResultCache(0x10726420) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/HandlerActivation(0x10726640) 3CLTEXTCLASS org/eclipse/ui/ISources(0x107269D0) 3CLTEXTCLASS org/eclipse/ui/internal/services/SourcePriorityNameMapping(0x10726BD0) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/HandlerAuthority$1(0x10726EC8) 3CLTEXTCLASS org/eclipse/ui/internal/about/AboutHandler(0x10727088) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/HandlerProxy$2(0x107271F0) 3CLTEXTCLASS org/eclipse/ui/internal/about/InstallationHandler(0x10727378) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/WizardHandler(0x10727550) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/WizardHandler$New(0x10727888) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/WizardHandler$Import(0x10727C60) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/WizardHandler$Export(0x10727F70) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/RestartWorkbenchHandler(0x10728270) 3CLTEXTCLASS org/eclipse/ui/internal/handlers/PropertyDialogHandler(0x10728400) 3CLTEXTCLASS org/eclipse/ui/preferences/IWorkbenchPreferenceContainer(0x10728590) 3CLTEXTCLASS org/eclipse/ui/internal/contexts/WorkbenchContextSupport(0x107286A0) 3CLTEXTCLASS org/eclipse/ui/contexts/IContextManager(0x10728A80) 3CLTEXTCLASS org/eclipse/ui/internal/commands/Parameter(0xDCB2DE08) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/commands/Parameter;(0xDCB2E1C8) 3CLTEXTCLASS org/eclipse/ui/internal/contexts/ContextService(0xDCB2E2D8) 3CLTEXTCLASS org/eclipse/ui/contexts/IContextActivation(0xDCB2E770) 3CLTEXTCLASS org/eclipse/ui/internal/contexts/ContextAuthority(0xDCB2E8C0) 3CLTEXTCLASS org/eclipse/ui/ActiveShellExpression(0xDCB2EF40) 3CLTEXTCLASS org/eclipse/ui/internal/contexts/ContextPersistence(0xDCB2F1F8) 3CLTEXTCLASS org/eclipse/ui/internal/keys/BindingService(0xDCB2F558) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/keys/BindingService;(0xDCB2FB58) 3CLTEXTCLASS org/eclipse/ui/internal/services/PreferencePersistence(0xDCB2FC20) 3CLTEXTCLASS org/eclipse/ui/internal/keys/BindingPersistence(0xDCB30070) 3CLTEXTCLASS org/eclipse/ui/internal/services/PreferencePersistence$1(0xDCB30DF8) 3CLTEXTCLASS org/eclipse/ui/internal/keys/WorkbenchKeyboard(0xDCB30F50) 3CLTEXTCLASS org/eclipse/ui/internal/keys/WorkbenchKeyboard$KeyDownFilter(0xDCB319B0) 3CLTEXTCLASS org/eclipse/ui/internal/keys/OutOfOrderListener(0xDCB31BF0) 3CLTEXTCLASS org/eclipse/ui/internal/keys/OutOfOrderVerifyListener(0xDCB31DA0) 3CLTEXTCLASS org/eclipse/ui/internal/keys/WorkbenchKeyboard$1(0xDCB31F70) 3CLTEXTCLASS org/eclipse/ui/internal/keys/KeyBindingState(0xDCB32100) 3CLTEXTCLASS org/eclipse/ui/internal/registry/ViewRegistry(0xDCB32350) 3CLTEXTCLASS org/eclipse/ui/views/IViewCategory(0xDCB329A0) 3CLTEXTCLASS org/eclipse/ui/internal/registry/ViewRegistry$ViewDescriptorComparator(0xDCB32A98) 3CLTEXTCLASS org/eclipse/ui/internal/registry/ViewRegistryReader(0xDCB32C00) 3CLTEXTCLASS org/eclipse/ui/model/IWorkbenchAdapter(0xDCB32E90) 3CLTEXTCLASS org/eclipse/ui/internal/registry/Category(0xDCB32FC8) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchPartDescriptor(0xDCB334A0) 3CLTEXTCLASS org/eclipse/ui/views/IViewDescriptor(0xDCB33570) 3CLTEXTCLASS org/eclipse/ui/internal/registry/ViewDescriptor(0xDCB33708) 3CLTEXTCLASS org/eclipse/ui/views/IStickyViewDescriptor(0xDCB33C80) 3CLTEXTCLASS org/eclipse/ui/internal/registry/StickyViewDescriptor(0xDCB33D90) 3CLTEXTCLASS org/eclipse/ui/internal/commands/CommandImageManager(0xDCB34080) 3CLTEXTCLASS org/eclipse/ui/commands/ICommandImageService(0xDCB343F0) 3CLTEXTCLASS org/eclipse/ui/internal/commands/CommandImageService(0xDCB34550) 3CLTEXTCLASS org/eclipse/ui/internal/commands/CommandImagePersistence(0xDCB347D8) 3CLTEXTCLASS org/eclipse/ui/internal/SharedImages(0xDCB34A88) 3CLTEXTCLASS org/eclipse/ui/internal/commands/CommandImageManagerEvent(0xDCB34BF8) 3CLTEXTCLASS org/eclipse/ui/menus/IMenuService(0xDCB34E08) 3CLTEXTCLASS org/eclipse/ui/internal/menus/InternalMenuService(0xDCB34F50) 3CLTEXTCLASS org/eclipse/ui/internal/contexts/ContextManagerFactory(0xDCB350F8) 3CLTEXTCLASS org/eclipse/ui/internal/contexts/ContextManagerLegacyWrapper(0xDCB35228) 3CLTEXTCLASS org/eclipse/ui/contexts/IContext(0xDCB35560) 3CLTEXTCLASS org/eclipse/ui/internal/commands/WorkbenchCommandSupport(0xDCB356A0) 3CLTEXTCLASS org/eclipse/ui/commands/ICommandManager(0xDCB35998) 3CLTEXTCLASS org/eclipse/ui/internal/commands/CommandManagerFactory(0xDCB35B58) 3CLTEXTCLASS org/eclipse/ui/internal/PartListenerList2$5(0xDCB35C70) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ActivityPatternBinding(0x10708C50) 3CLTEXTCLASS org/eclipse/ui/activities/ICategoryActivityBinding(0x10709000) 3CLTEXTCLASS org/eclipse/ui/internal/activities/CategoryActivityBinding(0x107090E8) 3CLTEXTCLASS org/eclipse/ui/activities/ActivityManagerEvent(0x107093C0) 3CLTEXTCLASS org/eclipse/ui/internal/activities/Activity(0x107096A8) 3CLTEXTCLASS org/eclipse/ui/activities/NotDefinedException(0x10709D78) 3CLTEXTCLASS [Lorg/eclipse/ui/activities/IActivityRequirementBinding;(0x10709EB0) 3CLTEXTCLASS [Lorg/eclipse/ui/activities/IActivityPatternBinding;(0x10709F68) 3CLTEXTCLASS org/eclipse/ui/activities/ActivityEvent(0x1070A040) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ProxyActivityManager(0x1070A2A8) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ProxyActivityManager$1(0x1070A4A0) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ws/WorkbenchActivitySupport$1(0x1070A610) 3CLTEXTCLASS org/eclipse/ui/internal/ActivityPersistanceHelper(0x1070A870) 3CLTEXTCLASS org/eclipse/ui/internal/ActivityPersistanceHelper$1(0x1070AC80) 3CLTEXTCLASS org/eclipse/ui/internal/ActivityPersistanceHelper$2(0x1070AE18) 3CLTEXTCLASS org/eclipse/ui/preferences/ScopedPreferenceStore$2(0x1070B028) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchImages(0x1070B180) 3CLTEXTCLASS org/eclipse/ui/internal/misc/ProgramImageDescriptor(0x1070BDB8) 3CLTEXTCLASS org/eclipse/ui/model/IContributionService(0x1070BF58) 3CLTEXTCLASS org/eclipse/ui/internal/model/ContributionService(0x1070C038) 3CLTEXTCLASS org/eclipse/ui/ISaveablesLifecycleListener(0x1070C148) 3CLTEXTCLASS org/eclipse/ui/internal/SaveablesList(0x1070C240) 3CLTEXTCLASS org/eclipse/ui/internal/SaveablesList$2(0x1070CC38) 3CLTEXTCLASS org/eclipse/ui/internal/SaveablesList$3(0x1070CFA0) 3CLTEXTCLASS org/eclipse/ui/internal/commands/CommandService(0x1070D238) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/commands/CommandService;(0x1070D8C8) 3CLTEXTCLASS org/eclipse/ui/commands/IElementReference(0x1070D968) 3CLTEXTCLASS org/eclipse/ui/internal/registry/IWorkbenchRegistryConstants(0x1070DA38) 3CLTEXTCLASS org/eclipse/ui/internal/services/RegistryPersistence(0x1070E748) 3CLTEXTCLASS org/eclipse/ui/internal/commands/CommandPersistence(0x1070ECF0) 3CLTEXTCLASS org/eclipse/ui/internal/services/RegistryPersistence$1(0x1070F208) 3CLTEXTCLASS org/eclipse/ui/internal/commands/ParameterValueConverterProxy(0x1070F318) 3CLTEXTCLASS org/eclipse/ui/internal/commands/CommandStateProxy(0x1070F528) 3CLTEXTCLASS org/eclipse/ui/internal/services/RegistryPersistence$2(0x1070F908) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchMessages(0x1070FA78) 3CLTEXTCLASS org/eclipse/ui/internal/PartListenerList2$6(0x107108B0) 3CLTEXTCLASS org/eclipse/ui/internal/PartListenerList2$7(0x107109F8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/IntroDescriptor(0x1065ACC0) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/intro/IIntroDescriptor;(0x1065AF70) 3CLTEXTCLASS org/eclipse/ui/services/IEvaluationService(0x1065B010) 3CLTEXTCLASS org/eclipse/ui/internal/services/EvaluationService(0x1065B190) 3CLTEXTCLASS org/eclipse/ui/internal/services/IEvaluationResultCache(0x1065B4A8) 3CLTEXTCLASS org/eclipse/ui/services/IEvaluationReference(0x1065B598) 3CLTEXTCLASS org/eclipse/ui/ISourceProviderListener(0x1065B660) 3CLTEXTCLASS org/eclipse/ui/internal/services/ExpressionAuthority(0x1065B770) 3CLTEXTCLASS org/eclipse/ui/internal/services/EvaluationAuthority(0x1065BC38) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ws/WorkbenchActivitySupport(0x1065C1D8) 3CLTEXTCLASS org/eclipse/ui/activities/ITriggerPointManager(0x1065C6D8) 3CLTEXTCLASS org/eclipse/ui/activities/IActivityManager(0x1065C7A8) 3CLTEXTCLASS org/eclipse/ui/activities/IActivityManagerListener(0x1065C8C8) 3CLTEXTCLASS org/eclipse/ui/activities/ITriggerPointAdvisor(0x1065C978) 3CLTEXTCLASS org/eclipse/ui/activities/IMutableActivityManager(0x1065CA38) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ws/TriggerPointManager(0x1065CB18) 3CLTEXTCLASS org/eclipse/ui/activities/ITriggerPoint(0x1065CE00) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ws/AbstractTriggerPoint(0x1065CF08) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ws/TriggerPointManager$1(0x1065D068) 3CLTEXTCLASS org/eclipse/ui/internal/registry/UIExtensionTracker(0x1065D1F8) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ws/RegistryTriggerPoint(0x1065D388) 3CLTEXTCLASS org/eclipse/ui/internal/activities/AbstractActivityManager(0x1065D5C8) 3CLTEXTCLASS org/eclipse/ui/internal/activities/MutableActivityManager(0x1065D7D8) 3CLTEXTCLASS org/eclipse/ui/internal/activities/IActivityRegistry(0x1065E378) 3CLTEXTCLASS org/eclipse/ui/internal/activities/IActivityRegistryListener(0x1065E498) 3CLTEXTCLASS org/eclipse/ui/activities/IActivity(0x1065E548) 3CLTEXTCLASS org/eclipse/ui/activities/ICategory(0x1065E6A8) 3CLTEXTCLASS org/eclipse/ui/activities/IIdentifier(0x1065E7C0) 3CLTEXTCLASS org/eclipse/ui/internal/activities/MutableActivityManager$3(0x1065E9B8) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ws/TriggerPointAdvisorRegistry(0x1065ED08) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ws/TriggerPointAdvisorDescriptor(0x1065F000) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/activities/ws/TriggerPointAdvisorDescriptor;(0x1065F190) 3CLTEXTCLASS org/eclipse/ui/activities/WorkbenchTriggerPointAdvisor(0x1065F258) 3CLTEXTCLASS org/eclipse/ui/internal/activities/AbstractActivityRegistry(0x1065F5C8) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ExtensionActivityRegistry(0x1065F8D0) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ExtensionActivityRegistry$1(0x1065FE50) 3CLTEXTCLASS org/eclipse/ui/internal/util/ConfigurationElementMemento(0x1065FFF8) 3CLTEXTCLASS org/eclipse/ui/internal/activities/Persistence(0x106603C8) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ActivityDefinition(0x10660868) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ActivityPatternBindingDefinition(0x10660C60) 3CLTEXTCLASS org/eclipse/ui/internal/activities/CategoryDefinition(0x10661028) 3CLTEXTCLASS org/eclipse/ui/internal/activities/CategoryActivityBindingDefinition(0x106613E0) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ActivityRequirementBindingDefinition(0x10661758) 3CLTEXTCLASS org/eclipse/ui/internal/activities/MutableActivityManager$1(0x10661AC0) 3CLTEXTCLASS org/eclipse/ui/internal/activities/MutableActivityManager$2(0x10661BE8) 3CLTEXTCLASS org/eclipse/ui/internal/util/Util(0x10661D78) 3CLTEXTCLASS org/eclipse/ui/activities/IActivityRequirementBinding(0x106626D0) 3CLTEXTCLASS org/eclipse/ui/internal/activities/ActivityRequirementBinding(0x106627B8) 3CLTEXTCLASS org/eclipse/ui/activities/IActivityPatternBinding(0x10662A60) 3CLTEXTCLASS org/eclipse/ui/internal/ProductProperties(0xDD3594F0) 3CLTEXTCLASS org/eclipse/ui/internal/misc/Policy(0xDD3599C8) 3CLTEXTCLASS org/eclipse/ui/preferences/ScopedPreferenceStore(0xDD359E20) 3CLTEXTCLASS org/eclipse/ui/preferences/ScopedPreferenceStore$1(0xDD35A730) 3CLTEXTCLASS org/eclipse/ui/statushandlers/AbstractStatusHandler(0xDD35A8E8) 3CLTEXTCLASS org/eclipse/ui/statushandlers/WorkbenchErrorHandler(0xDD35AAB8) 3CLTEXTCLASS org/eclipse/ui/application/WorkbenchWindowAdvisor(0xDD35AE20) 3CLTEXTCLASS org/eclipse/ui/internal/application/CompatibilityWorkbenchWindowAdvisor(0xDD35B1A8) 3CLTEXTCLASS org/eclipse/ui/application/WorkbenchAdvisor$1(0xDD35B490) 3CLTEXTCLASS org/eclipse/ui/internal/progress/ProgressMonitorJobsDialog(0xDD35B848) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$7(0xDD35BFB8) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$1(0xDD35C190) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$2(0xDD35C308) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$3(0xDD35C440) 3CLTEXTCLASS org/eclipse/ui/internal/StartupThreading(0xDD35C600) 3CLTEXTCLASS org/eclipse/ui/PartInitException(0xDD35C820) 3CLTEXTCLASS org/eclipse/ui/internal/ExtensionEventHandler(0xDD35C978) 3CLTEXTCLASS org/eclipse/ui/internal/services/ServiceLocatorCreator(0xDD35CE10) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$6(0xDD35CF28) 3CLTEXTCLASS org/eclipse/ui/internal/services/INestable(0xDD35D078) 3CLTEXTCLASS org/eclipse/ui/internal/services/ServiceLocator(0xDD35D170) 3CLTEXTCLASS org/eclipse/ui/internal/services/IWorkbenchLocationService(0xDD35D4E0) 3CLTEXTCLASS org/eclipse/ui/internal/services/WorkbenchLocationService(0xDD35D628) 3CLTEXTCLASS org/eclipse/ui/internal/misc/UIStats(0xDD35D860) 3CLTEXTCLASS org/eclipse/ui/internal/UILockListener$Queue(0xDD35DBC8) 3CLTEXTCLASS org/eclipse/ui/internal/Semaphore(0xDD35DD90) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/Semaphore;(0xDD35DFD8) 3CLTEXTCLASS org/eclipse/ui/internal/UISynchronizer$1(0xDD35E0A8) 3CLTEXTCLASS org/eclipse/ui/internal/UISynchronizer$2(0xDD35E218) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPreferenceInitializer(0xDD35E3A8) 3CLTEXTCLASS org/eclipse/ui/internal/PlatformUIPreferenceListener(0xDD35E6C0) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$8(0xDD35E9F0) 3CLTEXTCLASS org/eclipse/ui/internal/splash/SplashHandlerFactory(0xDD35ECD0) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$9(0xDD35EF18) 3CLTEXTCLASS org/eclipse/ui/splash/BasicSplashHandler$AbsolutePositionProgressMonitorPart(0xDD35F738) 3CLTEXTCLASS org/eclipse/ui/internal/splash/EclipseSplashHandler$1(0xDD360060) 3CLTEXTCLASS org/eclipse/ui/internal/util/BundleUtility(0xDD3601F8) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$60(0xDD360458) 3CLTEXTCLASS org/eclipse/ui/internal/ExceptionHandler(0xDD360590) 3CLTEXTCLASS org/eclipse/ui/internal/JFaceUtil$4(0xDD360748) 3CLTEXTCLASS org/eclipse/ui/internal/intro/IntroRegistry(0xDD3608E0) 3CLTEXTCLASS org/eclipse/ui/internal/registry/RegistryReader(0xDD360BF8) 3CLTEXTCLASS org/eclipse/ui/internal/registry/RegistryReader$1(0xDD360F58) 3CLTEXTCLASS org/eclipse/ui/internal/intro/IIntroDescriptor(0xDD361068) 3CLTEXTCLASS org/eclipse/ui/IPluginContribution(0xDD361148) 3CLTEXTCLASS org/eclipse/ui/internal/PartListenerList2$8(0xDD361228) 3CLTEXTCLASS org/eclipse/ui/internal/PartService$PartListener(0xDD361368) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchWindow(0x10598F40) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$23(0x1059BEB0) 3CLTEXTCLASS org/eclipse/ui/WorkbenchException(0x1059C068) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$24(0x1059C1E0) 3CLTEXTCLASS org/eclipse/ui/ILocalWorkingSetManager(0x1059C2F8) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$26(0x1059C3E0) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$27(0x1059C588) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$28(0x1059C6B0) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$29(0x1059C7F8) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$30(0x1059C950) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$31(0x1059CA80) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$32(0x1059CBE0) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$35(0x1059CD08) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$36(0x1059CE98) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$37(0x1059D020) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$38(0x1059D148) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$39(0x1059D2F8) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$40(0x1059D460) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$41(0x1059D630) 3CLTEXTCLASS org/eclipse/ui/services/IServiceWithSources(0x1059D770) 3CLTEXTCLASS org/eclipse/ui/contexts/IContextService(0x1059D838) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$42(0x1059DA58) 3CLTEXTCLASS org/eclipse/ui/keys/IBindingService(0x1059DB70) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$43(0x1059DDF0) 3CLTEXTCLASS org/eclipse/ui/commands/ICommandService(0x1059DF80) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$44(0x1059E1B8) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$45(0x1059E2F0) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$46(0x1059E4A0) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$48(0x1059E630) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$49(0x1059E770) 3CLTEXTCLASS org/eclipse/ui/IMemento(0x1059E8B0) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$54(0x1059EAB0) 3CLTEXTCLASS org/eclipse/ui/internal/UILockListener(0x1059EC20) 3CLTEXTCLASS org/eclipse/ui/internal/UISynchronizer(0x1059EED8) 3CLTEXTCLASS org/eclipse/ui/IPartService(0x1059F230) 3CLTEXTCLASS org/eclipse/ui/ISelectionService(0x1059F330) 3CLTEXTCLASS org/eclipse/ui/internal/ICompatibleWorkbenchPage(0x1059F478) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchPage(0x1059F578) 3CLTEXTCLASS org/eclipse/ui/IDecoratorManager(0x1059FB88) 3CLTEXTCLASS org/eclipse/ui/progress/IProgressService(0x1059FCB0) 3CLTEXTCLASS org/eclipse/ui/activities/IWorkbenchActivitySupport(0x1059FDC8) 3CLTEXTCLASS org/eclipse/ui/commands/IWorkbenchCommandSupport(0x1059FEC8) 3CLTEXTCLASS org/eclipse/ui/contexts/IWorkbenchContextSupport(0x1059FFB8) 3CLTEXTCLASS org/eclipse/ui/internal/menus/IActionSetsListener(0x105A0140) 3CLTEXTCLASS org/eclipse/ui/intro/IIntroManager(0x105A01F0) 3CLTEXTCLASS org/eclipse/ui/themes/IThemeManager(0x105A0300) 3CLTEXTCLASS org/eclipse/ui/help/IWorkbenchHelpSystem(0x105A0408) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$63(0x105A05C0) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$64(0x105A0710) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$65(0x105A0848) 3CLTEXTCLASS org/eclipse/ui/internal/services/IServiceLocatorCreator(0x105A0968) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$61(0x105A0AA8) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench(0x1055D810) 3CLTEXTCLASS org/eclipse/ui/IWindowListener(0x10560258) 3CLTEXTCLASS org/eclipse/ui/services/IDisposable(0x10560338) 3CLTEXTCLASS org/eclipse/ui/splash/AbstractSplashHandler(0x10560410) 3CLTEXTCLASS org/eclipse/ui/splash/BasicSplashHandler(0x105605A8) 3CLTEXTCLASS org/eclipse/ui/internal/splash/EclipseSplashHandler(0x10560948) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$21(0x10560BF8) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$22(0x10560D38) 3CLTEXTCLASS org/eclipse/ui/IPageService(0x10560E50) 3CLTEXTCLASS org/eclipse/ui/IWorkbenchWindow(0x10560F40) 3CLTEXTCLASS org/eclipse/ui/internal/Workbench$58(0x105611D8) 3CLTEXTCLASS org/eclipse/ui/branding/IProductConstants(0x105614D0) 3CLTEXTCLASS org/eclipse/ui/plugin/AbstractUIPlugin$2(0x1052CAD0) 3CLTEXTCLASS org/eclipse/ui/internal/JFaceUtil(0x1052CC58) 3CLTEXTCLASS org/eclipse/ui/internal/JFaceUtil$3(0x1052CED8) 3CLTEXTCLASS org/eclipse/ui/internal/JFaceUtil$1(0x1052D010) 3CLTEXTCLASS org/eclipse/ui/internal/JFaceUtil$2(0x1052D120) 3CLTEXTCLASS org/eclipse/ui/internal/util/PrefUtil$ICallback(0x1052D240) 3CLTEXTCLASS org/eclipse/ui/internal/util/PrefUtil(0x1052D318) 3CLTEXTCLASS org/eclipse/ui/PlatformUI(0x1052D4F0) 3CLTEXTCLASS org/eclipse/ui/services/IServiceLocator(0x1052D6A8) 3CLTEXTCLASS org/eclipse/ui/IWorkbench(0x1052D768) 3CLTEXTCLASS org/eclipse/ui/testing/TestableObject(0x1052DB08) 3CLTEXTCLASS org/eclipse/ui/internal/testing/WorkbenchTestable(0x1052DCA8) 3CLTEXTCLASS org/eclipse/ui/application/WorkbenchAdvisor(0x1052DFC0) 3CLTEXTCLASS org/eclipse/ui/internal/ProductInfo(0x1052E548) 3CLTEXTCLASS org/eclipse/ui/internal/BrandingProperties(0x1052E738) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog$ActionSetFilter(0x1052E958) 3CLTEXTCLASS org/eclipse/ui/internal/intro/IIntroRegistry(0x10524C88) 3CLTEXTCLASS org/eclipse/ui/operations/IWorkbenchOperationSupport(0x10524D68) 3CLTEXTCLASS org/eclipse/ui/internal/dialogs/WorkbenchPreferenceManager(0x10524E78) 3CLTEXTCLASS org/eclipse/ui/ISharedImages(0x105251F0) 3CLTEXTCLASS org/eclipse/ui/internal/themes/IThemeRegistry(0x105256C8) 3CLTEXTCLASS org/eclipse/ui/views/IViewRegistry(0x10525870) 3CLTEXTCLASS org/eclipse/ui/wizards/IWizardRegistry(0x10525950) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPlugin$3(0x10525A48) 3CLTEXTCLASS org/eclipse/ui/IEditorRegistry(0x10524458) 3CLTEXTCLASS org/eclipse/ui/internal/StartupThreading$StartupRunnable(0x10524630) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPlugin$2(0x10524788) 3CLTEXTCLASS org/eclipse/ui/IPerspectiveRegistry(0x105248A8) 3CLTEXTCLASS org/eclipse/ui/IWorkingSetManager(0x105249C8) 3CLTEXTCLASS org/eclipse/ui/internal/WorkbenchPlugin(0x1051CB78) 3CLTEXTCLASS org/eclipse/ui/plugin/AbstractUIPlugin(0x102324F8) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0B509E0) 3CLTEXTCLASS org/eclipse/swt/custom/SashFormLayout(0xD9067BD8) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/Sash;(0xD9067E48) 3CLTEXTCLASS org/eclipse/swt/custom/SashForm$1(0xD9067F00) 3CLTEXTCLASS org/eclipse/swt/custom/SashFormData(0xD9068028) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/Composite;(0xD90681C8) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkEventScroll(0xD9068280) 3CLTEXTCLASS org/eclipse/swt/internal/image/LEDataOutputStream(0xD90683C0) 3CLTEXTCLASS org/eclipse/swt/internal/image/PngEncoder(0xD9068568) 3CLTEXTCLASS org/eclipse/swt/widgets/DirectoryDialog(0xD9068AC0) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText$RTFWriter(0xD9CF66D8) 3CLTEXTCLASS org/eclipse/swt/internal/BidiUtil(0xD9CF6D00) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText$6(0xD9CF6F08) 3CLTEXTCLASS org/eclipse/swt/custom/DefaultContent(0xD9CF70F8) 3CLTEXTCLASS org/eclipse/swt/custom/StyledTextListener(0xD9CF77D8) 3CLTEXTCLASS org/eclipse/swt/custom/StyledTextRenderer(0xD9CF7C58) 3CLTEXTCLASS org/eclipse/swt/widgets/IME(0xD9CF8D98) 3CLTEXTCLASS org/eclipse/swt/widgets/Caret(0xD9CF97E0) 3CLTEXTCLASS [Lorg/eclipse/swt/graphics/TextLayout;(0xD9CFA010) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText$7(0xD9CFA0C8) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText$8(0xD9CFA240) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText$9(0xD9CFA388) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText$10(0xD9CFA4B0) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText$11(0xD9CFA5E8) 3CLTEXTCLASS org/eclipse/swt/accessibility/AccessibleTextAdapter(0xD9CFA7A8) 3CLTEXTCLASS org/eclipse/swt/accessibility/AccessibleTextExtendedListener(0xD9CFA8C0) 3CLTEXTCLASS org/eclipse/swt/accessibility/AccessibleTextExtendedAdapter(0xD9CFAAE0) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText$12(0xD9CFADB0) 3CLTEXTCLASS org/eclipse/swt/accessibility/AccessibleAttributeAdapter(0xD9CFB328) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText$13(0xD9CFB460) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText$14(0xD9CFB780) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText$15(0xD9CFB948) 3CLTEXTCLASS org/eclipse/swt/custom/StyledTextDropTargetEffect(0xD9CFBAA8) 3CLTEXTCLASS org/eclipse/swt/custom/StyledTextDropTargetEffect$1(0xD9CFBDF8) 3CLTEXTCLASS org/eclipse/swt/events/MouseTrackAdapter(0xD9CFBFA0) 3CLTEXTCLASS org/eclipse/swt/events/VerifyEvent(0xD9CFC0E8) 3CLTEXTCLASS org/eclipse/swt/custom/BidiSegmentEvent(0xD9CFC2D8) 3CLTEXTCLASS org/eclipse/swt/dnd/RTFTransfer(0xD9CFC428) 3CLTEXTCLASS org/eclipse/swt/custom/LineBackgroundListener(0xD9CFC708) 3CLTEXTCLASS org/eclipse/swt/events/MenuDetectListener(0xD9CFC7C8) 3CLTEXTCLASS org/eclipse/swt/custom/TextChangedEvent(0xD9CFC8A8) 3CLTEXTCLASS org/eclipse/swt/custom/LineBackgroundEvent(0xD9CFC9B0) 3CLTEXTCLASS [Lorg/eclipse/swt/graphics/TextStyle;(0xD9CFCAF0) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkGCValues(0xD9CFCBA8) 3CLTEXTCLASS org/eclipse/swt/widgets/TabItem(0xD9CFCF58) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/TabItem;(0xD9CFD708) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/Button;(0xD9CFD7C0) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/Item;(0xD9CFD878) 3CLTEXTCLASS org/eclipse/swt/custom/MovementEvent(0xD9CFD938) 3CLTEXTCLASS org/eclipse/swt/dnd/ClipboardProxy(0xD9CFDAA8) 3CLTEXTCLASS org/eclipse/swt/dnd/ClipboardProxy$1(0xD9CFDEC8) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/PangoItem(0xD9CFE010) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/PangoLayoutRun(0xD9CFE130) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText$5(0xD9CFE250) 3CLTEXTCLASS org/eclipse/swt/custom/TextChangingEvent(0xD9CFE410) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/Link;(0xD9CFE590) 3CLTEXTCLASS org/eclipse/swt/internal/image/WinICOFileFormat(0xDAF13BF0) 3CLTEXTCLASS org/eclipse/swt/internal/image/JPEGFileFormat(0xDAF140C8) 3CLTEXTCLASS org/eclipse/swt/internal/image/JPEGSegment(0xDAF15200) 3CLTEXTCLASS org/eclipse/swt/internal/image/JPEGFixedSizeSegment(0xDAF153F0) 3CLTEXTCLASS org/eclipse/swt/internal/image/JPEGStartOfImage(0xDAF155C8) 3CLTEXTCLASS org/eclipse/swt/internal/image/PNGFileFormat(0xDAF15780) 3CLTEXTCLASS org/eclipse/swt/internal/image/PngInputStream(0xDAF15D98) 3CLTEXTCLASS org/eclipse/swt/internal/image/PngDecodingDataStream(0xDAF15FF8) 3CLTEXTCLASS org/eclipse/swt/internal/image/PngChunkReader(0xDAF162E8) 3CLTEXTCLASS org/eclipse/swt/internal/image/PngChunk(0xDAF16560) 3CLTEXTCLASS org/eclipse/swt/internal/image/PngIhdrChunk(0xDAF16BA0) 3CLTEXTCLASS org/eclipse/swt/internal/image/PngFileReadState(0xDAF17250) 3CLTEXTCLASS org/eclipse/swt/internal/image/PngPlteChunk(0xDAF17398) 3CLTEXTCLASS org/eclipse/swt/internal/image/PngIdatChunk(0xDAF176E0) 3CLTEXTCLASS org/eclipse/swt/internal/image/PngIendChunk(0xDAF17978) 3CLTEXTCLASS org/eclipse/swt/internal/image/PngTrnsChunk(0xDAF17BE0) 3CLTEXTCLASS org/eclipse/swt/dnd/Clipboard(0xDAF17EF0) 3CLTEXTCLASS org/eclipse/swt/widgets/Tracker(0xDAF186F8) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkGeometry(0xDAF19110) 3CLTEXTCLASS [Lorg/eclipse/swt/graphics/Point;(0xDAF19230) 3CLTEXTCLASS org/eclipse/swt/widgets/Link$1(0xDAF192F8) 3CLTEXTCLASS org/eclipse/swt/widgets/Link$2(0xDAF19468) 3CLTEXTCLASS org/eclipse/swt/layout/FillData(0xDAF196E8) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/PangoLayoutLine(0xDAF198A0) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/PangoLogAttr(0xDAF199C0) 3CLTEXTCLASS org/eclipse/swt/dnd/TransferData(0xDAF19AE0) 3CLTEXTCLASS [Lorg/eclipse/swt/dnd/TransferData;(0xDAF19BC8) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GtkSelectionData(0xDAF19C80) 3CLTEXTCLASS org/eclipse/swt/widgets/Dialog(0xDAF19DB8) 3CLTEXTCLASS org/eclipse/swt/widgets/FileDialog(0xDAF1A0B0) 3CLTEXTCLASS org/eclipse/swt/custom/StyledTextContent(0xDAF1A888) 3CLTEXTCLASS org/eclipse/swt/events/VerifyListener(0xDAF1A9E0) 3CLTEXTCLASS org/eclipse/swt/custom/MovementListener(0xDAF1AAA0) 3CLTEXTCLASS org/eclipse/swt/custom/BidiSegmentListener(0xDAF1AB70) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText$2(0xDAF1AC48) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText$3(0xDAF1ADE8) 3CLTEXTCLASS org/eclipse/swt/custom/TextChangeListener(0xDAF1AF98) 3CLTEXTCLASS org/eclipse/swt/accessibility/AccessibleTextListener(0xDAF1B078) 3CLTEXTCLASS org/eclipse/swt/accessibility/AccessibleAttributeListener(0xDAF1B148) 3CLTEXTCLASS org/eclipse/swt/custom/StyledTextEvent(0xDAF1B238) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText$TextWriter(0xDAF1B370) 3CLTEXTCLASS org/eclipse/swt/custom/StyledTextRenderer$1(0xDAF1B610) 3CLTEXTCLASS org/eclipse/swt/custom/LineStyleListener(0xDAF1B7A0) 3CLTEXTCLASS org/eclipse/swt/custom/LineStyleEvent(0xDAF1B880) 3CLTEXTCLASS [Lorg/eclipse/swt/custom/Bullet;(0xDAF1BA40) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$2(0xDBCE2980) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$3(0xDBCE2BA8) 3CLTEXTCLASS org/eclipse/swt/internal/mozilla/nsICookieService(0xDBCE2EC8) 3CLTEXTCLASS org/eclipse/swt/internal/mozilla/nsICookieService_1_9(0xDBCE30E0) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$4(0xDBCE32B8) 3CLTEXTCLASS org/eclipse/swt/browser/AuthenticationListener(0xDBCE3508) 3CLTEXTCLASS [Lorg/eclipse/swt/browser/AuthenticationListener;(0xDBCE35E0) 3CLTEXTCLASS org/eclipse/swt/browser/CloseWindowListener(0xDBCE3680) 3CLTEXTCLASS [Lorg/eclipse/swt/browser/CloseWindowListener;(0xDBCE3758) 3CLTEXTCLASS [Lorg/eclipse/swt/browser/LocationListener;(0xDBCE3810) 3CLTEXTCLASS org/eclipse/swt/browser/OpenWindowListener(0xDBCE38B0) 3CLTEXTCLASS [Lorg/eclipse/swt/browser/OpenWindowListener;(0xDBCE3988) 3CLTEXTCLASS [Lorg/eclipse/swt/browser/ProgressListener;(0xDBCE3A40) 3CLTEXTCLASS org/eclipse/swt/browser/StatusTextListener(0xDBCE3AE0) 3CLTEXTCLASS [Lorg/eclipse/swt/browser/StatusTextListener;(0xDBCE3BB8) 3CLTEXTCLASS org/eclipse/swt/browser/TitleListener(0xDBCE3C58) 3CLTEXTCLASS [Lorg/eclipse/swt/browser/TitleListener;(0xDBCE3D30) 3CLTEXTCLASS org/eclipse/swt/browser/VisibilityWindowListener(0xDBCE3DD0) 3CLTEXTCLASS [Lorg/eclipse/swt/browser/VisibilityWindowListener;(0xDBCE3EB8) 3CLTEXTCLASS org/eclipse/swt/browser/MozillaDelegate(0xDBCE3FB0) 3CLTEXTCLASS org/eclipse/swt/internal/mozilla/init/GREVersionRange(0xDBCE4590) 3CLTEXTCLASS org/eclipse/swt/internal/mozilla/init/XPCOMInit(0xDBCE46B0) 3CLTEXTCLASS org/eclipse/swt/events/MouseMoveListener(0xDBCE4838) 3CLTEXTCLASS org/eclipse/swt/events/MouseTrackListener(0xDBCE48F8) 3CLTEXTCLASS org/eclipse/swt/custom/ScrolledCompositeLayout(0xDBCE49F8) 3CLTEXTCLASS org/eclipse/swt/custom/ScrolledComposite$1(0xDBCE4C98) 3CLTEXTCLASS org/eclipse/swt/custom/ScrolledComposite$2(0xDBCE4DC0) 3CLTEXTCLASS org/eclipse/swt/custom/ScrolledComposite$3(0xDBCE4EE8) 3CLTEXTCLASS org/eclipse/swt/custom/ScrolledComposite$4(0xDBCE5020) 3CLTEXTCLASS org/eclipse/swt/custom/ScrolledComposite$5(0xDBCE5168) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GtkAdjustment(0xDBCE52B8) 3CLTEXTCLASS org/eclipse/swt/graphics/Region(0xDBCE5400) 3CLTEXTCLASS org/eclipse/swt/events/FocusEvent(0xDBCE58F8) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkEventCrossing(0xDBCE59F8) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkEventMotion(0xDBCE5B18) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkEventButton(0xDBCE5C38) 3CLTEXTCLASS org/eclipse/swt/events/MouseEvent(0xDBCE5D60) 3CLTEXTCLASS org/eclipse/swt/events/MenuEvent(0xDBCE5F88) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/PangoRectangle(0xDBCE6088) 3CLTEXTCLASS org/eclipse/swt/events/TreeEvent(0xDBCE61B0) 3CLTEXTCLASS org/eclipse/swt/events/KeyEvent(0xDBCE62C0) 3CLTEXTCLASS org/eclipse/swt/events/TraverseEvent(0xDBCE6510) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/TableItem;(0xDBCE66B8) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/TableColumn;(0xDBCE6770) 3CLTEXTCLASS org/eclipse/swt/custom/TableEditor(0xDBCE6858) 3CLTEXTCLASS org/eclipse/swt/custom/TableEditor$1(0xDBCE6C10) 3CLTEXTCLASS org/eclipse/swt/custom/TableEditor$2(0xDBCE6D68) 3CLTEXTCLASS org/eclipse/swt/internal/image/GIFFileFormat(0xDBCE6ED0) 3CLTEXTCLASS org/eclipse/swt/internal/image/LZWCodec(0xDBCE7470) 3CLTEXTCLASS org/eclipse/swt/graphics/TextLayout(0xDBCE7B38) 3CLTEXTCLASS org/eclipse/swt/graphics/TextLayout$StyleItem(0xDBCE8C98) 3CLTEXTCLASS [Lorg/eclipse/swt/graphics/TextLayout$StyleItem;(0xDBCE8DF8) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/PangoAttribute(0xDBCE8EB0) 3CLTEXTCLASS org/eclipse/swt/program/Program(0xDBCE8FF8) 3CLTEXTCLASS org/eclipse/swt/internal/gnome/GNOME(0xDBCE9D78) 3CLTEXTCLASS org/eclipse/swt/program/Program$1(0xDBCEA2C8) 3CLTEXTCLASS org/eclipse/swt/internal/gnome/GnomeVFSMimeApplication(0xDBCEA420) 3CLTEXTCLASS org/eclipse/swt/custom/Bullet(0xDBCEA550) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla(0xDBCD8858) 3CLTEXTCLASS org/eclipse/swt/browser/BrowserFunction(0xDBCDB5C0) 3CLTEXTCLASS org/eclipse/swt/browser/WebBrowser$EvaluateFunction(0xDBCDB7E0) 3CLTEXTCLASS org/eclipse/swt/internal/mozilla/XPCOMObject(0xDBCDBAA8) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$8(0xDBCDCD28) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$9(0xDBCDD108) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$10(0xDBCDD500) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$11(0xDBCDD960) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$12(0xDBCDDE38) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$13(0xDBCDE248) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$14(0xDBCDE6F0) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$15(0xDBCDEAE8) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$16(0xDBCDEEE0) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$17(0xDBCDF2D8) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$18(0xDBCDF780) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$19(0xDBCDFB90) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$20(0xDBCDFF88) 3CLTEXTCLASS org/eclipse/swt/internal/mozilla/nsISupports(0xDBCE0248) 3CLTEXTCLASS org/eclipse/swt/internal/mozilla/nsIXPCSecurityManager(0xDBCE0490) 3CLTEXTCLASS org/eclipse/swt/dnd/DragSource(0xDC11FF58) 3CLTEXTCLASS org/eclipse/swt/dnd/DragSourceEffect(0xDC120A68) 3CLTEXTCLASS org/eclipse/swt/dnd/TreeDragSourceEffect(0xDC120BA8) 3CLTEXTCLASS org/eclipse/swt/dnd/TableDragSourceEffect(0xDC120E40) 3CLTEXTCLASS org/eclipse/swt/dnd/DragSource$1(0xDC1210C8) 3CLTEXTCLASS org/eclipse/swt/dnd/DragSource$2(0xDC121210) 3CLTEXTCLASS org/eclipse/swt/graphics/TextStyle(0xDC121340) 3CLTEXTCLASS org/eclipse/swt/custom/StyleRange(0xDC121700) 3CLTEXTCLASS [Lorg/eclipse/swt/custom/StyleRange;(0xDC121A08) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GtkCellRendererClass(0xDC121AC0) 3CLTEXTCLASS org/eclipse/swt/events/KeyAdapter(0xDC121BB0) 3CLTEXTCLASS org/eclipse/swt/widgets/TableColumn(0xDC121F98) 3CLTEXTCLASS org/eclipse/swt/events/FocusAdapter(0xDC122AD8) 3CLTEXTCLASS org/eclipse/swt/events/TreeAdapter(0xDC122C10) 3CLTEXTCLASS org/eclipse/swt/dnd/TextTransfer(0xDC122D60) 3CLTEXTCLASS org/eclipse/swt/widgets/TabFolder(0xDC123710) 3CLTEXTCLASS org/eclipse/swt/custom/SashForm(0xDC124B98) 3CLTEXTCLASS org/eclipse/swt/browser/LocationListener(0xDC1256B8) 3CLTEXTCLASS org/eclipse/swt/browser/ProgressListener(0xDC125788) 3CLTEXTCLASS org/eclipse/swt/browser/Browser(0xDC125F30) 3CLTEXTCLASS org/eclipse/swt/browser/WebBrowser(0xDC126DC0) 3CLTEXTCLASS org/eclipse/swt/internal/mozilla/nsIScriptSecurityManager_1_9_1(0xDC127920) 3CLTEXTCLASS org/eclipse/swt/widgets/Group(0xDC3BC068) 3CLTEXTCLASS org/eclipse/swt/custom/BusyIndicator(0xDC3BCBC8) 3CLTEXTCLASS org/eclipse/swt/events/TreeListener(0xDC3BCD68) 3CLTEXTCLASS org/eclipse/swt/widgets/TreeColumn(0xDC3BD108) 3CLTEXTCLASS org/eclipse/swt/widgets/TreeItem(0xDC3BDF48) 3CLTEXTCLASS org/eclipse/swt/widgets/ScrollBar(0xDC3BF060) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/TreeItem;(0xDC3BFB68) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/TreeColumn;(0xDC3BFC20) 3CLTEXTCLASS org/eclipse/swt/widgets/TableItem(0xDC3BFFE0) 3CLTEXTCLASS org/eclipse/swt/custom/TableTreeItem(0xDC3C0F18) 3CLTEXTCLASS org/eclipse/swt/custom/TableTree(0xDC3C2020) 3CLTEXTCLASS org/eclipse/swt/custom/ControlEditor(0xDC3C3030) 3CLTEXTCLASS org/eclipse/swt/custom/TreeEditor(0xDC3C33D8) 3CLTEXTCLASS org/eclipse/swt/custom/ControlEditor$1(0xDC3C37D0) 3CLTEXTCLASS org/eclipse/swt/custom/ControlEditor$2(0xDC3C38F8) 3CLTEXTCLASS org/eclipse/swt/custom/ViewForm(0xDC638768) 3CLTEXTCLASS org/eclipse/swt/custom/CTabFolder2Listener(0xDC639318) 3CLTEXTCLASS org/eclipse/swt/custom/CTabFolder2Adapter(0xDC639440) 3CLTEXTCLASS org/eclipse/swt/custom/CTabFolder(0xDC639D50) 3CLTEXTCLASS org/eclipse/swt/custom/CTabFolderLayout(0xDC63B8C0) 3CLTEXTCLASS org/eclipse/swt/custom/CTabItem(0xDC63BD70) 3CLTEXTCLASS [Lorg/eclipse/swt/custom/CTabItem;(0xDC63C4F0) 3CLTEXTCLASS [Lorg/eclipse/swt/custom/CTabFolder2Listener;(0xDC63C5A8) 3CLTEXTCLASS org/eclipse/swt/custom/CTabFolderListener(0xDC63C648) 3CLTEXTCLASS [Lorg/eclipse/swt/custom/CTabFolderListener;(0xDC63C720) 3CLTEXTCLASS org/eclipse/swt/custom/CTabFolderRenderer(0xDC63C858) 3CLTEXTCLASS org/eclipse/swt/custom/CTabFolder$1(0xDC63D4D0) 3CLTEXTCLASS org/eclipse/swt/custom/CTabFolder$2(0xDC63D658) 3CLTEXTCLASS org/eclipse/swt/custom/CTabFolder$3(0xDC63D888) 3CLTEXTCLASS org/eclipse/swt/custom/CTabFolder$4(0xDC63DBF0) 3CLTEXTCLASS org/eclipse/swt/custom/CTabFolder$5(0xDC63DD40) 3CLTEXTCLASS org/eclipse/swt/custom/ViewFormLayout(0xDC63DE98) 3CLTEXTCLASS org/eclipse/swt/custom/ViewForm$1(0xDC63E190) 3CLTEXTCLASS org/eclipse/swt/dnd/DropTarget(0xDC63E588) 3CLTEXTCLASS org/eclipse/swt/dnd/DropTargetEffect(0xDC63F228) 3CLTEXTCLASS org/eclipse/swt/dnd/TableDropTargetEffect(0xDC63F530) 3CLTEXTCLASS org/eclipse/swt/dnd/TreeDropTargetEffect(0xDC63F7C8) 3CLTEXTCLASS org/eclipse/swt/dnd/DNDEvent(0xDC63FA98) 3CLTEXTCLASS org/eclipse/swt/dnd/DropTarget$1(0xDC63FB88) 3CLTEXTCLASS org/eclipse/swt/dnd/DropTarget$2(0xDC63FCB8) 3CLTEXTCLASS org/eclipse/swt/dnd/DropTarget$3(0xDC63FDE0) 3CLTEXTCLASS org/eclipse/swt/widgets/Sash(0xDC8C1190) 3CLTEXTCLASS org/eclipse/swt/widgets/Scale(0xDC8C2350) 3CLTEXTCLASS org/eclipse/swt/widgets/Slider(0xDC8C32C8) 3CLTEXTCLASS org/eclipse/swt/custom/CLabel(0xDC8C4548) 3CLTEXTCLASS org/eclipse/swt/accessibility/AccessibleControlListener(0xDC8C54B0) 3CLTEXTCLASS org/eclipse/swt/custom/CLabel$1(0xDC8C5630) 3CLTEXTCLASS org/eclipse/swt/custom/CLabel$2(0xDC8C5768) 3CLTEXTCLASS org/eclipse/swt/custom/CLabel$3(0xDC8C58B0) 3CLTEXTCLASS org/eclipse/swt/custom/CLabel$4(0xDC8C59E8) 3CLTEXTCLASS org/eclipse/swt/accessibility/AccessibleControlAdapter(0xDC8C5BB8) 3CLTEXTCLASS org/eclipse/swt/custom/CLabel$5(0xDC8C5DE8) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkWindowAttr(0xDC8C5FF8) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/XWindowChanges(0xDC8C6118) 3CLTEXTCLASS org/eclipse/swt/internal/cairo/Cairo(0xDC8C6238) 3CLTEXTCLASS org/eclipse/swt/events/MouseAdapter(0xDC8C7B70) 3CLTEXTCLASS org/eclipse/swt/layout/RowLayout(0xDC8C7CC8) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GtkTargetEntry(0xDC8C8178) 3CLTEXTCLASS [Lorg/eclipse/swt/internal/gtk/GtkTargetEntry;(0xDC8C8298) 3CLTEXTCLASS org/eclipse/swt/dnd/DNDListener(0xDC8C8358) 3CLTEXTCLASS org/eclipse/swt/custom/TreeEditor$1(0xDC8C85A0) 3CLTEXTCLASS org/eclipse/swt/custom/TreeEditor$2(0xDC8C86F8) 3CLTEXTCLASS org/eclipse/swt/custom/TreeEditor$3(0xDC8C8828) 3CLTEXTCLASS org/eclipse/swt/custom/TreeEditor$4(0xDC8C89F0) 3CLTEXTCLASS org/eclipse/swt/custom/StyledText(0xDC8981D0) 3CLTEXTCLASS org/eclipse/swt/widgets/Tree(0xDC89C458) 3CLTEXTCLASS org/eclipse/swt/accessibility/AccessibleListener(0xDC89E528) 3CLTEXTCLASS org/eclipse/swt/widgets/Menu(0xDC89E900) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/Menu;(0xDC89F560) 3CLTEXTCLASS org/eclipse/swt/widgets/ToolItem(0x10843038) 3CLTEXTCLASS org/eclipse/swt/events/FocusListener(0x10843EA8) 3CLTEXTCLASS org/eclipse/swt/widgets/CoolBar(0x10844660) 3CLTEXTCLASS org/eclipse/swt/custom/CBanner(0x10845C28) 3CLTEXTCLASS org/eclipse/swt/events/MenuListener(0x10846890) 3CLTEXTCLASS org/eclipse/swt/dnd/Transfer(0x10846990) 3CLTEXTCLASS org/eclipse/swt/dnd/ByteArrayTransfer(0x10846B58) 3CLTEXTCLASS org/eclipse/swt/dnd/FileTransfer(0x10846D88) 3CLTEXTCLASS org/eclipse/swt/dnd/DropTargetListener(0x10847090) 3CLTEXTCLASS [Lorg/eclipse/swt/dnd/Transfer;(0x108471B8) 3CLTEXTCLASS org/eclipse/swt/dnd/DropTargetAdapter(0x10847288) 3CLTEXTCLASS org/eclipse/swt/events/KeyListener(0x10847400) 3CLTEXTCLASS org/eclipse/swt/events/TraverseListener(0x108474D0) 3CLTEXTCLASS org/eclipse/swt/widgets/Table(0x10847D18) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/MenuItem;(0x10849D50) 3CLTEXTCLASS org/eclipse/swt/events/MenuAdapter(0x10849E10) 3CLTEXTCLASS org/eclipse/swt/events/ControlEvent(0x10849F48) 3CLTEXTCLASS org/eclipse/swt/custom/CBannerLayout(0x1084A058) 3CLTEXTCLASS org/eclipse/swt/custom/CBanner$1(0x1084A300) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/CoolItem;(0x1084A480) 3CLTEXTCLASS [[Lorg/eclipse/swt/widgets/CoolItem;(0x1084A538) 3CLTEXTCLASS [[[Lorg/eclipse/swt/widgets/CoolItem;(0x1084A5F0) 3CLTEXTCLASS org/eclipse/swt/widgets/CoolBar$1(0x1084A6A8) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/ToolItem;(0x1084A818) 3CLTEXTCLASS org/eclipse/swt/accessibility/AccessibleAdapter(0x1084A8E0) 3CLTEXTCLASS org/eclipse/swt/widgets/CoolItem$1(0x1084AA40) 3CLTEXTCLASS org/eclipse/swt/custom/CLayoutData(0x1084AB70) 3CLTEXTCLASS org/eclipse/swt/widgets/Combo(0xDCC01C30) 3CLTEXTCLASS org/eclipse/swt/internal/SWTEventObject(0xDCC034B8) 3CLTEXTCLASS org/eclipse/swt/events/TypedEvent(0xDCC035B0) 3CLTEXTCLASS org/eclipse/swt/events/ModifyEvent(0xDCC037F8) 3CLTEXTCLASS org/eclipse/swt/events/SelectionAdapter(0xDCC03900) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GtkBorder(0xDCC03A30) 3CLTEXTCLASS [[Lorg/eclipse/swt/widgets/Control;(0xDCC03B50) 3CLTEXTCLASS [[[Lorg/eclipse/swt/widgets/Control;(0xDCC03C08) 3CLTEXTCLASS [Lorg/eclipse/swt/layout/GridData;(0xDCC03CC0) 3CLTEXTCLASS [Lorg/eclipse/swt/graphics/Rectangle;(0xDCC03D78) 3CLTEXTCLASS org/eclipse/swt/widgets/Monitor(0xDCC03E38) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/Monitor;(0xDCC03FD0) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/Shell;(0xDCC04088) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkEvent(0xDCC04140) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkEventExpose(0xDCC04260) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkEventWindowState(0xDCC04380) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkEventProperty(0xDCC044A0) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkEventVisibility(0xDCC045C0) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/XFocusChangeEvent(0xDCC046E0) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkEventFocus(0xDCC04808) 3CLTEXTCLASS org/eclipse/swt/events/ShellEvent(0xDCC04930) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkEventKey(0xDCC04AD0) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/Event;(0xDCC04BF0) 3CLTEXTCLASS org/eclipse/swt/events/SelectionEvent(0xDCC04CB0) 3CLTEXTCLASS org/eclipse/swt/events/DisposeEvent(0xDCC04F68) 3CLTEXTCLASS org/eclipse/swt/internal/LONG(0xDCC05068) 3CLTEXTCLASS org/eclipse/swt/graphics/ImageDataLoader(0xDCC05188) 3CLTEXTCLASS org/eclipse/swt/graphics/ImageLoader(0xDCC052D8) 3CLTEXTCLASS org/eclipse/swt/internal/image/FileFormat(0xDCC055A8) 3CLTEXTCLASS org/eclipse/swt/internal/image/LEDataInputStream(0xDCC058F0) 3CLTEXTCLASS org/eclipse/swt/internal/image/WinBMPFileFormat(0xDCC05BD8) 3CLTEXTCLASS org/eclipse/swt/events/PaintListener(0xDCC06118) 3CLTEXTCLASS org/eclipse/swt/custom/StackLayout(0xDCC06200) 3CLTEXTCLASS org/eclipse/swt/widgets/ProgressBar(0xDCC06A98) 3CLTEXTCLASS org/eclipse/swt/events/PaintEvent(0xDCC073B0) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/RunnableLock;(0xDCC075F8) 3CLTEXTCLASS org/eclipse/swt/custom/VerifyKeyListener(0xDCC07698) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkVisual(0xDCC07770) 3CLTEXTCLASS [Lorg/eclipse/swt/graphics/Color;(0xDCC07858) 3CLTEXTCLASS org/eclipse/swt/widgets/Item(0xDCC07B80) 3CLTEXTCLASS org/eclipse/swt/widgets/MenuItem(0xDCC082A0) 3CLTEXTCLASS org/eclipse/swt/dnd/DragSourceListener(0xDCC08E40) 3CLTEXTCLASS org/eclipse/swt/dnd/DragSourceAdapter(0xDCC08F40) 3CLTEXTCLASS org/eclipse/swt/internal/mozilla/nsIInterfaceRequestor(0xDCC09090) 3CLTEXTCLASS org/eclipse/swt/internal/mozilla/nsIDOMSerializer_1_7(0xDCC09228) 3CLTEXTCLASS org/eclipse/swt/graphics/GC(0xDCE8C648) 3CLTEXTCLASS org/eclipse/swt/graphics/GCData(0xDCE8E040) 3CLTEXTCLASS org/eclipse/swt/internal/Compatibility(0xDCE8E1A0) 3CLTEXTCLASS org/eclipse/swt/graphics/FontMetrics(0xDCE8E658) 3CLTEXTCLASS org/eclipse/swt/custom/ScrolledComposite(0xDCE8EED8) 3CLTEXTCLASS org/eclipse/swt/events/HelpListener(0xDCE8FB48) 3CLTEXTCLASS org/eclipse/swt/events/MouseListener(0xDCE8FC08) 3CLTEXTCLASS org/eclipse/swt/widgets/ImageList(0xDCE8FD28) 3CLTEXTCLASS org/eclipse/swt/layout/FormData(0xDCE8FFC0) 3CLTEXTCLASS org/eclipse/swt/layout/FormAttachment(0xDCE90488) 3CLTEXTCLASS org/eclipse/swt/accessibility/Accessible(0xDCE90820) 3CLTEXTCLASS org/eclipse/swt/accessibility/AccessibleFactory(0xDCE90EE8) 3CLTEXTCLASS org/eclipse/swt/accessibility/AccessibleObject(0xDCE92348) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GInterfaceInfo(0xDCE94198) 3CLTEXTCLASS org/eclipse/swt/accessibility/Accessible$1(0xDCE942B8) 3CLTEXTCLASS org/eclipse/swt/widgets/ToolBar(0xDCE54710) 3CLTEXTCLASS org/eclipse/swt/widgets/Link(0xDCE559E0) 3CLTEXTCLASS org/eclipse/swt/events/DisposeListener(0xDCE56958) 3CLTEXTCLASS org/eclipse/swt/events/ControlAdapter(0xDCE56A38) 3CLTEXTCLASS org/eclipse/swt/layout/FormLayout(0xDCE56B80) 3CLTEXTCLASS org/eclipse/swt/widgets/Label(0xDCE575D8) 3CLTEXTCLASS org/eclipse/swt/widgets/Text(0xDCE589A8) 3CLTEXTCLASS org/eclipse/swt/events/ModifyListener(0xDCE5A280) 3CLTEXTCLASS [Lorg/eclipse/swt/graphics/ImageData;(0xDCE5A358) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GObjectClass(0xDCE5A410) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GtkWidgetClass(0xDCE5A4F8) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GtkRequisition(0xDCE5A5F8) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GtkAllocation(0xDCE5A718) 3CLTEXTCLASS org/eclipse/swt/events/ShellAdapter(0xDCE5A848) 3CLTEXTCLASS org/eclipse/swt/widgets/TypedListener(0xDCE5A9C8) 3CLTEXTCLASS org/eclipse/swt/graphics/FontData(0xDCE5AF40) 3CLTEXTCLASS [Lorg/eclipse/swt/graphics/FontData;(0xDCE5B318) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/Control;(0xDCE5B3D0) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GtkFixed(0xDCE5B488) 3CLTEXTCLASS org/eclipse/swt/layout/GridData(0xDCE5B578) 3CLTEXTCLASS org/eclipse/swt/accessibility/Accessible$Relation(0xDCE5BA48) 3CLTEXTCLASS org/eclipse/swt/widgets/Event(0xDCE5BB70) 3CLTEXTCLASS org/eclipse/swt/graphics/Rectangle(0xDCE5BDE8) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/OS(0xDD36EDD0) 3CLTEXTCLASS org/eclipse/swt/widgets/Display(0x1058B928) 3CLTEXTCLASS org/eclipse/swt/SWTException(0x1058EBE8) 3CLTEXTCLASS org/eclipse/swt/widgets/Synchronizer(0x1058EE70) 3CLTEXTCLASS [Lorg/eclipse/swt/graphics/Device;(0x1058F218) 3CLTEXTCLASS org/eclipse/swt/internal/Converter(0x1058F2D0) 3CLTEXTCLASS org/eclipse/swt/internal/Platform(0x1058F4A8) 3CLTEXTCLASS org/eclipse/swt/internal/C(0x1058F5D8) 3CLTEXTCLASS org/eclipse/swt/internal/Lock(0x1058F8F0) 3CLTEXTCLASS org/eclipse/swt/internal/Library(0x1058FA60) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/Display;(0x1058FFE0) 3CLTEXTCLASS org/eclipse/swt/widgets/Display$1(0x10590098) 3CLTEXTCLASS org/eclipse/swt/internal/Callback(0x105901C0) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GTypeInfo(0x10590538) 3CLTEXTCLASS org/eclipse/swt/graphics/Resource(0x10590668) 3CLTEXTCLASS org/eclipse/swt/graphics/Color(0x10590858) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkColor(0x10590BC0) 3CLTEXTCLASS org/eclipse/swt/graphics/Font(0x10590CF8) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/Widget;(0x10591068) 3CLTEXTCLASS org/eclipse/swt/widgets/RunnableLock(0x10591128) 3CLTEXTCLASS org/eclipse/swt/SWT(0x10591268) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/GdkRectangle(0x10591D50) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/XEvent(0x10591E70) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/XAnyEvent(0x10591F90) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/XExposeEvent(0x105920B0) 3CLTEXTCLASS org/eclipse/swt/internal/gtk/XVisibilityEvent(0x105921D8) 3CLTEXTCLASS org/eclipse/swt/graphics/Cursor(0x10592318) 3CLTEXTCLASS [Lorg/eclipse/swt/graphics/Cursor;(0x10592768) 3CLTEXTCLASS org/eclipse/swt/internal/CloneableCompatibility(0x10592808) 3CLTEXTCLASS org/eclipse/swt/graphics/ImageData(0x10592900) 3CLTEXTCLASS org/eclipse/swt/graphics/PaletteData(0x10593298) 3CLTEXTCLASS org/eclipse/swt/internal/SerializableCompatibility(0x105934A0) 3CLTEXTCLASS [Lorg/eclipse/swt/graphics/RGB;(0x10593558) 3CLTEXTCLASS [Lorg/eclipse/swt/graphics/Image;(0x10593610) 3CLTEXTCLASS org/eclipse/swt/widgets/Decorations(0x1054E170) 3CLTEXTCLASS org/eclipse/swt/widgets/Shell(0x1054F618) 3CLTEXTCLASS org/eclipse/swt/widgets/Layout(0x105516D0) 3CLTEXTCLASS org/eclipse/swt/layout/GridLayout(0x10551808) 3CLTEXTCLASS org/eclipse/swt/widgets/Listener(0x10551CB0) 3CLTEXTCLASS org/eclipse/swt/internal/SWTEventListener(0x10551D60) 3CLTEXTCLASS org/eclipse/swt/events/ShellListener(0x10551E00) 3CLTEXTCLASS org/eclipse/swt/graphics/Device(0x10551F78) 3CLTEXTCLASS org/eclipse/swt/graphics/RGB(0x10552A08) 3CLTEXTCLASS org/eclipse/swt/graphics/Image(0x10552C70) 3CLTEXTCLASS org/eclipse/swt/widgets/EventTable(0x10553568) 3CLTEXTCLASS [Lorg/eclipse/swt/widgets/Listener;(0x10553780) 3CLTEXTCLASS org/eclipse/swt/graphics/Point(0x10553838) 3CLTEXTCLASS org/eclipse/swt/events/SelectionListener(0x105539C0) 3CLTEXTCLASS org/eclipse/swt/widgets/Button(0x10554068) 3CLTEXTCLASS org/eclipse/swt/events/ControlListener(0x10554F28) 3CLTEXTCLASS org/eclipse/swt/layout/FillLayout(0x10555020) 3CLTEXTCLASS org/eclipse/swt/internal/mozilla/nsIDOMSerializer(0x105553A0) 3CLTEXTCLASS org/eclipse/swt/browser/FilePickerFactory(0x10555560) 3CLTEXTCLASS org/eclipse/swt/browser/FilePickerFactory_1_8(0x10555840) 3CLTEXTCLASS org/eclipse/swt/widgets/Composite(0x1054A0C0) 3CLTEXTCLASS org/eclipse/swt/widgets/Canvas(0x1054BF58) 3CLTEXTCLASS org/eclipse/swt/internal/accessibility/gtk/ATK(0x1054CAF0) 3CLTEXTCLASS org/eclipse/swt/widgets/Scrollable(0x105478C8) 3CLTEXTCLASS org/eclipse/swt/widgets/CoolItem(0x105487A8) 3CLTEXTCLASS org/eclipse/swt/widgets/Control(0x105445E8) 3CLTEXTCLASS org/eclipse/swt/graphics/Drawable(0x105431A0) 3CLTEXTCLASS org/eclipse/swt/internal/mozilla/nsICategoryManager(0x105432A0) 3CLTEXTCLASS org/eclipse/swt/browser/Mozilla$1(0x105434B8) 3CLTEXTCLASS org/eclipse/swt/widgets/Widget(0x105419D8) 3CLTEXTCLASS org/eclipse/swt/SWTError(0x104CF830) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0B518D8) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$7(0xD92400F8) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$8(0xD9240298) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$10(0xD92403E8) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$14(0xD9240558) 3CLTEXTCLASS org/eclipse/jface/preference/FieldEditor(0xD9240770) 3CLTEXTCLASS org/eclipse/jface/preference/PreferencePage$1(0xD9240F40) 3CLTEXTCLASS org/eclipse/jface/preference/PreferencePage$2(0xD9241070) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$15(0xD92411A0) 3CLTEXTCLASS org/eclipse/jface/viewers/ArrayContentProvider(0xD9241320) 3CLTEXTCLASS org/eclipse/jface/viewers/CheckStateChangedEvent(0xD9241520) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$13(0xD9241690) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$2(0xD9241910) 3CLTEXTCLASS org/eclipse/jface/viewers/ICellModifier(0xD9241A78) 3CLTEXTCLASS org/eclipse/jface/viewers/AbstractComboBoxCellEditor(0xD9241C40) 3CLTEXTCLASS org/eclipse/jface/viewers/ComboBoxCellEditor(0xD9241FB0) 3CLTEXTCLASS org/eclipse/jface/action/ActionContributionItem$9(0xD92424C8) 3CLTEXTCLASS org/eclipse/jface/action/ActionContributionItem$11(0xD9242638) 3CLTEXTCLASS org/eclipse/jface/dialogs/MessageDialogWithToggle$1(0xD92427B8) 3CLTEXTCLASS [Lorg/eclipse/jface/viewers/IStructuredSelection;(0xD9242900) 3CLTEXTCLASS org/eclipse/jface/action/ActionContributionItem$3(0xD92429B8) 3CLTEXTCLASS org/eclipse/jface/operation/AccumulatingProgressMonitor$3(0xD9242B00) 3CLTEXTCLASS org/eclipse/jface/resource/ArrayFontDescriptor(0xD9242C70) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$1(0xD9242EE8) 3CLTEXTCLASS org/eclipse/jface/viewers/OpenEvent(0xD9243038) 3CLTEXTCLASS org/eclipse/jface/viewers/StructuredViewer$2(0xD9243190) 3CLTEXTCLASS org/eclipse/jface/viewers/CheckboxTableViewer$1(0xD92432D8) 3CLTEXTCLASS org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent(0xDBADA430) 3CLTEXTCLASS org/eclipse/jface/viewers/Viewer$2(0xDBADA5F0) 3CLTEXTCLASS org/eclipse/jface/util/OpenStrategy$3(0xDBADA730) 3CLTEXTCLASS org/eclipse/jface/dialogs/IPageChangingListener(0xDBADA8E0) 3CLTEXTCLASS org/eclipse/jface/dialogs/PageChangingEvent(0xDBADA9B0) 3CLTEXTCLASS org/eclipse/jface/wizard/WizardDialog$6(0xDBADAB08) 3CLTEXTCLASS org/eclipse/jface/preference/IPreferenceNode(0xDBADAC28) 3CLTEXTCLASS org/eclipse/jface/viewers/TableViewerEditor(0xDBADADC8) 3CLTEXTCLASS org/eclipse/jface/viewers/TableViewerRow(0xDBADB130) 3CLTEXTCLASS org/eclipse/jface/viewers/ILazyContentProvider(0xDBADB600) 3CLTEXTCLASS org/eclipse/jface/viewers/ITableColorProvider(0xDBADB6B8) 3CLTEXTCLASS org/eclipse/jface/viewers/ITableFontProvider(0xDBADB778) 3CLTEXTCLASS org/eclipse/jface/viewers/AbstractTableViewer$2(0xDBADB840) 3CLTEXTCLASS org/eclipse/jface/wizard/WizardDialog$8(0xDBADB978) 3CLTEXTCLASS org/eclipse/jface/dialogs/ControlEnableState(0xDBADBAB8) 3CLTEXTCLASS org/eclipse/jface/dialogs/ControlEnableState$ItemState(0xDBADBCC8) 3CLTEXTCLASS org/eclipse/jface/wizard/WizardDialog$2(0xDBADBE08) 3CLTEXTCLASS org/eclipse/jface/operation/AccumulatingProgressMonitor(0xDBADBFA0) 3CLTEXTCLASS org/eclipse/jface/operation/IThreadListener(0xDBADC2A0) 3CLTEXTCLASS org/eclipse/jface/operation/AccumulatingProgressMonitor$2(0xDBADC368) 3CLTEXTCLASS org/eclipse/jface/operation/ModalContext$1(0xDBADC4A0) 3CLTEXTCLASS org/eclipse/jface/viewers/StyledString$StyleRunList(0xDBADC618) 3CLTEXTCLASS [[Lorg/eclipse/jface/resource/ImageDescriptor;(0xDBADC7B8) 3CLTEXTCLASS org/eclipse/jface/viewers/AbstractTableViewer$3(0xDBADC870) 3CLTEXTCLASS org/eclipse/jface/viewers/IIndexableLazyContentProvider(0xDBADC990) 3CLTEXTCLASS org/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor(0xDBADCA90) 3CLTEXTCLASS org/eclipse/jface/dialogs/ProgressMonitorDialog$2(0xDBADCDE0) 3CLTEXTCLASS org/eclipse/jface/dialogs/IconAndMessageDialog$2(0xDBADCF50) 3CLTEXTCLASS org/eclipse/jface/dialogs/IconAndMessageDialog$1(0xDBADD0B0) 3CLTEXTCLASS org/eclipse/jface/dialogs/ProgressMonitorDialog$3(0xDBADD200) 3CLTEXTCLASS org/eclipse/jface/viewers/AbstractTreeViewer$6(0xDBADD340) 3CLTEXTCLASS org/eclipse/jface/viewers/IDecoration(0xDBADD460) 3CLTEXTCLASS [Lorg/eclipse/jface/viewers/IDecorationContext;(0xDBADD5C0) 3CLTEXTCLASS org/eclipse/jface/viewers/BaseLabelProvider$1(0xDBADD680) 3CLTEXTCLASS org/eclipse/jface/viewers/AbstractTreeViewer$3(0xDBADD7C8) 3CLTEXTCLASS org/eclipse/jface/viewers/AbstractTreeViewer$2(0xDBADD910) 3CLTEXTCLASS org/eclipse/jface/action/MenuManager$1(0xDBADDA60) 3CLTEXTCLASS org/eclipse/jface/util/OpenStrategy$4(0xDBADDBD8) 3CLTEXTCLASS org/eclipse/jface/viewers/DoubleClickEvent(0xDBADDD78) 3CLTEXTCLASS org/eclipse/jface/viewers/StructuredViewer$1(0xDBADDED0) 3CLTEXTCLASS org/eclipse/jface/fieldassist/ControlDecoration(0xDBADE068) 3CLTEXTCLASS org/eclipse/jface/fieldassist/ControlDecoration$3(0xDBADEB10) 3CLTEXTCLASS org/eclipse/jface/fieldassist/ControlDecoration$4(0xDBADEC50) 3CLTEXTCLASS org/eclipse/jface/fieldassist/ControlDecoration$5(0xDBADEDB8) 3CLTEXTCLASS org/eclipse/jface/fieldassist/ControlDecoration$6(0xDBADEF48) 3CLTEXTCLASS org/eclipse/jface/fieldassist/ControlDecoration$7(0xDBADF0F8) 3CLTEXTCLASS org/eclipse/jface/fieldassist/ControlDecoration$8(0xDBADF308) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceNode(0xDBADF4A0) 3CLTEXTCLASS [Lorg/eclipse/jface/preference/IPreferenceNode;(0xDBADF8A8) 3CLTEXTCLASS [Lorg/eclipse/jface/action/ContributionManager;(0xDBADF960) 3CLTEXTCLASS org/eclipse/jface/operation/AccumulatingProgressMonitor$1(0xDBADFA18) 3CLTEXTCLASS org/eclipse/jface/operation/AccumulatingProgressMonitor$Collector(0xDBADFB80) 3CLTEXTCLASS org/eclipse/jface/viewers/StructuredViewer$3(0xDBADFD20) 3CLTEXTCLASS org/eclipse/jface/window/ApplicationWindow$1(0xDBADFE60) 3CLTEXTCLASS org/eclipse/jface/action/StatusLineManager$1(0xDBAE0018) 3CLTEXTCLASS org/eclipse/jface/action/StatusLine$4(0xDBAE0290) 3CLTEXTCLASS org/eclipse/jface/dialogs/ErrorDialog(0xDBAE04D0) 3CLTEXTCLASS [Lorg/eclipse/jface/preference/IPreferenceStore;(0xDBAE0DE0) 3CLTEXTCLASS [Lorg/eclipse/jface/action/IAction;(0xDBAE0E98) 3CLTEXTCLASS org/eclipse/jface/action/SubMenuManager$1(0xDBAE0F50) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$3(0xDBAE10A8) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$4(0xDBAE11F8) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceContentProvider(0xDBAE1360) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceLabelProvider(0xDBAE15B0) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$9(0xDBAE1708) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$11(0xDBAE1910) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$12(0xDBAE1A78) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$5(0xDBAE1C20) 3CLTEXTCLASS org/eclipse/jface/dialogs/DialogMessageArea(0xDBAE1E70) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$6(0xDBAE21F8) 3CLTEXTCLASS org/eclipse/jface/viewers/CellEditor(0xDBF9A150) 3CLTEXTCLASS org/eclipse/jface/viewers/TextCellEditor(0xDBF9AAA8) 3CLTEXTCLASS org/eclipse/jface/viewers/TextCellEditor$1(0xDBF9B1D8) 3CLTEXTCLASS org/eclipse/jface/viewers/TextCellEditor$2(0xDBF9B308) 3CLTEXTCLASS org/eclipse/jface/viewers/TextCellEditor$3(0xDBF9B460) 3CLTEXTCLASS org/eclipse/jface/viewers/TextCellEditor$4(0xDBF9B5A0) 3CLTEXTCLASS org/eclipse/jface/viewers/TextCellEditor$5(0xDBF9B6E0) 3CLTEXTCLASS org/eclipse/jface/viewers/TextCellEditor$6(0xDBF9B808) 3CLTEXTCLASS org/eclipse/jface/action/SubMenuManager(0xDBF9BA10) 3CLTEXTCLASS org/eclipse/jface/action/SubToolBarManager(0xDBF9C0E8) 3CLTEXTCLASS org/eclipse/jface/action/SubContributionItem(0xDBF9C2E0) 3CLTEXTCLASS org/eclipse/jface/viewers/ICheckStateProvider(0xDBF9C610) 3CLTEXTCLASS org/eclipse/jface/viewers/ICheckStateListener(0xDBF9C6D0) 3CLTEXTCLASS org/eclipse/jface/viewers/ICheckable(0xDBF9C780) 3CLTEXTCLASS org/eclipse/jface/viewers/AbstractListViewer(0xDBF9CA70) 3CLTEXTCLASS org/eclipse/jface/viewers/ComboViewer(0xDBF9D420) 3CLTEXTCLASS org/eclipse/jface/viewers/CheckboxTreeViewer(0xDBF9DCC8) 3CLTEXTCLASS org/eclipse/jface/viewers/CheckboxTableViewer(0xDBF9E8F8) 3CLTEXTCLASS org/eclipse/jface/action/SubCoolBarManager(0xDBF9F158) 3CLTEXTCLASS org/eclipse/jface/commands/ActionHandler$1(0xDBF9F3E0) 3CLTEXTCLASS org/eclipse/jface/viewers/StructuredViewer$8(0xDBF9F558) 3CLTEXTCLASS org/eclipse/jface/action/ActionContributionItem$5(0xDBF9F6A0) 3CLTEXTCLASS org/eclipse/jface/action/ActionContributionItem$8(0xDBF9F7F8) 3CLTEXTCLASS org/eclipse/jface/action/ActionContributionItem$7(0xDBF9F948) 3CLTEXTCLASS org/eclipse/jface/wizard/IWizardPage(0xDBF9FA98) 3CLTEXTCLASS org/eclipse/jface/wizard/WizardPage(0xDBF9FC78) 3CLTEXTCLASS org/eclipse/jface/wizard/WizardSelectionPage(0xDBFA0148) 3CLTEXTCLASS org/eclipse/jface/wizard/WizardDialog$1(0xDBFA0430) 3CLTEXTCLASS org/eclipse/jface/wizard/WizardDialog$4(0xDBFA0BC0) 3CLTEXTCLASS org/eclipse/jface/wizard/WizardDialog$PageContainerFillLayout(0xDBFA1428) 3CLTEXTCLASS org/eclipse/jface/wizard/WizardDialog$5(0xDBFA17A0) 3CLTEXTCLASS org/eclipse/jface/wizard/WizardDialog$3(0xDBFA19C8) 3CLTEXTCLASS org/eclipse/jface/wizard/IWizardNode(0xDBFA1AF8) 3CLTEXTCLASS org/eclipse/jface/wizard/ProgressMonitorPart$2(0xDBFA1BF8) 3CLTEXTCLASS org/eclipse/jface/wizard/ProgressMonitorPart$3(0xDBFA1D38) 3CLTEXTCLASS org/eclipse/jface/dialogs/TrayDialog$1(0xDBFA1E98) 3CLTEXTCLASS org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider(0xDC159698) 3CLTEXTCLASS org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider(0xDC159B00) 3CLTEXTCLASS org/eclipse/jface/viewers/ColumnLabelProvider(0xDC15A020) 3CLTEXTCLASS org/eclipse/jface/viewers/WrappedViewerLabelProvider(0xDC15A310) 3CLTEXTCLASS org/eclipse/jface/viewers/TableColumnViewerLabelProvider(0xDC15A7E8) 3CLTEXTCLASS [Lorg/eclipse/jface/viewers/ILabelProviderListener;(0xDC15AA80) 3CLTEXTCLASS org/eclipse/jface/viewers/LabelDecorator(0xDC15AB58) 3CLTEXTCLASS org/eclipse/jface/viewers/IColorDecorator(0xDC15ACA0) 3CLTEXTCLASS org/eclipse/jface/viewers/IFontDecorator(0xDC15AD60) 3CLTEXTCLASS org/eclipse/jface/viewers/IDecorationContext(0xDC15AE10) 3CLTEXTCLASS org/eclipse/jface/viewers/DecorationContext(0xDC15AEF0) 3CLTEXTCLASS org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider$1(0xDC15B0D8) 3CLTEXTCLASS org/eclipse/jface/viewers/ITreePathLabelProvider(0xDC15B1E8) 3CLTEXTCLASS org/eclipse/jface/viewers/IViewerLabelProvider(0xDC15B2A0) 3CLTEXTCLASS org/eclipse/jface/viewers/ViewerColumn$1(0xDC15B370) 3CLTEXTCLASS org/eclipse/jface/viewers/ViewerColumn$2(0xDC15B4A0) 3CLTEXTCLASS [Lorg/eclipse/jface/viewers/TreePath;(0xDC15B5E8) 3CLTEXTCLASS org/eclipse/jface/viewers/TreeSelection$InitializeData(0xDC15B6A0) 3CLTEXTCLASS org/eclipse/jface/viewers/ITreePathContentProvider(0xDC15B830) 3CLTEXTCLASS org/eclipse/jface/viewers/OwnerDrawLabelProvider$OwnerDrawListener(0xDC15B938) 3CLTEXTCLASS org/eclipse/jface/action/IMenuListener2(0xDC15BAF0) 3CLTEXTCLASS org/eclipse/jface/wizard/IWizardContainer(0xDC15BBA8) 3CLTEXTCLASS org/eclipse/jface/wizard/IWizardContainer2(0xDC15BCC0) 3CLTEXTCLASS org/eclipse/jface/wizard/WizardDialog(0xDC15BF10) 3CLTEXTCLASS org/eclipse/jface/layout/PixelConverter(0xDC15D178) 3CLTEXTCLASS org/eclipse/jface/viewers/SelectionChangedEvent(0xDC15D360) 3CLTEXTCLASS [Lorg/eclipse/jface/viewers/ViewerFilter;(0xDC15D4B0) 3CLTEXTCLASS org/eclipse/jface/viewers/AbstractTableViewer(0xDC15D800) 3CLTEXTCLASS org/eclipse/jface/viewers/TableViewer(0xDC15E610) 3CLTEXTCLASS org/eclipse/jface/viewers/AbstractTreeViewer$5(0xDC15EEF0) 3CLTEXTCLASS org/eclipse/jface/viewers/AbstractTreeViewer$1(0xDC15F048) 3CLTEXTCLASS org/eclipse/jface/viewers/TreePathViewerSorter(0xDC15F218) 3CLTEXTCLASS org/eclipse/jface/viewers/IOpenListener(0xDC15F3A0) 3CLTEXTCLASS org/eclipse/jface/action/SubContributionManager(0xDC15F4D8) 3CLTEXTCLASS org/eclipse/jface/action/SubStatusLineManager(0xDC15FB00) 3CLTEXTCLASS org/eclipse/jface/viewers/TableLayout(0xDC15FE08) 3CLTEXTCLASS org/eclipse/jface/viewers/ColumnLayoutData(0xDC1600F8) 3CLTEXTCLASS org/eclipse/jface/viewers/ColumnPixelData(0xDC1601F0) 3CLTEXTCLASS org/eclipse/jface/viewers/DecorationOverlayIcon(0xDC160358) 3CLTEXTCLASS org/eclipse/jface/viewers/ColumnWeightData(0xDC160638) 3CLTEXTCLASS org/eclipse/jface/viewers/TreeViewerColumn(0xDC1607B0) 3CLTEXTCLASS org/eclipse/jface/fieldassist/FieldDecorationRegistry(0xDC160978) 3CLTEXTCLASS org/eclipse/jface/fieldassist/FieldDecorationRegistry$Entry(0xDC160DE8) 3CLTEXTCLASS org/eclipse/jface/fieldassist/FieldDecoration(0xDC160F98) 3CLTEXTCLASS org/eclipse/jface/dialogs/TrayDialog$2(0xDC161100) 3CLTEXTCLASS org/eclipse/jface/viewers/StructuredViewer$UpdateItemSafeRunnable(0xDC161230) 3CLTEXTCLASS org/eclipse/jface/viewers/AbstractTreeViewer$UpdateItemSafeRunnable(0xDC161390) 3CLTEXTCLASS [Lorg/eclipse/jface/wizard/IWizardPage;(0xDC1614D8) 3CLTEXTCLASS org/eclipse/jface/dialogs/DialogPage(0xDC3B3A70) 3CLTEXTCLASS org/eclipse/jface/preference/IPreferencePage(0xDC3B3FD0) 3CLTEXTCLASS org/eclipse/jface/preference/PreferencePage(0xDC3B41D8) 3CLTEXTCLASS org/eclipse/jface/viewers/ITreeViewerListener(0xDC3B4960) 3CLTEXTCLASS org/eclipse/jface/viewers/IDoubleClickListener(0xDC3B4A20) 3CLTEXTCLASS org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider$IStyledLabelProvider(0xDC3B4AD0) 3CLTEXTCLASS org/eclipse/jface/viewers/ITreeContentProvider(0xDC3B4B98) 3CLTEXTCLASS org/eclipse/jface/util/TransferDropTargetListener(0xDC3B4C88) 3CLTEXTCLASS org/eclipse/jface/viewers/EditingSupport(0xDC3B4D98) 3CLTEXTCLASS org/eclipse/jface/viewers/ColumnViewer$2(0xDC3B4FB0) 3CLTEXTCLASS org/eclipse/jface/viewers/ViewerColumn(0xDC3B51A0) 3CLTEXTCLASS org/eclipse/jface/viewers/ColumnViewer$3(0xDC3B5500) 3CLTEXTCLASS org/eclipse/jface/viewers/ITreeSelection(0xDC3B5600) 3CLTEXTCLASS org/eclipse/jface/viewers/TreeSelection(0xDC3B5708) 3CLTEXTCLASS org/eclipse/jface/viewers/IElementComparer(0xDC3B5A00) 3CLTEXTCLASS org/eclipse/jface/viewers/ColumnViewerEditor(0xDC3B5B08) 3CLTEXTCLASS org/eclipse/jface/viewers/TreeViewerEditor(0xDC3B62A0) 3CLTEXTCLASS org/eclipse/jface/viewers/TreePath(0xDC3B65C0) 3CLTEXTCLASS org/eclipse/jface/viewers/ViewerRow(0xDC3B68C8) 3CLTEXTCLASS org/eclipse/jface/viewers/TreeViewerRow(0xDC3B6E48) 3CLTEXTCLASS org/eclipse/jface/viewers/ViewerCell(0xDC3B7420) 3CLTEXTCLASS org/eclipse/jface/viewers/ContentViewer$2(0xDC3B78D8) 3CLTEXTCLASS org/eclipse/jface/util/OpenStrategy$1(0xDC3B7A18) 3CLTEXTCLASS org/eclipse/jface/viewers/StructuredViewer$4(0xDC3B7DE0) 3CLTEXTCLASS org/eclipse/jface/viewers/StructuredViewer$5(0xDC3B7F50) 3CLTEXTCLASS org/eclipse/jface/viewers/StructuredViewer$6(0xDC3B8078) 3CLTEXTCLASS org/eclipse/jface/viewers/ICellEditorListener(0xDC3B8188) 3CLTEXTCLASS org/eclipse/jface/viewers/ColumnViewerEditorActivationStrategy(0xDC3B8278) 3CLTEXTCLASS org/eclipse/jface/viewers/ColumnViewerEditor$1(0xDC3B8498) 3CLTEXTCLASS org/eclipse/jface/viewers/ColumnViewerEditor$2(0xDC3B85F8) 3CLTEXTCLASS org/eclipse/jface/viewers/ColumnViewer$1(0xDC3B8760) 3CLTEXTCLASS org/eclipse/jface/viewers/AbstractTreeViewer$4(0xDC3B88B0) 3CLTEXTCLASS org/eclipse/jface/util/TransferDragSourceListener(0xDC3B89F8) 3CLTEXTCLASS org/eclipse/jface/util/DelegatingDragAdapter(0xDC3B8AF0) 3CLTEXTCLASS org/eclipse/jface/util/LocalSelectionTransfer(0xDC3B8E68) 3CLTEXTCLASS org/eclipse/jface/util/DelegatingDropAdapter(0xDC3B91E8) 3CLTEXTCLASS org/eclipse/jface/viewers/ViewerDropAdapter(0xDC3B9660) 3CLTEXTCLASS org/eclipse/jface/viewers/ILazyTreeContentProvider(0xDC3B9B88) 3CLTEXTCLASS org/eclipse/jface/viewers/ILazyTreePathContentProvider(0xDC3B9C60) 3CLTEXTCLASS org/eclipse/jface/viewers/StyledString(0xDC3B9D90) 3CLTEXTCLASS org/eclipse/jface/viewers/StyledString$Styler(0xDC3BA2F8) 3CLTEXTCLASS org/eclipse/jface/viewers/StyledString$DefaultStyler(0xDC3BA3F0) 3CLTEXTCLASS org/eclipse/jface/viewers/StyledString$StyleRun(0xDC3BA548) 3CLTEXTCLASS org/eclipse/jface/viewers/ILightweightLabelDecorator(0xDC3BA698) 3CLTEXTCLASS org/eclipse/jface/viewers/LabelProviderChangedEvent(0xDC3BA770) 3CLTEXTCLASS org/eclipse/jface/viewers/CellLabelProvider(0xDC3BA928) 3CLTEXTCLASS org/eclipse/jface/viewers/OwnerDrawLabelProvider(0xDC3BAC40) 3CLTEXTCLASS org/eclipse/jface/viewers/StyledCellLabelProvider(0xDC3BB060) 3CLTEXTCLASS org/eclipse/jface/dialogs/PageChangedEvent(0xDC3BB688) 3CLTEXTCLASS org/eclipse/jface/viewers/TreeExpansionEvent(0xDC3BB7E0) 3CLTEXTCLASS org/eclipse/jface/action/MenuManager(0xDC81C958) 3CLTEXTCLASS org/eclipse/jface/internal/provisional/action/ICoolBarManager2(0xDC81D488) 3CLTEXTCLASS org/eclipse/jface/internal/provisional/action/IToolBarManager2(0xDC81D5A8) 3CLTEXTCLASS org/eclipse/jface/action/CoolBarManager(0xDC81D7D0) 3CLTEXTCLASS org/eclipse/jface/internal/provisional/action/CoolBarManager2(0xDC81E178) 3CLTEXTCLASS org/eclipse/jface/action/StatusLineManager(0xDC81E460) 3CLTEXTCLASS org/eclipse/jface/action/StatusLine(0xDC81EF18) 3CLTEXTCLASS org/eclipse/jface/action/StatusLineContributionItem(0xDC81FDF0) 3CLTEXTCLASS org/eclipse/jface/commands/ActionHandler(0xDC820198) 3CLTEXTCLASS org/eclipse/jface/action/IMenuListener(0xDC8204C8) 3CLTEXTCLASS org/eclipse/jface/viewers/StructuredSelection(0xDC8205A8) 3CLTEXTCLASS org/eclipse/jface/viewers/BaseLabelProvider(0xDC8208C0) 3CLTEXTCLASS org/eclipse/jface/viewers/LabelProvider(0xDC820AC0) 3CLTEXTCLASS org/eclipse/jface/viewers/ITableLabelProvider(0xDC820C10) 3CLTEXTCLASS org/eclipse/jface/action/ActionContributionItem$1(0xDC820CF0) 3CLTEXTCLASS org/eclipse/jface/action/ActionContributionItem$2(0xDC820E30) 3CLTEXTCLASS [Lorg/eclipse/jface/action/IContributionItem;(0xDC820F60) 3CLTEXTCLASS org/eclipse/jface/action/ControlContribution(0xDC821068) 3CLTEXTCLASS org/eclipse/jface/action/ToolBarManager(0xDC821308) 3CLTEXTCLASS org/eclipse/jface/internal/provisional/action/ToolBarManager2(0xDC8218F8) 3CLTEXTCLASS org/eclipse/jface/action/ToolBarContributionItem(0xDC821CE0) 3CLTEXTCLASS org/eclipse/jface/internal/provisional/action/ToolBarContributionItem2(0xDC822578) 3CLTEXTCLASS [Lorg/eclipse/jface/util/IPropertyChangeListener;(0xDC822708) 3CLTEXTCLASS org/eclipse/jface/action/MenuManager$2(0xDC8227C8) 3CLTEXTCLASS org/eclipse/jface/action/ActionContributionItem$6(0xDC822908) 3CLTEXTCLASS org/eclipse/jface/bindings/CachedBindingSet(0xDC822A80) 3CLTEXTCLASS org/eclipse/jface/action/ToolBarManager$1(0xDC822E38) 3CLTEXTCLASS org/eclipse/jface/action/ToolBarContributionItem$1(0xDC822FA0) 3CLTEXTCLASS org/eclipse/jface/action/ToolBarContributionItem$2(0xDC8230E8) 3CLTEXTCLASS org/eclipse/jface/action/ToolBarContributionItem$3(0xDC823220) 3CLTEXTCLASS org/eclipse/jface/action/StatusLine$StatusLineLayout(0xDC823360) 3CLTEXTCLASS org/eclipse/jface/action/StatusLine$1(0xDC8235B8) 3CLTEXTCLASS org/eclipse/jface/action/StatusLineLayoutData(0xDC8236F0) 3CLTEXTCLASS org/eclipse/jface/action/StatusLine$2(0xDC8237F8) 3CLTEXTCLASS org/eclipse/jface/action/StatusLine$3(0xDC823920) 3CLTEXTCLASS org/eclipse/jface/action/ContributionManager$1(0xDC823A90) 3CLTEXTCLASS org/eclipse/jface/viewers/ViewerFilter(0xDC823C18) 3CLTEXTCLASS org/eclipse/jface/viewers/ILabelProviderListener(0xDC823D88) 3CLTEXTCLASS org/eclipse/jface/util/IOpenEventListener(0xDC823E38) 3CLTEXTCLASS org/eclipse/jface/viewers/ViewerSorter(0xDC823F18) 3CLTEXTCLASS org/eclipse/jface/viewers/StructuredViewer$ColorAndFontCollector(0xDC824088) 3CLTEXTCLASS org/eclipse/jface/viewers/StructuredViewer$ColorAndFontCollectorWithProviders(0xDC824300) 3CLTEXTCLASS org/eclipse/jface/viewers/ContentViewer$1(0xDC824548) 3CLTEXTCLASS [Lorg/eclipse/jface/viewers/CustomHashtable$HashMapEntry;(0xDC824748) 3CLTEXTCLASS org/eclipse/jface/bindings/keys/formatting/KeyFormatterFactory(0xDCB35E28) 3CLTEXTCLASS org/eclipse/jface/bindings/keys/formatting/FormalKeyFormatter(0xDCB36008) 3CLTEXTCLASS org/eclipse/jface/bindings/keys/formatting/EmacsKeyFormatter(0xDCB361B0) 3CLTEXTCLASS [Lorg/eclipse/jface/bindings/Scheme;(0xDCB36420) 3CLTEXTCLASS org/eclipse/jface/bindings/SchemeEvent(0xDCB364E8) 3CLTEXTCLASS org/eclipse/jface/bindings/BindingManagerEvent(0xDCB36670) 3CLTEXTCLASS [Lorg/eclipse/jface/bindings/Binding;(0xDCB368F0) 3CLTEXTCLASS org/eclipse/jface/action/IToolBarManager(0xDCB36990) 3CLTEXTCLASS org/eclipse/jface/viewers/IStructuredSelection(0xDCB36A30) 3CLTEXTCLASS org/eclipse/jface/action/AbstractAction(0xDCB36BD8) 3CLTEXTCLASS org/eclipse/jface/action/Action(0xDCB36F20) 3CLTEXTCLASS org/eclipse/jface/action/IMenuCreator(0xDCB375D8) 3CLTEXTCLASS org/eclipse/jface/action/Action$1(0xDCB376C8) 3CLTEXTCLASS org/eclipse/jface/dialogs/IInputValidator(0xDCB377E0) 3CLTEXTCLASS org/eclipse/jface/util/PropertyChangeEvent(0xDCB378B8) 3CLTEXTCLASS org/eclipse/jface/action/ExternalActionManager(0xDCB37A38) 3CLTEXTCLASS org/eclipse/jface/action/ExternalActionManager$IBindingManagerCallback(0xDCB37B80) 3CLTEXTCLASS org/eclipse/jface/action/ExternalActionManager$IExecuteCallback(0xDCB37C38) 3CLTEXTCLASS org/eclipse/jface/action/ExternalActionManager$CommandCallback(0xDCB37D70) 3CLTEXTCLASS org/eclipse/jface/resource/ColorRegistry(0xDCB38500) 3CLTEXTCLASS org/eclipse/jface/resource/ColorRegistry$1(0xDCB38970) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceConverter(0xDCB38A98) 3CLTEXTCLASS org/eclipse/jface/resource/CompositeImageDescriptor(0xDCB39048) 3CLTEXTCLASS org/eclipse/jface/action/ContributionItem(0xDCB39378) 3CLTEXTCLASS org/eclipse/jface/action/ActionContributionItem(0xDCB39768) 3CLTEXTCLASS org/eclipse/jface/util/OpenStrategy(0xDCB3A528) 3CLTEXTCLASS org/eclipse/jface/viewers/ViewerComparator(0xDCB3A938) 3CLTEXTCLASS org/eclipse/jface/dialogs/DialogSettings(0xDCB3AB98) 3CLTEXTCLASS [Lorg/eclipse/jface/window/Window;(0xDCB3B338) 3CLTEXTCLASS org/eclipse/jface/window/ApplicationWindow$ApplicationWindowLayout(0xDCB3B3F8) 3CLTEXTCLASS org/eclipse/jface/action/ICoolBarManager(0xDCB3B608) 3CLTEXTCLASS org/eclipse/jface/action/IContributionManagerOverrides(0xDCB3B720) 3CLTEXTCLASS org/eclipse/jface/action/AbstractGroupMarker(0xDCB3B888) 3CLTEXTCLASS org/eclipse/jface/action/Separator(0xDCB3BA78) 3CLTEXTCLASS org/eclipse/jface/action/GroupMarker(0xDCB3BC90) 3CLTEXTCLASS org/eclipse/jface/internal/provisional/action/IToolBarContributionItem(0xDCB3BDC8) 3CLTEXTCLASS org/eclipse/jface/dialogs/IPageChangedListener(0xDCB3BF18) 3CLTEXTCLASS org/eclipse/jface/commands/ToggleState(0xDCB3C020) 3CLTEXTCLASS org/eclipse/jface/commands/RadioState(0xDCB3C258) 3CLTEXTCLASS org/eclipse/jface/action/LegacyActionTools(0xDCB3C440) 3CLTEXTCLASS org/eclipse/jface/action/ContributionManager(0xDCB3CC38) 3CLTEXTCLASS org/eclipse/jface/viewers/CustomHashtable(0xDCB3D328) 3CLTEXTCLASS org/eclipse/jface/viewers/CustomHashtable$EmptyEnumerator(0xDCB3D788) 3CLTEXTCLASS org/eclipse/jface/viewers/CustomHashtable$HashMapEntry(0xDCB3D8E0) 3CLTEXTCLASS org/eclipse/jface/viewers/IColorProvider(0xDCB3D9C8) 3CLTEXTCLASS org/eclipse/jface/viewers/IFontProvider(0xDCB3DA88) 3CLTEXTCLASS org/eclipse/jface/viewers/StructuredViewer$7(0xDCB3DB50) 3CLTEXTCLASS org/eclipse/jface/viewers/ViewerComparator$1(0xDCB3DC88) 3CLTEXTCLASS org/eclipse/jface/dialogs/ProgressMonitorDialog(0xDCCEE5D0) 3CLTEXTCLASS org/eclipse/jface/operation/IRunnableWithProgress(0xDCCEEE58) 3CLTEXTCLASS org/eclipse/jface/wizard/ProgressMonitorPart(0xDCCEF588) 3CLTEXTCLASS org/eclipse/jface/wizard/ProgressMonitorPart$1(0xDCCF0310) 3CLTEXTCLASS org/eclipse/jface/dialogs/ProgressIndicator(0xDCCF0AA0) 3CLTEXTCLASS org/eclipse/jface/operation/ModalContext(0xDCCF1388) 3CLTEXTCLASS org/eclipse/jface/operation/ModalContext$ModalContextThread(0xDCCF1760) 3CLTEXTCLASS org/eclipse/jface/preference/JFacePreferences(0xDCCF1AE0) 3CLTEXTCLASS org/eclipse/jface/window/WindowManager(0xDCCF1C78) 3CLTEXTCLASS org/eclipse/jface/dialogs/MessageDialog(0xDCCF1FC8) 3CLTEXTCLASS org/eclipse/jface/dialogs/MessageDialogWithToggle(0xDCCF2708) 3CLTEXTCLASS org/eclipse/jface/viewers/IStructuredContentProvider(0xDCCF2D28) 3CLTEXTCLASS org/eclipse/jface/viewers/ILabelProvider(0xDCCF2DE0) 3CLTEXTCLASS org/eclipse/jface/commands/PersistentState(0xDCCF2F00) 3CLTEXTCLASS org/eclipse/jface/bindings/ISchemeListener(0xDCCF3078) 3CLTEXTCLASS org/eclipse/jface/bindings/BindingManager(0xDCCF31D8) 3CLTEXTCLASS org/eclipse/jface/bindings/TriggerSequence(0xDCCF3FE8) 3CLTEXTCLASS [Lorg/eclipse/jface/bindings/TriggerSequence;(0xDCCF42C8) 3CLTEXTCLASS org/eclipse/jface/bindings/keys/KeySequence(0xDCCF43A0) 3CLTEXTCLASS org/eclipse/jface/bindings/Binding(0xDCCF4760) 3CLTEXTCLASS org/eclipse/jface/bindings/keys/KeyBinding(0xDCCF4BB0) 3CLTEXTCLASS org/eclipse/jface/bindings/keys/ParseException(0xDCCF4D80) 3CLTEXTCLASS org/eclipse/jface/bindings/Scheme(0xDCCF4ED8) 3CLTEXTCLASS org/eclipse/jface/bindings/keys/KeyLookupFactory(0xDCCF5250) 3CLTEXTCLASS org/eclipse/jface/bindings/keys/IKeyLookup(0xDCCF53C8) 3CLTEXTCLASS org/eclipse/jface/bindings/keys/SWTKeyLookup(0xDCCF58C0) 3CLTEXTCLASS org/eclipse/jface/bindings/Trigger(0xDCCF5FB8) 3CLTEXTCLASS org/eclipse/jface/bindings/keys/KeyStroke(0xDCCF60D8) 3CLTEXTCLASS [Lorg/eclipse/jface/bindings/keys/KeyStroke;(0xDCCF63E8) 3CLTEXTCLASS org/eclipse/jface/viewers/StructuredViewer(0xDCED3930) 3CLTEXTCLASS org/eclipse/jface/viewers/ColumnViewer(0xDCED4BF8) 3CLTEXTCLASS org/eclipse/jface/viewers/AbstractTreeViewer(0xDCED58E0) 3CLTEXTCLASS org/eclipse/jface/viewers/TreeViewer(0xDCED7038) 3CLTEXTCLASS org/eclipse/jface/dialogs/PopupDialog(0xDCED7F88) 3CLTEXTCLASS org/eclipse/jface/action/IContributionItem(0xDCED8E18) 3CLTEXTCLASS org/eclipse/jface/action/IAction(0xDCED8FD8) 3CLTEXTCLASS org/eclipse/jface/action/IContributionManager(0xDCED9308) 3CLTEXTCLASS org/eclipse/jface/action/IMenuManager(0xDCED94F8) 3CLTEXTCLASS org/eclipse/jface/layout/GridDataFactory(0xDCED9678) 3CLTEXTCLASS org/eclipse/jface/layout/GridLayoutFactory(0xDCED9AD8) 3CLTEXTCLASS org/eclipse/jface/layout/LayoutConstants(0xDCED9E70) 3CLTEXTCLASS org/eclipse/jface/resource/AbstractResourceManager$RefCount(0xDCEDA078) 3CLTEXTCLASS org/eclipse/jface/window/ToolTip$TooltipHideListener(0xDCEDA178) 3CLTEXTCLASS org/eclipse/jface/window/ToolTip$1(0xDCEDA360) 3CLTEXTCLASS org/eclipse/jface/window/ToolTip$ToolTipOwnerControlListener(0xDCEDA4A0) 3CLTEXTCLASS org/eclipse/jface/window/ToolTip$2(0xDCEDA650) 3CLTEXTCLASS org/eclipse/jface/dialogs/IDialogConstants(0xDCEDA7B0) 3CLTEXTCLASS org/eclipse/jface/dialogs/Dialog$2(0xDCEDAAC0) 3CLTEXTCLASS org/eclipse/jface/dialogs/TitleAreaDialog$1(0xDCEDAC18) 3CLTEXTCLASS org/eclipse/jface/util/Geometry(0xDCEDAD40) 3CLTEXTCLASS [Lorg/eclipse/jface/bindings/Trigger;(0xDCEDB240) 3CLTEXTCLASS org/eclipse/jface/action/IStatusLineManager(0xDCEDB2E0) 3CLTEXTCLASS org/eclipse/jface/bindings/keys/SWTKeySupport(0xDCEDB410) 3CLTEXTCLASS org/eclipse/jface/bindings/keys/formatting/IKeyFormatter(0xDCEDB690) 3CLTEXTCLASS org/eclipse/jface/window/ToolTip(0xDCE5C138) 3CLTEXTCLASS org/eclipse/jface/dialogs/TitleAreaDialog$3(0xDCE5CB18) 3CLTEXTCLASS org/eclipse/jface/dialogs/Dialog$1(0xDCE5CDA0) 3CLTEXTCLASS org/eclipse/jface/preference/IPersistentPreferenceStore(0xDCE5CEB8) 3CLTEXTCLASS org/eclipse/jface/window/SameShellProvider(0xDCE5CF88) 3CLTEXTCLASS org/eclipse/jface/window/Window$2(0xDCE5D0B8) 3CLTEXTCLASS org/eclipse/jface/window/Window$3(0xDCE5D1F0) 3CLTEXTCLASS org/eclipse/jface/window/Window$FontChangeListener(0xDCE5D338) 3CLTEXTCLASS org/eclipse/jface/resource/JFaceResources(0xDCE5D480) 3CLTEXTCLASS org/eclipse/jface/resource/DeviceResourceManager(0xDCE5DBF0) 3CLTEXTCLASS org/eclipse/jface/resource/ResourceRegistry(0xDCE5DE18) 3CLTEXTCLASS org/eclipse/jface/resource/FontRegistry(0xDCE5E038) 3CLTEXTCLASS org/eclipse/jface/resource/DataFormatException(0xDCE5E848) 3CLTEXTCLASS org/eclipse/jface/resource/FontRegistry$1(0xDCE5E988) 3CLTEXTCLASS org/eclipse/jface/util/Util(0xDCE5EAB0) 3CLTEXTCLASS org/eclipse/jface/resource/StringConverter(0xDCE5EF50) 3CLTEXTCLASS org/eclipse/jface/resource/FontRegistry$FontRecord(0xDCE5F6E0) 3CLTEXTCLASS org/eclipse/jface/dialogs/TitleAreaDialog$2(0xDCE5F920) 3CLTEXTCLASS org/eclipse/jface/resource/JFaceColors(0xDCE5FA68) 3CLTEXTCLASS org/eclipse/jface/resource/ImageRegistry(0xDCE5FC70) 3CLTEXTCLASS org/eclipse/jface/resource/ImageRegistry$OriginalImageDescriptor(0xDCE600C0) 3CLTEXTCLASS org/eclipse/jface/resource/ColorDescriptor(0xDCE60268) 3CLTEXTCLASS org/eclipse/jface/resource/RGBColorDescriptor(0xDCE60420) 3CLTEXTCLASS org/eclipse/jface/resource/FontDescriptor(0xDCE60608) 3CLTEXTCLASS org/eclipse/jface/resource/JFaceResources$1(0xDCE608F0) 3CLTEXTCLASS org/eclipse/jface/resource/ImageRegistry$1(0xDCE60A48) 3CLTEXTCLASS org/eclipse/jface/wizard/IWizard(0xDCE60B58) 3CLTEXTCLASS org/eclipse/jface/wizard/Wizard(0xDCE60DE8) 3CLTEXTCLASS org/eclipse/jface/resource/ImageRegistry$Entry(0xDCE61350) 3CLTEXTCLASS org/eclipse/jface/preference/IPreferencePageContainer(0xDCE61440) 3CLTEXTCLASS org/eclipse/jface/dialogs/IPageChangeProvider(0xDCE61520) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog(0xDCE617A0) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceDialog$PageLayout(0xDCE62AA8) 3CLTEXTCLASS org/eclipse/jface/viewers/IContentProvider(0xDCE62C78) 3CLTEXTCLASS org/eclipse/jface/viewers/ISelectionChangedListener(0xDCE62D38) 3CLTEXTCLASS org/eclipse/jface/viewers/ISelection(0xDCE62DE8) 3CLTEXTCLASS org/eclipse/jface/viewers/IInputProvider(0xDCE62E98) 3CLTEXTCLASS org/eclipse/jface/viewers/ISelectionProvider(0xDCE62F48) 3CLTEXTCLASS org/eclipse/jface/viewers/IInputSelectionProvider(0xDCE63028) 3CLTEXTCLASS org/eclipse/jface/viewers/Viewer(0xDCE63130) 3CLTEXTCLASS org/eclipse/jface/viewers/ContentViewer(0xDCE635C0) 3CLTEXTCLASS org/eclipse/jface/viewers/IPostSelectionProvider(0xDCE638E0) 3CLTEXTCLASS org/eclipse/jface/dialogs/IconAndMessageDialog(0xDCE63AA8) 3CLTEXTCLASS org/eclipse/jface/resource/ImageDataImageDescriptor(0xDD39E678) 3CLTEXTCLASS org/eclipse/jface/resource/DerivedImageDescriptor(0xDD39E880) 3CLTEXTCLASS org/eclipse/jface/resource/URLImageDescriptor(0xDD39EAB8) 3CLTEXTCLASS org/eclipse/jface/resource/DeviceResourceException(0xDD39EE30) 3CLTEXTCLASS org/eclipse/jface/resource/MissingImageDescriptor(0xDD39EFE8) 3CLTEXTCLASS org/eclipse/jface/dialogs/Dialog(0xDD39F208) 3CLTEXTCLASS org/eclipse/jface/dialogs/TrayDialog(0xDD39FEA8) 3CLTEXTCLASS org/eclipse/jface/dialogs/TitleAreaDialog(0xDD3A0878) 3CLTEXTCLASS org/eclipse/jface/resource/ResourceManager(0xDD3A11D0) 3CLTEXTCLASS org/eclipse/jface/resource/AbstractResourceManager(0xDD3A15F0) 3CLTEXTCLASS org/eclipse/jface/resource/LocalResourceManager(0xDD3A18C0) 3CLTEXTCLASS org/eclipse/jface/dialogs/IDialogBlockedHandler(0xDD3A1AA8) 3CLTEXTCLASS org/eclipse/jface/dialogs/TrayDialog$ResizeListener(0xDD3A1B98) 3CLTEXTCLASS org/eclipse/jface/bindings/keys/formatting/AbstractKeyFormatter(0xDD3A1D78) 3CLTEXTCLASS org/eclipse/jface/bindings/keys/formatting/NativeKeyFormatter(0xDD3A20D0) 3CLTEXTCLASS org/eclipse/jface/menus/IWidget(0xDD3A24A8) 3CLTEXTCLASS org/eclipse/jface/window/Window(0x1053E788) 3CLTEXTCLASS org/eclipse/jface/window/Window$IExceptionHandler(0x1053F0E0) 3CLTEXTCLASS org/eclipse/jface/util/IPropertyChangeListener(0x1053F190) 3CLTEXTCLASS org/eclipse/jface/window/Window$DefaultExceptionHandler(0x1053F260) 3CLTEXTCLASS org/eclipse/jface/window/Window$1(0x1053F398) 3CLTEXTCLASS org/eclipse/jface/bindings/IBindingManagerListener(0x1053F4C0) 3CLTEXTCLASS org/eclipse/jface/operation/IRunnableContext(0x1053F570) 3CLTEXTCLASS org/eclipse/jface/window/ApplicationWindow(0x1053F718) 3CLTEXTCLASS org/eclipse/jface/action/ExternalActionManager$IActiveChecker(0x1053FEC0) 3CLTEXTCLASS org/eclipse/jface/action/ExternalActionManager$IExecuteApplicable(0x1053FF70) 3CLTEXTCLASS org/eclipse/jface/action/ExternalActionManager$ICallback(0x10540020) 3CLTEXTCLASS org/eclipse/jface/viewers/IBaseLabelProvider(0x10540120) 3CLTEXTCLASS org/eclipse/jface/viewers/ILabelDecorator(0x10540200) 3CLTEXTCLASS org/eclipse/jface/viewers/IDelayedLabelDecorator(0x105402C8) 3CLTEXTCLASS org/eclipse/jface/resource/DeviceResourceDescriptor(0x105403A8) 3CLTEXTCLASS [Lorg/eclipse/jface/resource/ImageDescriptor;(0x105404B8) 3CLTEXTCLASS org/eclipse/jface/dialogs/IDialogPage(0x10540558) 3CLTEXTCLASS org/eclipse/jface/util/SafeRunnable(0x104F2D38) 3CLTEXTCLASS org/eclipse/jface/util/Policy(0x104F2FB0) 3CLTEXTCLASS org/eclipse/jface/util/Policy$2(0x104F32F8) 3CLTEXTCLASS org/eclipse/jface/window/IShellProvider(0x104F3458) 3CLTEXTCLASS org/eclipse/jface/resource/ImageDescriptor(0x104F3538) 3CLTEXTCLASS org/eclipse/jface/resource/FileImageDescriptor(0x104F38B8) 3CLTEXTCLASS org/eclipse/jface/dialogs/IMessageProvider(0x104F3C10) 3CLTEXTCLASS org/eclipse/jface/dialogs/IDialogSettings(0x101C9960) 3CLTEXTCLASS org/eclipse/jface/preference/PreferenceManager(0x101C9BC0) 3CLTEXTCLASS org/eclipse/jface/util/ISafeRunnableRunner(0x101C9F08) 3CLTEXTCLASS org/eclipse/jface/util/ILogger(0x101C9FB8) 3CLTEXTCLASS org/eclipse/jface/internal/JFaceActivator(0x10438948) 3CLTEXTCLASS org/eclipse/jface/internal/InternalPolicy(0x10438AC8) 3CLTEXTCLASS org/eclipse/jface/util/StatusHandler(0x10438BE8) 3CLTEXTCLASS org/eclipse/jface/preference/IPreferenceStore(0x10438600) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0B8D978) 3CLTEXTCLASS org/eclipse/ui/internal/UIPreferenceInitializer(0x1066A3B0) 3CLTEXTCLASS org/eclipse/ui/internal/UIPreferenceInitializer$1(0x1066A788) 3CLTEXTCLASS org/eclipse/ui/internal/UIPlugin$1(0x10549348) 3CLTEXTCLASS org/eclipse/ui/internal/UIPlugin(0x10543A60) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0BD2280) 3CLTEXTCLASS org/eclipse/core/commands/operations/DefaultOperationHistory(0xDCB60F40) 3CLTEXTCLASS org/eclipse/core/commands/operations/IUndoableOperation(0xDCB61A58) 3CLTEXTCLASS org/eclipse/core/commands/operations/OperationHistoryFactory(0xDCB61BD8) 3CLTEXTCLASS org/eclipse/core/commands/operations/IOperationApprover2(0xDCB61D00) 3CLTEXTCLASS org/eclipse/core/commands/operations/UndoContext(0xDCB61DD8) 3CLTEXTCLASS org/eclipse/core/commands/operations/ObjectUndoContext(0xDCB61F10) 3CLTEXTCLASS [Lorg/eclipse/core/commands/operations/IUndoableOperation;(0xDCB62130) 3CLTEXTCLASS org/eclipse/core/commands/contexts/ContextManagerEvent(0xDCB62200) 3CLTEXTCLASS org/eclipse/core/commands/ExecutionEvent(0xDCB623E0) 3CLTEXTCLASS org/eclipse/core/commands/operations/AbstractOperation(0xDCB62710) 3CLTEXTCLASS org/eclipse/core/commands/operations/LinearUndoViolationDetector(0xDCB62A58) 3CLTEXTCLASS [Lorg/eclipse/core/commands/operations/IUndoContext;(0xDCB62C00) 3CLTEXTCLASS org/eclipse/core/commands/operations/OperationHistoryEvent(0xDCB62CC8) 3CLTEXTCLASS org/eclipse/core/commands/operations/IAdvancedUndoableOperation(0xDCB62E88) 3CLTEXTCLASS org/eclipse/core/commands/operations/DefaultOperationHistory$2(0xDCB62F88) 3CLTEXTCLASS org/eclipse/core/commands/operations/ICompositeOperation(0xDCB63128) 3CLTEXTCLASS org/eclipse/core/commands/operations/IAdvancedUndoableOperation2(0xDCB631F0) 3CLTEXTCLASS org/eclipse/core/commands/operations/IContextReplacingOperation(0xDCB632C0) 3CLTEXTCLASS org/eclipse/core/commands/operations/TriggeredOperations(0xDCB633E8) 3CLTEXTCLASS org/eclipse/core/commands/operations/DefaultOperationHistory$1(0xDCB638F0) 3CLTEXTCLASS org/eclipse/core/commands/ParameterType(0xDCB1E200) 3CLTEXTCLASS org/eclipse/core/commands/IParameter(0xDCB1E5C8) 3CLTEXTCLASS org/eclipse/core/commands/AbstractParameterValueConverter(0xDCB1E6C8) 3CLTEXTCLASS org/eclipse/core/commands/State(0xDCB1E808) 3CLTEXTCLASS [Lorg/eclipse/core/commands/Category;(0xDCB1EA10) 3CLTEXTCLASS org/eclipse/core/internal/commands/util/Util(0xDCB1EAC8) 3CLTEXTCLASS [Lorg/eclipse/core/commands/Command;(0xDCB1EE28) 3CLTEXTCLASS org/eclipse/core/commands/Command$1(0xDCB1EEE8) 3CLTEXTCLASS org/eclipse/core/commands/ITypedParameter(0xDCB1F030) 3CLTEXTCLASS org/eclipse/core/commands/ParameterValuesException(0xDCB1F120) 3CLTEXTCLASS [Lorg/eclipse/core/commands/ParameterType;(0xDCB1F240) 3CLTEXTCLASS org/eclipse/core/commands/ParameterValueConversionException(0xDCB1F320) 3CLTEXTCLASS org/eclipse/core/commands/CommandManagerEvent(0xDCB1F480) 3CLTEXTCLASS org/eclipse/core/commands/contexts/IContextListener(0xDCB1F6D0) 3CLTEXTCLASS org/eclipse/core/commands/contexts/ContextManager(0xDCB1F7E0) 3CLTEXTCLASS org/eclipse/core/commands/contexts/ContextEvent(0xDCB1FC48) 3CLTEXTCLASS org/eclipse/core/commands/contexts/Context(0xDCB1FDF0) 3CLTEXTCLASS [Lorg/eclipse/core/commands/contexts/Context;(0xDCB20170) 3CLTEXTCLASS org/eclipse/core/commands/contexts/IContextManagerListener(0xDCB20210) 3CLTEXTCLASS org/eclipse/core/commands/ParameterizedCommand(0xDCB202F8) 3CLTEXTCLASS [Lorg/eclipse/core/commands/IParameter;(0xDCB20990) 3CLTEXTCLASS org/eclipse/core/commands/Parameterization(0xDCB20A50) 3CLTEXTCLASS [Lorg/eclipse/core/commands/Parameterization;(0xDCB20D28) 3CLTEXTCLASS org/eclipse/core/commands/IHandler(0xDCB20DC8) 3CLTEXTCLASS org/eclipse/core/commands/IHandler2(0xDCB20EC8) 3CLTEXTCLASS org/eclipse/core/commands/AbstractHandler(0xDCB20FD0) 3CLTEXTCLASS org/eclipse/core/commands/IStateListener(0xDCB21230) 3CLTEXTCLASS org/eclipse/core/commands/AbstractHandlerWithState(0xDCB21348) 3CLTEXTCLASS org/eclipse/core/commands/Command$2(0xDCB215C8) 3CLTEXTCLASS org/eclipse/core/commands/HandlerEvent(0xDCB21728) 3CLTEXTCLASS org/eclipse/core/commands/ICommandManagerListener(0xDCB21878) 3CLTEXTCLASS org/eclipse/core/commands/operations/IOperationHistoryListener(0xDCB21928) 3CLTEXTCLASS org/eclipse/core/commands/operations/IUndoContext(0xDCB219D8) 3CLTEXTCLASS org/eclipse/core/commands/operations/IOperationApprover(0xDCB21A98) 3CLTEXTCLASS org/eclipse/core/commands/operations/IOperationHistory(0xDCB21B58) 3CLTEXTCLASS org/eclipse/core/commands/NotEnabledException(0xDCB1C1C0) 3CLTEXTCLASS org/eclipse/core/commands/IHandlerListener(0xDCB1C2C8) 3CLTEXTCLASS org/eclipse/core/commands/common/HandleObjectManager(0xDCB1C3A8) 3CLTEXTCLASS org/eclipse/core/commands/ICategoryListener(0xDCB1C5A0) 3CLTEXTCLASS org/eclipse/core/commands/ICommandListener(0xDCB1C650) 3CLTEXTCLASS org/eclipse/core/commands/IParameterTypeListener(0xDCB1C700) 3CLTEXTCLASS org/eclipse/core/commands/CommandManager(0xDCB1C850) 3CLTEXTCLASS org/eclipse/core/commands/SerializationException(0xDCB1D160) 3CLTEXTCLASS org/eclipse/core/commands/IExecutionListener(0xDCB1D280) 3CLTEXTCLASS org/eclipse/core/commands/IExecutionListenerWithChecks(0xDCB1D360) 3CLTEXTCLASS org/eclipse/core/commands/common/AbstractBitSetEvent(0xDCB1D440) 3CLTEXTCLASS org/eclipse/core/commands/common/AbstractHandleObjectEvent(0xDCB1D538) 3CLTEXTCLASS org/eclipse/core/commands/common/AbstractNamedHandleEvent(0xDCB1D650) 3CLTEXTCLASS org/eclipse/core/commands/CategoryEvent(0xDCB1D7A0) 3CLTEXTCLASS org/eclipse/core/commands/Category(0xDCB1D910) 3CLTEXTCLASS org/eclipse/core/commands/CommandEvent(0xDCB1DC28) 3CLTEXTCLASS org/eclipse/core/commands/ParameterTypeEvent(0xDCB1DE68) 3CLTEXTCLASS org/eclipse/core/commands/Command(0xDDCE2AB0) 3CLTEXTCLASS org/eclipse/core/commands/common/CommandException(0xDDCE3508) 3CLTEXTCLASS org/eclipse/core/commands/common/NotDefinedException(0xDDCE3688) 3CLTEXTCLASS org/eclipse/core/commands/ExecutionException(0xDDCE37D0) 3CLTEXTCLASS org/eclipse/core/commands/common/NamedHandleObject(0xDE528E10) 3CLTEXTCLASS org/eclipse/core/commands/IObjectWithState(0xDE528FB8) 3CLTEXTCLASS org/eclipse/core/commands/NamedHandleObjectWithState(0xDE5290E8) 3CLTEXTCLASS org/eclipse/core/commands/NotHandledException(0xDE5293D0) 3CLTEXTCLASS org/eclipse/core/commands/common/IIdentifiable(0xDCE2B060) 3CLTEXTCLASS org/eclipse/core/commands/common/HandleObject(0xDCE2B148) 3CLTEXTCLASS org/eclipse/core/commands/common/EventManager(0x10541468) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0C59518) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/extensionlocation/SiteListener(0x106DEBA0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/extensionlocation/BundlePoolFilteredListener(0x106DF410) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/extensionlocation/ExtensionLocationArtifactRepositoryFactory(0x1064ACF0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/extensionlocation/ExtensionLocationArtifactRepository(0x1064AFE0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/extensionlocation/ExtensionLocationMetadataRepository(0x105CF458) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/extensionlocation/Messages(0x105CFA68) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/extensionlocation/Activator(0x10574B98) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/extensionlocation/Constants(0x10574E68) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/extensionlocation/ExtensionLocationMetadataRepositoryFactory(0x1055B9B8) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0C68508) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/updatesite/artifact/UpdateSiteArtifactRepositoryFactory(0x106523B0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/updatesite/UpdateSite(0x105F4088) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/updatesite/Activator(0x105E2538) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/updatesite/Messages(0x105E2700) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/updatesite/metadata/UpdateSiteMetadataRepositoryFactory(0x105E2100) 2CLTEXTCLLOAD Loader sun/reflect/DelegatingClassLoader(0xE037E050) 3CLTEXTCLASS sun/reflect/GeneratedMethodAccessor4(0x105E2D30) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE03B8F60) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepositoryIO$Parser$RepositoryHandler(0x104A01D0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepositoryIO$Parser$RepositoryDocHandler(0x104A05C8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepositoryIO$Parser$MappingRulesHandler(0x104A0830) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepositoryIO$Parser$MappingRuleHandler(0x104A0AF0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepositoryIO$Parser$ArtifactsHandler(0x104A0D28) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepositoryIO$Parser$ArtifactHandler(0x104A0FC0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/Mapper(0x104A12E8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/BlobStore(0x104A15E8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/Messages(0x104A1958) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/CompositeArtifactRepositoryFactory(0x104A1B48) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/CompositeArtifactRepository(0x104A2048) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepository(0x104961C8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactDescriptor(0x10497638) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepository$ZippedFolderOutputStream(0x10497880) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepository$ArtifactOutputStream(0x10497AC0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepositoryIO(0x10497DA8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepositoryFactory(0x102FBDC8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepositoryIO$XMLConstants(0x102FC1C0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepositoryIO$Writer(0x102FC3F0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepositoryIO$Parser(0x102FC810) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/ArtifactRepositoryManager(0x102F5B38) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/Activator(0x105B0818) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/artifact/repository/ArtifactRepositoryComponent(0x105B05D0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0428898) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/touchpoint/eclipse/Util(0xDD921F60) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/touchpoint/eclipse/AggregatedBundleRepository(0xDD922898) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/update/ConfigurationCache(0x106497F0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/update/ConfigurationCache$CacheEntry(0x106499D8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/update/Site(0x10649B00) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/update/Feature(0x10649F90) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/update/ConfigurationIO$CacheEntry(0x1064A320) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/update/ConfigurationConstants(0x102FE2C8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/update/ConfigurationParser(0x102FE460) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/touchpoint/eclipse/Activator(0x1065A698) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/update/ConfigurationIO(0x1065A800) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/update/Configuration(0x104A5B28) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0693F88) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/director/DirectorActivator(0xDDC8C560) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/p2/director/ProfileChangeRequest(0xDD930820) 3CLTEXTCLASS org/eclipse/equinox/p2/planner/IProfileChangeRequest(0xDDCBB1B8) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06CD108) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/garbagecollector/CoreGarbageCollector(0xDDC8EB88) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/garbagecollector/GarbageCollector(0xDDC8ED98) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/garbagecollector/GCActivator(0xDDC8E760) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/garbagecollector/GarbageCollectorComponent(0xDD924100) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0C01480) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEIdleHelper(0xDDCD8618) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEIdleHelper$3(0xDDCD8AB0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEIdleHelper$1(0xDDCD8DC8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEIdleHelper$2(0xDDCD8F90) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEWorkbenchWindowAdvisor$1(0xDDCD90D8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEWorkbenchWindowAdvisor$2(0xDDCD9238) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEWorkbenchWindowAdvisor$3(0xDDCD93B0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEWorkbenchWindowAdvisor$4(0xDDCD9530) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEWorkbenchWindowAdvisor$5(0xDDCD9730) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEWorkbenchAdvisor$3(0xDDCD9890) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEWorkbenchWindowAdvisor(0xDCEC1F70) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEWorkbenchAdvisor$CancelableProgressMonitorJobsDialog(0xDCEC2A88) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEWorkbenchAdvisor$2(0xDCEC2D58) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/DelayedEventsProcessor(0xDD3F6458) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEWorkbenchAdvisor$4(0xDD3F6718) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEWorkbenchAdvisor(0xDDCA1068) 3CLTEXTCLASS org/eclipse/ui/internal/ide/application/IDEApplication(0xDE5FAFF0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0C44FE0) 3CLTEXTCLASS org/eclipse/ui/dialogs/WizardDataTransferPage$1(0xD9196FC0) 3CLTEXTCLASS org/eclipse/ui/dialogs/WizardDataTransferPage$3(0xD91972E8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/dialogs/RelativePathVariableGroup$IModel(0xD91974F8) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/MinimizedFileSystemElement(0xD9197618) 3CLTEXTCLASS org/eclipse/ui/internal/ide/dialogs/IElementFilter(0xD9197818) 3CLTEXTCLASS org/eclipse/ui/internal/ide/filesystem/FileSystemStructureProvider(0xD9197908) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1$10(0xD9197BC8) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1$11(0xD9197CF8) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1$12(0xD9197E70) 3CLTEXTCLASS org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup(0xD91980A0) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1$14(0xD9198D50) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1$13(0xD9198F00) 3CLTEXTCLASS org/eclipse/ui/internal/ide/DialogUtil(0xD9199070) 3CLTEXTCLASS org/eclipse/ui/dialogs/WizardResourceImportPage$1(0xD9199240) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1$1(0xD9199370) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1$2(0xD91994A0) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1$3(0xD91995D8) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1$4(0xD9199710) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1$5(0xD9199840) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1$6(0xD9199970) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/wizards/datatransfer/MinimizedFileSystemElement;(0xD9199A98) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1$15(0xD9199B50) 3CLTEXTCLASS org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup$1(0xD9199CA8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup$2(0xD9199E20) 3CLTEXTCLASS org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup$5(0xD9199FF8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup$3(0xD919A140) 3CLTEXTCLASS org/eclipse/ui/internal/ide/dialogs/ResourceTreeAndListGroup$4(0xD919A2A0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/LineDelimiterEditor(0xD9274108) 3CLTEXTCLASS org/eclipse/ui/internal/ide/LineDelimiterEditor$1(0xD9274640) 3CLTEXTCLASS org/eclipse/ui/IMarkerResolutionGenerator2(0xD9274778) 3CLTEXTCLASS org/eclipse/ui/IMarkerResolution(0xD9274830) 3CLTEXTCLASS [Lorg/eclipse/ui/IMarkerResolution;(0xD9274908) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerCopyHandler(0xD9274A08) 3CLTEXTCLASS org/eclipse/ui/actions/RefreshAction$3(0xD9274C70) 3CLTEXTCLASS org/eclipse/ui/wizards/newresource/BasicNewResourceWizard(0xD9274EF8) 3CLTEXTCLASS org/eclipse/ui/wizards/newresource/BasicNewProjectResourceWizard(0xD9275340) 3CLTEXTCLASS org/eclipse/ui/dialogs/WizardNewProjectCreationPage(0xD9275D30) 3CLTEXTCLASS org/eclipse/ui/wizards/newresource/BasicNewProjectResourceWizard$1(0xD9276428) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/newresource/ResourceMessages(0xD9276658) 3CLTEXTCLASS org/eclipse/ui/wizards/newresource/BasicNewResourceWizard$1(0xD9276810) 3CLTEXTCLASS org/eclipse/ui/internal/ide/actions/LTKLauncher(0xD9276948) 3CLTEXTCLASS org/eclipse/ui/actions/OpenWithMenu(0xD9276C40) 3CLTEXTCLASS org/eclipse/ui/actions/OpenWithMenu$1(0xD92771A0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/undo/ContainerDescription(0xD9277320) 3CLTEXTCLASS org/eclipse/ui/internal/ide/undo/ProjectDescription(0xD92777A0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/undo/FolderDescription(0xD9277AB8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/undo/IFileContentDescription(0xD9277D60) 3CLTEXTCLASS org/eclipse/ui/internal/ide/undo/MarkerDescription(0xD9277E58) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/ide/undo/MarkerDescription;(0xD9278010) 3CLTEXTCLASS org/eclipse/ui/internal/ide/undo/FileDescription$1(0xD92780D0) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/FileMarkerPropertyTester(0xD9278258) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/QuickFixPropertyTester(0xD92783F8) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/EditablePropertyTester(0xD9278570) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerPropertyTester(0xD9278708) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/QuickFixHandler(0xD92789A8) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/QuickFixWizard(0xD9278D98) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/QuickFixHandler$QuickFixWizardDialog(0xD9279190) 3CLTEXTCLASS org/eclipse/ui/wizards/datatransfer/FileSystemImportWizard(0xD92794B0) 3CLTEXTCLASS org/eclipse/ui/dialogs/WizardDataTransferPage(0xD9279880) 3CLTEXTCLASS org/eclipse/ui/dialogs/WizardResourceImportPage(0xD927A138) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/WizardFileSystemResourceImportPage1(0xD927AD08) 3CLTEXTCLASS org/eclipse/ui/internal/ide/IDEWorkbenchErrorHandler$1(0xDA9E0348) 3CLTEXTCLASS org/eclipse/ui/actions/DeleteResourceAction(0xDA9E0698) 3CLTEXTCLASS org/eclipse/ui/actions/DeleteResourceAction$4(0xDA9E0D50) 3CLTEXTCLASS org/eclipse/ui/actions/DeleteResourceAction$5(0xDA9E10A8) 3CLTEXTCLASS org/eclipse/ui/actions/CopyProjectAction(0xDA9E1538) 3CLTEXTCLASS org/eclipse/ui/actions/MoveProjectAction(0xDA9E1C08) 3CLTEXTCLASS org/eclipse/ui/internal/ide/misc/DisjointSet(0xDA9E20A0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/misc/DisjointSet$Node(0xDA9E22C0) 3CLTEXTCLASS org/eclipse/ui/IStorageEditorInput(0xDA9E23A8) 3CLTEXTCLASS org/eclipse/ui/IFileEditorInput(0xDA9E2468) 3CLTEXTCLASS org/eclipse/ui/IURIEditorInput(0xDA9E2530) 3CLTEXTCLASS org/eclipse/ui/part/FileEditorInput(0xDA9E2638) 3CLTEXTCLASS org/eclipse/ui/part/FileEditorInputFactory(0xDA9E2B28) 3CLTEXTCLASS org/eclipse/ui/ide/FileStoreEditorInput(0xDA9E2D20) 3CLTEXTCLASS org/eclipse/ui/dialogs/SaveAsDialog(0xDA9E3168) 3CLTEXTCLASS org/eclipse/ui/ide/IGotoMarker(0xDA9E38E0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/model/FileInputAdapterFactory(0xDA9E39B0) 3CLTEXTCLASS org/eclipse/ui/actions/RefreshAction(0xDA9E3C78) 3CLTEXTCLASS org/eclipse/ui/actions/RefreshAction$1(0xDA9E43F8) 3CLTEXTCLASS org/eclipse/ui/actions/RefreshAction$4(0xDA9E4710) 3CLTEXTCLASS org/eclipse/ui/ide/ResourceUtil(0xDA9E49D8) 3CLTEXTCLASS org/eclipse/ui/actions/WorkspaceModifyDelegatingOperation(0xDA9E4D30) 3CLTEXTCLASS org/eclipse/ui/internal/ide/dialogs/ResourceInfoPage(0xDA9E4F90) 3CLTEXTCLASS org/eclipse/ui/internal/ide/dialogs/IDEResourceInfoUtils(0xDA9E5EA0) 3CLTEXTCLASS org/eclipse/ui/ide/dialogs/AbstractEncodingFieldEditor(0xDA9E65C0) 3CLTEXTCLASS org/eclipse/ui/ide/dialogs/ResourceEncodingFieldEditor(0xDA9E6DD8) 3CLTEXTCLASS org/eclipse/ui/ide/dialogs/ResourceEncodingFieldEditor$1(0xDA9E7458) 3CLTEXTCLASS org/eclipse/ui/ide/dialogs/ResourceEncodingFieldEditor$2(0xDA9E7768) 3CLTEXTCLASS org/eclipse/ui/ide/dialogs/AbstractEncodingFieldEditor$1(0xDA9E79F0) 3CLTEXTCLASS org/eclipse/ui/ide/dialogs/AbstractEncodingFieldEditor$2(0xDA9E7B40) 3CLTEXTCLASS org/eclipse/ui/ide/dialogs/AbstractEncodingFieldEditor$3(0xDA9E7C70) 3CLTEXTCLASS org/eclipse/ui/ide/IDEEncoding(0xDA9E7D98) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerFieldFilterGroup(0xDBFD30B8) 3CLTEXTCLASS org/eclipse/ui/views/markers/MarkerFieldFilter(0xDBFD3A78) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerEntry$1(0xDBFD3C10) 3CLTEXTCLASS org/eclipse/ui/internal/ide/actions/OpenLocalFileAction(0xDBFD3E48) 3CLTEXTCLASS org/eclipse/ui/internal/ide/IDESelectionConversionService(0xDBFD4220) 3CLTEXTCLASS org/eclipse/ui/wizards/datatransfer/IImportStructureProvider(0xDBFD4420) 3CLTEXTCLASS org/eclipse/ui/wizards/datatransfer/ZipFileStructureProvider(0xDBFD4550) 3CLTEXTCLASS org/eclipse/ui/wizards/datatransfer/FileSystemStructureProvider(0xDBFD48E8) 3CLTEXTCLASS org/eclipse/ui/actions/WorkspaceModifyOperation(0xDBFD4B40) 3CLTEXTCLASS org/eclipse/ui/wizards/datatransfer/ImportOperation(0xDBFD4DF8) 3CLTEXTCLASS org/eclipse/ui/actions/WorkspaceModifyOperation$1(0xDBFD5858) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/DataTransferMessages(0xDBFD59C0) 3CLTEXTCLASS org/eclipse/ui/dialogs/ContainerGenerator(0xDBFD5CF0) 3CLTEXTCLASS org/eclipse/ui/dialogs/ContainerGenerator$1(0xDBFD6010) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/TarEntry(0xDBFD6278) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/ILeveledImportStructureProvider(0xDBFD6498) 3CLTEXTCLASS org/eclipse/ui/internal/wizards/datatransfer/TarLeveledStructureProvider(0xDBFD65D0) 3CLTEXTCLASS org/eclipse/ui/IContributorResourceAdapter(0xDBFD6A78) 3CLTEXTCLASS org/eclipse/ui/ide/IContributorResourceAdapter2(0xDBFD6B28) 3CLTEXTCLASS org/eclipse/ui/views/tasklist/ITaskListResourceAdapter(0xDBFD6BE0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/registry/ProjectImageRegistry(0xDBFD6CB0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/registry/IDERegistryReader(0xDBFD6E78) 3CLTEXTCLASS org/eclipse/ui/internal/ide/registry/ProjectImageRegistryReader(0xDBFD7278) 3CLTEXTCLASS org/eclipse/ui/internal/ide/registry/IDERegistryReader$1(0xDBFD7468) 3CLTEXTCLASS org/eclipse/ui/internal/ide/LinkedResourceDecorator(0xDBFD75A0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/VirtualResourceDecorator(0xDBFD77D8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/DefaultContributorResourceAdapter(0xDBFD79C8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/ContentTypeDecorator(0xDBFD7BD8) 3CLTEXTCLASS org/eclipse/ui/ide/undo/WorkspaceUndoUtil(0xDBFD7DE0) 3CLTEXTCLASS org/eclipse/ui/ide/undo/ResourceDescription(0xDBFD8608) 3CLTEXTCLASS org/eclipse/ui/internal/ide/undo/AbstractResourceDescription(0xDBFD8840) 3CLTEXTCLASS org/eclipse/ui/internal/ide/undo/FileDescription(0xDBFD8B10) 3CLTEXTCLASS org/eclipse/ui/ide/undo/WorkspaceUndoUtil$2(0xDBFD8FD8) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/MarkerGroup$1(0xDBFD91F0) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerComparator$2(0xDBFD9318) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerSortUtil(0xDBFD9448) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MockMarkerEntry(0xDBFD9728) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerShowInAdapter(0xDBFD98B8) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerShowInAdapter$1(0xDBFD9A80) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkersViewPropertyTester(0xDBFD9C40) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerPreferencesHandler(0xDBFD9E58) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerSelectAllHandler(0xDBFDA018) 3CLTEXTCLASS org/eclipse/ui/internal/ide/registry/MarkerHelpRegistry(0xDBFDA190) 3CLTEXTCLASS org/eclipse/ui/IMarkerResolutionGenerator(0xDBFDA5E8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/registry/MarkerHelpRegistryReader(0xDBFDA6E0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/registry/MarkerQuery(0xDBFDA9C8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/registry/MarkerQueryResult(0xDBFDABE0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/registry/MarkerHelpRegistry$QueryComparator(0xDBFDAD58) 3CLTEXTCLASS org/eclipse/ui/internal/ide/dialogs/ResourceInfoPage$2(0xDBFDAEA8) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerCompletionField(0xDBF8CF58) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerCompletionField$CompletionEditingSupport(0xDBF8D210) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerPriorityField(0xDBF8D450) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerPriorityField$PriorityEditingSupport(0xDBF8D740) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerTypeField(0xDBF8D998) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/MarkerTypesModel(0xDBF8DAE0) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/MarkerType(0xDBF8DDF8) 3CLTEXTCLASS [Lorg/eclipse/ui/views/markers/internal/MarkerType;(0xDBF8E0C8) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerSeverityAndDescriptionField(0xDBF8E1B8) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerSupportInternalUtilities(0xDBF8E388) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerEntry(0xDBF8EA28) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/views/markers/MarkerSupportItem;(0xDBF8F080) 3CLTEXTCLASS [Lorg/eclipse/ui/views/markers/MarkerField;(0xDBF8F138) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/CachedMarkerBuilder(0xDBF8F298) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerUpdateJob(0xDBF8FDD8) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/SortingJob(0xDBF90310) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/Markers(0xDBF905E8) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/views/markers/MarkerCategory;(0xDBF90B58) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/views/markers/MarkerEntry;(0xDBF90C10) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkersChangeListener(0xDBF90CE8) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerUpdateScheduler(0xDBF91110) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerUpdateScheduler$MarkerUpdateTimer(0xDBF91440) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerContentGenerator(0xDBF91700) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerContentGenerator$1(0xDBF923A0) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/TypeMarkerGroup$TypeMarkerField(0xDBF92530) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/TypeMarkerGroup$TypesMarkerGroupingEntry(0xDBF92758) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/AbstractField(0xDBF92890) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/FieldCategory(0xDBF92A30) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/ExtendedMarkersView$5(0xDBF92CC0) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerComparator(0xDBF92E40) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerViewerContentProvider(0xDBF93190) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/ExtendedMarkersView$ViewerPageSelectionListener(0xDBF93398) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/ExtendedMarkersView$6(0xDBF935B0) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/ExtendedMarkersView$4(0xDBF93808) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/ExtendedMarkersView$3(0xDBF93978) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/ExtendedMarkersView$2(0xDBF93AE0) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/ExtendedMarkersView$1(0xDBF93CC8) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/ExtendedMarkersView$7(0xDBF93E10) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerResourceUtil(0xDBF93F48) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/CachedMarkerBuilder$WorkingSetListener(0xDBF94488) 3CLTEXTCLASS org/eclipse/ui/model/WorkbenchContentProvider(0xDBF946A8) 3CLTEXTCLASS org/eclipse/ui/views/navigator/ResourceComparator(0xDBF94A88) 3CLTEXTCLASS org/eclipse/ui/views/framelist/TreeViewerFrameSource(0xDBF55C58) 3CLTEXTCLASS org/eclipse/ui/views/framelist/Frame(0xDBF55F90) 3CLTEXTCLASS org/eclipse/ui/views/framelist/TreeFrame(0xDBF561B0) 3CLTEXTCLASS org/eclipse/ui/views/framelist/FrameList(0xDBF56620) 3CLTEXTCLASS org/eclipse/ui/views/framelist/TreeViewerFrameSource$1(0xDBF56968) 3CLTEXTCLASS org/eclipse/ui/views/framelist/GoIntoAction(0xDBF56B48) 3CLTEXTCLASS org/eclipse/ui/views/framelist/FrameAction$1(0xDBF56DD8) 3CLTEXTCLASS org/eclipse/ui/internal/views/framelist/FrameListMessages(0xDBF56F08) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/ProblemsView(0xDBF57210) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkersTreeViewer(0xDBF577B8) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerColumnLabelProvider(0xDBF57D10) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/UIUpdateJob(0xDBF58030) 3CLTEXTCLASS org/eclipse/ui/views/markers/MarkerItem(0xDBF58488) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerSupportItem(0xDBF58628) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerCategory(0xDBF58858) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/MarkerSupportRegistry(0xDBF58BB0) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/MarkerFilter(0xDBF59700) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/ProblemFilter(0xDBF5A0F8) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/MarkerGroup(0xDBF5A688) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/AttributeMarkerGrouping(0xDBF5ACB0) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/TypeMarkerGroup(0xDBF5AF20) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/IField(0xDBF5B188) 3CLTEXTCLASS org/eclipse/ui/views/markers/MarkerField(0xDBF5B330) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/MarkerGroup$GroupMarkerField(0xDBF5B760) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/MarkerGroup$EntryMapping(0xDBF5B940) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/MarkerGroup$AttributeMapping(0xDBF5BA70) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/MarkerGroupingEntry(0xDBF5BC28) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/MarkerMessages(0xDBF5BE38) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/MarkerGroup$FieldGroup(0xDBF5C340) 3CLTEXTCLASS org/eclipse/ui/views/markers/internal/ContentGeneratorDescriptor(0xDBF5C600) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerCreationTimeField(0xDBF5CAE0) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerDescriptionField(0xDBF5CD00) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerProblemSeverityAndMessageField(0xDBF5CF30) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerDescriptionField$DescriptionEditingSupport(0xDBF5D168) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerResourceField(0xDBF5D3A8) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerPathField(0xDBF5D568) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerLocationField(0xDBF5D738) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/MarkerIDField(0xDBF5D920) 3CLTEXTCLASS org/eclipse/ui/internal/ide/actions/BuildCleanAction(0xDC837998) 3CLTEXTCLASS org/eclipse/ui/internal/ide/actions/ToggleAutoBuildAction(0xDC837C60) 3CLTEXTCLASS org/eclipse/ui/internal/ide/AboutInfo(0xDC837F08) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/ide/AboutInfo;(0xDC8383E0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/TipsAndTricksAction(0xDC838550) 3CLTEXTCLASS org/eclipse/ui/internal/ide/actions/OpenWorkspaceAction(0xDC838A10) 3CLTEXTCLASS org/eclipse/ui/internal/ide/ChooseWorkspaceWithSettingsDialog(0xDC838F60) 3CLTEXTCLASS org/eclipse/ui/internal/ide/actions/OpenWorkspaceAction$1(0xDC8395F0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/actions/ProjectPropertyDialogAction(0xDC839960) 3CLTEXTCLASS org/eclipse/ui/internal/ide/actions/QuickMenuAction$1(0xDC839DD0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/actions/BuildSetMenu(0xDC839F50) 3CLTEXTCLASS org/eclipse/ui/internal/ide/actions/BuildSetMenu$1(0xDC83A2D8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/actions/SelectBuildWorkingSetAction(0xDC83A4B8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/WorkbenchActionBuilder$8(0xDC83A750) 3CLTEXTCLASS org/eclipse/ui/internal/ide/WorkbenchActionBuilder$1(0xDC83AA80) 3CLTEXTCLASS org/eclipse/ui/internal/ide/WorkbenchActionBuilder$2(0xDC83AC10) 3CLTEXTCLASS org/eclipse/ui/internal/ide/WorkbenchActionBuilder$3(0xDC83AD68) 3CLTEXTCLASS org/eclipse/ui/internal/ide/WorkbenchActionBuilder$5(0xDC83AF20) 3CLTEXTCLASS org/eclipse/ui/actions/SelectionListenerAction(0xDC83B148) 3CLTEXTCLASS org/eclipse/ui/actions/WorkspaceAction(0xDC83B6A0) 3CLTEXTCLASS org/eclipse/ui/actions/BuildAction(0xDC83BE18) 3CLTEXTCLASS org/eclipse/ui/actions/WorkspaceAction$2(0xDC83C540) 3CLTEXTCLASS org/eclipse/ui/views/navigator/LocalSelectionTransfer(0xDC83C7D0) 3CLTEXTCLASS org/eclipse/ui/views/framelist/IFrameSource(0xDC83C9D8) 3CLTEXTCLASS org/eclipse/ui/views/framelist/FrameAction(0xDC83CB60) 3CLTEXTCLASS org/eclipse/ui/views/framelist/UpAction(0xDC83CE58) 3CLTEXTCLASS org/eclipse/ui/views/framelist/BackAction(0xDC83D228) 3CLTEXTCLASS org/eclipse/ui/views/framelist/ForwardAction(0xDC83D5E8) 3CLTEXTCLASS org/eclipse/ui/actions/AddBookmarkAction(0xDC83D9B8) 3CLTEXTCLASS org/eclipse/ui/actions/CloseResourceAction(0xDC83DF50) 3CLTEXTCLASS org/eclipse/ui/actions/CloseUnrelatedProjectsAction(0xDC83E608) 3CLTEXTCLASS org/eclipse/ui/actions/OpenResourceAction(0xDC83EC88) 3CLTEXTCLASS org/eclipse/ui/actions/OpenResourceAction$1(0xDC83F338) 3CLTEXTCLASS org/eclipse/ui/internal/ide/model/WorkbenchFile(0xDDCE4AA0) 3CLTEXTCLASS org/eclipse/ui/IMarkerActionFilter(0xDDCE4CA0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/model/WorkbenchMarker(0xDDCE4DD0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/model/ResourceFactory(0xDDCE4F98) 3CLTEXTCLASS org/eclipse/ui/internal/ide/model/WorkspaceFactory(0xDDCE51F0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/model/StandardPropertiesAdapterFactory(0xDDCE5358) 3CLTEXTCLASS org/eclipse/ui/internal/ide/IDEWorkbenchActivityHelper(0xDDCE5538) 3CLTEXTCLASS org/eclipse/ui/internal/ide/IDEWorkbenchActivityHelper$4(0xDDCE5AA8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/IDEWorkbenchActivityHelper$1(0xDDCE5CE0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/IDEWorkbenchActivityHelper$2(0xDDCE5E38) 3CLTEXTCLASS org/eclipse/ui/internal/ide/IDEWorkbenchActivityHelper$3(0xDDCE5F88) 3CLTEXTCLASS org/eclipse/ui/internal/ide/undo/WorkspaceUndoMonitor(0xDDCE6140) 3CLTEXTCLASS org/eclipse/ui/internal/ide/Policy(0xDDCE65E0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/undo/WorkspaceUndoMonitor$1(0xDDCE67E0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/undo/WorkspaceUndoMonitor$2(0xDDCE6940) 3CLTEXTCLASS org/eclipse/ui/internal/ide/IDEInternalWorkbenchImages(0xDDCE6AA8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/WorkbenchActionBuilder(0xDDCE6D88) 3CLTEXTCLASS org/eclipse/ui/part/ResourceTransfer(0xDDCE8448) 3CLTEXTCLASS org/eclipse/ui/part/MarkerTransfer(0xDDCE8850) 3CLTEXTCLASS org/eclipse/ui/internal/ide/EditorAreaDropAdapter(0xDDCE8C68) 3CLTEXTCLASS org/eclipse/ui/internal/ide/actions/QuickMenuAction(0xDDCE9160) 3CLTEXTCLASS org/eclipse/ui/internal/ide/WorkbenchActionBuilder$6(0xDDCE94E8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/WorkbenchActionBuilder$7(0xDDCE9788) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory(0xDDCE9980) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$1(0xDDCE9D88) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$2(0xDDCE9F20) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$3(0xDDCEA0B8) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$4(0xDDCEA268) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$5(0xDDCEA3C0) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$6(0xDDCEA528) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$7(0xDDCEA6C8) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$8(0xDDCEA858) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$9(0xDDCEA9F0) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$10(0xDDCEAB70) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$11(0xDDCEAD08) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$12(0xDDCEAE60) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$13(0xDDCEAFB8) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$14(0xDDCEB110) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$15(0xDDCEB268) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$16(0xDDCEB400) 3CLTEXTCLASS org/eclipse/ui/internal/ide/actions/RetargetActionWithDefault(0xDDCEB620) 3CLTEXTCLASS org/eclipse/ui/actions/NewWizardMenu(0xDDCEB898) 3CLTEXTCLASS org/eclipse/ui/actions/NewExampleAction(0xDDCEBCE8) 3CLTEXTCLASS org/eclipse/ui/actions/NewProjectAction(0xDDCEC150) 3CLTEXTCLASS org/eclipse/ui/ide/IDEActionFactory$WorkbenchCommandAction(0xDDCEC5A8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/actions/BuildUtilities(0xDDCEC758) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/ExtendedMarkersView(0x106762C8) 3CLTEXTCLASS org/eclipse/ui/views/markers/MarkerSupportView(0x10677A58) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/ConfigureContentsDialogHandler(0x10677D00) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/ConfigureColumnsHandler(0x10677EB0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/commands/CopyBuildIdToClipboardHandler(0x10678078) 3CLTEXTCLASS org/eclipse/ui/internal/ide/commands/CopyConfigToClipboardHandler(0x10678280) 3CLTEXTCLASS org/eclipse/ui/ide/IDE(0x10678430) 3CLTEXTCLASS org/eclipse/ui/IMarkerHelpRegistry(0x10678EE0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/model/WorkbenchAdapterFactory(0x10678FE0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/model/WorkbenchWorkspace(0x10679428) 3CLTEXTCLASS org/eclipse/ui/internal/ide/model/WorkbenchRootResource(0x106795A0) 3CLTEXTCLASS org/eclipse/ui/IResourceActionFilter(0x10679710) 3CLTEXTCLASS org/eclipse/ui/internal/ide/model/WorkbenchResource(0x10679880) 3CLTEXTCLASS org/eclipse/ui/IProjectActionFilter(0x10679C28) 3CLTEXTCLASS org/eclipse/ui/internal/ide/model/WorkbenchProject(0x10679D28) 3CLTEXTCLASS org/eclipse/ui/internal/ide/IDEWorkbenchMessages(0xDCE860F0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/ChooseWorkspaceDialog$2(0xDCE86E58) 3CLTEXTCLASS org/eclipse/ui/internal/ide/ChooseWorkspaceDialog$3(0xDCE86FE0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/ChooseWorkspaceDialog$4(0xDCE87198) 3CLTEXTCLASS org/eclipse/ui/internal/ide/IDEWorkbenchErrorHandler(0xDCE872F0) 3CLTEXTCLASS org/eclipse/ui/internal/ide/handlers/OpenResourceHandler(0xDCE87908) 3CLTEXTCLASS org/eclipse/ui/internal/ide/handlers/BuildAllProjectsHandler(0xDCE87D98) 3CLTEXTCLASS org/eclipse/ui/internal/ide/IDEPreferenceInitializer(0xDCE6AD48) 3CLTEXTCLASS org/eclipse/ui/internal/ide/handlers/ShowResourceByPathHandler(0xDCE6B028) 3CLTEXTCLASS org/eclipse/ui/views/markers/MarkerViewHandler(0xDCE6B260) 3CLTEXTCLASS org/eclipse/ui/internal/views/markers/OpenMarkersViewHandler(0xDCE6B548) 3CLTEXTCLASS org/eclipse/ui/internal/ide/misc/OverlayIcon(0xDCE6B7F8) 3CLTEXTCLASS org/eclipse/ui/internal/ide/model/WorkbenchFolder(0xDCE6BA68) 3CLTEXTCLASS org/eclipse/ui/internal/ide/ChooseWorkspaceData(0xDCE6A498) 3CLTEXTCLASS org/eclipse/ui/internal/ide/IDEWorkbenchPlugin(0xDD3B4410) 3CLTEXTCLASS org/eclipse/ui/internal/ide/ChooseWorkspaceDialog(0xDD3B3B40) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE04AFB38) 3CLTEXTCLASS org/eclipse/core/internal/resources/mapping/ResourceChangeDescriptionFactory(0x110AFE40) 3CLTEXTCLASS org/eclipse/core/internal/resources/mapping/ProposedResourceDelta(0x110B0278) 3CLTEXTCLASS org/eclipse/core/internal/localstore/CollectSyncStatusVisitor(0x110B07B0) 3CLTEXTCLASS org/eclipse/core/internal/localstore/IsSynchronizedVisitor(0x110B0AC0) 3CLTEXTCLASS [Lorg/eclipse/core/internal/resources/mapping/ProposedResourceDelta;(0x110B0C58) 3CLTEXTCLASS org/eclipse/core/internal/resources/mapping/ChangeDescription(0x110B0D18) 3CLTEXTCLASS org/eclipse/core/resources/mapping/ResourceChangeValidator$1(0x110B1068) 3CLTEXTCLASS [Lorg/eclipse/core/resources/mapping/IModelProviderDescriptor;(0x110B1198) 3CLTEXTCLASS [Lorg/eclipse/core/resources/mapping/ModelProvider;(0x110B1250) 3CLTEXTCLASS org/eclipse/core/resources/mapping/ModelStatus(0x110B1340) 3CLTEXTCLASS org/eclipse/core/internal/localstore/DeleteVisitor(0x110B14B8) 3CLTEXTCLASS org/eclipse/core/internal/resources/LinkDescription(0x110B18F8) 3CLTEXTCLASS org/eclipse/core/internal/watson/ElementTreeWriter(0x10A6EFF8) 3CLTEXTCLASS org/eclipse/core/internal/dtree/IDataFlattener(0x10A6F2D0) 3CLTEXTCLASS org/eclipse/core/internal/watson/ElementTreeWriter$1(0x10A6F3B0) 3CLTEXTCLASS org/eclipse/core/internal/dtree/DataTreeWriter(0x10A6F528) 3CLTEXTCLASS org/eclipse/core/internal/resources/SaveManager$4(0x10A6F770) 3CLTEXTCLASS org/eclipse/core/internal/resources/ContentDescriptionManager$1(0x10A6F978) 3CLTEXTCLASS org/eclipse/core/internal/resources/Workspace$1(0x10A6FB18) 3CLTEXTCLASS org/eclipse/core/internal/resources/ComputeProjectOrder(0x10A6FC50) 3CLTEXTCLASS org/eclipse/core/internal/resources/ComputeProjectOrder$Digraph(0x10A6FE20) 3CLTEXTCLASS org/eclipse/core/internal/resources/ComputeProjectOrder$Digraph$Vertex(0x10A70170) 3CLTEXTCLASS [[Lorg/eclipse/core/resources/IProject;(0x10A702C0) 3CLTEXTCLASS org/eclipse/core/resources/IWorkspace$ProjectOrder(0x10A70378) 3CLTEXTCLASS org/eclipse/core/internal/events/BuildManager$1(0x10A70488) 3CLTEXTCLASS org/eclipse/core/internal/events/BuildManager$2(0x10A706D8) 3CLTEXTCLASS org/eclipse/core/internal/resources/MarkerManager$4(0x10A70968) 3CLTEXTCLASS org/eclipse/core/internal/resources/MarkerAttributeMap(0x10A70AF0) 3CLTEXTCLASS org/eclipse/core/internal/resources/MarkerSet(0x10A70F60) 3CLTEXTCLASS [Lorg/eclipse/core/internal/resources/IMarkerSetElement;(0x10A71290) 3CLTEXTCLASS org/eclipse/core/internal/resources/MarkerDelta(0x10A71378) 3CLTEXTCLASS org/eclipse/core/internal/resources/Marker(0x10A717A8) 3CLTEXTCLASS org/eclipse/core/internal/resources/Workspace$2(0x10A71D28) 3CLTEXTCLASS org/eclipse/core/internal/localstore/CopyVisitor(0x10A71E90) 3CLTEXTCLASS org/eclipse/core/internal/resources/MarkerManager$2(0x10A72410) 3CLTEXTCLASS org/eclipse/core/resources/mapping/ResourceMappingContext(0x10A72560) 3CLTEXTCLASS org/eclipse/core/resources/mapping/RemoteResourceMappingContext(0x10A726A8) 3CLTEXTCLASS org/eclipse/core/internal/resources/ProjectDescriptionReader(0x10A728B8) 3CLTEXTCLASS org/eclipse/core/internal/resources/Synchronizer$1(0x10A73640) 3CLTEXTCLASS org/eclipse/core/internal/resources/Synchronizer$2(0x10A737C0) 3CLTEXTCLASS org/eclipse/core/internal/resources/Resource$2(0x10A73910) 3CLTEXTCLASS [Lorg/eclipse/core/resources/IContainer;(0x10A73A50) 3CLTEXTCLASS org/eclipse/core/resources/IResourceStatus(0x10A73AF0) 3CLTEXTCLASS org/eclipse/core/internal/resources/ResourceStatus(0x10A73C98) 3CLTEXTCLASS org/eclipse/core/resources/mapping/ResourceTraversal(0x10A73F48) 3CLTEXTCLASS [Lorg/eclipse/core/resources/mapping/ResourceTraversal;(0x10A74208) 3CLTEXTCLASS org/eclipse/core/resources/mapping/ModelProvider(0x10A742E8) 3CLTEXTCLASS org/eclipse/core/internal/resources/mapping/ModelProviderManager(0x10A746A8) 3CLTEXTCLASS org/eclipse/core/resources/mapping/IModelProviderDescriptor(0x10A74920) 3CLTEXTCLASS org/eclipse/core/internal/resources/mapping/ModelProviderDescriptor(0x10A74A58) 3CLTEXTCLASS org/eclipse/core/internal/resources/mapping/ResourceModelProvider(0x10A74F30) 3CLTEXTCLASS org/eclipse/core/internal/events/BuilderPersistentInfo(0x10A75150) 3CLTEXTCLASS [Lorg/eclipse/core/internal/watson/ElementTree;(0x10A75330) 3CLTEXTCLASS org/eclipse/core/internal/watson/DefaultElementComparator(0x10A753F0) 3CLTEXTCLASS org/eclipse/core/internal/resources/ResourceTree(0x10A755B0) 3CLTEXTCLASS org/eclipse/core/internal/propertytester/ResourcePropertyTester(0x10A760A0) 3CLTEXTCLASS org/eclipse/core/internal/propertytester/ProjectPropertyTester(0x10A763D0) 3CLTEXTCLASS [Lorg/eclipse/core/resources/mapping/ResourceMapping;(0x10A76538) 3CLTEXTCLASS org/eclipse/core/internal/propertytester/ResourceMappingPropertyTester(0x10A76618) 3CLTEXTCLASS [Lorg/eclipse/core/resources/IFolder;(0x10A767A8) 3CLTEXTCLASS org/eclipse/core/internal/resources/Project$1(0x10A76860) 3CLTEXTCLASS [Lorg/eclipse/core/internal/resources/MarkerDelta;(0x10A76AD8) 3CLTEXTCLASS org/eclipse/core/resources/mapping/ResourceChangeValidator(0x10A76B98) 3CLTEXTCLASS org/eclipse/core/internal/resources/ProjectPathVariableManager(0x10710CC8) 3CLTEXTCLASS org/eclipse/core/internal/resources/ProjectVariableProviderManager(0x10711528) 3CLTEXTCLASS org/eclipse/core/internal/resources/ProjectVariableProviderManager$Descriptor(0x107117C0) 3CLTEXTCLASS org/eclipse/core/resources/variableresolvers/PathVariableResolver(0x10711A00) 3CLTEXTCLASS org/eclipse/core/internal/resources/projectvariables/EclipseHomeProjectVariable(0x10711B18) 3CLTEXTCLASS org/eclipse/core/internal/resources/projectvariables/ProjectLocationVariableResolver(0x10711CB8) 3CLTEXTCLASS org/eclipse/core/internal/resources/projectvariables/WorkspaceLocationVariableResolver(0x10711E40) 3CLTEXTCLASS org/eclipse/core/internal/resources/projectvariables/ParentVariableResolver(0x10711FD8) 3CLTEXTCLASS org/eclipse/core/internal/resources/projectvariables/WorkspaceParentLocationVariableResolver(0x10712190) 3CLTEXTCLASS [Lorg/eclipse/core/internal/resources/ProjectVariableProviderManager$Descriptor;(0x10712310) 3CLTEXTCLASS org/eclipse/core/internal/resources/ModelObjectWriter(0x10712400) 3CLTEXTCLASS org/eclipse/core/internal/resources/XMLWriter(0x10712C38) 3CLTEXTCLASS org/eclipse/core/internal/events/BuildCommand(0x10713050) 3CLTEXTCLASS org/eclipse/core/internal/utils/BitMask(0x10713478) 3CLTEXTCLASS org/eclipse/core/internal/utils/ObjectMap(0x107135A8) 3CLTEXTCLASS org/eclipse/core/internal/events/NotificationManager$2(0x10713A00) 3CLTEXTCLASS org/eclipse/core/internal/localstore/UnifiedTree(0x10713BC0) 3CLTEXTCLASS org/eclipse/core/internal/localstore/UnifiedTreeNode(0x10714498) 3CLTEXTCLASS [Lorg/eclipse/core/internal/resources/Resource;(0x10714818) 3CLTEXTCLASS org/eclipse/core/resources/ProjectScope(0x107148D8) 3CLTEXTCLASS org/eclipse/core/internal/resources/Workspace$6(0x10714B20) 3CLTEXTCLASS org/eclipse/core/resources/ResourceAttributes(0x10714CE8) 3CLTEXTCLASS org/eclipse/core/internal/properties/PropertyBucket$1(0x10714F80) 3CLTEXTCLASS org/eclipse/core/internal/resources/NatureManager$1(0x107150A8) 3CLTEXTCLASS org/eclipse/core/internal/resources/ProjectPreferences$SortedProperties$IteratorWrapper(0x107152B8) 3CLTEXTCLASS org/eclipse/core/internal/resources/ProjectPreferences$2(0x10715410) 3CLTEXTCLASS [Lorg/eclipse/core/resources/IResourceDelta;(0x10715640) 3CLTEXTCLASS org/eclipse/core/internal/resources/MarkerManager$1$MaxSeverityVisitor(0x107156F8) 3CLTEXTCLASS org/eclipse/core/resources/mapping/ResourceMapping(0x10715890) 3CLTEXTCLASS [Lorg/eclipse/core/resources/IFile;(0x10715B18) 3CLTEXTCLASS org/eclipse/core/internal/resources/mapping/ResourceAdapterFactory(0x10715BD8) 3CLTEXTCLASS org/eclipse/core/internal/resources/mapping/SimpleResourceMapping(0x10715DA0) 3CLTEXTCLASS org/eclipse/core/internal/resources/ProjectContentTypes$ProjectContentTypeSelectionPolicy(0x10715FD0) 3CLTEXTCLASS org/eclipse/core/internal/utils/Cache$Entry(0x10716270) 3CLTEXTCLASS org/eclipse/core/internal/localstore/HistoryStore2(0x107165E0) 3CLTEXTCLASS org/eclipse/core/internal/localstore/HistoryBucket(0x10716D80) 3CLTEXTCLASS org/eclipse/core/internal/localstore/HistoryStore2$1(0x10717008) 3CLTEXTCLASS org/eclipse/core/internal/localstore/HistoryStore2$2(0x10717150) 3CLTEXTCLASS org/eclipse/core/internal/localstore/HistoryStore2$3(0x107172A8) 3CLTEXTCLASS org/eclipse/core/internal/localstore/HistoryStore2$HistoryCopyVisitor(0x10717448) 3CLTEXTCLASS org/eclipse/core/internal/localstore/HistoryStore2$4(0x107176A8) 3CLTEXTCLASS org/eclipse/core/internal/localstore/HistoryStore2$5(0x10717808) 3CLTEXTCLASS org/eclipse/core/internal/localstore/BlobStore(0x10717970) 3CLTEXTCLASS org/eclipse/core/internal/localstore/HistoryBucket$HistoryEntry(0x10717CC0) 3CLTEXTCLASS org/eclipse/core/internal/utils/UniversalUniqueIdentifier(0x10718060) 3CLTEXTCLASS org/eclipse/core/internal/localstore/HistoryBucket$1(0x10718658) 3CLTEXTCLASS org/eclipse/core/internal/resources/FileState(0x10718798) 3CLTEXTCLASS org/eclipse/core/internal/utils/Cache(0xDCCE64A0) 3CLTEXTCLASS org/eclipse/core/internal/utils/KeyedHashSet$KeyedElement(0xDCCE6770) 3CLTEXTCLASS org/eclipse/core/internal/utils/KeyedHashSet(0xDCCE6870) 3CLTEXTCLASS [Lorg/eclipse/core/internal/utils/KeyedHashSet$KeyedElement;(0xDCCE6B50) 3CLTEXTCLASS org/eclipse/core/internal/resources/ProjectContentTypes(0xDCCE6C10) 3CLTEXTCLASS org/eclipse/core/internal/resources/ProjectPreferences(0xDCCE70E8) 3CLTEXTCLASS org/eclipse/core/internal/resources/ProjectPreferences$SortedProperties(0xDCCE7C28) 3CLTEXTCLASS org/eclipse/core/internal/resources/ContentDescriptionManager$FlushJob(0xDCCE7F00) 3CLTEXTCLASS org/eclipse/core/internal/utils/StringPoolJob(0xDCCE8430) 3CLTEXTCLASS org/eclipse/core/resources/team/FileModificationValidationContext(0xDCCE88B0) 3CLTEXTCLASS org/eclipse/core/resources/ISaveParticipant(0xDCCE89D8) 3CLTEXTCLASS [Lorg/eclipse/core/resources/IResourceChangeListener;(0xDCCE8AD8) 3CLTEXTCLASS org/eclipse/core/internal/resources/Rules(0xDCCE8BC0) 3CLTEXTCLASS org/eclipse/core/resources/team/ResourceRuleFactory(0xDCCE9060) 3CLTEXTCLASS org/eclipse/core/internal/resources/Rules$1(0xDCCE93E8) 3CLTEXTCLASS org/eclipse/core/resources/IProjectNature(0xDCCE94F8) 3CLTEXTCLASS org/eclipse/core/resources/IFileModificationValidator(0xDCCE95D8) 3CLTEXTCLASS org/eclipse/core/resources/team/FileModificationValidator(0xDCCE96B8) 3CLTEXTCLASS org/eclipse/core/internal/resources/ProjectNatureDescriptor(0xDCCE9840) 3CLTEXTCLASS [Lorg/eclipse/core/internal/resources/ProjectNatureDescriptor;(0xDCCE9C28) 3CLTEXTCLASS [Lorg/eclipse/core/resources/IProjectNatureDescriptor;(0xDCCE9CE0) 3CLTEXTCLASS org/eclipse/core/internal/dtree/DataTreeLookup(0xDCCE9D98) 3CLTEXTCLASS [Lorg/eclipse/core/internal/dtree/DataTreeLookup;(0xDCCE9F18) 3CLTEXTCLASS org/eclipse/core/internal/resources/SavedState(0xDCCE9FE8) 3CLTEXTCLASS org/eclipse/core/internal/events/ResourceChangeEvent(0xDCCEA2C8) 3CLTEXTCLASS org/eclipse/core/resources/IMarkerDelta(0xDCCEA598) 3CLTEXTCLASS [Lorg/eclipse/core/resources/IMarkerDelta;(0xDCCEA718) 3CLTEXTCLASS [Lorg/eclipse/core/internal/utils/IStringPoolParticipant;(0xDCCEA7D0) 3CLTEXTCLASS org/eclipse/core/internal/events/ResourceDeltaFactory(0xDCCEA888) 3CLTEXTCLASS org/eclipse/core/internal/events/ResourceDelta(0xDCCEAC68) 3CLTEXTCLASS [Lorg/eclipse/core/internal/events/ResourceDelta;(0xDCCEB458) 3CLTEXTCLASS org/eclipse/core/internal/resources/MarkerManager$3(0xDCCEB510) 3CLTEXTCLASS org/eclipse/core/internal/events/ResourceComparator(0xDCCEB6A8) 3CLTEXTCLASS org/eclipse/core/internal/dtree/NodeComparison(0xDCCEBA08) 3CLTEXTCLASS org/eclipse/core/internal/watson/ElementTreeIterator(0xDCCEBC58) 3CLTEXTCLASS org/eclipse/core/internal/events/ResourceDeltaInfo(0xDCCEBF38) 3CLTEXTCLASS org/eclipse/core/internal/events/NodeIDMap(0xDCCEC0F8) 3CLTEXTCLASS org/eclipse/core/internal/utils/StringPool(0xDCCEC3A8) 3CLTEXTCLASS org/eclipse/core/internal/utils/StringPoolJob$1(0xDCCEC520) 3CLTEXTCLASS org/eclipse/core/internal/resources/ResourceProxy(0xDCCEC6B0) 3CLTEXTCLASS org/eclipse/core/internal/resources/Resource$1(0xDCCEC9B8) 3CLTEXTCLASS org/eclipse/core/internal/resources/OS(0xDCCECB70) 3CLTEXTCLASS org/eclipse/core/internal/resources/ProjectDescription(0xDCCECEA8) 3CLTEXTCLASS [Lorg/eclipse/core/resources/ICommand;(0xDCCED678) 3CLTEXTCLASS org/eclipse/core/internal/events/LifecycleEvent(0xDCCED730) 3CLTEXTCLASS org/eclipse/core/internal/localstore/FileStoreRoot(0xDCCED8F0) 3CLTEXTCLASS org/eclipse/core/internal/resources/SaveManager$InternalMonitorWrapper(0xDCCEDC48) 3CLTEXTCLASS org/eclipse/core/internal/resources/SafeFileTable(0xDCCEDDD0) 3CLTEXTCLASS org/eclipse/core/internal/resources/SaveManager$1(0xDCCEE0E8) 3CLTEXTCLASS org/eclipse/core/resources/mapping/IResourceChangeDescriptionFactory(0xDCCEE2B8) 3CLTEXTCLASS org/eclipse/core/internal/resources/DelayedSnapshotJob(0xDCCD7490) 3CLTEXTCLASS org/eclipse/core/internal/watson/ElementTree$ChildIDsCache(0xDCCD7760) 3CLTEXTCLASS [Lorg/eclipse/core/resources/IProject;(0xDCCD7868) 3CLTEXTCLASS [Lorg/eclipse/core/resources/IResource;(0xDCCD7920) 3CLTEXTCLASS org/eclipse/core/resources/IFileState(0xDCCD79C0) 3CLTEXTCLASS [Lorg/eclipse/core/resources/IFileState;(0xDCCD7AF0) 3CLTEXTCLASS org/eclipse/core/internal/resources/InternalWorkspaceJob(0xDCCD7C98) 3CLTEXTCLASS org/eclipse/core/resources/WorkspaceJob(0xDCCD8038) 3CLTEXTCLASS org/eclipse/core/internal/refresh/RefreshJob(0xDCCD8330) 3CLTEXTCLASS org/eclipse/core/resources/IPathVariableChangeListener(0xDCCD88D8) 3CLTEXTCLASS org/eclipse/core/resources/IResourceChangeListener(0xDCCD8990) 3CLTEXTCLASS org/eclipse/core/resources/IResourceDeltaVisitor(0xDCCD8A48) 3CLTEXTCLASS org/eclipse/core/internal/refresh/MonitorManager(0xDCCD8B30) 3CLTEXTCLASS org/eclipse/core/resources/refresh/IRefreshMonitor(0xDCCD9228) 3CLTEXTCLASS org/eclipse/core/internal/refresh/PollingMonitor(0xDCCD93E8) 3CLTEXTCLASS org/eclipse/core/internal/resources/AliasManager(0xDCCD9940) 3CLTEXTCLASS org/eclipse/core/internal/resources/AliasManager$Doit(0xDCCDA050) 3CLTEXTCLASS org/eclipse/core/internal/resources/AliasManager$AddToCollectionDoit(0xDCCDA120) 3CLTEXTCLASS org/eclipse/core/internal/resources/AliasManager$FindAliasesDoit(0xDCCDA270) 3CLTEXTCLASS org/eclipse/core/internal/resources/AliasManager$LocationMap(0xDCCDA498) 3CLTEXTCLASS org/eclipse/core/internal/resources/AliasManager$1(0xDCCDA7A8) 3CLTEXTCLASS org/eclipse/core/internal/events/ResourceStats(0xDCCDA978) 3CLTEXTCLASS org/eclipse/core/internal/resources/ResourcesCompatibilityHelper(0xDCCDAC18) 3CLTEXTCLASS org/eclipse/core/internal/localstore/IHistoryStore(0xDCCDAF28) 3CLTEXTCLASS org/eclipse/core/internal/properties/IPropertyManager(0xDCCDB078) 3CLTEXTCLASS org/eclipse/core/internal/properties/PropertyManager2(0xDCCDB1D0) 3CLTEXTCLASS org/eclipse/core/internal/localstore/Bucket(0xDCCDB610) 3CLTEXTCLASS org/eclipse/core/internal/properties/PropertyBucket(0xDCCDBC70) 3CLTEXTCLASS org/eclipse/core/internal/localstore/Bucket$Visitor(0xDCCDC040) 3CLTEXTCLASS org/eclipse/core/internal/properties/PropertyManager2$PropertyCopyVisitor(0xDCCDC178) 3CLTEXTCLASS org/eclipse/core/internal/properties/PropertyManager2$1(0xDCCDC3C0) 3CLTEXTCLASS org/eclipse/core/internal/properties/PropertyManager2$2(0xDCCDC4E8) 3CLTEXTCLASS org/eclipse/core/internal/localstore/BucketTree(0xDCCDC648) 3CLTEXTCLASS org/eclipse/core/internal/localstore/Bucket$Entry(0xDCCDCA80) 3CLTEXTCLASS org/eclipse/core/internal/properties/PropertyBucket$PropertyEntry(0xDCCDCCA0) 3CLTEXTCLASS org/eclipse/core/internal/resources/CharsetManager(0xDCCDCF90) 3CLTEXTCLASS org/eclipse/core/internal/resources/CharsetManager$CharsetManagerJob(0xDCCDD4E0) 3CLTEXTCLASS org/eclipse/core/internal/resources/CharsetManager$Listener(0xDCCDD940) 3CLTEXTCLASS org/eclipse/core/internal/resources/CharsetDeltaJob(0xDCCDDCE0) 3CLTEXTCLASS org/eclipse/core/internal/resources/CharsetDeltaJob$ICharsetListenerFilter(0xDCCDE220) 3CLTEXTCLASS org/eclipse/core/internal/utils/Queue(0xDCCDE330) 3CLTEXTCLASS org/eclipse/core/internal/resources/ContentDescriptionManager(0xDCCDE6D8) 3CLTEXTCLASS org/eclipse/core/internal/resources/ContentDescriptionManager$LazyFileInputStream(0xDCCDEEF8) 3CLTEXTCLASS org/eclipse/core/internal/events/BuildManager$MissingBuilder(0xDCCBA198) 3CLTEXTCLASS org/eclipse/core/internal/events/BuildManager$DeltaCache(0xDCCBA390) 3CLTEXTCLASS org/eclipse/core/internal/events/AutoBuildJob(0xDCCBA610) 3CLTEXTCLASS org/eclipse/core/internal/events/NotificationManager(0xDCCBAD40) 3CLTEXTCLASS org/eclipse/core/internal/events/NotificationManager$NotifyJob(0xDCCBB418) 3CLTEXTCLASS org/eclipse/core/resources/IResourceChangeEvent(0xDCCBB6A0) 3CLTEXTCLASS org/eclipse/core/internal/events/ResourceChangeListenerList(0xDCCBB7E8) 3CLTEXTCLASS org/eclipse/core/internal/events/ResourceChangeListenerList$ListenerEntry(0xDCCBBA40) 3CLTEXTCLASS [Lorg/eclipse/core/internal/events/ResourceChangeListenerList$ListenerEntry;(0xDCCBBB40) 3CLTEXTCLASS org/eclipse/core/resources/IWorkspaceRunnable(0xDCCBBBE0) 3CLTEXTCLASS org/eclipse/core/internal/events/NotificationManager$1(0xDCCBBCA8) 3CLTEXTCLASS org/eclipse/core/internal/resources/MarkerManager(0xDCCBBE28) 3CLTEXTCLASS org/eclipse/core/internal/resources/IMarkerSetElement(0xDCCBC840) 3CLTEXTCLASS org/eclipse/core/resources/IResourceVisitor(0xDCCBC8F0) 3CLTEXTCLASS org/eclipse/core/internal/resources/MarkerInfo(0xDCCBC9F0) 3CLTEXTCLASS [Lorg/eclipse/core/internal/resources/MarkerInfo;(0xDCCBCED8) 3CLTEXTCLASS [Lorg/eclipse/core/resources/IMarker;(0xDCCBCF90) 3CLTEXTCLASS org/eclipse/core/internal/resources/MarkerTypeDefinitionCache(0xDCCBD050) 3CLTEXTCLASS org/eclipse/core/internal/resources/MarkerTypeDefinitionCache$MarkerTypeDefinition(0xDCCBD328) 3CLTEXTCLASS org/eclipse/core/internal/resources/MarkerDeltaManager(0xDCCBD4E0) 3CLTEXTCLASS org/eclipse/core/internal/resources/MarkerWriter(0xDCCBD6A0) 3CLTEXTCLASS org/eclipse/core/internal/resources/Synchronizer(0xDCCBD9F0) 3CLTEXTCLASS org/eclipse/core/internal/resources/SyncInfoWriter(0xDCCBE040) 3CLTEXTCLASS org/eclipse/core/resources/refresh/IRefreshResult(0xDCCBE290) 3CLTEXTCLASS org/eclipse/core/internal/refresh/RefreshManager(0xDCCBE380) 3CLTEXTCLASS org/eclipse/core/internal/watson/IElementInfoFlattener(0xDCCBE630) 3CLTEXTCLASS org/eclipse/core/internal/resources/SaveManager(0xDCCBE808) 3CLTEXTCLASS org/eclipse/core/resources/ISavedState(0xDCCC0000) 3CLTEXTCLASS org/eclipse/core/resources/ISaveContext(0xDCCC00E0) 3CLTEXTCLASS org/eclipse/core/internal/resources/SaveContext(0xDCCC0278) 3CLTEXTCLASS org/eclipse/core/internal/resources/Project(0xDCCC08C0) 3CLTEXTCLASS org/eclipse/core/internal/localstore/SafeFileOutputStream(0xDCCC1D80) 3CLTEXTCLASS org/eclipse/core/internal/dtree/NoDataDeltaNode(0xDCCAE130) 3CLTEXTCLASS org/eclipse/core/internal/dtree/DeletedNode(0xDCCAE4A8) 3CLTEXTCLASS org/eclipse/core/internal/dtree/DataDeltaNode(0xDCCAE848) 3CLTEXTCLASS [Lorg/eclipse/core/internal/dtree/AbstractDataTreeNode;(0xDCCAEB90) 3CLTEXTCLASS org/eclipse/core/internal/resources/PlatformURLResourceConnection(0xDCCAED00) 3CLTEXTCLASS org/eclipse/core/internal/utils/Messages(0xDCCAF138) 3CLTEXTCLASS org/eclipse/core/internal/resources/PreferenceInitializer(0xDCCAF6F0) 3CLTEXTCLASS org/eclipse/core/internal/resources/WorkspacePreferences$1(0xDCCAF900) 3CLTEXTCLASS org/eclipse/core/internal/resources/IModelObjectConstants(0xDCCAFA28) 3CLTEXTCLASS org/eclipse/core/internal/resources/WorkspaceDescriptionReader(0xDCCAFCB8) 3CLTEXTCLASS org/eclipse/core/internal/localstore/SafeFileInputStream(0xDCCB0108) 3CLTEXTCLASS org/eclipse/core/internal/utils/Policy(0xDCCB0300) 3CLTEXTCLASS org/eclipse/core/internal/resources/IManager(0xDCCB0870) 3CLTEXTCLASS org/eclipse/core/internal/resources/WorkManager(0xDCCB0990) 3CLTEXTCLASS org/eclipse/core/internal/resources/WorkManager$NotifyRule(0xDCCB0DD0) 3CLTEXTCLASS org/eclipse/core/internal/localstore/FileSystemResourceManager(0xDCCB1020) 3CLTEXTCLASS org/eclipse/core/internal/localstore/IUnifiedTreeVisitor(0xDCCB1F08) 3CLTEXTCLASS org/eclipse/core/internal/localstore/ILocalStoreConstants(0xDCCB1FB8) 3CLTEXTCLASS org/eclipse/core/internal/localstore/RefreshLocalVisitor(0xDCCB20F8) 3CLTEXTCLASS org/eclipse/core/internal/localstore/RefreshLocalAliasVisitor(0xDCCB26D8) 3CLTEXTCLASS org/eclipse/core/internal/localstore/IsSynchronizedVisitor$ResourceChangedException(0xDCCB2958) 3CLTEXTCLASS org/eclipse/core/internal/resources/PathVariableManager(0xDCCB2AD8) 3CLTEXTCLASS org/eclipse/core/internal/events/ILifecycleListener(0xDCCB3278) 3CLTEXTCLASS org/eclipse/core/internal/resources/NatureManager(0xDCCB33A8) 3CLTEXTCLASS org/eclipse/core/resources/IProjectNatureDescriptor(0xDCCB3D18) 3CLTEXTCLASS org/eclipse/core/internal/resources/FilterTypeManager(0xDCCB3E38) 3CLTEXTCLASS org/eclipse/core/resources/IFilterMatcherDescriptor(0xDCCB40E0) 3CLTEXTCLASS org/eclipse/core/internal/resources/FilterDescriptor(0xDCCB4230) 3CLTEXTCLASS org/eclipse/core/internal/resources/FilterTypeManager$1(0xDCCB44B8) 3CLTEXTCLASS org/eclipse/core/internal/events/BuildManager(0xDCCB4680) 3CLTEXTCLASS org/eclipse/core/internal/events/InternalBuilder(0xDCCB55D8) 3CLTEXTCLASS org/eclipse/core/resources/IncrementalProjectBuilder(0xDCCB5A68) 3CLTEXTCLASS org/eclipse/core/resources/ICommand(0xDCCB5D10) 3CLTEXTCLASS org/eclipse/core/resources/IResourceDelta(0xDCCB5E20) 3CLTEXTCLASS org/eclipse/core/internal/resources/Resource(0xDCC9CBF8) 3CLTEXTCLASS org/eclipse/core/internal/watson/IElementContentVisitor(0xDCC9E808) 3CLTEXTCLASS org/eclipse/core/internal/dtree/IComparator(0xDCC9E8B8) 3CLTEXTCLASS org/eclipse/core/internal/watson/IElementComparator(0xDCC9E968) 3CLTEXTCLASS org/eclipse/core/resources/IWorkspaceDescription(0xDCC9EA10) 3CLTEXTCLASS org/eclipse/core/resources/IPathVariableManager(0xDCC9EBB8) 3CLTEXTCLASS org/eclipse/core/resources/IResourceRuleFactory(0xDCC9ED88) 3CLTEXTCLASS org/eclipse/core/resources/ISynchronizer(0xDCC9EEE0) 3CLTEXTCLASS org/eclipse/core/resources/team/IMoveDeleteHook(0xDCC9EFF0) 3CLTEXTCLASS org/eclipse/core/internal/resources/InternalTeamHook(0xDCC9F108) 3CLTEXTCLASS org/eclipse/core/resources/team/TeamHook(0xDCC9F248) 3CLTEXTCLASS org/eclipse/core/internal/resources/Workspace$3(0xDCC9F450) 3CLTEXTCLASS org/eclipse/core/internal/resources/ModelObject(0xDCC9F570) 3CLTEXTCLASS org/eclipse/core/internal/resources/WorkspaceDescription(0xDCC9F738) 3CLTEXTCLASS org/eclipse/core/internal/resources/WorkspacePreferences(0xDCC9FBF8) 3CLTEXTCLASS org/eclipse/core/resources/IProjectDescription(0xDCCA01D0) 3CLTEXTCLASS org/eclipse/core/internal/utils/IStringPoolParticipant(0xDCCA03B0) 3CLTEXTCLASS org/eclipse/core/internal/resources/ResourceInfo(0xDCCA0520) 3CLTEXTCLASS org/eclipse/core/internal/resources/ProjectInfo(0xDCCA0C50) 3CLTEXTCLASS org/eclipse/core/internal/resources/RootInfo(0xDCCA1018) 3CLTEXTCLASS org/eclipse/core/resources/IStorage(0xDCCA11E8) 3CLTEXTCLASS org/eclipse/core/resources/IEncodedStorage(0xDCCA12D0) 3CLTEXTCLASS org/eclipse/core/resources/IFile(0xDCCA1390) 3CLTEXTCLASS org/eclipse/core/internal/resources/File(0xDCCA1868) 3CLTEXTCLASS org/eclipse/core/internal/resources/Container(0xDCCA2500) 3CLTEXTCLASS org/eclipse/core/resources/IFolder(0xDCCA2E48) 3CLTEXTCLASS org/eclipse/core/internal/resources/Folder(0xDCCA31E8) 3CLTEXTCLASS org/eclipse/core/internal/resources/WorkspaceRoot(0xDCCA3B60) 3CLTEXTCLASS org/eclipse/core/resources/IResourceProxyVisitor(0xDCCA4410) 3CLTEXTCLASS org/eclipse/core/resources/IMarker(0xDCCA44C0) 3CLTEXTCLASS org/eclipse/core/resources/IResourceProxy(0xDCCA4780) 3CLTEXTCLASS org/eclipse/core/resources/IResourceFilterDescription(0xDCCA48E8) 3CLTEXTCLASS org/eclipse/core/internal/resources/Workspace(0xDCC7C440) 3CLTEXTCLASS org/eclipse/core/resources/IWorkspaceRoot(0xDCC7E510) 3CLTEXTCLASS org/eclipse/core/internal/watson/IElementTreeData(0xDCC7E698) 3CLTEXTCLASS org/eclipse/core/internal/watson/IPathRequestor(0xDCC7E750) 3CLTEXTCLASS org/eclipse/core/resources/team/IResourceTree(0xDCC7E810) 3CLTEXTCLASS org/eclipse/core/resources/IProject(0xDCC7E9E8) 3CLTEXTCLASS org/eclipse/core/internal/utils/WrappedRuntimeException(0xDCC7ECA8) 3CLTEXTCLASS org/eclipse/core/internal/utils/FileUtil(0xDCC7EE10) 3CLTEXTCLASS org/eclipse/core/internal/resources/LocationValidator(0xDCC7F260) 3CLTEXTCLASS org/eclipse/core/internal/watson/ElementTree(0xDCC7F948) 3CLTEXTCLASS org/eclipse/core/internal/dtree/ObjectNotFoundException(0xDCC80148) 3CLTEXTCLASS org/eclipse/core/internal/localstore/SafeChunkyInputStream(0xDCC53EC8) 3CLTEXTCLASS org/eclipse/core/internal/localstore/SafeChunkyOutputStream(0xDCC54238) 3CLTEXTCLASS org/eclipse/core/internal/dtree/AbstractDataTreeNode(0xDCC544D8) 3CLTEXTCLASS org/eclipse/core/internal/dtree/DataTreeNode(0xDCC54B70) 3CLTEXTCLASS org/eclipse/core/internal/dtree/AbstractDataTree(0xDCC550A0) 3CLTEXTCLASS org/eclipse/core/internal/dtree/DeltaDataTree(0xDCC55580) 3CLTEXTCLASS org/eclipse/core/resources/IWorkspace(0xDCC4B298) 3CLTEXTCLASS org/eclipse/core/internal/resources/ICoreConstants(0xDCC4B718) 3CLTEXTCLASS org/eclipse/core/internal/resources/LocalMetaArea(0xDCC4B960) 3CLTEXTCLASS org/eclipse/core/resources/ResourcesPlugin(0xDCC1DCC0) 3CLTEXTCLASS org/eclipse/core/internal/resources/ResourceException(0xDCC1E1B0) 3CLTEXTCLASS org/eclipse/core/resources/IContainer(0xDCC31FC8) 3CLTEXTCLASS org/eclipse/core/resources/IResource(0xDCEEA0F8) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE04EC5C0) 3CLTEXTCLASS org/eclipse/core/internal/filesystem/Policy(0x108FA8C8) 3CLTEXTCLASS [Lorg/eclipse/core/filesystem/IFileStore;(0x108FABE0) 3CLTEXTCLASS org/eclipse/core/internal/filesystem/Messages(0x108FAC98) 3CLTEXTCLASS org/eclipse/core/filesystem/provider/FileStore(0x1090D4B8) 3CLTEXTCLASS org/eclipse/core/internal/filesystem/local/LocalFile(0x1090DB98) 3CLTEXTCLASS org/eclipse/core/internal/filesystem/local/InfiniteProgress(0x1090E378) 3CLTEXTCLASS [Lorg/eclipse/core/filesystem/IFileInfo;(0x1090E510) 3CLTEXTCLASS org/eclipse/core/internal/filesystem/local/LocalFileNativesManager(0x1090E5C8) 3CLTEXTCLASS org/eclipse/core/internal/filesystem/local/unix/UnixFileNatives(0x1090E740) 3CLTEXTCLASS org/eclipse/core/internal/filesystem/local/LocalFileNatives(0x1090EC40) 3CLTEXTCLASS org/eclipse/core/filesystem/provider/FileInfo(0x1090EFA8) 3CLTEXTCLASS org/eclipse/core/internal/filesystem/InternalFileSystemCore(0x108C5828) 3CLTEXTCLASS org/eclipse/core/filesystem/IFileSystem(0x108C5BB0) 3CLTEXTCLASS org/eclipse/core/filesystem/provider/FileSystem(0x108C5D30) 3CLTEXTCLASS org/eclipse/core/internal/filesystem/local/LocalFileSystem(0x108C5FE8) 3CLTEXTCLASS org/eclipse/core/filesystem/IFileStore(0x108C62E0) 3CLTEXTCLASS org/eclipse/core/internal/filesystem/local/Convert(0x108C6510) 3CLTEXTCLASS org/eclipse/core/filesystem/URIUtil(0x1042F270) 3CLTEXTCLASS org/eclipse/core/filesystem/EFS(0x1042F560) 3CLTEXTCLASS org/eclipse/core/internal/filesystem/Activator(0xDCEED8C0) 3CLTEXTCLASS org/eclipse/core/filesystem/IFileInfo(0xDCEFAC80) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE00C33C8) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentType(0xDC155678) 3CLTEXTCLASS org/eclipse/core/internal/content/Util(0xDC156298) 3CLTEXTCLASS org/eclipse/core/internal/content/BasicDescription(0xDC156530) 3CLTEXTCLASS org/eclipse/core/internal/content/DefaultDescription(0xDC1566E8) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentDescription(0xDC156920) 3CLTEXTCLASS org/eclipse/core/internal/content/FileSpec(0xDC156C80) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentTypeBuilder$1(0xDC156E68) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentTypeHandler(0xDC157008) 3CLTEXTCLASS [[Lorg/eclipse/core/runtime/content/IContentType;(0xDC157438) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentTypeCatalog$6(0xDC1574F8) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentTypeCatalog$7(0xDC157688) 3CLTEXTCLASS [Lorg/eclipse/core/internal/content/ContentType;(0xDC157830) 3CLTEXTCLASS org/eclipse/core/internal/content/LazyInputStream(0xDC157920) 3CLTEXTCLASS org/eclipse/core/runtime/content/IContentDescriber(0xDC157C58) 3CLTEXTCLASS org/eclipse/core/runtime/content/ITextContentDescriber(0xDC157D28) 3CLTEXTCLASS org/eclipse/core/internal/content/TextContentDescriber(0xDC157E00) 3CLTEXTCLASS org/eclipse/core/runtime/content/XMLContentDescriber(0xDC157FB8) 3CLTEXTCLASS org/eclipse/core/runtime/content/XMLRootElementContentDescriber2(0xDC158488) 3CLTEXTCLASS org/eclipse/core/runtime/content/XMLRootElementContentDescriber(0xDC158998) 3CLTEXTCLASS org/eclipse/core/internal/content/XMLRootHandler(0xDC158D88) 3CLTEXTCLASS org/eclipse/core/internal/content/XMLRootHandler$StopParsingException(0xDC159148) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentTypeCatalog(0xDC142318) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentTypeVisitor(0xDC142BA0) 3CLTEXTCLASS org/eclipse/core/internal/content/LowLevelIOException(0xDC142CA0) 3CLTEXTCLASS [Lorg/eclipse/core/runtime/content/IContentType;(0xDC142DF8) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentTypeCatalog$1(0xDC142EB0) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentTypeCatalog$2(0xDC142FF8) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentTypeCatalog$3(0xDC143140) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentTypeCatalog$4(0xDC143270) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentTypeCatalog$5(0xDC1433A8) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentTypeBuilder(0xDC1434E0) 3CLTEXTCLASS org/eclipse/core/internal/content/LazyReader(0xDC143A68) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentTypeManager(0xDCCE3458) 3CLTEXTCLASS org/eclipse/core/runtime/content/IContentTypeSettings(0xDCCE39E0) 3CLTEXTCLASS org/eclipse/core/runtime/content/IContentType(0xDCCE3AE8) 3CLTEXTCLASS org/eclipse/core/internal/content/IContentTypeInfo(0xDCCE3C68) 3CLTEXTCLASS org/eclipse/core/runtime/content/IContentDescription(0xDCCE3D28) 3CLTEXTCLASS org/eclipse/core/internal/content/ILazySource(0xDCCE3EA8) 3CLTEXTCLASS org/eclipse/core/runtime/content/IContentTypeManager$ISelectionPolicy(0xDCCE3F68) 3CLTEXTCLASS org/eclipse/core/runtime/content/IContentTypeMatcher(0xDD9337E0) 3CLTEXTCLASS org/eclipse/core/internal/content/ContentTypeMatcher(0xDD933920) 3CLTEXTCLASS org/eclipse/core/runtime/content/IContentTypeManager(0xDD933C80) 3CLTEXTCLASS org/eclipse/core/internal/content/Activator(0xDCEEEF08) 3CLTEXTCLASS org/eclipse/core/runtime/content/IContentTypeManager$IContentTypeChangeListener(0xDCC0E730) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0CA9A60) 3CLTEXTCLASS org/eclipse/jface/databinding/swt/SWTObservables$DisplayRealm(0xDCE74DD0) 3CLTEXTCLASS org/eclipse/jface/databinding/swt/ISWTObservable(0xDCE74FE0) 3CLTEXTCLASS org/eclipse/jface/databinding/swt/ISWTObservableValue(0xDCE75098) 3CLTEXTCLASS org/eclipse/jface/databinding/swt/SWTObservables(0xDCEBC660) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0CABC70) 3CLTEXTCLASS org/eclipse/core/databinding/observable/list/IObservableList(0xDCCD41F0) 3CLTEXTCLASS org/eclipse/core/databinding/observable/Realm$2(0xDCCD44A0) 3CLTEXTCLASS org/eclipse/core/databinding/observable/Realm$3(0xDCCD4650) 3CLTEXTCLASS org/eclipse/core/internal/databinding/observable/Queue(0xDCCD4830) 3CLTEXTCLASS org/eclipse/core/databinding/observable/Realm$SyncRunnable(0xDCCD49C0) 3CLTEXTCLASS org/eclipse/core/internal/databinding/observable/Activator$1(0xDCE74590) 3CLTEXTCLASS org/eclipse/core/databinding/util/Policy(0xDCE74780) 3CLTEXTCLASS org/eclipse/core/databinding/observable/IObservable(0xDCE748D0) 3CLTEXTCLASS org/eclipse/core/databinding/observable/value/IObservableValue(0xDCE74A18) 3CLTEXTCLASS org/eclipse/core/databinding/observable/IObservableCollection(0xDCE74B10) 3CLTEXTCLASS org/eclipse/core/internal/databinding/observable/Activator(0xDCC1F210) 3CLTEXTCLASS org/eclipse/core/databinding/util/ILogger(0xDCC1F4C8) 3CLTEXTCLASS org/eclipse/core/databinding/observable/Realm(0xDCC18880) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0CBDD78) 3CLTEXTCLASS com/ibm/icu/math/BigDecimal(0xDB358FC8) 3CLTEXTCLASS com/ibm/icu/text/DigitList(0xDB359BA8) 3CLTEXTCLASS com/ibm/icu/math/MathContext(0xDB35A048) 3CLTEXTCLASS com/ibm/icu/impl/Grego(0xDB35A3D8) 3CLTEXTCLASS [Lcom/ibm/icu/text/DateFormat;(0xDB35A5F8) 3CLTEXTCLASS com/ibm/icu/text/Bidi(0xDB35A790) 3CLTEXTCLASS com/ibm/icu/text/Bidi$ImpTabPair(0xDB35BCD0) 3CLTEXTCLASS com/ibm/icu/text/BidiRun(0xDB35BE00) 3CLTEXTCLASS [Lcom/ibm/icu/text/BidiRun;(0xDB35C060) 3CLTEXTCLASS com/ibm/icu/text/Bidi$InsertPoints(0xDB35C118) 3CLTEXTCLASS com/ibm/icu/text/Bidi$Point(0xDB35C220) 3CLTEXTCLASS [Lcom/ibm/icu/text/Bidi$Point;(0xDB35C318) 3CLTEXTCLASS com/ibm/icu/util/Calendar$FormatConfiguration(0xDBF84F00) 3CLTEXTCLASS com/ibm/icu/text/DateFormatSymbols(0xDBF85190) 3CLTEXTCLASS com/ibm/icu/impl/ZoneMeta(0xDBF85CA8) 3CLTEXTCLASS com/ibm/icu/impl/OlsonTimeZone(0xDBF86790) 3CLTEXTCLASS com/ibm/icu/impl/DateNumberFormat(0xDBF87190) 3CLTEXTCLASS com/ibm/icu/text/SimpleDateFormat$PatternItem(0xDBF87618) 3CLTEXTCLASS com/ibm/icu/text/NumberingSystem(0xDBF87738) 3CLTEXTCLASS com/ibm/icu/text/Replaceable(0xDBF87B08) 3CLTEXTCLASS com/ibm/icu/text/ReplaceableString(0xDBF87C60) 3CLTEXTCLASS com/ibm/icu/util/Measure(0xDBF87F08) 3CLTEXTCLASS com/ibm/icu/util/CurrencyAmount(0xDBF88118) 3CLTEXTCLASS com/ibm/icu/text/CollationKey(0xDBF88268) 3CLTEXTCLASS com/ibm/icu/text/BreakIterator(0xDBF88588) 3CLTEXTCLASS com/ibm/icu/text/BreakIterator$BreakIteratorServiceShim(0xDBF88B98) 3CLTEXTCLASS com/ibm/icu/text/BreakIteratorFactory(0xDBF88CF8) 3CLTEXTCLASS com/ibm/icu/text/BreakIteratorFactory$BFService(0xDBF89180) 3CLTEXTCLASS com/ibm/icu/text/RuleBasedBreakIterator(0xDBF893A8) 3CLTEXTCLASS com/ibm/icu/text/DictionaryBasedBreakIterator(0xDBF89BF0) 3CLTEXTCLASS com/ibm/icu/text/ThaiBreakIterator(0xDBF8A020) 3CLTEXTCLASS com/ibm/icu/text/BreakIteratorFactory$1$RBBreakIteratorFactory(0xDBF8A408) 3CLTEXTCLASS com/ibm/icu/text/RBBIDataWrapper(0xDBF8A548) 3CLTEXTCLASS com/ibm/icu/text/RBBIDataWrapper$TrieFoldingFunc(0xDBF8ABC0) 3CLTEXTCLASS com/ibm/icu/text/RBBIDataWrapper$RBBIDataHeader(0xDBF8ACC8) 3CLTEXTCLASS com/ibm/icu/text/BreakIterator$BreakIteratorCache(0xDBF8ADD0) 3CLTEXTCLASS com/ibm/icu/text/NumberFormat$NumberFormatShim(0xDBF8AF28) 3CLTEXTCLASS com/ibm/icu/text/NumberFormatServiceShim(0xDBF8B088) 3CLTEXTCLASS com/ibm/icu/text/NumberFormatServiceShim$NFService(0xDBF8B3B8) 3CLTEXTCLASS com/ibm/icu/text/NumberFormatServiceShim$1$RBNumberFormatFactory(0xDBF8B5B0) 3CLTEXTCLASS com/ibm/icu/text/DecimalFormatSymbols(0xDBF8B798) 3CLTEXTCLASS com/ibm/icu/util/MeasureUnit(0xDBF8C1C8) 3CLTEXTCLASS com/ibm/icu/util/Currency(0xDBF8C2E0) 3CLTEXTCLASS com/ibm/icu/impl/TextTrieMap$ResultHandler(0xDBF8CBF8) 3CLTEXTCLASS com/ibm/icu/util/Calendar(0xDBF7D028) 3CLTEXTCLASS com/ibm/icu/util/GregorianCalendar(0xDBF7EC18) 3CLTEXTCLASS com/ibm/icu/util/JapaneseCalendar(0xDBF7F420) 3CLTEXTCLASS com/ibm/icu/util/BuddhistCalendar(0xDBF7FA48) 3CLTEXTCLASS com/ibm/icu/util/TaiwanCalendar(0xDBF7FFB8) 3CLTEXTCLASS com/ibm/icu/util/IslamicCalendar(0xDBF80508) 3CLTEXTCLASS com/ibm/icu/util/HebrewCalendar(0xDBF80C40) 3CLTEXTCLASS com/ibm/icu/util/ChineseCalendar(0xDBF813B8) 3CLTEXTCLASS com/ibm/icu/util/IndianCalendar(0xDBF81CD8) 3CLTEXTCLASS com/ibm/icu/util/CECalendar(0xDBF82330) 3CLTEXTCLASS com/ibm/icu/util/CopticCalendar(0xDBF828A8) 3CLTEXTCLASS com/ibm/icu/util/EthiopicCalendar(0xDBF82E30) 3CLTEXTCLASS com/ibm/icu/util/TimeZone(0xDBF832F8) 3CLTEXTCLASS com/ibm/icu/util/BasicTimeZone(0xDBF83B10) 3CLTEXTCLASS com/ibm/icu/util/SimpleTimeZone(0xDBF83FA8) 3CLTEXTCLASS com/ibm/icu/impl/JavaTimeZone(0xDBF84878) 3CLTEXTCLASS com/ibm/icu/impl/ICUConfig(0xDBF84CA0) 3CLTEXTCLASS com/ibm/icu/text/UnicodeSet(0xDCBE4E50) 3CLTEXTCLASS com/ibm/icu/text/UnicodeSet$Filter(0xDCBE60C0) 3CLTEXTCLASS com/ibm/icu/impl/RuleCharacterIterator(0xDCBE61A8) 3CLTEXTCLASS com/ibm/icu/impl/ByteBuffer(0xDCBE6558) 3CLTEXTCLASS com/ibm/icu/text/UFormat(0xDCBE67C8) 3CLTEXTCLASS com/ibm/icu/text/MessageFormat(0xDCBE69D8) 3CLTEXTCLASS com/ibm/icu/text/NumberFormat(0xDCBE7610) 3CLTEXTCLASS com/ibm/icu/text/DateFormat(0xDCBE8258) 3CLTEXTCLASS com/ibm/icu/text/DecimalFormat(0xDCBE8DF0) 3CLTEXTCLASS com/ibm/icu/text/SimpleDateFormat(0xDCBEA670) 3CLTEXTCLASS com/ibm/icu/text/RuleBasedNumberFormat(0xDCBEB970) 3CLTEXTCLASS com/ibm/icu/text/PluralFormat(0xDCBEC598) 3CLTEXTCLASS com/ibm/icu/text/UnicodeSet$IntPropertyFilter(0xDCBECB10) 3CLTEXTCLASS [Lcom/ibm/icu/text/UnicodeSet;(0xDCBECC48) 3CLTEXTCLASS com/ibm/icu/impl/UCharacterName(0xDCBA8918) 3CLTEXTCLASS com/ibm/icu/impl/UCharacterNameReader(0xDCBA92A0) 3CLTEXTCLASS com/ibm/icu/impl/UCharacterName$AlgorithmName(0xDCBA95A8) 3CLTEXTCLASS [Lcom/ibm/icu/impl/UCharacterName$AlgorithmName;(0xDCBA98F0) 3CLTEXTCLASS com/ibm/icu/impl/UCharacterProperty(0xDCBA99D0) 3CLTEXTCLASS com/ibm/icu/impl/CharTrie(0xDCBAA1C8) 3CLTEXTCLASS com/ibm/icu/impl/UCharacterProperty$BinaryProperties(0xDCBAA548) 3CLTEXTCLASS [Lcom/ibm/icu/impl/UCharacterProperty$BinaryProperties;(0xDCBAA648) 3CLTEXTCLASS com/ibm/icu/impl/UCharacterPropertyReader(0xDCBAA708) 3CLTEXTCLASS com/ibm/icu/impl/Trie$DefaultGetFoldingOffset(0xDCBAA9B0) 3CLTEXTCLASS com/ibm/icu/impl/CharTrie$FriendAgent(0xDCBAAAD8) 3CLTEXTCLASS com/ibm/icu/impl/UCaseProps(0xDCBAAC78) 3CLTEXTCLASS com/ibm/icu/impl/UCaseProps$IsAcceptable(0xDCBAB458) 3CLTEXTCLASS com/ibm/icu/impl/UBiDiProps(0xDCBAB5A0) 3CLTEXTCLASS com/ibm/icu/impl/UBiDiProps$IsAcceptable(0xDCBABA50) 3CLTEXTCLASS com/ibm/icu/text/RuleBasedCollator$DataManipulate(0xDCBABB78) 3CLTEXTCLASS com/ibm/icu/impl/ImplicitCEGenerator(0xDCBABCF8) 3CLTEXTCLASS com/ibm/icu/text/UTF16(0xDCBAC100) 3CLTEXTCLASS com/ibm/icu/text/RuleBasedCollator$ContractionInfo(0xDCBAC8A0) 3CLTEXTCLASS com/ibm/icu/text/CollationElementIterator(0xDCBAC9E0) 3CLTEXTCLASS com/ibm/icu/impl/CharacterIteratorWrapper(0xDCBAD5C8) 3CLTEXTCLASS com/ibm/icu/impl/ReplaceableUCharacterIterator(0xDCBAD8B0) 3CLTEXTCLASS com/ibm/icu/impl/UCharArrayIterator(0xDCBADBD0) 3CLTEXTCLASS com/ibm/icu/text/CollationElementIterator$Backup(0xDCBADE70) 3CLTEXTCLASS com/ibm/icu/text/RuleBasedCollator$shiftValues(0xDCBADF80) 3CLTEXTCLASS com/ibm/icu/impl/ICUResourceBundleReader(0xDCBAE0B8) 3CLTEXTCLASS com/ibm/icu/impl/Utility(0xDCBAE470) 3CLTEXTCLASS com/ibm/icu/util/StringTokenizer(0xDCBAEF98) 3CLTEXTCLASS com/ibm/icu/text/UnicodeMatcher(0xDCBAF3A0) 3CLTEXTCLASS com/ibm/icu/text/UnicodeFilter(0xDCBAF4B8) 3CLTEXTCLASS com/ibm/icu/util/Freezable(0xDCBAF638) 3CLTEXTCLASS com/ibm/icu/impl/TrieIterator(0xDCBAF730) 3CLTEXTCLASS com/ibm/icu/util/RangeValueIterator$Element(0xDCBAFAC0) 3CLTEXTCLASS com/ibm/icu/impl/RelativeDateFormat(0xDCBAFC08) 3CLTEXTCLASS com/ibm/icu/util/Calendar$CalendarShim(0xDCBB00D8) 3CLTEXTCLASS com/ibm/icu/util/CalendarServiceShim(0xDCBB0238) 3CLTEXTCLASS com/ibm/icu/util/CalendarServiceShim$CalService(0xDCBB0558) 3CLTEXTCLASS com/ibm/icu/util/CalendarServiceShim$1$RBCalendarFactory(0xDCBB0750) 3CLTEXTCLASS com/ibm/icu/impl/ICUResourceBundleImpl$ResourceInt(0xDCB6D018) 3CLTEXTCLASS com/ibm/icu/impl/ICUResourceBundleImpl$ResourceArray(0xDCB6D308) 3CLTEXTCLASS com/ibm/icu/impl/ICUResourceBundleImpl$ResourceIntVector(0xDCB6D750) 3CLTEXTCLASS com/ibm/icu/util/UResourceBundle$ResourceCacheKey(0xDCB6D9A8) 3CLTEXTCLASS com/ibm/icu/impl/ICUData(0xDCB6DBE0) 3CLTEXTCLASS com/ibm/icu/impl/ICUResourceBundle$AvailEntry(0xDCB6DEF0) 3CLTEXTCLASS com/ibm/icu/impl/ICUResourceBundle$1(0xDCB6E0B0) 3CLTEXTCLASS com/ibm/icu/impl/URLHandler$URLVisitor(0xDCB6E2E0) 3CLTEXTCLASS com/ibm/icu/text/RuleBasedCollator(0xDCB6E468) 3CLTEXTCLASS com/ibm/icu/impl/Trie(0xDCB6FB70) 3CLTEXTCLASS com/ibm/icu/impl/IntTrie(0xDCB6FF48) 3CLTEXTCLASS com/ibm/icu/text/UForwardCharacterIterator(0xDCB70278) 3CLTEXTCLASS com/ibm/icu/text/UCharacterIterator(0xDCB70398) 3CLTEXTCLASS com/ibm/icu/impl/StringUCharacterIterator(0xDCB70800) 3CLTEXTCLASS com/ibm/icu/util/ByteArrayWrapper(0xDCB70AB8) 3CLTEXTCLASS com/ibm/icu/text/RawCollationKey(0xDCB70D60) 3CLTEXTCLASS com/ibm/icu/text/RuleBasedCollator$UCAConstants(0xDCB70EC0) 3CLTEXTCLASS com/ibm/icu/text/CollatorReader(0xDCB71028) 3CLTEXTCLASS com/ibm/icu/impl/ICUBinary$Authenticate(0xDCB71720) 3CLTEXTCLASS com/ibm/icu/impl/Trie$DataManipulate(0xDCB717D0) 3CLTEXTCLASS com/ibm/icu/text/CollatorReader$1(0xDCB71898) 3CLTEXTCLASS com/ibm/icu/text/CollatorReader$2(0xDCB719A8) 3CLTEXTCLASS com/ibm/icu/impl/ICUBinary(0xDCB71AB8) 3CLTEXTCLASS com/ibm/icu/lang/UCharacterEnums$ECharacterCategory(0xDCB71C40) 3CLTEXTCLASS com/ibm/icu/lang/UCharacterEnums$ECharacterDirection(0xDCB71D60) 3CLTEXTCLASS com/ibm/icu/lang/UCharacter(0xDCB71EB0) 3CLTEXTCLASS com/ibm/icu/impl/UCaseProps$ContextIterator(0xDCB72F98) 3CLTEXTCLASS com/ibm/icu/util/RangeValueIterator(0xDCB73058) 3CLTEXTCLASS com/ibm/icu/util/ValueIterator(0xDCB73118) 3CLTEXTCLASS com/ibm/icu/impl/UPropertyAliases(0xDCB73210) 3CLTEXTCLASS com/ibm/icu/impl/ICUBinaryStream(0xDCB73740) 3CLTEXTCLASS com/ibm/icu/impl/UPropertyAliases$Builder(0xDCB739C8) 3CLTEXTCLASS com/ibm/icu/impl/IllegalIcuArgumentException(0xDCB73DA0) 3CLTEXTCLASS com/ibm/icu/impl/UPropertyAliases$EnumToShort(0xDCB73EB0) 3CLTEXTCLASS com/ibm/icu/impl/UPropertyAliases$NonContiguousEnumToShort(0xDCB73F78) 3CLTEXTCLASS com/ibm/icu/impl/UPropertyAliases$NameToEnum(0xDCB740D8) 3CLTEXTCLASS com/ibm/icu/impl/UPropertyAliases$ValueMap(0xDCB74290) 3CLTEXTCLASS [Lcom/ibm/icu/impl/UPropertyAliases$ValueMap;(0xDCB74420) 3CLTEXTCLASS com/ibm/icu/impl/UPropertyAliases$ContiguousEnumToShort(0xDCB744D8) 3CLTEXTCLASS com/ibm/icu/impl/CalendarUtil(0xDCB74688) 3CLTEXTCLASS com/ibm/icu/util/Calendar$WeekData(0xDCB74898) 3CLTEXTCLASS com/ibm/icu/impl/CalendarData(0xDCB749E8) 3CLTEXTCLASS com/ibm/icu/util/UResourceBundleIterator(0xDCB74D30) 3CLTEXTCLASS com/ibm/icu/text/CollatorServiceShim(0xDCB68F30) 3CLTEXTCLASS com/ibm/icu/impl/ICUNotifier(0xDCB69210) 3CLTEXTCLASS com/ibm/icu/impl/ICUService(0xDCB69500) 3CLTEXTCLASS com/ibm/icu/impl/ICULocaleService(0xDCB69F08) 3CLTEXTCLASS com/ibm/icu/text/CollatorServiceShim$CService(0xDCB6A3A8) 3CLTEXTCLASS com/ibm/icu/impl/ICUService$Factory(0xDCB6A5B8) 3CLTEXTCLASS com/ibm/icu/impl/ICUNotifier$NotifyThread(0xDCB6A720) 3CLTEXTCLASS com/ibm/icu/impl/ICUService$Key(0xDCB6A960) 3CLTEXTCLASS com/ibm/icu/impl/ICULocaleService$LocaleKey(0xDCB6AB50) 3CLTEXTCLASS com/ibm/icu/impl/ICURWLock(0xDCB6AEB0) 3CLTEXTCLASS com/ibm/icu/impl/ICURWLock$Stats(0xDCB6B228) 3CLTEXTCLASS com/ibm/icu/impl/ICULocaleService$LocaleKeyFactory(0xDCB6B440) 3CLTEXTCLASS com/ibm/icu/impl/ICULocaleService$ICUResourceBundleFactory(0xDCB6B738) 3CLTEXTCLASS com/ibm/icu/text/CollatorServiceShim$1$CollatorFactory(0xDCB6B978) 3CLTEXTCLASS [Lcom/ibm/icu/util/ULocale;(0xDCB6BAC0) 3CLTEXTCLASS com/ibm/icu/impl/ICUService$CacheEntry(0xDCB6BB78) 3CLTEXTCLASS com/ibm/icu/util/UResourceTypeMismatchException(0xDCB6BCA0) 3CLTEXTCLASS com/ibm/icu/impl/ICUResourceBundleImpl$ResourceTable(0xDCB6BE90) 3CLTEXTCLASS com/ibm/icu/impl/ICUResourceBundleImpl$ResourceTable32(0xDCB6C340) 3CLTEXTCLASS com/ibm/icu/impl/ICUResourceBundleImpl$ResourceString(0xDCB6C830) 3CLTEXTCLASS com/ibm/icu/impl/ICUResourceBundleImpl$ResourceBinary(0xDCB6CB18) 3CLTEXTCLASS com/ibm/icu/util/IllformedLocaleException(0xDCB07970) 3CLTEXTCLASS com/ibm/icu/impl/SimpleCache(0xDCB07B38) 3CLTEXTCLASS com/ibm/icu/util/ULocale$IDParser(0xDCB07D90) 3CLTEXTCLASS com/ibm/icu/util/ULocale$Type(0xDCB08540) 3CLTEXTCLASS com/ibm/icu/text/Collator(0xDCB08688) 3CLTEXTCLASS com/ibm/icu/impl/ICUDebug(0xDCB08D80) 3CLTEXTCLASS com/ibm/icu/util/VersionInfo(0xDCB09078) 3CLTEXTCLASS com/ibm/icu/text/Collator$ServiceShim(0xDCB09560) 3CLTEXTCLASS com/ibm/icu/util/Calendar$PatternData(0xDCB096D8) 3CLTEXTCLASS com/ibm/icu/impl/ICUResourceBundle(0xDDCC55B0) 3CLTEXTCLASS com/ibm/icu/util/UResourceBundle(0xDCCAD4B0) 3CLTEXTCLASS com/ibm/icu/impl/ICUCache(0xDCEED170) 3CLTEXTCLASS com/ibm/icu/impl/locale/LocaleSyntaxException(0xDCEED2C8) 3CLTEXTCLASS com/ibm/icu/util/ULocale(0xDCB03A10) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0552AB0) 3CLTEXTCLASS org/eclipse/core/internal/expressions/IterateExpression$IteratePool(0xDAFCCCD0) 3CLTEXTCLASS org/eclipse/core/internal/expressions/DefaultVariable(0xDAFCCF88) 3CLTEXTCLASS org/eclipse/core/internal/expressions/EqualsExpression(0x10777DB0) 3CLTEXTCLASS org/eclipse/core/internal/expressions/ReferenceExpression(0x10778068) 3CLTEXTCLASS org/eclipse/core/expressions/ExpressionConverter(0x10778348) 3CLTEXTCLASS [Lorg/eclipse/core/expressions/ElementHandler;(0x10778680) 3CLTEXTCLASS [Lorg/eclipse/core/expressions/Expression;(0x10778738) 3CLTEXTCLASS org/eclipse/core/internal/expressions/Expressions(0x107787F0) 3CLTEXTCLASS org/eclipse/core/expressions/ExpressionInfo(0x10778E10) 3CLTEXTCLASS org/eclipse/core/expressions/EvaluationResult(0x10779150) 3CLTEXTCLASS [Lorg/eclipse/core/expressions/EvaluationResult;(0x107793A8) 3CLTEXTCLASS [[Lorg/eclipse/core/expressions/EvaluationResult;(0x10779460) 3CLTEXTCLASS org/eclipse/core/internal/expressions/ExpressionStatus(0x10779550) 3CLTEXTCLASS org/eclipse/core/internal/expressions/ExpressionMessages(0x107796E0) 3CLTEXTCLASS org/eclipse/core/internal/expressions/Messages(0x10779890) 3CLTEXTCLASS org/eclipse/core/internal/expressions/TypeExtensionManager(0x107799C0) 3CLTEXTCLASS org/eclipse/core/expressions/IPropertyTester(0x10779F00) 3CLTEXTCLASS [Lorg/eclipse/core/expressions/IPropertyTester;(0x1077A008) 3CLTEXTCLASS org/eclipse/core/internal/expressions/TypeExtensionManager$1(0x1077A0D0) 3CLTEXTCLASS org/eclipse/core/internal/expressions/PropertyCache(0x1077A240) 3CLTEXTCLASS org/eclipse/core/internal/expressions/util/LRUCache(0x1077A408) 3CLTEXTCLASS org/eclipse/core/internal/expressions/Property(0x1077A968) 3CLTEXTCLASS org/eclipse/core/internal/expressions/util/LRUCache$LRUCacheEntry(0x1077AB88) 3CLTEXTCLASS org/eclipse/core/internal/expressions/TypeExtension(0x1077ACF8) 3CLTEXTCLASS org/eclipse/core/internal/expressions/TypeExtension$2(0x1077AFB8) 3CLTEXTCLASS [Lorg/eclipse/core/internal/expressions/TypeExtension;(0x1077B0C0) 3CLTEXTCLASS org/eclipse/core/internal/expressions/TypeExtension$1(0x1077B188) 3CLTEXTCLASS org/eclipse/core/internal/expressions/PropertyTesterDescriptor(0x1077B310) 3CLTEXTCLASS org/eclipse/core/expressions/PropertyTester(0x1077B678) 3CLTEXTCLASS org/eclipse/core/internal/expressions/propertytester/PlatformPropertyTester(0x1077B900) 3CLTEXTCLASS org/eclipse/core/internal/expressions/Expressions$1(0x1077BB38) 3CLTEXTCLASS org/eclipse/core/expressions/IIterable(0x1077BCB0) 3CLTEXTCLASS org/eclipse/core/internal/expressions/CompositeExpression(0x10734B00) 3CLTEXTCLASS org/eclipse/core/internal/expressions/OrExpression(0x10734DF0) 3CLTEXTCLASS org/eclipse/core/internal/expressions/AndExpression(0x10734F60) 3CLTEXTCLASS org/eclipse/core/internal/expressions/NotExpression(0x107350C0) 3CLTEXTCLASS org/eclipse/core/internal/expressions/WithExpression(0x10735310) 3CLTEXTCLASS org/eclipse/core/internal/expressions/AdaptExpression(0x10735698) 3CLTEXTCLASS org/eclipse/core/internal/expressions/IterateExpression(0x107359E8) 3CLTEXTCLASS org/eclipse/core/internal/expressions/CountExpression(0x10735DF0) 3CLTEXTCLASS org/eclipse/core/internal/expressions/SystemTestExpression(0x10736150) 3CLTEXTCLASS org/eclipse/core/internal/expressions/ResolveExpression(0x10736480) 3CLTEXTCLASS org/eclipse/core/internal/expressions/EnablementExpression(0x10736828) 3CLTEXTCLASS org/eclipse/core/expressions/ICountable(0x107369E8) 3CLTEXTCLASS org/eclipse/core/expressions/ElementHandler(0x1076E1D8) 3CLTEXTCLASS org/eclipse/core/internal/expressions/StandardElementHandler(0x1076E3E0) 3CLTEXTCLASS org/eclipse/core/internal/expressions/InstanceofExpression(0x1076E7A8) 3CLTEXTCLASS org/eclipse/core/internal/expressions/TestExpression(0x1076EAA0) 3CLTEXTCLASS org/eclipse/core/expressions/EvaluationContext(0x10589DC0) 3CLTEXTCLASS org/eclipse/core/expressions/Expression(0x1058A0A8) 3CLTEXTCLASS org/eclipse/core/expressions/Expression$1(0x1058A348) 3CLTEXTCLASS org/eclipse/core/internal/expressions/ExpressionPlugin(0x10597EE8) 3CLTEXTCLASS org/eclipse/core/expressions/Expression$2(0x105980E8) 3CLTEXTCLASS org/eclipse/core/expressions/IEvaluationContext(0x10557120) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0585B48) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE06E1648) 3CLTEXTCLASS org/eclipse/help/IIndexSubpath(0xDBCAEC70) 3CLTEXTCLASS org/eclipse/help/internal/index/IndexSubpath(0xDBCAED78) 3CLTEXTCLASS org/eclipse/help/IToc(0xDBCAEF20) 3CLTEXTCLASS org/eclipse/help/IToc2(0xDBCAF008) 3CLTEXTCLASS org/eclipse/help/internal/toc/Toc(0xDBCAF170) 3CLTEXTCLASS org/eclipse/help/IIndex(0xDBCAF660) 3CLTEXTCLASS org/eclipse/help/internal/index/Index(0xDBCAF768) 3CLTEXTCLASS org/eclipse/help/IContentExtension(0xDBCAF9D0) 3CLTEXTCLASS org/eclipse/help/internal/extension/ContentExtension(0xDBCAFB08) 3CLTEXTCLASS org/eclipse/help/ICriteria(0xDBCAFD48) 3CLTEXTCLASS org/eclipse/help/internal/criteria/Criteria(0xDBCAFE68) 3CLTEXTCLASS org/eclipse/help/ICriteriaDefinition(0xDBCB0048) 3CLTEXTCLASS org/eclipse/help/internal/criteria/CriteriaDefinition(0xDBCB0148) 3CLTEXTCLASS org/eclipse/help/ICriterionDefinition(0xDBCB0330) 3CLTEXTCLASS org/eclipse/help/internal/criteria/CriterionDefinition(0xDBCB0460) 3CLTEXTCLASS org/eclipse/help/ICriterionValueDefinition(0xDBCB06D8) 3CLTEXTCLASS org/eclipse/help/internal/criteria/CriterionValueDefinition(0xDBCB07F8) 3CLTEXTCLASS org/eclipse/help/UAContentFilter(0xDBCB09F0) 3CLTEXTCLASS org/eclipse/help/HelpSystem(0xDBCB0BE8) 3CLTEXTCLASS org/eclipse/help/internal/UAElement$Filter(0xDBCB0E00) 3CLTEXTCLASS [Lorg/eclipse/help/internal/UAElement$Filter;(0xDBCB0F10) 3CLTEXTCLASS org/eclipse/help/internal/util/SequenceResolver(0xDBCB0FC8) 3CLTEXTCLASS org/eclipse/help/internal/util/SequenceResolver$Candidate(0xDBCB1330) 3CLTEXTCLASS [Lorg/eclipse/help/internal/util/SequenceResolver$Candidate;(0xDBCB1470) 3CLTEXTCLASS org/eclipse/help/internal/UAElement(0xDBCACC88) 3CLTEXTCLASS org/eclipse/help/ITopic2(0xDBCAD290) 3CLTEXTCLASS org/eclipse/help/internal/Topic(0xDBCAD3E0) 3CLTEXTCLASS org/eclipse/help/IIndexEntry(0xDBCAD720) 3CLTEXTCLASS org/eclipse/help/IIndexEntry2(0xDBCAD7F8) 3CLTEXTCLASS org/eclipse/help/internal/index/IndexEntry(0xDBCAD910) 3CLTEXTCLASS org/eclipse/help/IContext2(0xDBCADBC0) 3CLTEXTCLASS org/eclipse/help/IContext3(0xDBCADC98) 3CLTEXTCLASS org/eclipse/help/internal/context/Context(0xDBCADDC8) 3CLTEXTCLASS org/eclipse/help/ICommandLink(0xDBCAE268) 3CLTEXTCLASS org/eclipse/help/internal/CommandLink(0xDBCAE388) 3CLTEXTCLASS org/eclipse/help/IAnchor(0xDBCAE568) 3CLTEXTCLASS org/eclipse/help/internal/Anchor(0xDBCAE670) 3CLTEXTCLASS org/eclipse/help/IInclude(0xDBCAE808) 3CLTEXTCLASS org/eclipse/help/internal/Include(0xDBCAE910) 3CLTEXTCLASS org/eclipse/help/ILink(0xDBCAEAA8) 3CLTEXTCLASS org/eclipse/help/IIndexSee(0xDBCAEB60) 3CLTEXTCLASS org/eclipse/help/internal/util/ProductPreferences(0xDBCA1BA8) 3CLTEXTCLASS org/eclipse/help/internal/UAElementFactory(0xDBCA2360) 3CLTEXTCLASS org/eclipse/help/IUAElement(0xDBCA29C0) 3CLTEXTCLASS org/eclipse/help/IHelpResource(0xDBCA2A80) 3CLTEXTCLASS org/eclipse/help/IContext(0x1076F530) 3CLTEXTCLASS org/eclipse/help/IContextProvider(0x1076F5F0) 3CLTEXTCLASS org/eclipse/help/ITopic(0x1076F6C8) 3CLTEXTCLASS org/eclipse/help/internal/toc/Link(0x1076F7E8) 3CLTEXTCLASS org/eclipse/help/internal/index/IndexSee(0x1076F9D8) 3CLTEXTCLASS org/eclipse/help/internal/HelpPlugin(0x1076DC68) 3CLTEXTCLASS org/eclipse/help/IHelp(0x1076D9E8) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE093FAB8) 3CLTEXTCLASS org/eclipse/update/internal/configurator/ConfigurationParser(0xDC880578) 3CLTEXTCLASS org/eclipse/update/internal/configurator/Configuration(0xDC880E00) 3CLTEXTCLASS org/eclipse/update/internal/configurator/SitePolicy(0xDC881388) 3CLTEXTCLASS org/eclipse/update/internal/configurator/SiteEntry(0xDC881590) 3CLTEXTCLASS org/eclipse/update/internal/configurator/BundleManifest(0xDC8822C8) 3CLTEXTCLASS org/eclipse/update/internal/configurator/FeatureParser(0xDC882630) 3CLTEXTCLASS org/eclipse/update/internal/configurator/PluginParser(0xDC882AC0) 3CLTEXTCLASS org/eclipse/update/internal/configurator/PluginParser$ParseCompleteException(0xDC882ED0) 3CLTEXTCLASS org/eclipse/update/internal/configurator/branding/IBundleGroupConstants(0xDC882FE8) 3CLTEXTCLASS org/eclipse/update/internal/configurator/branding/IProductConstants(0xDC8830D8) 3CLTEXTCLASS org/eclipse/update/internal/configurator/FeatureEntry(0xDC883240) 3CLTEXTCLASS [Lorg/eclipse/update/internal/configurator/SiteEntry;(0xDC883A58) 3CLTEXTCLASS [Lorg/eclipse/update/configurator/IPlatformConfiguration$ISiteEntry;(0xDC883B10) 3CLTEXTCLASS [Lorg/eclipse/update/internal/configurator/FeatureEntry;(0xDC883BC8) 3CLTEXTCLASS org/eclipse/update/internal/configurator/XMLPrintHandler(0xDC883C80) 3CLTEXTCLASS [Lorg/eclipse/update/configurator/IPlatformConfiguration$IFeatureEntry;(0xDC883F88) 3CLTEXTCLASS org/eclipse/update/internal/configurator/branding/AboutInfo(0xDC884078) 3CLTEXTCLASS org/eclipse/update/internal/configurator/PlatformConfiguration(0xDC87E580) 3CLTEXTCLASS org/eclipse/update/configurator/IPlatformConfiguration$ISiteEntry(0xDC87F7F8) 3CLTEXTCLASS org/eclipse/update/configurator/IPlatformConfiguration$ISitePolicy(0xDC87F940) 3CLTEXTCLASS org/eclipse/update/configurator/IPlatformConfiguration$IFeatureEntry(0xDC87FA20) 3CLTEXTCLASS org/eclipse/update/internal/configurator/Locker(0xDC87FB30) 3CLTEXTCLASS org/eclipse/update/internal/configurator/Locker_JavaNio(0xDC87FC10) 3CLTEXTCLASS org/eclipse/update/internal/configurator/branding/IniFileReader(0xDC87FDF0) 3CLTEXTCLASS org/eclipse/update/internal/configurator/Utils(0xDC86DF08) 3CLTEXTCLASS org/eclipse/update/configurator/IPlatformConfigurationFactory(0xDC86E7E8) 3CLTEXTCLASS org/eclipse/update/internal/configurator/PlatformConfigurationFactory(0xDC86E8D8) 3CLTEXTCLASS org/eclipse/update/configurator/IPlatformConfiguration(0xDC86EA40) 3CLTEXTCLASS org/eclipse/update/configurator/ConfiguratorUtils(0xDC86ECC0) 3CLTEXTCLASS org/eclipse/update/internal/configurator/ConfigurationActivator(0xDDCDC6A8) 3CLTEXTCLASS org/eclipse/update/internal/configurator/IConfigurationConstants(0xDCEC8CB8) 3CLTEXTCLASS org/eclipse/update/internal/configurator/BundleGroupComponent(0xDCEC8848) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0052AA8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/ImagesOnFileSystemRegistry(0x11347800) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavadocContentAccess2(0x11347B90) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavadocContentAccess2$JavadocLookup(0x11348AD0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavadocContentAccess2$3(0x11348EC0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavadocContentAccess2$JavadocLookup$DescriptionGetter(0x11348FE0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavadocContentAccess2$4(0x113490A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavadocContentAccess2$InheritDocVisitor(0x113491D0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavadocContentAccess2$8(0x11349420) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavadocContentAccess2$1(0x113495C0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavadocContentAccess2$2(0x113496C0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/SuperTypeHierarchyCache(0x113497C0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/LRUMap(0x11349BA0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/SuperTypeHierarchyCache$HierarchyCacheEntry(0x11349D48) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavadocContentAccess2$5(0x11349F60) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/MethodOverrideTester(0x1134A0B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavadocContentAccess2$10(0x1134A620) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/JavadocBrowserInformationControlInput(0x1134A7A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/JavadocHover$HoverControlCreator(0x1134A978) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/JavadocHover$2(0x1134AC18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/JavadocHover$PresenterControlCreator(0x1134ADF0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/DeleteWizard(0xD917CC40) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/UserInterfaceManager$Tuple(0xD917CF20) 3CLTEXTCLASS org/eclipse/jdt/ui/refactoring/RefactoringSaveHelper(0xD917D058) 3CLTEXTCLASS org/eclipse/jdt/ui/refactoring/RefactoringSaveHelper$2(0xD917D538) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/MessageWizardPage(0xD917D908) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/DeleteWizard$DeleteInputPage(0xD917DD28) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/RefactoringCoreMessages(0xD917E3A8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ReadOnlyResourceFinder(0xD917F780) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/DeleteModifications(0xD917FA48) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/participants/ResourceModifications(0xD917FE60) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/participants/ResourceModifications$DeltaDescription(0xD9180360) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/participants/ResourceModifications$ChangedDescription(0xD9180488) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/participants/ResourceModifications$CreateDescription(0xD91805C8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/participants/ResourceModifications$DeleteDescription(0xD9180710) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/participants/ResourceModifications$MoveDescription(0xD9180848) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/participants/ResourceModifications$CopyDescription(0xD91809D8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/util/TextChangeManager(0xD9180B78) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/DeleteChangeCreator(0xD9180E00) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/UndoablePackageDeleteChange(0xD9181318) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/AbstractDeleteChange(0xD9181580) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/DeleteSourceManipulationChange(0xD91817D8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/ClasspathChange(0xD9181B28) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/DeletePackageFragmentRootChange(0xD9181E78) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/UndoDeleteResourceChange(0xD9182430) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/participants/JavaProcessors(0xD91826C8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/participants/ResourceProcessors(0xD9182890) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/JDTRefactoringDescriptorComment(0xD9182A50) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/JavaRefactoringDescriptorUtil(0xD9182F30) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/WorkspaceTracker(0xD91832E0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/WorkspaceTracker$ResourceListener(0xD91834F8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/DynamicValidationStateChange$1(0xD9183640) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerContentProvider$2(0xD9183778) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaAnnotationImageProvider(0xD91838D8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/AddTypeParameterProposal(0xD9183D20) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/JavaElementLinks(0xD9184170) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/JavaElementLinks$JavaElementLinkedLabelComposer(0xD9184628) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/structure/ExtractSupertypeProcessor(0x113178D0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/DeleteRefactoringContribution(0x11318A38) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/JavaDeleteProcessor(0x11318C38) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/MoveRefactoringContribution(0x11319CC8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/JavaMoveProcessor(0x11319F08) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/CopyRefactoringContribution(0x1131A6F8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/JavaCopyProcessor(0x1131A8F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/UserLibraryMarkerResolutionGenerator(0x1131AF18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javadocexport/CreateJavadocActionDelegate(0x1131B3C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/ASTProvider$1(0x1131B588) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/RefactoringExecutionStarter(0x1131B818) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/ChangeSignatureWizard(0x1131C710) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/ChangeTypeWizard(0x1131CA00) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/IScheduledRefactoring(0x1131CCC0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/fix/CleanUpRefactoring(0x1131CDE0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/fix/CleanUpRefactoringWizard(0x1131D890) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/RefactoringExecutionHelper(0x1131DAF8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/actions/RefactoringStarter(0x1131DEB8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/ConvertAnonymousToNestedWizard(0x1131E120) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/ReorgCopyWizard(0x1131E400) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/INewNameQueries(0x1131E608) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/ExtractInterfaceWizard(0x1131E7F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/ExtractSupertypeWizard(0x1131EAE0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/InferTypeArgumentsWizard(0x1131EE10) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/InlineConstantWizard(0x1131F0F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/code/InlineMethodWizard(0x1131F438) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ICreateTargetQueries(0x1131F660) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/code/IntroduceFactoryRefactoring(0x112CF730) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/IntroduceIndirectionRefactoringContribution(0x112D0A60) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/code/IntroduceIndirectionRefactoring(0x112D0C40) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/PromoteTempToFieldRefactoringContribution(0x112D21C0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/code/PromoteTempToFieldRefactoring(0x112D23C8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/SelfEncapsulateRefactoringContribution(0x112D3638) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/sef/SelfEncapsulateFieldRefactoring(0x112D3860) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/InferTypeArgumentsRefactoringContribution(0x112D4A18) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/generics/InferTypeArgumentsRefactoring(0x112D4BE8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/ChangeTypeRefactoringContribution(0x112D5730) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/structure/ChangeTypeRefactoring(0x112D5918) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/ExtractSupertypeRefactoringContribution(0x112D6D00) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/InlineTempWizard(0x112D6F80) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/IntroduceFactoryWizard(0x112D7278) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/DeleteUserInterfaceManager(0x112D74B8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/code/ExtractMethodRefactoring(0x112776C0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/ExtractTempRefactoringContribution(0x11278AA8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/code/ExtractTempRefactoring(0x11278C90) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/ExtractConstantRefactoringContribution(0x11279F70) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/code/ExtractConstantRefactoring(0x1127A170) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/ExtractClassContribution(0x1127B2B8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/structure/ExtractClassRefactoring(0x1127B468) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/IntroduceParameterRefactoringContribution(0x1127C3D0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/code/IntroduceParameterRefactoring(0x1127C5C0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/IntroduceParameterObjectContribution(0x1127D3C8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/structure/IntroduceParameterObjectProcessor(0x1127D650) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/IntroduceFactoryRefactoringContribution(0x1127E5F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/IntroduceIndirectionWizard(0x1127E868) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/IntroduceParameterWizard(0x1127EB68) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/MoveInnerToTopWizard(0x1127EE78) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/MoveInstanceMethodWizard(0x1127F1B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/UserInterfaceStarter(0x1127F400) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/structure/PushDownRefactoringProcessor(0x1143D468) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/ConvertAnonymousRefactoringContribution(0x1143E670) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/code/ConvertAnonymousToNestedRefactoring(0x1143E868) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/MoveMemberTypeRefactoringContribution(0x1143FC98) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/structure/MoveInnerToTopRefactoring(0x1143FE80) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/InlineMethodRefactoringContribution(0x11441AC0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/code/InlineMethodRefactoring(0x11441E10) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/InlineTempRefactoringContribution(0x114429D0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/code/InlineTempRefactoring(0x11442B98) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/InlineConstantRefactoringContribution(0x11443710) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/code/InlineConstantRefactoring(0x114438F0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/ExtractMethodRefactoringContribution(0x114444E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/ReorgMoveWizard(0x11444750) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/MoveMembersWizard(0x11444A80) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/PullUpWizard(0x11444D70) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/PushDownWizard(0x114450A0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/structure/MoveStaticMembersProcessor(0x11147F58) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/ExtractInterfaceRefactoringContribution(0x11149460) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/structure/constraints/SuperTypeRefactoringProcessor(0x111496B0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/structure/ExtractInterfaceProcessor(0x1114A698) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/UseSupertypeRefactoringContribution(0x1114B948) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/structure/UseSuperTypeProcessor(0x1114BBA8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/PullUpRefactoringContribution(0x1114C4B8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/structure/HierarchyProcessor(0x1114C738) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/structure/PullUpRefactoringProcessor(0x1114D5A0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/PushDownRefactoringContribution(0x1114F170) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/code/ReplaceInvocationsWizard(0x1114F3F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/sef/SelfEncapsulateFieldWizard(0x1114F6D0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/UseSupertypeWizard(0x1114F9E0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/DynamicValidationRefactoringChange(0x1114FC88) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/rename/RenamePackageProcessor(0x111F69B8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/RenameSourceFolderRefactoringContribution(0x111F77D8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/rename/RenameSourceFolderProcessor(0x111F79E8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/RenameTypeParameterRefactoringContribution(0x111F8070) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/rename/RenameTypeParameterProcessor(0x111F8288) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/RenameTypeRefactoringContribution(0x111F8A38) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/rename/RenameTypeProcessor(0x111F8CB0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/ChangeMethodSignatureRefactoringContribution(0x111FA830) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/structure/ChangeSignatureProcessor(0x111FAA98) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/MoveMethodRefactoringContribution(0x111FC9F0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/structure/MoveInstanceMethodProcessor(0x111FCCB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/compare/JavaCompareUtilities(0xD9100048) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/ClasspathAttributeConfiguration(0xD91006F0) 3CLTEXTCLASS [Lorg/eclipse/jdt/ui/wizards/ClasspathAttributeConfiguration;(0xD9100868) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/ClasspathAttributeConfigurationDescriptors$1(0xD9100928) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/NativeLibAttributeConfiguration(0xD9100AE8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/JavaUIRefactoringContribution(0xD9100D08) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/RenameCompilationUnitRefactoringContribution(0xD9100E18) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/tagging/INameUpdating(0xD9100FB8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/rename/JavaRenameProcessor(0xD9101128) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/tagging/ITextUpdating(0xD9101448) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/tagging/ISimilarDeclarationUpdating(0xD9101548) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/rename/RenameCompilationUnitProcessor(0xD91016F8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/RenameEnumConstRefactoringContribution(0xD9102218) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/tagging/IDelegateUpdating(0xD91023B8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/rename/RenameFieldProcessor(0xD9102588) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/rename/RenameEnumConstProcessor(0xD9103870) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/RenameFieldRefactoringContribution(0xD9103DB8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/RenameJavaProjectRefactoringContribution(0xD9103F80) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/rename/RenameJavaProjectProcessor(0xD9104198) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/RenameLocalVariableRefactoringContribution(0xD9104890) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/rename/RenameLocalVariableProcessor(0xD9104AA8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/RenameMethodRefactoringContribution(0xD9105498) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/rename/RenameMethodProcessor(0xD9105798) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/rename/RenameVirtualMethodProcessor(0xD91068C0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/rename/RenameNonVirtualMethodProcessor(0xD9106F88) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/RenamePackageRefactoringContribution(0xD91074A8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/scripting/MoveStaticMembersRefactoringContribution(0xD9107670) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/IntroduceParameterObjectWizard(0xD91078F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/ExtractClassWizard(0xD9107BE8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/ScrolledPageContent(0xD9060248) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorer(0xD9060B08) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/filters/LibraryFilter(0xD9061110) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorer$PackageFilter(0xD9061280) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorer$ExtendedJavaElementSorter(0xD90614A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorer$PackageLabelProvider(0xD9061620) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/HintTextGroup(0xD9061970) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/WorkingSetModel$WorkingSetComparar(0xD9061F80) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorer$1(0xD90620E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorer$2(0xD90622A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorer$PackageContentProvider(0xD9062478) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/NewSourceContainerWorkbookPage$2(0xD9062708) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/HintTextGroup$1(0xD90628B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorerActionGroup(0xD9062A68) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorerActionGroup$1(0xD90630E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorerActionGroup$2(0xD90633B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorerActionGroup$3(0xD9063688) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorerActionGroup$4(0xD9063960) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorerActionGroup$5(0xD9063C38) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorerActionGroup$6(0xD9063F10) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/CreateLinkedSourceFolderAction2(0xD90641E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorerActionGroup$7(0xD90644C0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/CreateSourceFolderAction2(0xD90647E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorerActionGroup$8(0xD9064AB8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/ClasspathModifierDropDownAction(0xD9064DF0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/ResetAllAction(0xD90652E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/NewSourceContainerWorkbookPage$3(0xD9065750) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/ResetAllOutputFoldersAction(0xD90659B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/NewSourceContainerWorkbookPage$4(0xD9065F30) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/HelpAction(0xD90661E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/DialogField$1(0xD9066400) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewJavaProjectWizardPageTwo$1$UpdateRunnable(0xD9066528) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/util/CoreUtility(0xD90666E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/util/CoreUtility$BuildJob(0xD9066A80) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/ResetAllAction$1(0xD9066DE0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/NewSourceContainerWorkbookPage$1(0xD9066F70) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/ProjectsWorkbookPage$1(0xD9067098) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/LibrariesWorkbookPage$1(0xD90671C0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/DialogPackageExplorer$3(0xD90672E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/BuildPathSupport(0xD9067490) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/BuildpathModifierAction;(0xD9067A90) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/CorrectionMarkerResolutionGenerator(0xD9030100) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ReorgPolicyFactory$PackagesReorgPolicy(0xD9030610) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ReorgPolicyFactory$MovePackagesPolicy(0xD9030DB0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/PackageReorgChange(0xD9031518) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/MovePackageChange(0xD9031878) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/RefreshAction$1(0xD9031A48) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/RefreshAction$WrappedWorkbenchRefreshAction(0xD9031C98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/ResourceAdapterFactory(0xD9032098) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/JavaProjectWizard(0xD9032350) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewJavaProjectWizardPageOne(0xD9032878) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewJavaProjectWizardPageOne$NameGroup(0xD9033240) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewJavaProjectWizardPageOne$LocationGroup(0xD9033548) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewJavaProjectWizardPageOne$JREGroup(0xD9033A08) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/ComboDialogField(0xD9034260) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewJavaProjectWizardPageOne$1(0xD90346F8) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewJavaProjectWizardPageOne$2(0xD9034870) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewJavaProjectWizardPageOne$LayoutGroup(0xD90349C8) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewJavaProjectWizardPageOne$WorkingSetGroup(0xD9034D98) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewJavaProjectWizardPageOne$DetectGroup(0xD9034FD8) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewJavaProjectWizardPageOne$Validator(0xD9035530) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/JavaCapabilityConfigurationPage(0xD9035920) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewJavaProjectWizardPageTwo(0xD9035F68) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/ComboDialogField$1(0xD9036A18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/ComboDialogField$2(0xD9036B58) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/JavaCapabilityConfigurationPage$1(0xD9036CB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/util/ViewerPane(0xD9037458) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/HintTextGroup$2(0xD9037CE8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/NewElementWizard$2(0xD9037E18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/JavaProjectWizard$1(0xD9037F68) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/ReorgCorrectionsSubProcessor(0xD93180A0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/AbstractJavaElementRenameChange(0xD93187B0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/RenameCompilationUnitChange(0xD9318B30) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/CreatePackageChange(0xD9318E08) 3CLTEXTCLASS org/eclipse/jdt/ui/cleanup/ICleanUpFix(0xD9319040) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/fix/IProposableFix(0xD93190F0) 3CLTEXTCLASS org/eclipse/jdt/ui/cleanup/ICleanUp(0xD93191C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/ReorgCorrectionsSubProcessor$ClasspathFixCorrectionProposal(0xD9319340) 3CLTEXTCLASS [Lorg/eclipse/jdt/ui/text/java/IJavaCompletionProposal;(0xD9319670) 3CLTEXTCLASS org/eclipse/jdt/ui/text/java/CompletionProposalComparator(0xD9319730) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/AbstractJavaCompletionProposal(0xD93199C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/JavaHoverMessages(0xD931AB18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/AbstractAnnotationHover$4(0xD931AD18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/AbstractAnnotationHover$5(0xD931AEE8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/IStatusLineProposal(0xD931B048) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/FixCorrectionProposal(0xD931B198) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/AbstractAnnotationHover$2(0xD931B788) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/AbstractAnnotationHover$3(0xD931B910) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/AddImportOnSelectionAction$SelectTypeQuery(0xD931BAC0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/AddImportOnSelectionAction$1(0xD931BE48) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/codemanipulation/AddImportsOperation(0xD931C140) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/AddImportOnSelectionAction$2(0xD931C928) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/RenameNodeCorrectionProposal(0xD931CB18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/TypeMismatchSubProcessor(0xD931CD50) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/CastCorrectionProposal(0xD931D560) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/ChangeMethodSignatureProposal$ChangeDescription(0xD931D940) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/text/correction/proposals/ChangeMethodSignatureProposal$ChangeDescription;(0xD931D9F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/ChangeMethodSignatureProposal$ModifyDescription(0xD931DAA8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/ChangeMethodSignatureProposal$EditDescription(0xD931DBC8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/BindingLabelProvider(0xD931DCE0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/ChangeMethodSignatureProposal(0xD931E508) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/ChangeMethodSignatureProposal$InsertDescription(0xD931ED10) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/AbstractMethodCorrectionProposal(0xD931EEA0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/NewMethodCorrectionProposal(0xD931F4F0) 3CLTEXTCLASS org/eclipse/jdt/ui/dialogs/TypeSelectionExtension(0xD931FAB8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/UserInterfaceManager(0xD931FC38) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/AddArgumentCorrectionProposal(0xD949B968) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/SimilarElementsRequestor(0xD949BD80) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/NameMatcher(0xD949C228) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/SimilarElement(0xD949C390) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/text/correction/SimilarElement;(0xD949C570) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/ScopeAnalyzer$DefaultBindingRequestor(0xD949C630) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/CorrectionMessages(0xD949C830) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/CUCorrectionProposal$1$EditAnnotator(0xD949CEF0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/NewCUUsingWizardProposal(0xD949D1B8) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewElementWizardPage(0xD949DBA0) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewContainerWizardPage(0xD949DEE0) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewTypeWizardPage(0xD949E9F0) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewClassWizardPage(0xD94A0C58) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/NewClassCreationWizard(0xD94A1478) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewInterfaceWizardPage(0xD94A1948) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/NewInterfaceCreationWizard(0xD94A1ED0) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewEnumWizardPage(0xD94A23A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/NewEnumCreationWizard(0xD94A2928) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/NewAnnotationWizardPage(0xD94A2DF8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/NewAnnotationCreationWizard(0xD94A3360) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/ClipboardOperationAction$ClipboardData(0xD94A46F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaHeuristicScanner$StopCondition(0xD94A4978) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaHeuristicScanner$NonWhitespace(0xD94A4AB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaHeuristicScanner$NonWhitespaceDefaultPartition(0xD94A4BF8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaHeuristicScanner$NonJavaIdentifierPart(0xD94A4DA8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaHeuristicScanner$NonJavaIdentifierPartDefaultPartition(0xD94A4EE0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaHeuristicScanner$CharacterMatch(0xD94A5090) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaIndenter(0xD94A5280) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaIndenter$CorePrefs(0xD94A5998) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitEditor$BracketLevel(0xD94A5FC0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitEditor$ExitPolicy(0xD94A60C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitEditor$1(0xD94A62D8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/nls/NLSHintHelper(0xD94A64C0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/nls/NLSHintHelper$1(0xD94A6DE0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaElementHyperlink(0xD94A7328) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/BestMatchHover(0xD94A7560) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/NLSStringHover(0xD94A7870) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/JavaSourceHover(0xD94A7D10) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/AnnotationHover(0xD94A7FE8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/AbstractAnnotationHover$HoverControlCreator(0xD94A8110) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/AbstractAnnotationHover$PresenterControlCreator(0xD94A82A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/AbstractAnnotationHover$AnnotationInformationControl(0xD94A8490) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/AbstractAnnotationHover$6(0xD94A8DF8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/AbstractAnnotationHover$1(0xD94A8FB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/ProblemLocation(0xD94A9170) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/AssistContext(0xD94A9580) 3CLTEXTCLASS [Lorg/eclipse/jdt/ui/text/java/IProblemLocation;(0xD94A9878) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/JavaCorrectionProcessor$SafeCorrectionCollector(0xD94A9948) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/UnresolvedElementsSubProcessor(0xD94A9B40) 3CLTEXTCLASS org/eclipse/jdt/ui/text/java/IJavaCompletionProposal(0xD94AAE20) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/ICommandAccess(0xD94AAED8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/ChangeCorrectionProposal(0xD94AAFE8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/CUCorrectionProposal(0xD94AB688) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/ASTRewriteCorrectionProposal(0xD94ABDB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/AddImportCorrectionProposal(0xD94AC0B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/proposals/LinkedCorrectionProposal(0xD94AC380) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/SourceContainerWorkbookPage(0xD928A8A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/BuildPathsBlock$IRemoveOldBinariesQuery(0xD928B228) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/TypedViewerFilter(0xD928B300) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/BuildPathsBlock$BuildPathAdapter(0xD928B488) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/util/TableLayoutComposite(0xD928BC90) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/CPListLabelProvider(0xD928C5E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/SharedImages(0xD928CD18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/ClasspathAttributeConfigurationDescriptors(0xD928CE58) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/ClasspathAttributeConfigurationDescriptors$Descriptor(0xD928D098) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/ListDialogField$ListViewerAdapter(0xD928D2A0) 3CLTEXTCLASS org/eclipse/jdt/ui/wizards/ClasspathAttributeConfiguration$ClasspathAttributeAccess(0xD928D488) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/CPListElementAttribute$1(0xD928D5B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/ArchiveFileFilter(0xD928D728) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dialogs/StatusUtil(0xD928D990) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/ITreeListAdapter(0xD928DAE0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/CPListElementSorter(0xD928DC18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/AddSourceFolderWizard(0xD928DE88) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/SourceContainerWorkbookPage$SourceContainerAdapter(0xD928E2B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/TreeListDialogField(0xD928E5F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/TreeListDialogField$TreeViewerAdapter(0xD928F2B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/SelectionButtonDialogField(0xD928F580) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/wizards/dialogfields/DialogField;(0xD928F928) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/LayoutUtil(0xD928F9E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/TreeListDialogField$1(0xD928FC80) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/TreeListDialogField$2(0xD928FDB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/SelectionButtonDialogField$1(0xD928FF10) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/StringDialogField$1(0xD9290068) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/StringButtonDialogField$1(0xD92901A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/ProjectsWorkbookPage(0xD9290338) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/ProjectsWorkbookPage$ProjectsAdapter(0xD9290B98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/LibrariesWorkbookPage(0xD9290E28) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/LibrariesWorkbookPage$LibrariesAdapter(0xD9291CB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/ImageDisposer(0xD9291F38) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/ClasspathOrderingWorkbookPage(0xD92920C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/CheckedListDialogField$1(0xD9292310) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/ListDialogField$1(0xD9292440) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/ListDialogField$2(0xD9292570) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/BuildPathsBlock$1(0xD92926D0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/saveparticipant/SaveParticipantRegistry(0xD9200060) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/saveparticipant/IPostSaveListener(0xD9200428) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/saveparticipant/SaveParticipantDescriptor(0xD9200530) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/saveparticipant/SaveParticipantRegistry$1(0xD92006F0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/javaeditor/saveparticipant/IPostSaveListener;(0xD9200820) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/saveparticipant/ISaveParticipantPreferenceConfiguration(0xD92008C0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/fix/CleanUpPostSaveListener(0xD9200A20) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/fix/CleanUpRefactoring$CleanUpChange(0xD92015B0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/fix/CleanUpPostSaveListener$CleanUpSaveUndo(0xD92018F8) 3CLTEXTCLASS org/eclipse/jdt/ui/cleanup/CleanUpContext(0xD9201D40) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/fix/IMultiLineCleanUp$MultiLineCleanUpContext(0xD9201E90) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/saveparticipant/AbstractSaveParticipantPreferenceConfiguration(0xD9201FD8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/fix/CleanUpSaveParticipantPreferenceConfiguration(0xD9202460) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/IDialogFieldListener(0xD9202D50) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/EditorInputAdapterFactory(0xD9202E20) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/IStatusChangeListener(0xD9203098) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/BuildPathsPropertyPage(0xD9203240) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/BuildPathsBlock(0xD92039C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/IListAdapter(0xD9204D08) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/IStringButtonAdapter(0xD9204DD8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/DialogField(0xD9204ED8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/ListDialogField(0xD92053C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/CheckedListDialogField(0xD92061E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/StringDialogField(0xD92067E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/StringButtonDialogField(0xD9206C30) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/BuildPathBasePage(0xD9206FD0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/buildpath/IBuildpathModifierListener(0xD9207370) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/NewSourceContainerWorkbookPage(0xD9207478) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/wizards/buildpaths/CPListElement;(0xD9207D60) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/dialogfields/TreeListDialogField$3(0xD9207E18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/ASTResolving(0xD9767220) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/TypeBindingVisitor(0xD9767F58) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/ASTResolving$AllBindingsVisitor(0xD97682C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/ASTResolving$AllBindingsVisitor$VisitCancelledException(0xD97686F8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/codemanipulation/ImportReferencesCollector(0xD9768AE0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/codemanipulation/OrganizeImportsOperation$TypeReferenceProcessor(0xD9769508) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/TypeNameMatchCollector(0xD9769BB0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/ScopeAnalyzer(0xD9769D18) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/ScopeAnalyzer$IBindingRequestor(0xD976A4D8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/HierarchicalASTVisitor(0xD976A890) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/ScopeAnalyzer$DeclarationsAfterVisitor(0xD976BC58) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/ScopeAnalyzer$ScopeAnalyzerVisitor(0xD976C410) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/codemanipulation/OrganizeImportsOperation$TypeReferenceProcessor$UnresolvedTypeData(0xD976CB40) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/TypeFilter(0xD976CCD8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/util/TypeNameMatchLabelProvider(0xD976D008) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dialogs/MultiElementListSelectionDialog$Page(0xD976D360) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/dialogs/MultiElementListSelectionDialog$Page;(0xD976D478) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/search/OccurrencesFinder(0xD976D7F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$OccurrencesFinderJob(0xD976E298) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/NLSKeyHyperlinkDetector(0xD976E710) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaElementHyperlinkDetector(0xD976E9A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaElementHyperlinkImplementationDetector(0xD976EC78) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/BuildPathsPropertyPage$1(0xD976EE28) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/BuildPathsBlock$2(0xD976EF60) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/ClipboardOperationAction$1(0xD976F0A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/search/ExceptionOccurrencesFinder(0x10F37D20) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/search/MethodExitsFinder(0x10F38978) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/search/BreakContinueTargetFinder(0x10F39638) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/search/ImplementOccurrencesFinder(0x10F39F78) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/search/ImplementOccurrencesFinder$MethodVisitor(0x10F3A638) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/ContributedProcessorDescriptor(0x10F3AAE0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dialogs/StatusInfo(0x10F3AF68) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/text/correction/ContributedProcessorDescriptor;(0x10F3B2D0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/JavaCorrectionProcessor$SafeCorrectionProcessorAccess(0x10F3B3A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/JavaCorrectionProcessor$SafeHasCorrections(0x10F3B5D8) 3CLTEXTCLASS org/eclipse/jdt/ui/text/java/IQuickFixProcessor(0x10F3B798) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingManager$HighlightedPosition;(0x10F3B870) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingPresenter$1(0x10F3B928) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitEditor$4(0x10F3BA80) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/QuickFixProcessor(0x10F3BBB0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/JdtFlags(0x10F3C108) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ReorgPolicyFactory$SubCuElementReorgPolicy(0x10F3C848) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ReorgPolicyFactory$MoveSubCuElementsPolicy(0x10F3D3D0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ReorgPolicyFactory$MoveMembersPolicy(0x10F3DC38) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/codemanipulation/ContextSensitiveImportRewriteContext(0x10F3DE18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/SuppressWarningsSubProcessor(0x10F3E228) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/util/ElementValidator(0x10F3E808) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/Resources(0x10F3EAE8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/JavaPreferencesSettings(0x10F3EF60) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/codemanipulation/OrganizeImportsOperation(0x10F3F118) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OrganizeImportsAction$1(0x10F3F668) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OrganizeImportsAction$3(0x10F3F7A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/CPListElementAttribute(0xD97200C0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ReorgPolicyFactory(0xD97203D8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/IReorgDestinationValidator(0xD9720B90) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/IReorgPolicy(0xD9720C50) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/IReorgPolicy$ICopyPolicy(0xD9720DD0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/tagging/IReferenceUpdating(0xD9720EA0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/tagging/IQualifiedNameUpdating(0xD9720F60) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/IReorgPolicy$IMovePolicy(0xD9721050) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ReorgPolicyFactory$ReorgPolicy(0xD9721240) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ReorgPolicyFactory$NoCopyPolicy(0xD97219A8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ReorgPolicyFactory$NoMovePolicy(0xD9721D88) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ReorgPolicyFactory$ActualSelectionComputer(0xD9722248) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy(0xD9722500) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy(0xD9722E90) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/CompilationUnitReorgChange(0xD9723AF8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/MoveCompilationUnitChange(0xD9723EF8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/WorkspaceTracker$Listener(0xD9724248) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/changes/DynamicValidationStateChange(0xD9724388) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/RefactoringModifications(0xD9724740) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/MoveModifications(0xD97249E0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ArrayTypeConverter(0xD9724DF8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/CreateTargetExecutionLog(0xD9724FB8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/util/QualifiedNameSearchResult(0xD9725178) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaAnnotationIterator(0xD9725400) 3CLTEXTCLASS org/eclipse/jdt/ui/text/folding/DefaultJavaFoldingStructureProvider$Tuple(0xD9725618) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/SpellCheckIterator(0xD9725758) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/engine/AbstractSpellDictionary$ByteArrayWrapper(0xD9725C98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/engine/SpellEvent(0xD9725DF8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/CoreSpellingProblem(0xD9726030) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitDocumentProvider$ReverseMap$Entry(0xD9726350) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaWordFinder(0xD9726438) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/Bindings(0xD9726588) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/search/IOccurrencesFinder$OccurrenceLocation(0xD97271F0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/search/IOccurrencesFinder$OccurrenceLocation;(0xD97273C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/WorkbenchRunnableAdapter(0xD9727490) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/WorkbenchRunnableAdapter$1(0xD97277F0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/codemanipulation/CodeGenerationMessages(0xD9727A80) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/BasicElementLabels(0xD9727C70) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/ASTFlattener(0xDAD20C30) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/ASTNodes$ChildrenCollector(0xDAD22600) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/ASTNodes$1(0xDAD22C88) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/ASTNodes$2(0xDAD23368) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/ASTNodes$3(0xDAD239E0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/ASTNodes$4(0xDAD24060) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/codemanipulation/StubUtility(0xDAD24438) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/TypingRunDetector$SelectionListener(0xDAD25808) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaOutlinePage$1(0xDAD25A20) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/util/ResourceUtil(0xDAD25BB8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/util/SelectionUtil(0xDAD25D78) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/util/SelectionUtil$1(0xDAD26020) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/DefaultSpellingEngine(0xDAD26158) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/SpellingEngine(0xDAD263C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/JavaSpellingEngine(0xDAD26518) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/engine/ISpellEventListener(0xDAD26700) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/engine/ISpellCheckIterator(0xDAD267B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/PropertiesFileSpellingEngine(0xDAD268B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/TextSpellingEngine(0xDAD26B98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/engine/AbstractSpellDictionary(0xDAD26D48) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/TaskTagDictionary(0xDAD27578) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/engine/IPhoneticDistanceAlgorithm(0xDAD277E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/engine/IPhoneticHashProvider(0xDAD27890) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/engine/DefaultPhoneticDistanceAlgorithm(0xDAD27968) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/engine/DefaultPhoneticHashProvider(0xDAD27AE8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaOutlinePage(0xD99DFD90) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaOutlinePage$JavaOutlineViewer(0xD99E0E30) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaOutlinePage$5(0xD99E1400) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaOutlinePage$EmptySelectionProvider(0xD99E1598) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaOutlinePage$3(0xD99E1718) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaOutlinePage$ChildrenProvider(0xD99E1868) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaOutlinePage$NoClassElement(0xD99E1BB8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaOutlinePage$4(0xD99E1D60) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaOutlinePage$LexicalSortingAction(0xD99E1F28) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/SourcePositionComparator(0xD99E22B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaOutlinePage$2(0xD99E2490) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/MemberFilterActionGroup(0xD99E2640) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/MemberFilter(0xD99E2C00) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/MemberFilterAction(0xD99E2F20) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/viewsupport/MemberFilterAction;(0xD99E3148) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaOutlinePage$ToggleLinkingAction(0xD99E32A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaOutlinePage$ClassOnlyAction(0xD99E3580) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/CategoryFilterActionGroup(0xD99E3868) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/CategoryFilterActionGroup$2(0xD99E40D8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/CategoryFilterActionGroup$CategoryFilter(0xD99E4270) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/CategoryFilterActionGroup$IResultCollector(0xD99E43E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/CategoryFilterActionGroup$CategoryFilterMenuAction(0xD99E4548) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/CategoryFilterActionGroup$3(0xD99E4768) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaOutlinePage$ElementChangedListener(0xD99E48A8) 3CLTEXTCLASS org/eclipse/jdt/ui/OverrideIndicatorLabelDecorator(0xD99E4AB8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitDocumentProvider$CompilationUnitAnnotationModel$ProblemRequestorState(0xD99E4F58) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/JavaReconcilingStrategy$1(0xD99E5070) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$6(0xD99E5230) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$7(0xD99E5380) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/util/RefactoringFileBuffers(0xD99E5530) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/structure/ASTNodeSearchUtil(0xD99E56D8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/ASTNodes(0xD99E5E28) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/HtmlTagDictionary(0xD99E6C20) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/IJavaDocTagConstants(0xD99E6E08) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/JavaDocTagDictionary(0xD99E7030) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/engine/LocaleSensitiveSpellDictionary(0xD99E7260) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/engine/DefaultSpellChecker(0xD99E7490) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/engine/ISpellEvent(0xD99E7938) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/SpellingEngine$SpellEventListener(0xD99E7A58) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/CorrectionCommandHandler(0xD9997C30) 3CLTEXTCLASS org/eclipse/jdt/ui/text/java/IProblemLocation(0xD99980B0) 3CLTEXTCLASS org/eclipse/jdt/ui/text/folding/DefaultJavaFoldingStructureProvider$FoldingStructureComputationContext(0xD9998208) 3CLTEXTCLASS org/eclipse/jdt/ui/text/folding/DefaultJavaFoldingStructureProvider$1(0xD9998610) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/DocumentCharacterIterator(0xD9998778) 3CLTEXTCLASS org/eclipse/jdt/ui/text/folding/DefaultJavaFoldingStructureProvider$ElementChangedListener(0xD9998B48) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/JavaCodeScanner$AnnotationRule$ResettableScanner(0xD9998E08) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/JavaSpellingReconcileStrategy$SpellingProblemCollector(0xD9999000) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$EditorSelectionChangedListener(0xD9999240) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingManager(0xD9999390) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingManager$Highlighting(0xD99999B0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingManager$Highlighting;(0xD9999B20) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingPresenter(0xD9999C10) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingManager$HighlightedPosition(0xD999A2C0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingPresenter$HighlightingPositionUpdater(0xD999A548) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingReconciler(0xD999A7E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingReconciler$PositionCollector(0xD999B030) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightingReconciler$1(0xD999B730) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticToken(0xD999B9F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/breadcrumb/EditorBreadcrumb(0xD999BC40) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditorBreadcrumb(0xD999C4A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/breadcrumb/BreadcrumbViewer(0xD999CCA8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditorBreadcrumb$ProblemBreadcrumbViewer(0xD999DA18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditorBreadcrumbActionGroup(0xD999DFC0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditorBreadcrumb$4(0xD999E318) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/breadcrumb/EditorBreadcrumb$7(0xD999E5D0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$8(0xD999E778) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/SelectionListenerWithASTManager(0xD999E8A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/SelectionListenerWithASTManager$PartListenerGroup(0xD999EA88) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/SelectionListenerWithASTManager$3(0xD999EEF0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/SelectionListenerWithASTManager$1(0xD999F140) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/SelectionListenerWithASTManager$2(0xD999F280) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$OccurrencesFinderJobCanceler(0xD999F3D8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/JavaSpellingProblem(0xD999F628) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaSelectMarkerRulerAction2(0xD9960B98) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ShowInPackageViewAction(0xD9961078) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/ClipboardOperationAction(0xD99614F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/ClipboardOperationAction$ClipboardTransfer(0xD9961DA0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/BlockCommentAction(0xD99620B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/AddBlockCommentAction(0xD99625C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/RemoveBlockCommentAction(0xD9962A08) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/IndentAction(0xD9962D80) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaMoveLinesAction$SharedState(0xD99636A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/ICompoundEditListener(0xD99638E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompoundEditExitStrategy(0xD99639B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompoundEditExitStrategy$EventListener(0xD9963DE0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaMoveLinesAction$1(0xD9964078) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/javaeditor/JavaMoveLinesAction;(0xD99641A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/AddImportOnSelectionAction(0xD9964300) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/codemanipulation/AddImportsOperation$IChooseImportQuery(0xD9964828) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/AddImportOnSelectionAction$AddImportComparator(0xD99648F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/code/ExtractMethodWizard(0xD9964B38) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/ExtractTempWizard(0xD9964EA0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/ExtractConstantWizard(0xD99651C0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/PromoteTempWizard(0xD9965518) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/SurroundWithTryCatchAction(0xD9965800) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/compare/LocalHistoryActionGroup(0xD9965C88) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/compare/JavaHistoryAction(0xD9966048) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/compare/JavaCompareWithEditionAction(0xD99663E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/compare/JavaReplaceWithPreviousEditionAction(0xD9966678) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/compare/JavaReplaceWithEditionAction(0xD9966908) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/compare/JavaAddElementFromHistory(0xD9966B98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/compare/JavaHistoryActionImpl(0xD9966DC0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/compare/JavaCompareWithEditionActionImpl(0xD99674A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/compare/CompareMessages(0xD9967730) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/compare/JavaReplaceWithEditionActionImpl(0xD9967980) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/compare/JavaAddElementFromHistoryImpl(0xD9967F20) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/CorrectionCommandInstaller(0xD9968468) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/JavaConventionsUtil(0xD9968728) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/JavaStringAutoIndentStrategy(0xD994E698) 3CLTEXTCLASS org/eclipse/jdt/ui/text/JavaSourceViewerConfiguration$6(0xD994EA60) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaElementProvider(0xD994EBA0) 3CLTEXTCLASS org/eclipse/jdt/ui/text/JavaSourceViewerConfiguration$7(0xD994EDB8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaSelectAnnotationRulerAction(0xD994EFB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/OverrideIndicatorManager$OverrideIndicator(0xD994F498) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$SmartLineStartAction(0xD994F780) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$PreviousSubWordAction(0xD994FA60) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$NavigatePreviousSubWordAction(0xD994FE48) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaWordIterator(0xD9950088) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaBreakIterator(0xD99503E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaBreakIterator$Run(0xD9950830) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaBreakIterator$Whitespace(0xD9950980) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaBreakIterator$LineDelimiter(0xD9950A98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaBreakIterator$CamelCaseIdentifier(0xD9950C00) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaBreakIterator$Other(0xD9950E00) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$NextSubWordAction(0xD9950FC8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$NavigateNextSubWordAction(0xD99513B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$SelectPreviousSubWordAction(0xD9951668) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$SelectNextSubWordAction(0xD9951958) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$DeletePreviousSubWordAction(0xD9951C50) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$DeleteNextSubWordAction(0xD9951FC8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaTextSelection(0xD99522C0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/SelectionConverter(0xD9952668) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/FoldingActionGroup(0xD9952B58) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/FoldingActionGroup$PreferenceAction(0xD9953020) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/FoldingActionGroup$2(0xD9953270) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/FoldingActionGroup$FoldingAction(0xD99535B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/FoldingActionGroup$3(0xD9953858) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/FoldingActionGroup$4(0xD9953AE8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/FoldingActionGroup$5(0xD9953D78) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/FoldingActionGroup$1(0xD9953F68) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/FoldingMessages(0xD99540B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/selectionactions/SelectionHistory(0xD99542B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/selectionactions/SelectionHistory$1(0xD9954560) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/GenericVisitor(0xD9954938) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/dom/SelectionAnalyzer(0xD9955B08) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/selectionactions/SelectionActionMessages(0xD9956110) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/selectionactions/StructureSelectHistoryAction(0xD9956370) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/ContentAssistPreference(0xD99265D8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/PreferencesAdapter$1(0xD9926980) 3CLTEXTCLASS org/eclipse/jdt/ui/text/JavaSourceViewerConfiguration$1(0xD9926AC0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/JavaCorrectionAssistant(0xD9926C50) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/JavaCorrectionProcessor(0xD99272A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/JavaCorrectionProcessor$1(0xD99279E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/JavaCorrectionAssistant$2(0xD9927C78) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/JavaCorrectionAssistant$1(0xD9927DB8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/QuickAssistLightBulbUpdater(0xD9927F20) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/QuickAssistLightBulbUpdater$AssistAnnotation(0xD9928400) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/correction/QuickAssistLightBulbUpdater$2(0xD9928610) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/JavaFormattingStrategy(0xD9928768) 3CLTEXTCLASS org/eclipse/jdt/ui/text/JavaSourceViewerConfiguration$5(0xD99289C0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/JavaInformationProvider(0xD9928AF8) 3CLTEXTCLASS org/eclipse/jdt/ui/text/java/hover/IJavaEditorTextHover(0xD9928CC8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/JavaTypeHover(0xD9928DB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/AbstractJavaEditorTextHover(0xD9929018) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/AbstractAnnotationHover(0xD9929320) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/ProblemHover(0xD9929798) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/JavadocHover(0xD9929900) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/AbstractAnnotationHover$AnnotationInfo(0xD992A560) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/ProblemHover$ProblemInfo(0xD992A6D0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/JavaElementLinks$ILinkHandler(0xD992AAC8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/HTMLAnnotationHover(0xD992ABE0) 3CLTEXTCLASS org/eclipse/jdt/ui/text/JavaSourceViewerConfiguration$2(0xD992ADA8) 3CLTEXTCLASS org/eclipse/jdt/ui/text/JavaSourceViewerConfiguration$3(0xD992AEF0) 3CLTEXTCLASS org/eclipse/jdt/ui/text/JavaSourceViewerConfiguration$4(0xD992B028) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/SmartSemicolonAutoEditStrategy(0xD992B150) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/JavaAutoIndentStrategy(0xD992B930) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/Symbols(0xD992C550) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaHeuristicScanner(0xD992C6E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/JavaDoubleClickSelector(0xD992CD70) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/JavaDoubleClickSelector$AtJavaIdentifierDetector(0xD992CF88) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/JavaEditorTextHoverDescriptor(0xD992D2A0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/text/java/hover/JavaEditorTextHoverDescriptor;(0xD992D7F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/hover/JavaEditorTextHoverProxy(0xD992D8D8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavaDocAutoIndentStrategy(0xD992DB58) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/PartitionDoubleClickSelector(0xD992E208) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/JavadocDoubleClickStrategy(0xD992E3E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/OverrideIndicatorManager$1(0xD9CE68D8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/ToggleCommentAction(0xD9CE6E90) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditorErrorTickUpdater$1(0xD9CE73F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitEditor$AdaptedSourceViewer(0xD9CE78E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/TypingRunDetector(0xD9CE7F98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/TypingRunDetector$TextListener(0xD9CE8478) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/TypingRunDetector$Change(0xD9CE85C0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/TypingRun(0xD9CE87C0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/TypingRun$ChangeType(0xD9CE8958) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/SmartBackspaceManager$1(0xD9CE8AA8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaSourceViewer$1(0xD9CE8C18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$3(0xD9CE8DA0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$4(0xD9CE8EF0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/folding/JavaFoldingStructureProviderRegistry(0xD9CE9040) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/folding/JavaFoldingStructureProviderDescriptor(0xD9CE9330) 3CLTEXTCLASS org/eclipse/jdt/ui/text/folding/IJavaFoldingPreferenceBlock(0xD9CE9528) 3CLTEXTCLASS org/eclipse/jdt/ui/text/folding/IJavaFoldingStructureProviderExtension(0xD9CE9618) 3CLTEXTCLASS org/eclipse/jdt/ui/text/folding/DefaultJavaFoldingStructureProvider(0xD9CE9748) 3CLTEXTCLASS org/eclipse/jdt/ui/text/folding/DefaultJavaFoldingStructureProvider$Filter(0xD9CEA2F0) 3CLTEXTCLASS org/eclipse/jdt/ui/text/folding/DefaultJavaFoldingStructureProvider$CommentPosition(0xD9CEA3E0) 3CLTEXTCLASS org/eclipse/jdt/ui/text/folding/DefaultJavaFoldingStructureProvider$JavaElementPosition(0xD9CEA628) 3CLTEXTCLASS org/eclipse/jdt/ui/text/folding/DefaultJavaFoldingStructureProvider$JavaProjectionAnnotation(0xD9CEA868) 3CLTEXTCLASS org/eclipse/jdt/ui/text/folding/DefaultJavaFoldingStructureProvider$MemberFilter(0xD9CEAA88) 3CLTEXTCLASS org/eclipse/jdt/ui/text/folding/DefaultJavaFoldingStructureProvider$CommentFilter(0xD9CEABE8) 3CLTEXTCLASS org/eclipse/jdt/ui/text/folding/DefaultJavaFoldingStructureProvider$ProjectionListener(0xD9CEAD28) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/CompositeReconcilingStrategy(0xD9CEAED8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaCompositeReconcilingStrategy(0xD9CEB0E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/JavaReconcilingStrategy(0xD9CEB380) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/JavaSpellingReconcileStrategy(0xD9CEB768) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaReconciler(0xD9CEBA80) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaReconciler$PartListener(0xD9CEBFB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaReconciler$ActivationListener(0xD9CEC188) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaReconciler$ElementChangedListener(0xD9CEC330) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaReconciler$ResourceChangeListener(0xD9CEC4F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaReconciler$1(0xD9CEC6C0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/ContentAssistProcessor(0xD9CEC848) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/JavaCompletionProcessor(0xD9CED250) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dialogs/OptionalMessageDialog(0xD9CED5A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/ContentAssistProcessor$2(0xD9CEDAF0) 3CLTEXTCLASS org/eclipse/jdt/ui/text/java/ContentAssistInvocationContext(0xD9CEDE68) 3CLTEXTCLASS org/eclipse/jdt/ui/text/java/JavaContentAssistInvocationContext(0xD9CEE110) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/ContentAssistProcessor$1(0xD9CEE4E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/JavaCodeScanner(0xD9C9E550) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaCommentScanner(0xD9C9EC48) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/SingleTokenJavaScanner(0xD9C9F020) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavaDocScanner(0xD9C9F220) 3CLTEXTCLASS org/eclipse/jdt/ui/text/JavaTextTools$PreferenceListener(0xD9C9F568) 3CLTEXTCLASS org/eclipse/jdt/ui/text/IColorManagerExtension(0xD9C9F700) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaColorManager(0xD9C9F7F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/CombinedWordRule$WordMatcher(0xD9C9FAC0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/JavaCodeScanner$VersionedWordMatcher(0xD9C9FC80) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaColorManager$1(0xD9C9FE10) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaWhitespaceDetector(0xD9C9FF48) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/JavaCodeScanner$AnnotationRule(0xD9CA0060) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaWordDetector(0xD9CA0318) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/CombinedWordRule(0xD9CA0458) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/CombinedWordRule$CharacterBuffer(0xD9CA0730) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/JavaCodeScanner$OperatorRule(0xD9CA0960) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/JavaCodeScanner$BracketRule(0xD9CA0AD8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaCommentScanner$TaskTagMatcher(0xD9CA0C58) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaCommentScanner$AtJavaIdentifierDetector(0xD9CA0F30) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavaDocScanner$TagRule(0xD9CA10A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavaDocScanner$HTMLCommentDetector(0xD9CA12E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavaDocScanner$1(0xD9CA1408) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaPresentationReconciler(0xD9CA15A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaSourceViewer(0xD9CA1AA8) 3CLTEXTCLASS org/eclipse/jdt/ui/text/IJavaPartitions(0xD9CA25D8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/FastJavaPartitionScanner(0xD9CA26E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/BufferedDocumentScanner(0xD9CA2A60) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/IProblemRequestorExtension(0xD9CA2D30) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitDocumentProvider$CompilationUnitAnnotationModel(0xD9CA2F50) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/IJavaAnnotation(0xD9CA36A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaMarkerAnnotation(0xD9CA38B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitAnnotationModelEvent(0xD9CA3C90) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitDocumentProvider$ProblemAnnotation(0xD9CA3F28) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitDocumentProvider$ReverseMap(0xD9CA45D0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/DocumentAdapter(0xD9CA4838) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/DocumentAdapter$NullBuffer(0xD9CA51E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/DocumentAdapter$DocumentSetCommand(0xD9CA54E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/DocumentAdapter$DocumentReplaceCommand(0xD9CA5660) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/DocumentAdapter$ApplyTextEditCommand(0xD9CA5800) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/SmartBackspaceManager(0xD9CA59A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/ITypingRunListener(0xD9CA5D68) 3CLTEXTCLASS org/eclipse/jdt/ui/text/folding/IJavaFoldingStructureProvider(0xD9CA5E28) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/OverrideIndicatorManager(0xD9CA5F20) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/ContentAssistProcessor$CompletionListener(0xD9CA6238) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitEditor$BracketInserter(0xD9C5B4F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitEditor$ExclusivePositionUpdater(0xD9C5BB70) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditorErrorTickUpdater(0xD9C5BD18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/BasicJavaEditorActionContributor(0xD9C5C078) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/BasicCompilationUnitEditorActionContributor(0xD9C5C6E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitEditorActionContributor(0xD9C5CC20) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditorMessages(0xD9C5CED0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/TogglePresentationAction(0xD9C5D308) 3CLTEXTCLASS org/eclipse/jdt/ui/IWorkingCopyManagerExtension(0xD9C5D6C0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/WorkingCopyManager(0xD9C5D7B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/ClassFileDocumentProvider$InputChangeListener(0xD9C5DA18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/ClassFileEditor(0xD9C5DF28) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/ToggleMarkOccurrencesAction(0xD9C5EC38) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/ToggleBreadcrumbAction(0xD9C5F050) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/CompletionProposalComputerRegistry(0xD9C5F478) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/CompletionProposalComputerRegistry$1(0xD9C5FCD8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/CompletionProposalCategory(0xD9C5FFB8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/CompletionProposalComputerDescriptor(0xD9C60528) 3CLTEXTCLASS org/eclipse/jdt/ui/text/java/IJavaCompletionProposalComputer(0xD9C60CE8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SpecificContentAssistAction(0xD9C60E98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SpecificContentAssistExecutor(0xD9C61288) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/javaeditor/SpecificContentAssistAction;(0xD9C614B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/BasicCompilationUnitEditorActionContributor$MenuListener(0xD9C61570) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaSelectRulerAction(0xD9C61708) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$EclipsePreferencesAdapter(0xD9C618E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$EclipsePreferencesAdapter$PreferenceChangeListener(0xD9C61E50) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/PreferencesAdapter(0xD9C62078) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/PreferencesAdapter$PropertyChangeListener(0xD9C626C8) 3CLTEXTCLASS org/eclipse/jdt/ui/text/JavaTextTools(0xD9C62870) 3CLTEXTCLASS org/eclipse/jdt/ui/text/IColorManager(0xD9C62D60) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/AbstractJavaScanner(0xD9C62E88) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/IClassFileEditorInput(0xD9C633F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction$TextPaster$ParsedCu(0xDA0D80C0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction$TextPaster$ParsedCu;(0xDA0D8400) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction$2(0xDA0D84B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction$3(0xDA0D8E38) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/IReorgQueries(0xDA0D9010) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/ReorgQueries(0xDA0D9120) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/IConfirmQuery(0xDA0D9310) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/ReorgQueries$YesYesToAllNoNoToAllQuery(0xDA0D93F0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/CodeFormatterUtil(0xDA0D9660) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/EditorUtility(0xDA0D9AA8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/EditorUtility$1(0xDA0DA4E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$AbstractSelectionChangedListener(0xDA0DA698) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$1(0xDA0DA7F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$JdtSelectionProvider(0xDA0DA930) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/breadcrumb/IBreadcrumb(0xDA0DAC20) 3CLTEXTCLASS org/eclipse/jdt/ui/text/JavaSourceViewerConfiguration(0xDA0DADE0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/ISelectionListenerWithAST(0xDA0DBA88) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaChangeHover(0xDA0DBB78) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/GotoMatchingBracketAction(0xDA0DBF38) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/ShowInBreadcrumbAction(0xDA0DC210) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/selectionactions/StructureSelectionAction(0xDA0DC4F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/selectionactions/StructureSelectEnclosingAction(0xDA0DCAA0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/selectionactions/StructureSelectNextAction(0xDA0DCDB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/selectionactions/StructureSelectPreviousAction(0xDA0DD158) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/selectionactions/GoToNextPreviousMemberAction(0xDA0DD4D8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$FormatElementAction(0xDA0DDBC0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/RemoveOccurrenceAnnotations(0xDA0DDF68) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/SurroundWithActionGroup(0xDA0DE148) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaMoveLinesAction(0xDA0DE4A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitEditor$2(0xDA0DEC38) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/ISourceVersionDependent(0xDA0DEF10) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/JavaPairMatcher(0xDA0DEFE8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor$ActivationListener(0xDA0DF298) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitEditor$RememberedSelection(0xDA0DF4B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitEditor$RememberedOffset(0xDA0DF710) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavadocCompletionProcessor(0xDA0DFAE0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/javadoc/JavadocContentAssistInvocationContext(0xDA0DFCA8) 3CLTEXTCLASS org/eclipse/jdt/ui/CodeStyleConfiguration(0xDA0DFE60) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/Strings(0xDB39CA58) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/ImageDescriptorRegistry(0xDB39CFE0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/ImageDescriptorRegistry$1(0xDB39D228) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/browsing/LogicalPackage(0xDB39D378) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/JavaElementResourceMapping(0xDB39D6C0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/JavaElementResourceMapping$JavaModelResourceMapping(0xDB39DBF0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/JavaElementResourceMapping$JavaProjectResourceMapping(0xDB39DE08) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/JavaElementResourceMapping$PackageFragementRootResourceMapping(0xDB39DFF0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/JavaElementResourceMapping$PackageFragmentResourceMapping(0xDB39E1F0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/JavaElementResourceMapping$CompilationUnitResourceMapping(0xDB39E3E0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/JavaElementResourceMapping$ClassFileResourceMapping(0xDB39E5E0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/JavaElementResourceMapping$LogicalPackageResourceMapping(0xDB39E7C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaWorkbenchAdapter(0xDB39EA48) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/AbstractJavaElementLabelDecorator(0xDB39EC98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/BuildpathIndicatorLabelDecorator(0xDB39EF40) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/AbstractJavaElementLabelDecorator$DecoratorElementChangeListener(0xDB39F138) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerContentProvider$3(0xDB39F2D0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/LibraryContainer(0xDB39F468) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageFragmentRootContainer$WorkbenchAdapterImpl(0xDB39F6A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/propertiesfileeditor/PropertiesFileDocumentSetupParticipant(0xDB39F850) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/propertiesfileeditor/IPropertiesFilePartitions(0xDB39F9E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/propertiesfileeditor/PropertiesFilePartitionScanner(0xDB39FB20) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/propertiesfileeditor/LeadingWhitespacePredicateRule(0xDB39FD80) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/propertiesfileeditor/LeadingWhitespacePredicateRule$DummyDetector(0xDB39FF00) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/propertiesfileeditor/PropertiesFilePartitionScanner$EmptyCommentRule(0xDB3A0058) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/propertiesfileeditor/PropertiesFilePartitionScanner$EmptyCommentDetector(0xDB3A01D8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/model/JavaModelProvider(0xDB3A0320) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/model/JavaModelAdapterFactory(0xDB3A0580) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/model/JavaSynchronizationCompareAdapter(0xDB3A0800) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/util/JavaElementUtil(0xDB3A0BD8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ParentChecker(0xDB3A1150) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/buildpath/ClasspathModifier(0xDB3A1540) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/ClasspathModifierQueries$OutputFolderValidator(0xDB3A2208) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/buildpath/ClasspathModifier$1(0xDB3A2328) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/Checks(0xDB3A2520) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/ActionUtil(0xDB3A3240) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/ClassPathContainer$RequiredProjectWrapper(0xDB3A35B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaProjectAdapterFactory(0xDB3A3828) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/GenerateBuildPathActionGroup$1(0xDB3A39E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/search/LRUWorkingSetsList(0xDB3A3B18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/search/WorkingSetsComparator(0xDB3A3DB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaTaskListAdapter(0xDB3A3F00) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/TypedSourceTransfer(0xDB3A4050) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction$Paster;(0xDB3A43C0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction$4(0xDB3A4478) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction$1(0xDB3A45D8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/OverrideIndicatorImageProvider(0xDB3A4820) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/OpenTypeInHierarchyAction(0xDBC18150) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/OpenTypeAction(0xDBC18530) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dialogs/OpenTypeSelectionDialog(0xDBC18B98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/GenerateJavadocAction(0xDBC18F40) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/actions/ShowRefactoringHistoryAction(0xDBC19120) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/actions/ApplyRefactoringScriptAction(0xDBC192C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/actions/CreateRefactoringScriptAction(0xDBC19470) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/actions/MigrateJarFileAction(0xDBC19618) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/SurroundWithTemplateMenuAction(0xDBC198A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/SurroundWithTemplateMenuAction$1(0xDBC1A118) 3CLTEXTCLASS org/eclipse/jdt/ui/text/java/IInvocationContext(0xDBC1A2B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/SurroundWithTemplateMenuAction$2(0xDBC1A3D8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/NewTypeDropDownAction(0xDBC1A620) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/AbstractOpenWizardAction(0xDBC1AB88) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OpenNewPackageWizardAction(0xDBC1B078) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/OpenPackageWizardToolbarAction(0xDBC1B3D8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OpenNewJavaProjectWizardAction(0xDBC1B708) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/OpenJavaProjectWizardToolbarAction(0xDBC1BAA0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/search/OpenJavaSearchPageAction(0xDBC1BD20) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/OccurrencesSearchMenuAction(0xDBC1BF40) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/OccurrencesSearchMenuAction$1(0xDBC1C5C0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/OpenTypeHistory(0xDBC1C7C0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/History$1(0xDBC1CF98) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/OpenTypeHistory$TypeHistoryDeltaListener(0xDBC1D120) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/OpenTypeHistory$UpdateJob(0xDBC1D3F8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/CorextMessages(0xDBC1D6C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerPart$8(0xDBC1D860) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerContentProvider$5(0xDBC1D9B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerContentProvider$4(0xDBC1DB00) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/ProblemMarkerManager$ProjectErrorVisitor(0xDBC1DC98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/util/SWTUtil(0xDBC1DE90) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaElementAdapterFactory(0xDBC1E220) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/IResourceLocator(0xDBC1E810) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/search/SearchUtil(0xDBC1E8F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/JavaElementLabelComposer(0xDBC1EE78) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/JavaElementLabelComposer$FlexibleBuffer(0xDBC1FB48) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/JavaElementLabelComposer$FlexibleStyledString(0xDBC1FC90) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/JavaElementLabelComposer$FlexibleStringBuffer(0xDBC1FE30) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/WorkingSetFilterActionGroup(0xDBF3AE38) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/JavaViewerFilter(0xDBF3B5B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/WorkingSetFilter(0xDBF3B778) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/ClearWorkingSetAction(0xDBF3BA60) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/WorkingSetMessages(0xDBF3BCA0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/SelectWorkingSetAction(0xDBF3BF68) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/EditWorkingSetAction(0xDBF3C308) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/WorkingSetFilterActionGroup$1(0xDBF3C648) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/WorkingSetFilter$WorkingSetCompareEntry(0xDBF3C778) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/workingsets/WorkingSetFilter$WorkingSetCompareEntry;(0xDBF3CAB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/WorkingSetShowActionGroup(0xDBF3CB88) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/ConfigureWorkingSetAction(0xDBF3CED0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/ConfigureWorkingSetAssignementAction(0xDBF3D298) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/CustomFiltersActionGroup(0xDBF3DA40) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/filters/NamePatternFilter(0xDBF3E558) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/filters/FilterDescriptor(0xDBF3E7E8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/filters/FilterDescriptor;(0xDBF3ED58) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/filters/FilterDescriptor$2(0xDBF3EE18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/filters/FilterMessages(0xDBF3EF58) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/CustomFiltersActionGroup$FilterItem(0xDBF3F0F0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/Messages(0xDBF3F248) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/filters/FilterDescriptor$1(0xDBF3F368) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/filters/SyntheticMembersFilter(0xDBF3F4D0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/filters/EmptyLibraryContainerFilter(0xDBF3F618) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/filters/InnerClassFilesFilter(0xDBF3F748) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/filters/ImportDeclarationFilter(0xDBF3F880) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/filters/EmptyInnerPackageFilter(0xDBF3F9A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/filters/PackageDeclarationFilter(0xDBF3FAF0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/util/StringMatcher(0xDBF3FC18) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/util/StringMatcher;(0xDBF3FF70) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/LayoutActionGroup(0xDBF40040) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/LayoutAction(0xDBF402F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackagesMessages(0xDBF40560) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/ShowLibrariesNodeAction(0xDBF40810) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackagesFrameSource(0xDBF40A20) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageFragmentRootContainer(0xDBF40BA8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/ClassPathContainer(0xDBF40DE8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerActionGroup$2(0xDBF41190) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerActionGroup$3(0xDBF412C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/GotoTypeAction(0xDBF414B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/GotoPackageAction(0xDBF41930) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/GotoResourceAction(0xDBF41D98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/CollapseAllAction(0xDBF42100) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/AbstractToggleLinkingAction(0xDBF42408) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/ToggleLinkingAction(0xDBF426D8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/GotoRequiredProjectAction(0xDBF42960) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerPart$6(0xDBF42BA8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindReadReferencesInWorkingSetAction(0xDBF32ED0) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/WriteReferencesSearchGroup(0xDBF33278) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindWriteReferencesAction(0xDBF338B8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindWriteReferencesInProjectAction(0xDBF33D18) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindWriteReferencesInHierarchyAction(0xDBF34150) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindWriteReferencesInWorkingSetAction(0xDBF345B0) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/DeclarationsSearchGroup(0xDBF34958) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindDeclarationsAction(0xDBF34F98) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindDeclarationsInProjectAction(0xDBF354A0) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindDeclarationsInHierarchyAction(0xDBF358D0) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindDeclarationsInWorkingSetAction(0xDBF35DA8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ImplementorsSearchGroup(0xDBF36120) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindImplementorsAction(0xDBF36710) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindImplementorsInProjectAction(0xDBF36BA8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindImplementorsInWorkingSetAction(0xDBF36FE0) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OccurrencesSearchGroup(0xDBF37358) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindOccurrencesInFileAction(0xDBF379F8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindExceptionOccurrencesAction(0xDBF38058) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindImplementOccurrencesAction(0xDBF38570) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindBreakContinueTargetOccurrencesAction(0xDBF38A88) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindMethodExitOccurrencesAction(0xDBF38FA0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/search/IOccurrencesFinder(0xDBF393C8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ProjectActionGroup(0xDBF39568) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OpenProjectAction(0xDBF39B50) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ProjectActionGroup$1(0xDBF3A0A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/ViewActionGroup(0xDBF3A218) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/IWorkingSetActionGroup(0xDBF3A770) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/SelectAllAction(0xDBF3A8F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerPart$3(0xDBF3AC28) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/RefactoringMessages(0xDBF273D0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/actions/MoveStaticMembersAction(0xDBF27DD0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/actions/MoveInstanceMethodAction(0xDBF282F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/ReorgMoveAction(0xDBF287F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/actions/RenameJavaElementAction(0xDBF28C70) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/actions/RenameResourceAction(0xDBF291F0) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/InlineTempAction(0xDBF29530) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/actions/InlineConstantAction(0xDBF29938) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/actions/InlineMethodAction(0xDBF29E40) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/RefactorActionGroup$1(0xDBF2A290) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ImportActionGroup(0xDBF2A3F0) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/BuildActionGroup(0xDBF2A608) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/RefreshAction(0xDBF2AA80) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/BuildActionGroup$RefreshableViewRefreshAction(0xDBF2B078) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/BuildActionGroup$ShellProviderAdapter(0xDBF2B298) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/JavaSearchActionGroup(0xDBF2B3C8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ReferencesSearchGroup(0xDBF2B888) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindAction(0xDBF2BEE8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindReferencesAction(0xDBF2C778) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindReferencesInProjectAction(0xDBF2CD08) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindReferencesInHierarchyAction(0xDBF2D298) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindReferencesInWorkingSetAction(0xDBF2D7A8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/WorkingSetFindAction(0xDBF2DC08) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/search/SearchMessages(0xDBF2DF38) 3CLTEXTCLASS org/eclipse/jdt/ui/search/QuerySpecification(0xDBF2E530) 3CLTEXTCLASS org/eclipse/jdt/ui/search/ElementQuerySpecification(0xDBF2E698) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ReadReferencesSearchGroup(0xDBF2E7D0) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindReadReferencesAction(0xDBF2EE10) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/util/JavaUIHelp(0xDBF2F170) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/RefactorActionGroup(0xDBF1F3B8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/RefactorActionGroup$NoActionAvailable(0xDBF20278) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/RenameAction(0xDBF20508) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/MoveAction(0xDBF20980) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ModifyParametersAction(0xDBF21058) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ConvertAnonymousToNestedAction(0xDBF21540) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ConvertNestedToTopAction(0xDBF21A00) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/PullUpAction(0xDBF21ED8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/PushDownAction(0xDBF22438) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/ExtractSuperClassAction(0xDBF22998) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ExtractInterfaceAction(0xDBF22F20) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ExtractClassAction(0xDBF233A8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ChangeTypeAction(0xDBF237C8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/InferTypeArgumentsAction(0xDBF23CE8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ExtractMethodAction(0xDBF24168) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ExtractTempAction(0xDBF24568) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ExtractConstantAction(0xDBF24968) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/IntroduceParameterAction(0xDBF24D68) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/IntroduceFactoryAction(0xDBF25120) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ConvertLocalToFieldAction(0xDBF255D8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/SelfEncapsulateFieldAction(0xDBF259E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/IntroduceParameterObjectAction(0xDBF25E80) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/IntroduceIndirectionAction(0xDBF26368) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/UseSupertypeAction(0xDBF26868) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/InlineAction(0xDBF26D40) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/util/JavaUIHelp$JavaUIHelpListener(0xDBF27138) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/GenerateToStringAction(0xDBF16468) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dialogs/GenerateToStringDialog(0xDBF16D78) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/codemanipulation/tostringgeneration/ToStringGenerationSettings(0xDBF17970) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/AddJavaDocStubAction(0xDBF17DB8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/AddTaskAction(0xDBF18390) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/ExternalizeStringsAction(0xDBF18790) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/FindBrokenNLSKeysAction(0xDBF19088) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OrganizeImportsAction(0xDBF19A30) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/codemanipulation/OrganizeImportsOperation$IChooseImportQuery(0xDBF1A2C0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dialogs/MultiElementListSelectionDialog(0xDBF1A528) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OrganizeImportsAction$2(0xDBF1AE28) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OrganizeImportsAction$OrganizeImportComparator(0xDBF1B140) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/History(0xDBF1B2E8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/QualifiedTypeNameHistory(0xDBF1B9E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/CleanUpAction(0xDBF1BD00) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/MultiOrganizeImportAction(0xDBF1C408) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/MultiSortMembersAction(0xDBF1C7E8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FormatAllAction(0xDBF1CC98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/MultiFormatAction(0xDBF1D048) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/AllCleanUpsAction(0xDBF1D3A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/AllCleanUpsAction$1(0xDBF1D778) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/JDTQuickMenuCreator(0xDBF1D8E8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/GenerateActionGroup$1(0xDBF1DB88) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/JDTQuickMenuCreator$1(0xDBF1DD08) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindReadReferencesInProjectAction(0xDBF1DF68) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitEditor(0xDBF06748) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OverrideMethodsAction(0xDBF07C78) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/AddGetterSetterAction(0xDBF083C0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/codemanipulation/IRequestQuery(0xDBF08F18) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/AddDelegateMethodsAction(0xDBF090C8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/AddDelegateMethodsAction$AddDelegateMethodsViewerComparator(0xDBF09950) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/util/BusyIndicatorRunnableContext(0xDBF09AD8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dialogs/SourceActionDialog(0xDBF09DE0) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/AddDelegateMethodsAction$AddDelegateMethodsDialog(0xDBF0AD48) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/AddUnimplementedConstructorsAction(0xDBF0B208) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/GenerateNewConstructorUsingFieldsAction(0xDBF0BA90) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/GenerateMethodAbstractAction(0xDBF0C500) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/GenerateHashCodeEqualsAction(0xDBF0CEB0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/codemanipulation/CodeGenerationSettings(0xDBF0D640) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/GenerateHashCodeEqualsAction$HashCodeEqualsGenerationSettings(0xDBF0D7A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dialogs/GenerateHashCodeEqualsDialog(0xDBF0DA98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/ViewAction(0xDBF0E0B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/ClasspathContainerWizard(0xDC1EE880) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/AddLibraryToBuildpathAction$1(0xDC1EED68) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/JarImportWizardAction(0xDC1EF208) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/GenerateBuildPathActionGroup$UpdateJarFileAction(0xDC1EF6A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/ExcludeFromBuildpathAction(0xDC1EFA20) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/IncludeToBuildpathAction(0xDC1EFFF0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/EditFilterAction(0xDC1F0588) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/NewElementWizard(0xDC1F0B78) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/BuildPathWizard(0xDC1F10B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/EditFilterWizard(0xDC1F1540) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/EditOutputFolderAction(0xDC1F18E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/EditOutputFolderAction$1(0xDC1F1E68) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/ConfigureBuildPathAction(0xDC1F2158) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/GenerateActionGroup(0xDC1F25A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaEditor(0xDC1F3548) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/java/IJavaReconcilingListener(0xDC1F5FA8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/FindReadReferencesInHierarchyAction(0xDC1F6180) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/WorkingSetFilterActionGroup$3(0xDC1F64E0) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/CustomFiltersActionGroup$2(0xDC1F6610) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/ReorgUtils(0xDC1D3738) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/CopyToClipboardAction$CopyToClipboardEnablementPolicy(0xDC1D4108) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaPluginImages(0xDC1D4338) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaPluginImages$CachedImageDescriptor(0xDC1D58F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/DeleteAction$1(0xDC1D5B40) 3CLTEXTCLASS [Lorg/eclipse/jdt/ui/actions/SelectionDispatchAction;(0xDC1D5D98) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/RefactoringAvailabilityTester(0xDC1D5E50) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/GenerateBuildPathActionGroup(0xDC1D6E68) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/GenerateBuildPathActionGroup$NoActionAvailable(0xDC1D7498) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/NewWizardMessages(0xDC1D7650) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/BuildpathModifierAction(0xDC1D8288) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/CreateLinkedSourceFolderAction(0xDC1D88B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/CPListElement(0xDC1D8E08) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/CreateSourceFolderAction(0xDC1D9BA8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/AddFolderToBuildpathAction(0xDC1DA170) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/AddSelectedLibraryToBuildpathAction(0xDC1DA938) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/RemoveFromBuildpathAction(0xDC1DAEF0) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/CustomFiltersActionGroup$ShowFilterDialogAction(0xDC1DB4C8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OpenViewActionGroup(0xDC1CB728) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OpenImplementationAction(0xDC1CBF60) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OpenSuperImplementationAction(0xDC1CC468) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OpenAttachedJavadocAction(0xDC1CCA20) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OpenTypeHierarchyAction(0xDC1CD050) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/callhierarchy/OpenCallHierarchyAction(0xDC1CD6F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/callhierarchy/CallHierarchyMessages(0xDC1CDB58) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/callhierarchy/CallHierarchy(0xDC1CDF18) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/callhierarchy/MethodWrapper(0xDC1CE530) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/callhierarchy/CallerMethodWrapper(0xDC1CEBA0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/callhierarchy/CalleeMethodWrapper(0xDC1CEFF8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/CCPActionGroup(0xDC1CF280) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction(0xDC1CF700) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/CopyToClipboardAction(0xDC1CFD58) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/CopyQualifiedNameAction(0xDC1D0270) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/CutAction(0xDC1D0A98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/DeleteAction(0xDC1D0F60) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction$Paster(0xDC1D1500) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction$ProjectPaster(0xDC1D1768) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction$JavaElementAndResourcePaster(0xDC1D1A50) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction$TypedSourcePaster(0xDC1D1CB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction$FilePaster(0xDC1D1EF8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction$WorkingSetPaster(0xDC1D21B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/PasteAction$TextPaster(0xDC1D2458) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/refactoring/reorg/ReorgMessages(0xDC1D2AC0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/AddArchiveToBuildpathAction(0xDC1D2E08) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/wizards/buildpaths/newsourcepage/AddLibraryToBuildpathAction(0xDC1D3380) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/JavaElementImageProvider(0xDC128D30) 3CLTEXTCLASS org/eclipse/jdt/ui/JavaElementImageDescriptor(0xDC129658) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/StorageLabelProvider(0xDC129B40) 3CLTEXTCLASS org/eclipse/jdt/ui/ProblemsLabelDecorator(0xDC129E88) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/TreeHierarchyLayoutProblemsDecorator(0xDC12A500) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerProblemsDecorator(0xDC12A6D8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/ImageImageDescriptor(0xDC12A850) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/IProblemChangedListener(0xDC12A9C0) 3CLTEXTCLASS org/eclipse/jdt/ui/ProblemsLabelDecorator$ProblemsLabelChangedEvent(0xDC12AA98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/ColoringLabelProvider(0xDC12AC80) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/DecoratingJavaLabelProvider(0xDC12B068) 3CLTEXTCLASS org/eclipse/jdt/ui/ProblemsLabelDecorator$1(0xDC12B2F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/ProblemMarkerManager(0xDC12B430) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/ProblemMarkerManager$1(0xDC12B908) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitDocumentProvider(0xDC12BC48) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitDocumentProvider$CompilationUnitInfo(0xDC12C8A8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitDocumentProvider$4(0xDC12C998) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitDocumentProvider$2(0xDC12CB48) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitDocumentProvider$3(0xDC12CCA8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/JavaDocumentSetupParticipant(0xDC12CE00) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitDocumentProvider$GlobalAnnotationModelListener(0xDC12CF40) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/CompilationUnitDocumentProvider$1(0xDC12D0F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/ColoredViewersManager(0xDC12D260) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/CompositeActionGroup(0xDC12D5B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerActionGroup(0xDC12D838) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/workingsets/WorkingSetModel(0xDC12E520) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerActionGroup$1(0xDC12ED60) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/NewWizardsActionGroup(0xDC12EEA8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/NavigateActionGroup(0xDC12F138) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OpenEditorActionGroup(0xDC12F3B0) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/SelectionDispatchAction(0xDC12F8A8) 3CLTEXTCLASS org/eclipse/jdt/ui/actions/OpenAction(0xDC12FDA0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/actions/ActionMessages(0xDC1303F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/ProblemTreeViewer(0xDC1103C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerPart$4(0xDC110C28) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerPart$PackageExplorerProblemTreeViewer(0xDC111118) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/JavaUILabelProvider(0xDC1117F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/AppearanceAwareLabelProvider(0xDC111D58) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerLabelProvider(0xDC1120D0) 3CLTEXTCLASS org/eclipse/jdt/ui/IWorkingCopyProvider(0xDC1124D0) 3CLTEXTCLASS org/eclipse/jdt/ui/StandardJavaElementContentProvider(0xDC1125F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerContentProvider(0xDC112CA0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/IMultiElementTreeContentProvider(0xDC1137F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/WorkingSetAwareContentProvider(0xDC113970) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/filters/OutputFolderFilter(0xDC113F50) 3CLTEXTCLASS org/eclipse/jdt/ui/JavaElementComparator(0xDC1140F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/WorkingSetAwareJavaElementSorter(0xDC1145D8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerPart$1(0xDC114718) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerPart$2(0xDC114930) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/ResourceToItemsMapper(0xDC114AA8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dnd/JdtViewerDragSupport(0xDC114DB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dnd/JdtViewerDragAdapter(0xDC114FD0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dnd/BasicSelectionTransferDragAdapter(0xDC115150) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/SelectionTransferDragAdapter(0xDC115348) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dnd/EditorInputTransferDragAdapter(0xDC115458) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dnd/ResourceTransferDragAdapter(0xDC115728) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/FileTransferDragAdapter(0xDC115B10) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dnd/JdtViewerDropSupport(0xDC115FE8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dnd/JdtViewerDropAdapter(0xDC116278) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/SelectionTransferDropAdapter(0xDC1167E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/FileTransferDropAdapter(0xDC116E58) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PluginTransferDropAdapter(0xDC117218) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/WorkingSetDropAdapter(0xDC117450) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerContentProvider$1(0xDC117AF8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/FilterUpdater(0xDC117D50) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/formatter/FormatterMessages(0xDC3C4A88) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/util/JavaModelUtil(0xDC3C5348) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/ValidateEditException(0xDC3C5E28) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/ASTProvider(0xDC3C5F68) 3CLTEXTCLASS org/eclipse/jdt/ui/SharedASTProvider(0xDC3C6658) 3CLTEXTCLASS org/eclipse/jdt/ui/SharedASTProvider$WAIT_FLAG(0xDC3C67E8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/ASTProvider$ActivationListener(0xDC3C6940) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaPlugin$3(0xDC3C6D10) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/InitializeAfterLoadJob(0xDC3C6F68) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/InitializeAfterLoadJob$RealJob(0xDC3C72B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaUIMessages(0xDC3C7550) 3CLTEXTCLASS org/eclipse/jdt/ui/JavaUI(0xDC3C7990) 3CLTEXTCLASS org/eclipse/jdt/ui/ISharedImages(0xDC3C8158) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dialogs/PackageSelectionDialog(0xDC3C85E8) 3CLTEXTCLASS org/eclipse/jdt/ui/dialogs/ITypeSelectionComponent(0xDC3C8C28) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dialogs/FilteredTypesSelectionDialog(0xDC3C8EB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dialogs/MultiMainTypeSelectionDialog(0xDC3C9CD8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/dialogs/MainTypeSelectionDialog(0xDC3CA258) 3CLTEXTCLASS org/eclipse/jdt/ui/IWorkingCopyManager(0xDC3CA640) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/refactoring/reorg/JavaElementTransfer(0xDC3CA758) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/IRefreshable(0xDC3CAA98) 3CLTEXTCLASS org/eclipse/jdt/ui/IPackagesViewPart(0xDC3CAB48) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/IViewPartInputProvider(0xDC3CAC48) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/packageview/PackageExplorerPart(0xDC3CAE40) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/ResourceToItemsMapper$IContentViewerAccessor(0xDC3CC600) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/viewsupport/StatusBarUpdater(0xDC3CC6D0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$InterfaceHighlighting(0xDC39B9D0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$NumberHighlighting(0xDC39BC20) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/NewJavaProjectPreferencePage(0xDC39BF00) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/PreferencesMessages(0xDC39CB60) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/fix/CleanUpConstants(0xDC39D888) 3CLTEXTCLASS org/eclipse/jdt/ui/cleanup/CleanUpOptions(0xDC39DDC8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/fix/MapCleanUpOptions(0xDC39DFC0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/fix/CleanUpRegistry(0xDC39E198) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/fix/CleanUpRegistry$CleanUpInitializerDescriptor(0xDC39E640) 3CLTEXTCLASS org/eclipse/jdt/ui/cleanup/ICleanUpOptionsInitializer(0xDC39E830) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/corext/fix/CleanUpRegistry$CleanUpInitializerDescriptor;(0xDC39E8F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/cleanup/DefaultCleanUpOptionsInitializer(0xDC39E9B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaPlugin$4(0xDC39EAC0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaPlugin$5(0xDC39EC50) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/javadoc/JavaDocLocations(0xDC39EDC8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaUIException(0xDC39F820) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/javadoc/JavaDocLocations$1(0xDC39FA28) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/formatter/ProfileStore(0xDC39FCA0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/formatter/FormatterProfileStore(0xDC3A02C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/formatter/ProfileStore$ProfileDefaultHandler(0xDC3A0698) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/formatter/IProfileVersioner(0xDC3A0950) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/formatter/ProfileManager(0xDC3A0AB8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/formatter/FormatterProfileManager(0xDC3A1270) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/PreferencesAccess(0xDC3A1640) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/PreferencesAccess$WorkingCopyPreferencesAccess(0xDC3A1830) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/formatter/ProfileVersioner(0xDC3A1A00) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/formatter/ProfileManager$Profile(0xDC3A25A0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/formatter/ProfileManager$CustomProfile(0xDC3A27F0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/formatter/ProfileManager$SharedProfile(0xDC3A2B10) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/formatter/ProfileManager$KeySet(0xDC3A2CF0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/preferences/formatter/ProfileManager$KeySet;(0xDC3A2E28) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/formatter/ProfileManager$BuiltInProfile(0xDC3A2F08) 3CLTEXTCLASS org/eclipse/jdt/ui/JavaElementLabels(0xDC3A3150) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/SpellCheckEngine(0xDC37F948) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/engine/ISpellChecker(0xDC380098) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/engine/ISpellDictionary(0xDC3801E0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings(0xDC380308) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlighting(0xDC380A28) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/ui/javaeditor/SemanticHighlighting;(0xDC380CD0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$DeprecatedMemberHighlighting(0xDC380DB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$AutoboxHighlighting(0xDC381068) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$StaticFinalFieldHighlighting(0xDC381390) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$StaticFieldHighlighting(0xDC3815C8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$FieldHighlighting(0xDC381800) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$MethodDeclarationHighlighting(0xDC381A30) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$StaticMethodInvocationHighlighting(0xDC381C70) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$AbstractMethodInvocationHighlighting(0xDC381EB0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$AnnotationElementReferenceHighlighting(0xDC382110) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$InheritedMethodInvocationHighlighting(0xDC382350) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$ParameterVariableHighlighting(0xDC3825B0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$LocalVariableDeclarationHighlighting(0xDC382818) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$LocalVariableHighlighting(0xDC382A80) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$TypeVariableHighlighting(0xDC382CD0) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$MethodHighlighting(0xDC382F18) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$TypeArgumentHighlighting(0xDC3831D8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$ClassHighlighting(0xDC383420) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$EnumHighlighting(0xDC383670) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/preferences/MembersOrderPreferenceCache(0xDC330250) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaUIPreferenceInitializer(0xDC3305E8) 3CLTEXTCLASS org/eclipse/jdt/ui/PreferenceConstants(0xDC330978) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/text/spelling/engine/ISpellCheckEngine(0xDC331E88) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/SemanticHighlightings$AnnotationHighlighting(0xDC331FC8) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/template/java/TemplateSet(0xDC6D7F40) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/template/java/Templates(0xDC6D8610) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/CompatibilityTemplateStore(0xDC6D88A0) 3CLTEXTCLASS org/eclipse/jdt/internal/corext/template/java/CodeTemplates(0xDC6D8BA8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaPlugin$1(0xDD9108B8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaPlugin$2(0xDD910A50) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/javaeditor/ICompilationUnitDocumentProvider(0xDD910B98) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaPlugin$6(0xDD910CE8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaPlugin(0xDC6775F8) 3CLTEXTCLASS org/eclipse/jdt/internal/ui/JavaPerspectiveFactory(0xDD9102B0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE009ADB0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/BindingKeyParser(0x1133F850) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/KeyToSignature(0x113401A0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/BindingKeyParser$Scanner(0x11340738) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/KeyKind(0x11340C10) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/ASTNodeFinder(0x11340F28) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/ASTNodeFinder$1$Visitor(0x113415C8) 3CLTEXTCLASS org/eclipse/jdt/core/ITypeHierarchyChangedListener(0x11341AE8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ASTMatcher(0x11341D00) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CreatePackageFragmentOperation(0xD90F0EA0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CreateCompilationUnitOperation(0xD90F1390) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CreateElementInCUOperation(0xD90F1940) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CreatePackageDeclarationOperation(0xD90F2038) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder(0xD90F24A0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/StringSet(0xD90F3250) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/StringLiteral;(0xD90F3458) 3CLTEXTCLASS org/eclipse/jdt/core/dom/Assignment$Operator(0xD90F3510) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/dom/Assignment$Operator;(0xD90F37F0) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/dom/CompilationUnit;(0xD90F38A8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/batch/Main(0xD90F39F0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/batch/FileSystem$ClasspathSectionProblemReporter(0xD90F5748) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/batch/Main$Logger(0xD90F58A8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/batch/Main$ResourceBundleFactory(0xD90F69F8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/CompilationUnitResolver$1(0xD90F6B68) 3CLTEXTCLASS org/eclipse/jdt/core/dom/CompilationUnitResolver$2(0xD90F6C88) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/MementoTokenizer(0xD90F6D90) 3CLTEXTCLASS org/eclipse/jdt/internal/core/DeleteResourceElementsOperation(0xD90F7178) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IJavaModelStatus;(0xD90F74F0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/RemoveFromIndex(0xD90F75C0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/DiscardWorkingCopyOperation(0xD90F7870) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ParameterizedMethodBinding$1(0xD90F7B58) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/CaptureBinding(0xD90F7F38) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/impl/IrritantSet;(0xD90F8558) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding;(0xD90F8610) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/MethodDeclaration;(0xD90F86C8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator(0x110BFF00) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/PackageDeclarationLocator(0x110C0940) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator(0x110C0BD8) 3CLTEXTCLASS org/eclipse/jdt/core/search/PackageReferenceMatch(0x110C1290) 3CLTEXTCLASS org/eclipse/jdt/core/search/TypeReferenceMatch(0x110C1448) 3CLTEXTCLASS org/eclipse/jdt/core/search/FieldReferenceMatch(0x110C1640) 3CLTEXTCLASS org/eclipse/jdt/core/search/MethodReferenceMatch(0x110C1850) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/MatchLocator$WorkingCopyDocument(0x110C1A70) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector(0x110C1C30) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector$TypeDeclarationVisitor(0x110C2500) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector$1(0x110C2A58) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/PossibleMatchSet(0x110C2BA8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/MatchLocator$1(0x110C2DB0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/PossibleMatch(0x110C2F00) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet(0x110C3358) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/HashtableOfLong(0x110C3750) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/search/matching/PossibleMatch;(0x110C3988) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser(0x110C4060) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/ImportMatchLocatorParser(0x110C5858) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser$ClassButNoMethodDeclarationVisitor(0x110C63F0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser$ClassAndMethodDeclarationVisitor(0x110C6D48) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser$NoClassNoMethodDeclarationVisitor(0x110C75F8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder$1$PathCollector(0x110C7B30) 3CLTEXTCLASS org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder$Queue(0x110C7C88) 3CLTEXTCLASS org/eclipse/jdt/core/dom/BindingComparator(0xDAB70160) 3CLTEXTCLASS org/eclipse/jdt/core/dom/DefaultBindingResolver$1(0xDAB70558) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CreateTypeHierarchyOperation(0xDAB70770) 3CLTEXTCLASS org/eclipse/jdt/internal/core/hierarchy/RegionBasedTypeHierarchy(0xDAB70B18) 3CLTEXTCLASS org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder(0xDAB70F38) 3CLTEXTCLASS org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder(0xDAB71548) 3CLTEXTCLASS org/eclipse/jdt/internal/core/TypeVector(0xDAB71D18) 3CLTEXTCLASS org/eclipse/jdt/internal/core/IPathRequestor(0xDAB71FC0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder$2(0xDAB72088) 3CLTEXTCLASS org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver(0xDAB72300) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/env/IGenericType;(0xDAB72D68) 3CLTEXTCLASS org/eclipse/jdt/internal/core/Region(0xDAB72E30) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/Openable;(0xDAB73098) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/SourceTypeElementInfo;(0xDAB73150) 3CLTEXTCLASS org/eclipse/jdt/internal/core/hierarchy/HierarchyType(0xDAB73210) 3CLTEXTCLASS [[Lorg/eclipse/jdt/core/IType;(0xDAB733B8) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/search/SearchParticipant;(0xDAB73470) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/search/SearchDocument;(0xDAB73528) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/PatternLocator(0xDAB73678) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/AndLocator(0xDAB740F0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/TypeParameterLocator(0xDAB74548) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/VariableLocator(0xDAB74928) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/LocalVariableLocator(0xDAB74C90) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/OrLocator(0xDAB750B8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/MethodLocator(0xDAB755B8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/FieldLocator(0xDAB76180) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/ConstructorLocator(0xDAB76920) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/SuperTypeReferenceLocator(0xDAB770A8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/TypeDeclarationLocator(0xDAB77468) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser$MethodButNoClassDeclarationVisitor(0xDAB77B40) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnSingleTypeReference(0xD9300160) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/BaseTypeBinding;(0xD93004F0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/CompletionEngine$1(0xD93005C8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/Binding;(0xD9300780) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/CompletionEngine$CompletionProblemFactory(0xD9300858) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnAnnotationOfType(0xD9300B78) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnMemberValueName(0xD9300DC8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnMethodTypeParameter(0xD9300FC0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnAnnotationMemberValuePair(0xD93012D8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnClassLiteralAccess(0xD9301620) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnKeyword(0xD9301868) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnKeyword2(0xD9301998) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnKeyword3(0xD9301C98) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnMessageSend(0xD9302080) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnQualifiedAllocationExpression(0xD9302448) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnExplicitConstructorCall(0xD9302798) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnBranchStatementLabel(0xD9302A40) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnMessageSendName(0xD9302D20) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnKeyword1(0xD9303130) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnArgumentName(0xD93034D0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnMethodName(0xD9303818) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnMarkerAnnotationName(0xD9303B40) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnImportReference(0xD9303DE0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnPackageReference(0xD9303F90) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnQualifiedTypeReference(0xD9304220) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnSingleNameReference(0xD93046E8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnStringLiteral(0xD9304A80) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnMemberAccess(0xD9304DF0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnLocalName(0xD9305158) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionJavadocParser(0xD93054B0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnFieldName(0xD9305FB0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionJavadoc(0xD9306290) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnJavadocSingleTypeReference(0xD9306848) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnJavadocQualifiedTypeReference(0xD9306CC8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionNodeDetector(0xD9307400) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SearchableEnvironment$4(0xD9307ED8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/CompletionEngine(0xD95B2920) 3CLTEXTCLASS org/eclipse/jdt/core/CompletionProposal(0xD95B6928) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/InternalCompletionProposal(0xD95B6E90) 3CLTEXTCLASS org/eclipse/jdt/core/CompletionContext(0xD95B7A00) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/InternalCompletionContext(0xD95B7C80) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionScanner(0xD95B8150) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnJavadoc(0xD95B86C0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnJavadocTag(0xD95B88E0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnFieldType(0xD95B8DB0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnMethodReturnType(0xD95B9058) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionNodeFound(0xD95B9288) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnParameterizedQualifiedTypeReference(0xD95B9530) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnQualifiedNameReference(0xD95B99D0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/MissingTypesGuesser$GuessedTypeRequestor(0xD95B9CF8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnJavadocAllocationExpression(0xD95B9EC8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionOnJavadocMessageSend(0xD95BA348) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/UnresolvedReferenceNameFinder$UnresolvedReferenceNameRequestor(0xD95BA6A0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/INamingRequestor(0xD95BA750) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnQualifiedAllocationExpression(0xD9520158) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnFieldReference(0xD9520578) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnArgumentName(0xD9520888) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnNameOfMemberValuePair(0xD9520B10) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnExplicitConstructorCall(0xD9520D30) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionParser$1(0xD9521038) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionParser$2(0xD95212F8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnImportReference(0xD9521530) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnPackageReference(0xD95216E0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionJavadocParser(0xD9521908) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnLocalName(0xD9521E28) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnQualifiedNameReference(0xD95221A8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnParameterizedQualifiedTypeReference(0xD95225E8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnSingleNameReference(0xD95229E8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnParameterizedSingleTypeReference(0xD9522E10) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnQualifiedSuperReference(0xD95231B0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnSuperReference(0xD95234F0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionScanner(0xD9523818) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnMessageSend(0xD9523B48) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionJavadoc(0xD9523EA8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/RelevanceConstants(0xD9524170) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/CompletionParser(0xD95249B0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/complete/InvalidCursorLocation(0xD9527D90) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/dom/Name;(0xD9527EF0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/impl/AssistParser(0xD94E4E60) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionParser(0xD94E6DE8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/SelectionEngine$1$Visitor(0xD94E8938) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnSingleTypeReference(0xD94E9060) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnQualifiedTypeReference(0xD94E94A8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/BinaryTypeConverter(0xD94E97D8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionNodeFound(0xD94E9DA8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SelectionRequestor(0xD94E9F60) 3CLTEXTCLASS org/eclipse/jdt/internal/core/BinaryField(0xD94EAA30) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ResolvedBinaryField(0xD94EB100) 3CLTEXTCLASS org/eclipse/jdt/internal/core/BinaryMethod(0xD94EB608) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ResolvedBinaryMethod(0xD94EC228) 3CLTEXTCLASS org/eclipse/jdt/internal/core/Buffer$1(0xD94EC5A8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/rewrite/ImportRewrite(0xD97E9F08) 3CLTEXTCLASS org/eclipse/jdt/core/dom/rewrite/ImportRewrite$1(0xD97EAA38) 3CLTEXTCLASS org/eclipse/jdt/core/search/TypeNameMatchRequestor(0xD97EAB58) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/dom/IBinding;(0xD97EAC50) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/env/AccessRuleSet;(0xD97EAD08) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/TypeNameMatchRequestorWrapper(0xD97EADC0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/index/EntryResult(0xD97EB148) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/index/EntryResult;(0xD97EB358) 3CLTEXTCLASS [[Lorg/eclipse/jdt/internal/core/index/EntryResult;(0xD97EB410) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/HierarchyScope(0xD97EB508) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/AccessRestriction(0xD97EBBD0) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IPackageDeclaration;(0xD97EBD30) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/search/TypeNameMatch;(0xD97EBDE8) 3CLTEXTCLASS [[Lorg/eclipse/jdt/core/search/TypeNameMatch;(0xD97EBEA0) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/SourceRange;(0xD97EBF58) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CommitWorkingCopyOperation(0xD97EC0E0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/env/ISourceType;(0xD97EC5A8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/TypeConverter(0xD97EC670) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter(0xD97ECB00) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter$AnonymousMemberFound(0xD97ED4D8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$16(0xD97ED5F8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer(0xD97ED788) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer$1(0xD97EE120) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer$PackageEntry(0xD97EE328) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer$PackageEntry;(0xD97EE738) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer$ImportDeclEntry(0xD97EE810) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer$PackageMatcher(0xD97EEA38) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/impl/Engine(0xD97EEBE0) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/ISearchRequestor(0xD97EF160) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/SelectionEngine(0xD97EF280) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/SelectionEngine$1(0xD97F0768) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/SelectionEngine$3(0xD97F0F40) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/HandleFactory(0xD97F1090) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/impl/AssistOptions(0xD97F1600) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/select/SelectionOnFieldType(0xD97F1980) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SearchableEnvironment$3(0xD97F1BA0) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/Scribe(0xDABE55B8) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/Scribe$LineComment(0xDABE6FE0) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/OptimizedReplaceEdit(0xDABE70D8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/formatter/OptimizedReplaceEdit;(0xDABE7258) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/FormatterCommentParser(0xDABE73C8) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/FormatJavadocNode(0xDABE7DD8) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/FormatJavadocBlock(0xDABE8088) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/FormatJavadoc(0xDABE8670) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/align/Alignment(0xDABE8878) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/Location(0xDABE8F08) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter$1(0xDABE9188) 3CLTEXTCLASS org/eclipse/jdt/core/BufferChangedEvent(0xDABE92E8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/parser/RecoveredImport;(0xDABE9478) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ResolvedSourceField(0xDABE96B8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ClassFile$2(0xDABE99F8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/Util$BindingsToNodesMap(0xDABE9B18) 3CLTEXTCLASS org/eclipse/jdt/core/dom/IMemberValuePairBinding(0xDABE9BC8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/IPackageBinding(0xDABE9CB0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/TypeBinding(0xDABE9E80) 3CLTEXTCLASS org/eclipse/jdt/core/dom/RecoveredTypeBinding(0xDABEAD38) 3CLTEXTCLASS org/eclipse/jdt/core/dom/IVariableBinding(0xDABEB880) 3CLTEXTCLASS org/eclipse/jdt/core/dom/VariableBinding(0xDABEBA30) 3CLTEXTCLASS org/eclipse/jdt/core/dom/RecoveredVariableBinding(0xDABEC1E0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/DefaultBindingResolver$BindingTables(0xDABEC600) 3CLTEXTCLASS org/eclipse/jdt/internal/core/LocalVariable(0xDABEC840) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/dom/ITypeBinding;(0xDABECFD8) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/dom/IMethodBinding;(0xDABED090) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/dom/IVariableBinding;(0xDABED148) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation$1(0xDABED208) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/RawTypeBinding;(0xDABED3A0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFlattener(0xDA9603D8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter$ExtendedFlattener(0xDA961DB8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SingleTypeRequestor(0xDA962328) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter$NodeMarker(0xDA962520) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ResolvedBinaryType(0xDA962888) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter$ConstPrefix(0xDA962CB8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavadocContents(0xDA962DD8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter$FormattingPrefix(0xDA963498) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter$BlockFormattingPrefixSuffix(0xDA963650) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter$BlockFormattingPrefix(0xDA963830) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/LineCommentEndOffsets(0xDA963A10) 3CLTEXTCLASS org/eclipse/jdt/internal/core/NameLookup$Answer(0xDA963BF0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/AnnotationHolder(0xDA963D48) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/AnnotationHolder$MethodHolder(0xDA963F30) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/AnnotationHolder$AnnotationMethodHolder(0xDA9640A0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/rewrite/TargetSourceRangeComputer$SourceRange(0xDA964208) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/WildcardBinding;(0xDA964340) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/TokenScanner(0xDA964430) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding;(0xDA964770) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/dom/rewrite/RewriteEvent;(0xDA964828) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter$NodeMarker;(0xDA9648E0) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/CodeFormatterVisitor(0xDA964D68) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/BinaryExpressionFragmentBuilder(0xDA967618) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/AbortFormatting(0xDA967FB8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer(0xDAB403F8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/RewriteEvent(0xDAB42950) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/NodeRewriteEvent(0xDAB42AD0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/rewrite/ITrackedNodePosition(0xDAB42CD8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/RewriteEventStore(0xDAB42E20) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ListRewriteEvent(0xDAB43860) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/NodeInfoStore(0xDAB43C00) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/NodeInfoStore$PlaceholderData(0xDAB43F28) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/NodeInfoStore$StringPlaceholderData(0xDAB44010) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/NodeInfoStore$CopyPlaceholderData(0xDAB44150) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/RewriteEventStore$EventHolder(0xDAB44298) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/TrackedNodePosition(0xDAB44428) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/RewriteEventStore$ParentIterator(0xDAB445D0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/LineInformation(0xDAB44810) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/LineInformation$1(0xDAB44978) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/LineInformation$2(0xDAB44AC8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/rewrite/TargetSourceRangeComputer(0xDAB44C08) 3CLTEXTCLASS org/eclipse/jdt/internal/core/NameLookup(0xDAB44DA8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer$ListRewriter(0xDAB45890) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer$ParagraphListRewriter(0xDAB45BE0) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IType;(0xDAB45E98) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer$SwitchListRewriter(0xDAB45F80) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CancelableProblemFactory(0xDAB461F8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter(0xDAB463A8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CompilationUnitProblemFinder$1(0xDAB46BC0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter$Prefix(0xDAB46CA8) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IPackageFragment;(0xDAB46D70) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter$BlockContext(0xDAB46E10) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaElementRequestor(0xDAB46F10) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IInitializer;(0xDAB47298) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/CascadingMethodInvocationFragmentBuilder(0xDAB47710) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/CodeFormatterVisitor$MultiFieldDeclaration(0xDAB47CE8) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/align/AlignmentException(0xDAB47EB0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SourceMethod(0xD9CCE790) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/ISourceMethod(0xD9CCEFA0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SourceMethodElementInfo(0xD9CCF138) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SourceConstructorInfo(0xD9CCF470) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SourceConstructorWithChildrenInfo(0xD9CCF688) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SourceMethodInfo(0xD9CCF860) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SourceAnnotationMethodInfo(0xD9CCFA60) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SourceMethodWithChildrenInfo(0xD9CCFC38) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor$1(0xD9CCFE40) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/ISourceField(0xD9CCFFC8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SourceFieldElementInfo(0xD9CD0128) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SourceFieldWithChildrenInfo(0xD9CD0338) 3CLTEXTCLASS org/eclipse/jdt/internal/core/InitializerElementInfo(0xD9CD04C0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/InitializerWithChildrenInfo(0xD9CD0600) 3CLTEXTCLASS org/eclipse/jdt/core/IMemberValuePair(0xD9CD0730) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ASTHolderCUInfo(0xD9CD0870) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IAnnotation;(0xD9CD0990) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IMemberValuePair;(0xD9CD0A48) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ImportContainerInfo(0xD9CD0B00) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/ISourceImport(0xD9CD0C08) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ImportDeclarationElementInfo(0xD9CD0D18) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ResolvedSourceMethod(0xD9CD0FF8) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/ITypeParameter;(0xD9CD1370) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/env/ISourceImport;(0xD9CD1428) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/InitializerElementInfo;(0xD9CD14E0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/SourceField;(0xD9CD1598) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/SourceMethod;(0xD9CD1650) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/SourceType;(0xD9CD1708) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ITypeBinding(0xD9CD17A8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/Buffer(0xD9CD1C00) 3CLTEXTCLASS org/eclipse/jdt/internal/core/NullBuffer(0xD9CD22D8) 3CLTEXTCLASS org/eclipse/jdt/core/Flags(0xD9CD2418) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IMethod;(0xD9CD27B0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation(0xD9CD2938) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaElementDeltaBuilder(0xD9CD2F38) 3CLTEXTCLASS org/eclipse/jdt/internal/core/AnnotationInfo(0xD9CD3600) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaElementDeltaBuilder$ListItem(0xD9CD3720) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CompilationUnitProblemFinder(0xD9CD3868) 3CLTEXTCLASS org/eclipse/jdt/internal/core/IJavaElementRequestor(0xD9CD3D30) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/IRestrictedAccessConstructorRequestor(0xD9CD3E40) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/HashSetOfArray(0xD9CD3F18) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaProjectElementInfo$ProjectCache(0xD9CD41C0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/PrefixExpression$Operator(0xD9CD42C8) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/dom/PrefixExpression$Operator;(0xD9CD4500) 3CLTEXTCLASS org/eclipse/jdt/core/dom/NodeFinder(0xD9CD45C0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/NodeFinder$NodeFinderVisitor(0xD9CD4AD0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/rewrite/ASTRewrite(0xD9CD4F30) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/comment/IJavaDocTagConstants(0xD9CD5688) 3CLTEXTCLASS org/eclipse/jdt/core/dom/MethodBinding(0xD9CD5A20) 3CLTEXTCLASS org/eclipse/jdt/core/compiler/ReconcileContext(0xD9CD6188) 3CLTEXTCLASS org/eclipse/jdt/core/dom/rewrite/ImportRewrite$ImportRewriteContext(0xD9CD6480) 3CLTEXTCLASS org/eclipse/jdt/core/dom/VariableDeclarationExpression(0xDA0E11F0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/HashtableOfObjectToIntArray(0xDA0E1910) 3CLTEXTCLASS org/eclipse/jdt/core/dom/PostfixExpression$Operator(0xDA0E1BC0) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/dom/PostfixExpression$Operator;(0xDA0E1D88) 3CLTEXTCLASS org/eclipse/jdt/core/dom/PrimitiveType$Code(0xDA0E1E40) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/dom/PrimitiveType$Code;(0xDA0E1F50) 3CLTEXTCLASS org/eclipse/jdt/core/dom/DefaultCommentMapper(0xDA0E2030) 3CLTEXTCLASS org/eclipse/jdt/core/dom/DefaultCommentMapper$CommentMapperVisitor(0xDA0E2658) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/dom/ASTNode;(0xDA0E2AF8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil(0xDA0E2BC8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/batch/CompilationUnit(0xDA0E2FD0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/parser/RecoveredField;(0xDA0E3278) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/diagnose/RangeUtil$RangeResult(0xDA0E3338) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/RecordedParsingInformation(0xDA0E3500) 3CLTEXTCLASS org/eclipse/jdt/core/dom/InfixExpression$Operator(0xDA0E3638) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/dom/InfixExpression$Operator;(0xDA0E39D8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/Modifier$ModifierKeyword(0xDA0E3A90) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/dom/Modifier$ModifierKeyword;(0xDA0E3DC0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/LabeledStatement(0xDA0E3ED0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/rewrite/ListRewrite(0xDA0E42A0) 3CLTEXTCLASS org/eclipse/jdt/core/formatter/IndentManipulation(0xDA0E46D8) 3CLTEXTCLASS org/eclipse/jdt/core/IProblemRequestor(0xDA0E4AA0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/BecomeWorkingCopyOperation(0xDA0E4C68) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$PerWorkingCopyInfo(0xDA0E4F40) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CompilationUnitElementInfo(0xDA0E51D8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/BufferManager(0xDA0E5360) 3CLTEXTCLASS org/eclipse/jdt/internal/core/BufferCache(0xDA0E5720) 3CLTEXTCLASS org/eclipse/jdt/internal/core/BufferManager$1(0xDA0E59A8) 3CLTEXTCLASS org/eclipse/jdt/core/IBuffer$ITextEditCapability(0xDA0E5AB0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/ReferenceInfoAdapter(0xDA0E5B98) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor(0xDA0E5DD8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ImportContainer(0xDA0E6E60) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ImportDeclaration(0xDA0E73E8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/PackageDeclaration(0xDA0E7938) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SourceField(0xDA0E7DC8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/Initializer(0xDA0E8558) 3CLTEXTCLASS org/eclipse/jdt/core/dom/PackageBinding(0xDA0E8A00) 3CLTEXTCLASS org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder$1(0xDA0E8F88) 3CLTEXTCLASS org/eclipse/jdt/core/dom/WildcardType(0xD9C1F3F0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ParameterizedType(0xD9C1FA08) 3CLTEXTCLASS org/eclipse/jdt/core/dom/QualifiedType(0xD9C20048) 3CLTEXTCLASS org/eclipse/jdt/core/dom/LineComment(0xD9C20658) 3CLTEXTCLASS org/eclipse/jdt/core/dom/BlockComment(0xD9C20A88) 3CLTEXTCLASS org/eclipse/jdt/core/dom/MethodRef(0xD9C20EC0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/MethodRefParameter(0xD9C215A8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/Modifier(0xD9C21C88) 3CLTEXTCLASS org/eclipse/jdt/core/dom/DocCommentParser(0xD9C223C8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/StructuralPropertyDescriptor(0xD9C22CC8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ChildPropertyDescriptor(0xD9C22F20) 3CLTEXTCLASS org/eclipse/jdt/internal/core/dom/NaiveASTFlattener(0xD9C233C8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ChildListPropertyDescriptor(0xD9C24C80) 3CLTEXTCLASS org/eclipse/jdt/core/dom/Message(0xD9C24DF0) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/dom/Message;(0xD9C24F90) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/compiler/IProblem;(0xD9C25048) 3CLTEXTCLASS org/eclipse/jdt/core/dom/SimplePropertyDescriptor(0xD9C25118) 3CLTEXTCLASS org/eclipse/jdt/core/dom/TagElement(0xD9C253B0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ASTNode$NodeList(0xD9C25A18) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/dom/Comment;(0xD9C25DD0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ASTNode$NodeList$Cursor(0xD9C25E98) 3CLTEXTCLASS org/eclipse/jdt/core/dom/CatchClause(0xD9C26118) 3CLTEXTCLASS org/eclipse/jdt/core/dom/MemberRef(0xD9C266F8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/TextElement(0xD9C26CF8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/CompletionEngine$AcceptedType(0xD9C27150) 3CLTEXTCLASS org/eclipse/jdt/core/dom/AssertStatement(0xD9C10180) 3CLTEXTCLASS org/eclipse/jdt/core/dom/BreakStatement(0xD9C10758) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ContinueStatement(0xD9C10C80) 3CLTEXTCLASS org/eclipse/jdt/core/dom/DoStatement(0xD9C111B0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/EmptyStatement(0xD9C117B8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ForStatement(0xD9C11BE0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/IfStatement(0xD9C122E8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/LabeledStatement(0xD9C12978) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ReturnStatement(0xD9C12F78) 3CLTEXTCLASS org/eclipse/jdt/core/dom/SwitchStatement(0xD9C134A8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/SynchronizedStatement(0xD9C13AF0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ThrowStatement(0xD9C14100) 3CLTEXTCLASS org/eclipse/jdt/core/dom/TryStatement(0xD9C14678) 3CLTEXTCLASS org/eclipse/jdt/core/dom/TypeDeclarationStatement(0xD9C14D40) 3CLTEXTCLASS org/eclipse/jdt/core/dom/WhileStatement(0xD9C153D8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ExpressionStatement(0xD9C159E8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/TypeParameter(0xD9C15F50) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ImportDeclaration(0xD9C165A0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/PackageDeclaration(0xD9C16C68) 3CLTEXTCLASS org/eclipse/jdt/core/dom/VariableDeclarationFragment(0xD9C17398) 3CLTEXTCLASS org/eclipse/jdt/core/dom/SimpleType(0xD9C17A98) 3CLTEXTCLASS org/eclipse/jdt/core/dom/EnumConstantDeclaration(0xD9C08180) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ConstructorInvocation(0xD9C08970) 3CLTEXTCLASS org/eclipse/jdt/core/dom/SuperConstructorInvocation(0xD9C08F58) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ParenthesizedExpression(0xD9C09600) 3CLTEXTCLASS org/eclipse/jdt/core/dom/PrefixExpression(0xD9C09B60) 3CLTEXTCLASS org/eclipse/jdt/core/dom/PostfixExpression(0xD9C0A190) 3CLTEXTCLASS org/eclipse/jdt/core/dom/BooleanLiteral(0xD9C0A7B8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/NullLiteral(0xD9C0ACA0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/StringLiteral(0xD9C0B0D8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/InstanceofExpression(0xD9C0B788) 3CLTEXTCLASS org/eclipse/jdt/core/dom/SuperFieldAccess(0xD9C0BD98) 3CLTEXTCLASS org/eclipse/jdt/core/dom/FieldAccess(0xD9C0C3C8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/EnhancedForStatement(0xD9C0C9F0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/Comment(0xD9C0D0B8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/Javadoc(0xD9C0D3F0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/SuperMethodInvocation(0xD9C0DA88) 3CLTEXTCLASS org/eclipse/jdt/core/dom/MethodInvocation(0xD9C0E250) 3CLTEXTCLASS org/eclipse/jdt/core/dom/MemberValuePair(0xD9C0E9D0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/StringLiteralConcatenation(0xD9C0EFE0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ThisExpression(0xD9C0F3A0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/VariableDeclarationStatement(0xD9C0F8D0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/InfixExpression(0xD9C00138) 3CLTEXTCLASS org/eclipse/jdt/core/dom/AnnotationTypeDeclaration(0xD9C008E8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/AnnotationTypeMemberDeclaration(0xD9C00F98) 3CLTEXTCLASS org/eclipse/jdt/core/dom/SingleVariableDeclaration(0xD9C017C0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/IExtendedModifier(0xD9C020C8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/Annotation(0xD9C02298) 3CLTEXTCLASS org/eclipse/jdt/core/dom/SingleMemberAnnotation(0xD9C02788) 3CLTEXTCLASS org/eclipse/jdt/core/dom/MarkerAnnotation(0xD9C02DA0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/NormalAnnotation(0xD9C032B8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ArrayCreation(0xD9C03890) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ArrayInitializer(0xD9C03F70) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ArrayAccess(0xD9C04488) 3CLTEXTCLASS org/eclipse/jdt/core/dom/Assignment(0xD9C04A58) 3CLTEXTCLASS org/eclipse/jdt/core/dom/FieldDeclaration(0xD9C05110) 3CLTEXTCLASS org/eclipse/jdt/core/dom/SwitchCase(0xD9C05888) 3CLTEXTCLASS org/eclipse/jdt/core/dom/CastExpression(0xD9C05E10) 3CLTEXTCLASS org/eclipse/jdt/core/dom/CharacterLiteral(0xD9C06428) 3CLTEXTCLASS org/eclipse/jdt/core/dom/TypeLiteral(0xD9C06AB8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ConditionalExpression(0xD9C07030) 3CLTEXTCLASS org/eclipse/jdt/core/dom/NumberLiteral(0xD9C07658) 3CLTEXTCLASS org/eclipse/jdt/core/CorrectionEngine(0xD9C07B68) 3CLTEXTCLASS org/eclipse/jdt/core/dom/AST(0xDA0F2CE8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/QualifiedName(0xDA0F47E8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/Type(0xDA0F4E18) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ArrayType(0xDA0F5198) 3CLTEXTCLASS org/eclipse/jdt/core/dom/NodeEventHandler(0xDA0F5680) 3CLTEXTCLASS org/eclipse/jdt/core/dom/InternalASTRewrite(0xDA0F5860) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ASTConverter(0xDA0F5F68) 3CLTEXTCLASS org/eclipse/jdt/core/dom/EnumDeclaration(0xDA0F9B70) 3CLTEXTCLASS org/eclipse/jdt/core/dom/Initializer(0xDA0FA2F8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/SubTypeSearchJob(0xDA0FA920) 3CLTEXTCLASS org/eclipse/jdt/core/dom/DefaultASTVisitor(0xDA0EAD78) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ASTRecoveryPropagator(0xDA0EBEF0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/BasicCompilationUnit(0xDA0ECC00) 3CLTEXTCLASS org/eclipse/jdt/core/dom/CompilationUnitResolver(0xDA0ECF68) 3CLTEXTCLASS org/eclipse/jdt/core/dom/BindingResolver(0xDA0EDE10) 3CLTEXTCLASS org/eclipse/jdt/core/dom/DefaultBindingResolver(0xDA0EE418) 3CLTEXTCLASS org/eclipse/jdt/core/dom/NodeSearcher(0xDA0EF8D8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/batch/FileSystem(0xDA0EFE98) 3CLTEXTCLASS org/eclipse/jdt/internal/core/INameEnviromentWithProgress(0xDA0F02B0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/NameEnviromentWithProgress(0xDA0F0398) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CancelableNameEnvironment(0xDA0F0628) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ASTRequestor(0xDA0F08C0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/CompilationUnitResolver$1$Requestor(0xDA0F0A18) 3CLTEXTCLASS org/eclipse/jdt/core/dom/CompilationUnitResolver$IntArrayList(0xDA0F0C38) 3CLTEXTCLASS org/eclipse/jdt/core/dom/IAnnotationBinding(0xDA0F0D50) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/RecoveredImport(0xDA0F0ED0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/parser/RecoveredType;(0xDA0F1128) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/diagnose/RangeUtil(0xDA0F11E0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser$SecondaryRepairInfo(0xDA0F1428) 3CLTEXTCLASS org/eclipse/jdt/core/dom/PrimitiveType(0xDA0F15F0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/MethodDeclaration(0xDA0F1CE0) 3CLTEXTCLASS org/eclipse/jdt/core/CorrectionEngine$1(0xDA0F27F8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/Disassembler(0xDA0D0090) 3CLTEXTCLASS org/eclipse/jdt/core/util/IClassFileDisassembler(0xDA0D1510) 3CLTEXTCLASS org/eclipse/jdt/core/util/IClassFileReader(0xDA0D15D8) 3CLTEXTCLASS org/eclipse/jdt/core/ICodeFormatter(0xDA0D17F8) 3CLTEXTCLASS org/eclipse/jdt/core/compiler/IScanner(0xDA0D18A8) 3CLTEXTCLASS org/eclipse/jdt/core/util/ClassFormatException(0xDA0D1A50) 3CLTEXTCLASS org/eclipse/jdt/core/compiler/ITerminalSymbols(0xDA0D1BA8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/PublicScanner(0xDA0D1EE8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/BodyDeclaration(0xDA0D3278) 3CLTEXTCLASS org/eclipse/jdt/core/dom/AbstractTypeDeclaration(0xDA0D3840) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ASTParser(0xDA0D3D28) 3CLTEXTCLASS org/eclipse/jdt/core/dom/Statement(0xDA0D4820) 3CLTEXTCLASS org/eclipse/jdt/core/dom/Block(0xDA0D4B88) 3CLTEXTCLASS org/eclipse/jdt/core/dom/TypeDeclaration(0xDA0D5128) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ASTVisitor(0xDA0D5DC8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ASTSyntaxErrorPropagator(0xDA0D6F60) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ClassInstanceCreation(0xDA0D74F8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder$3(0xDA0D7D20) 3CLTEXTCLASS org/eclipse/jdt/internal/core/Member(0xDA03DFD8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/NamedMember(0xDA03E9C8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SourceType(0xDA03F270) 3CLTEXTCLASS org/eclipse/jdt/internal/core/TypeParameter(0xDA040388) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ResolvedSourceType(0xDA040A28) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ClassFile(0xDA041018) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ClassFileWorkingCopy(0xDA0420E8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/BinaryMember(0xDA042820) 3CLTEXTCLASS org/eclipse/jdt/internal/core/BinaryType(0xDA042F90) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IField;(0xDA044200) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IMember;(0xDA0442B8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/VariableDeclaration(0xDA044460) 3CLTEXTCLASS org/eclipse/jdt/core/ToolFactory(0xDA044760) 3CLTEXTCLASS org/eclipse/jdt/core/formatter/CodeFormatter(0xDA044CE0) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/DefaultCodeFormatter(0xDA044E48) 3CLTEXTCLASS org/eclipse/jdt/core/util/ClassFileBytesDisassembler(0xDA045618) 3CLTEXTCLASS org/eclipse/jdt/core/dom/AnonymousClassDeclaration(0xDA045818) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/SelectionEngine$2(0xDA045C90) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/flow/NullInfoRegistry(0x10C3C678) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/codegen/LongCache(0x10C3CA28) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/SynchronizedStatement(0x10C3CD08) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/BlockScope;(0x10C3D220) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/impl/ByteConstant(0x10C3D308) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/LocalTypeBinding;(0x10C3D540) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ClassFile$1(0x10C3D5F8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/impl/ShortConstant(0x10C3D760) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ExtendedStringLiteral(0x10C3DA70) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/BinaryExpression;(0x10C3DD50) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/Scope$1(0x10C3DE28) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/InnerEmulationDependency(0x10C3E020) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/InnerEmulationDependency;(0x10C3E120) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/SyntheticMethodBinding;(0x10C3E1D8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/IndexManager$1(0x10C3E2A8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/SourceIndexer(0x10C3E4F0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ISourceElementRequestor(0x10C3E760) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/SourceIndexerRequestor(0x10C3EA30) 3CLTEXTCLASS org/eclipse/jdt/internal/core/jdom/CompilationUnit(0x10C3F178) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ISourceElementRequestor$TypeInfo(0x10C3F3A0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ISourceElementRequestor$FieldInfo(0x10C3F4B0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ISourceElementRequestor$MethodInfo(0x10C3F598) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CompilationUnit$1(0x10C3F8F8) 3CLTEXTCLASS org/eclipse/jdt/core/CompletionRequestor(0x10C3FCE8) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/CompletionRequestorWrapper(0x10C3FFC0) 3CLTEXTCLASS org/eclipse/jdt/core/ICompletionRequestor(0x10C40298) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CompilationUnit$3(0x10C40450) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IImportDeclaration;(0x10C40560) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/HashtableOfArrayToObject(0x10C40630) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JarPackageFragmentInfo(0x10C40958) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JarEntryResource(0x10C40AC0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JarEntryFile(0x10C40E28) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JarEntryDirectory(0x10C41160) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/Annotation;(0x10C41390) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/RecoveredBlock(0x10C414E0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/RecoveredAnnotation(0x10C41C78) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/RecoveredLocalVariable(0x10C42268) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/parser/RecoveredStatement;(0x10C42670) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/parser/RecoveredMethod;(0x10C42728) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/RecoveryScanner(0x10C428D8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/RecoveryScannerData(0x10C42E80) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser(0x10C43000) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/diagnose/LexStream(0x10C43AF8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/diagnose/LexStream$Token(0x10C43F70) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/parser/diagnose/LexStream$Token;(0x10C440D0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser$PrimaryRepairInfo(0x10C44188) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser$RepairCandidate(0x10C442E8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser$StateInfo(0x10C443E8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser$StateInfo;(0x10C444E8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo(0x10C6E4A0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/codegen/ObjectCache(0x10C6EA38) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo;(0x10C6ECB8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/flow/FlowInfo;(0x10C6ED70) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/flow/InsideSubRoutineFlowContext(0x10C6EE90) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/codegen/Label(0x10C6F0E0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/codegen/BranchLabel(0x10C6F230) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/SubRoutineStatement;(0x10C6F630) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/flow/LabelFlowContext(0x10C6F758) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/codegen/CodeStream(0x10C6FE88) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream(0x10C734F0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/codegen/ExceptionLabel(0x10C74248) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/codegen/ExceptionLabel;(0x10C744F0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/codegen/BranchLabel;(0x10C745A8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/codegen/IntegerCache(0x10C74678) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/codegen/CaseLabel(0x10C74908) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/codegen/CaseLabel;(0x10C74B28) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/QualifiedNameSet(0x10C74BE0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/builder/QualifiedNameSet;(0x10C74DD0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/NameSet(0x10C74E88) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/builder/NameSet;(0x10C75078) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/DoStatement(0x10C75188) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/impl/FloatConstant(0x10C75648) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/codegen/FloatCache(0x10C75890) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/codegen/DoubleCache(0x10C75AB8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext(0x10C75D38) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/Block;(0x10C76120) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/BatchImageBuilder$2(0x10C761D8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope(0x10B800D8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ProblemBinding(0x10B80D78) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/MostSpecificExceptionMethodBinding(0x10B81038) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/NestedTypeBinding(0x10B81510) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/LocalTypeBinding(0x10B81D78) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ImportBinding(0x10B82578) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ImportConflictBinding(0x10B827B8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/CompoundNameVector(0x10B82980) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/SimpleNameVector(0x10B82BD8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding;(0x10B82E38) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/ClasspathJar$PackageCacheEntry(0x10B82EF0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/MemberTypeBinding(0x10B83288) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/VariableBinding;(0x10B83768) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/Scope;(0x10B83820) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/LocalVariableBinding;(0x10B838D8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/SyntheticFieldBinding(0x10B83A10) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/HashtableOfType(0x10B83BB0) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/compiler/CategorizedProblem;(0x10B83E00) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/EqualExpression(0x10B83FC8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/impl/IntConstant(0x10B84688) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/impl/DoubleConstant(0x10B84A50) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ConditionalExpression(0x10B84D60) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/MemberValuePair;(0x10B85390) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/classfmt/AnnotationMethodInfo(0x10B854B0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/classfmt/AnnotationMethodInfoWithAnnotations(0x10B85878) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/ImportBinding;(0x10B85A78) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/NameEnvironmentAnswer(0x10B85B50) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/UnresolvedAnnotationBinding(0x10B85D78) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/SignatureWrapper(0x10B85F30) 3CLTEXTCLASS [[Lorg/eclipse/jdt/internal/compiler/lookup/AnnotationBinding;(0x10B86120) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/impl/LongConstant(0x10B86208) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/SyntheticArgumentBinding;(0x10B86480) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ProcessTaskManager(0x10B86540) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/IfStatement(0x10B868B8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression(0x10B86E20) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/flow/SwitchFlowContext(0x10B872E8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext(0x10B875A0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/PrefixExpression(0x10B87C08) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/codegen/ConstantPool(0xDB389B78) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/WorkQueue(0xDB38B120) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/codegen/CachedIndexEntry(0xDB38B328) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/codegen/CharArrayCache(0xDB38B440) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/BatchImageBuilder$3(0xDB38B6E0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/HashtableOfIntValues(0xDB38B980) 3CLTEXTCLASS org/eclipse/jdt/internal/core/index/DiskIndex$IntList(0xDB38BC40) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/AbstractImageBuilder$1(0xDB38BD88) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/SourceFile(0xDB38C050) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/builder/SourceFile;(0xDB38C3B0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/builder/CompilationParticipantResult;(0xDB38C468) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/Messages(0xDB38C520) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/Messages$MessagesProperties(0xDB38C9A0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ReadManager(0xDB38CBA0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/env/ICompilationUnit;(0xDB38CEA0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/CompilationResult$1(0xDB38CF58) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration$1(0xDB38D070) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/ImportReference;(0xDB38D188) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/Javadoc(0xDB38D280) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ClassScope(0xDB38DDB8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/JavadocAllocationExpression(0xDB38ECC8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/TypeReference;(0xDB38F1D0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/JavadocSingleNameReference;(0xDB38F288) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/JavadocSingleTypeReference;(0xDB38F340) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/Statement;(0xDB38F3F8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/Argument;(0xDB38F4B0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/JavadocArgumentExpression;(0xDB38F568) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ParameterizedMethodBinding(0xDB38F720) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding(0xDB38FCB8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ProblemMethodBinding(0xDB390410) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/JavadocReturnStatement(0xDB390700) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/FieldDeclaration;(0xDB3909A8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration;(0xDB390A60) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/Clinit(0xDB390BB0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/TypeDeclaration;(0xDB3911E8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/WhileStatement(0xDB3912F8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/TypeParameter;(0xDB3917A8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/impl/StringConstant(0xDB391890) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/CaseStatement;(0xDB391A50) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding(0x10AF96A0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding(0x10AF9E40) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/MissingTypeBinding(0x10AFAF60) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/PackageBinding(0x10AFB430) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ProblemPackageBinding(0x10AFB920) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/UnresolvedReferenceBinding(0x10AFBCA8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/WildcardBinding(0x10AFC328) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/MethodVerifier(0x10AFCBB0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15(0x10AFD6E8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/TypeBinding;(0x10AFDF58) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/ReferenceBinding;(0x10AFE010) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/FieldBinding;(0x10AFE0C8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/MethodBinding;(0x10AFE180) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding;(0x10AFE238) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/AnnotationBinding(0x10AFE2F8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/AnnotationBinding;(0x10AFE680) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ElementValuePair(0x10AFE748) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/ElementValuePair;(0x10AFE9E8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding$1(0x10AFEC98) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding$2(0x10AFEF80) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding$3(0x10AFF0A8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration;(0x10AFF1D8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/HashtableOfPackage(0x10AFF2A0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/PackageBinding;(0x10AFF4F0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/lookup/ArrayBinding;(0x10AFF5A8) 3CLTEXTCLASS [[Lorg/eclipse/jdt/internal/compiler/lookup/ArrayBinding;(0x10AFF660) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ClassFilePool(0x10AFF720) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ClassFile(0x10AFF970) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ClassFile;(0x10B011A0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/IBinaryElementValuePair(0x10B01240) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/impl/CompilerStats(0x10B01320) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/flow/FlowContext(0xDB1C5C78) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext(0xDB1C6390) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/flow/InitializationFlowContext(0xDB1C6910) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/HashtableOfObject(0xDB1C6BC8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ExtraFlags(0xDB1C6E98) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/IBinaryNestedType(0xDB1C7020) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/classfmt/InnerClassInfo(0xDB1C7140) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/classfmt/InnerClassInfo;(0xDB1C7400) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/env/IBinaryNestedType;(0xDB1C74B8) 3CLTEXTCLASS org/eclipse/jdt/core/Signature(0xDB1C7570) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/ExternalFolderChange;(0xDB1C80B8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/ClasspathValidation;(0xDB1C8170) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/ProjectReferenceChange;(0xDB1C8228) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/JavaProject;(0xDB1C82E0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/BuildNotifier(0xDB1C83D0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$5(0xDB1C8918) 3CLTEXTCLASS org/eclipse/jdt/core/compiler/CompilationParticipant(0xDB1C8A80) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/compiler/CompilationParticipant;(0xDB1C8C18) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$4(0xDB1C8CD8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/NameEnvironment(0xDB1C8E90) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/AbortIncrementalBuildException(0xDB1C9528) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/ClasspathJar(0xDB1C9678) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/builder/ClasspathLocation;(0xDB1C9BC8) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/builder/ClasspathMultiDirectory;(0xDB1C9C80) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/ICompilationUnitLocator(0xDB1C9D20) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/AbstractImageBuilder(0xDB1C9E50) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/BatchImageBuilder(0xDB1CADB8) 3CLTEXTCLASS org/eclipse/jdt/core/compiler/BuildContext(0xDB1CB4F8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/CompilationParticipantResult(0xDB1CB690) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/State(0xDB1CB930) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/ReferenceCollection(0xDB1CC330) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/AdditionalTypeCollection(0xDB1CC780) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/DefaultErrorHandlingPolicies$4(0xDB1CC898) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/ProblemFactory(0xDB1CC9D0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ProblemReasons(0xDB1CCB30) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment(0xDB1CCCD0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JarPackageFragment(0xDB1BB480) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SetClasspathOperation(0xDB1BBB68) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ClasspathValidation(0xDB1BBF60) 3CLTEXTCLASS org/eclipse/jdt/internal/core/UserLibraryClasspathContainer(0xDB1BC120) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ProjectReferenceChange$1(0xDB1BC370) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/GenericXMLWriter(0xDB1BC578) 3CLTEXTCLASS org/eclipse/jdt/internal/core/XMLWriter(0xDB1BC9F8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ClasspathEntry$UnknownXmlElements(0xDB1BCBA8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/GenericXMLWriter$1(0xDB1BCC90) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$ZipCache(0xDB1BCDD0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/ManifestAnalyzer(0xDB1BD018) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/PackageFragmentRoot;(0xDB1BD248) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/RemoveFolderFromIndex(0xDB1BD318) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$VariablesAndContainersSaveHelper(0xDB1BD5D8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/AbstractIndexer(0xDB1BDB30) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer(0xDB1BDF28) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/EnumConstantSignature(0xDB1BE7A8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/ClassSignature(0xDB1BE920) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/classfmt/ClassFileStruct(0xDB1BEA98) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader(0xDB1BED38) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/IBinaryAnnotation(0xDB1BF990) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/IGenericField(0xDB1BFA50) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/IBinaryField(0xDB1BFB00) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/IGenericMethod(0xDB1BFC08) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/IBinaryMethod(0xDB1BFCD8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/impl/Constant(0xDB1BFE60) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/classfmt/FieldInfo(0xDB1C0510) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/classfmt/FieldInfo;(0xDB1C0CB8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/classfmt/FieldInfoWithAnnotation(0xDB1C0DD0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/impl/BooleanConstant(0xDB1C10D8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/classfmt/AnnotationInfo(0xDB1C1318) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/classfmt/AnnotationInfo;(0xDB1C17F0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/classfmt/MethodInfo(0xDB1C1910) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/classfmt/MethodInfo;(0xDB1C2060) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/classfmt/MethodInfoWithAnnotations(0xDB1C2180) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/classfmt/MethodInfoWithParameterAnnotations(0xDB1C2480) 3CLTEXTCLASS [[Lorg/eclipse/jdt/internal/compiler/classfmt/AnnotationInfo;(0xDB1C26B0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/codegen/AttributeNamesConstants(0xDB1C2750) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/problem/AbortType(0xDB1C2A18) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/problem/AbortMethod(0xDB1C2B78) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/SyntheticArgumentBinding(0xDB1C2CF8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/classfmt/ClassFileConstants(0xDB1C2EB0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/SourceElementNotifier$LocalDeclarationVisitor(0xDB191350) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/Scope(0xDB191A00) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/BlockScope(0xDB193158) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/MethodScope(0xDB193DA8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ArrayBinding(0xDB194748) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/problem/ShouldNotImplement(0xDB194D50) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/BaseTypeBinding(0xDB194F70) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/flow/FlowInfo(0xDB1953F0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo(0xDB195A20) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ProblemReferenceBinding(0xDB196310) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/SyntheticMethodBinding(0xDB196918) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ProblemFieldBinding(0xDB196ED0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/SaveIndex(0xDB1970B0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/BatchOperation(0xDB197390) 3CLTEXTCLASS [[Lorg/eclipse/jdt/core/IAccessRule;(0xDB1975F0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ClasspathAttribute(0xDB1976B0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/env/AccessRule;(0xDB197888) 3CLTEXTCLASS org/eclipse/jdt/internal/core/PackageFragmentRootInfo(0xDB197970) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JarPackageFragmentRootInfo(0xDB197CE0) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IPackageFragmentRoot;(0xDB197E00) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/ObjectVector(0xDB197EE8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/LRUCache$LRUCacheEntry(0xDB1981C0) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IClassFile;(0xDB198330) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/ScannerHelper(0xDB1983E8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/ILRUCacheable(0xDB1987F8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/PackageFragmentInfo(0xDB1988E0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/PostfixExpression(0xDB198B58) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/JavadocTagConstants(0xDB188F40) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser(0xDB189538) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/JavadocParser(0xDB18A0E0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/SourceJavadocParser(0xDB18ACC8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/JavadocFieldReference(0xDB18B0D8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/JavadocMessageSend(0xDB18B628) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/problem/DefaultProblemFactory(0xDB18BB48) 3CLTEXTCLASS org/eclipse/jdt/core/compiler/IProblem(0xDB18BFB8) 3CLTEXTCLASS org/eclipse/jdt/core/compiler/CategorizedProblem(0xDB18CA40) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/problem/DefaultProblem(0xDB18CC90) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/HashtableOfInt(0xDB18D148) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/LocalVariableBinding(0xDB18D3C8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/DefaultErrorHandlingPolicies(0xDB18D840) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/IErrorHandlingPolicy(0xDB18D9B0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/DefaultErrorHandlingPolicies$1(0xDB18DA90) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/ASTNode;(0xDB18DBB0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/compiler/ast/Expression;(0xDB18DC68) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/JavadocArraySingleTypeReference(0xDB18DE28) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/JavadocArrayQualifiedTypeReference(0xDB18E1F8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/JavadocImplicitTypeReference(0xDB18E5C0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/JavadocArgumentExpression(0xDB18EA90) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/JavadocSingleTypeReference(0xDB18EFB0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/JavadocQualifiedTypeReference(0xDB18F450) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/JavadocSingleNameReference(0xDB18F918) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/HashtableOfObjectToInt(0xDB18FC90) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/SourceElementNotifier(0xDB18FF68) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/OR_OR_Expression(0xDB190AC0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/Parser$1$TypeVisitor(0xDB175090) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/Parser$1$MethodVisitor(0xDB175A30) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ArrayReference(0xDB176160) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/InstanceOfExpression(0xDB176708) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/problem/ProblemHandler(0xDB176B70) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/problem/ProblemReporter(0xDB177460) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/SourceElementParser$1(0xDB17C128) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/impl/CharConstant(0xDB17C920) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ForStatement(0xDB16B8B0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ReturnStatement(0xDB16BE60) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/SwitchStatement(0xDB16C428) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ThrowStatement(0xDB16CA90) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/SubRoutineStatement(0xDB16CE08) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/TryStatement(0xDB16D0B8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/Literal(0xDB16DA88) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/MagicLiteral(0xDB16DE08) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/FalseLiteral(0xDB16E0C0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/NullLiteral(0xDB16E468) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/TrueLiteral(0xDB16E820) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/NumberLiteral(0xDB16EBC8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/IntLiteral(0xDB16EEB0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/LongLiteral(0xDB16F2F0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/FloatLiteral(0xDB16F688) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/DoubleLiteral(0xDB16FA58) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/CharLiteral(0xDB16FE10) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/StringLiteral(0xDB1701B0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/IntLiteralMinValue(0xDB170640) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/LongLiteralMinValue(0xDB170940) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/UnaryExpression(0xDB170C30) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/Wildcard(0xDB171288) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/SingleNameReference(0xDB171768) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference(0xDB172310) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/Parser$1(0xDB1731F8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/CastExpression(0xDB1638F0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration(0xDB1640B8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/EmptyStatement(0xDB164A40) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ForeachStatement(0xDB164CE8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/LocalDeclaration(0xDB165500) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/RecoveredStatement(0xDB165AA0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/RecoveredType(0xDB165DE8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall(0xDB1667C8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ThisReference(0xDB166FE0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/SuperReference(0xDB1674A0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/FieldReference(0xDB1678A0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/Argument(0xDB168288) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/MethodDeclaration(0xDB1687F8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/MarkerAnnotation(0xDB168E48) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/AnnotationMethodDeclaration(0xDB169120) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/MessageSend(0xDB169638) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/NormalAnnotation(0xDB16A048) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ClassLiteralAccess(0xDB16A3D0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/QualifiedThisReference(0xDB16A8D8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/QualifiedSuperReference(0xDB16ADB8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/SingleMemberAnnotation(0xDB16B1A0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ImportReference(0xDB16B4D0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/RecoveredMethod(0x10A61FE0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/Initializer(0x10A628F0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/RecoveredField(0x10A62D00) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer(0x10A63288) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/SingleTypeReference(0x10A63948) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ArrayTypeReference(0x10A63E50) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference(0x10A64290) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference(0x10A64978) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ArrayQualifiedTypeReference(0x10A64F40) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference(0x10A653C8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/Reference(0x10A65A90) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/NameReference(0x10A65E50) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression(0x10A661E8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/AssertStatement(0x10A66620) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/Assignment(0x10A66BD8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/CompoundAssignment(0x10A67270) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/OperatorExpression(0x10A67818) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/BinaryExpression(0x10A683A8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/CombinedBinaryExpression(0x10A68D88) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/Block(0x10A692B8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/CaseStatement(0x10A69628) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/BranchStatement(0x10A69A50) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/SelectionEngine$SelectionTypeNameMatchRequestorWrapper(0x10A69C60) 3CLTEXTCLASS org/eclipse/jdt/core/JavaConventions(0xDB118AB8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/Scanner(0xDB1190F0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaProject$ResolvedClasspath(0xDB11A360) 3CLTEXTCLASS org/eclipse/jdt/internal/core/DeltaProcessingState$1(0xDB11A4A0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/AccessRule(0xDB11A620) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ClasspathAccessRule(0xDB11A850) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IClasspathContainer;(0xDB11AA38) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SetContainerOperation(0xDB11ABC0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/DeltaProcessor$2(0xDB11B0C8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ProjectReferenceChange(0xDB11B220) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ExternalFolderChange(0xDB11B4E8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SimpleDelta(0xDB11B700) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaElementDelta(0xDB11BA10) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IJavaElementDelta;(0xDB11C238) 3CLTEXTCLASS org/eclipse/jdt/internal/core/DeltaProcessor$RootInfo(0xDB11C2F8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/DeltaProcessor$OutputsInfo(0xDB11C560) 3CLTEXTCLASS org/eclipse/jdt/core/ITypeHierarchy(0xDB11C6F0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy(0xDB11C9F0) 3CLTEXTCLASS org/eclipse/jdt/core/ElementChangedEvent(0xDB11DB30) 3CLTEXTCLASS org/eclipse/jdt/internal/core/DeltaProcessor$3(0xDB11DC88) 3CLTEXTCLASS org/eclipse/jdt/core/IClassFile(0xDB11DE20) 3CLTEXTCLASS org/eclipse/jdt/core/IImportContainer(0xDB11DF58) 3CLTEXTCLASS org/eclipse/jdt/core/BindingKey(0xDB11E058) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/ReadWriteMonitor(0xDB11E388) 3CLTEXTCLASS org/eclipse/jdt/internal/core/index/MemoryIndex(0xDB11E5A8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/SimpleWordSet(0xDB11E858) 3CLTEXTCLASS org/eclipse/jdt/internal/core/index/DiskIndex(0xDB11EA18) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/SimpleSetOfCharArray(0xDB11F4A8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/IndexAllProject$1(0xDB11F760) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ArrayInitializer(0xDB11FA18) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/RecoveredElement(0xDB11FEA0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/RecoveredUnit(0xDB1204A0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/JavaBuilder(0x10991F00) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/ClasspathLocation(0x10992BF0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/ClasspathDirectory(0x10992E48) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/ClasspathMultiDirectory(0x10993280) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/ImageBuilderInternalException(0x109934C0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/builder/MissingSourceFileException(0x10993688) 3CLTEXTCLASS org/eclipse/jdt/core/JavaCore$2(0x109937B8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/DeltaProcessor(0x10993980) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaProject(0x109950B8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$PerProjectInfo(0x10997408) 3CLTEXTCLASS org/eclipse/jdt/internal/core/PackageFragment(0x10997B48) 3CLTEXTCLASS org/eclipse/jdt/internal/core/DeltaProcessor$1$FoundRelevantDeltaException(0x10998660) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ModelUpdater(0x109987A8) 3CLTEXTCLASS org/eclipse/jdt/core/eval/IEvaluationContext(0x10998A98) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaProject$3(0x10998CE0) 3CLTEXTCLASS [[Lorg/eclipse/jdt/core/IClasspathEntry;(0x10998E18) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ClasspathChange(0x10998ED8) 3CLTEXTCLASS org/eclipse/jdt/core/ClasspathContainerInitializer(0x109994F8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaProject$1(0x10999720) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaProject$2(0x10999890) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/BreakStatement(0x10999AC0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/Expression(0x10901BB0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/TypeReference(0x109025C8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/Annotation(0x10902C40) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/MemberValuePair(0x10903360) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/VariableBinding(0x10903738) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/FieldBinding(0x10903A38) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/InvocationSite(0x10904020) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/AbstractVariableDeclaration(0x109041D0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/FieldDeclaration(0x10904560) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/TypeParameter(0x10904BE8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/classfmt/ClassFormatException(0x10904F50) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/MatchLocator$WrappedCoreException(0x10905278) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/AllocationExpression(0x10905490) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression(0x10905D60) 3CLTEXTCLASS org/eclipse/jdt/internal/core/index/Index(0x10906590) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/index/Index;(0x10906A28) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/Util(0x10906AE0) 3CLTEXTCLASS org/eclipse/jdt/core/IAnnotation(0x10908818) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SourceRefElement(0x10908A48) 3CLTEXTCLASS org/eclipse/jdt/internal/core/Annotation(0x109091B0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ContinueStatement(0x109096C0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SourceTypeElementInfo(0x10929238) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/CompilationResult(0x10929880) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/IBinaryType(0x10929E70) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/INameEnvironment(0x1092A0B0) 3CLTEXTCLASS org/eclipse/jdt/core/search/IJavaSearchConstants(0x1092A190) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SearchableEnvironment(0x1092A330) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/JavaSearchNameEnvironment(0x1092AA18) 3CLTEXTCLASS org/eclipse/jdt/core/search/SearchMatch(0x1092AEA0) 3CLTEXTCLASS org/eclipse/jdt/core/search/PackageDeclarationMatch(0x1092B350) 3CLTEXTCLASS org/eclipse/jdt/core/search/TypeDeclarationMatch(0x1092B4E8) 3CLTEXTCLASS org/eclipse/jdt/core/search/FieldDeclarationMatch(0x1092B680) 3CLTEXTCLASS org/eclipse/jdt/core/search/MethodDeclarationMatch(0x1092B818) 3CLTEXTCLASS org/eclipse/jdt/core/search/LocalVariableDeclarationMatch(0x1092B9B0) 3CLTEXTCLASS org/eclipse/jdt/core/search/TypeParameterDeclarationMatch(0x1092BB48) 3CLTEXTCLASS org/eclipse/jdt/core/search/LocalVariableReferenceMatch(0x1092BCE8) 3CLTEXTCLASS org/eclipse/jdt/core/search/TypeParameterReferenceMatch(0x1092BED8) 3CLTEXTCLASS org/eclipse/jdt/core/search/ReferenceMatch(0x1092C088) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/Statement(0x1092C268) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/TypeDeclaration(0x1092C6F8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding(0x1092DA88) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration(0x1092EDB8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/MethodBinding(0x1092F6F8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/MemberDeclarationVisitor(0x10930740) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/BasicSearchEngine$1$AllTypeDeclarationsVisitor(0x108F2C50) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/QualifiedTypeDeclarationPattern(0x108F3318) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/MultiTypeDeclarationPattern(0x108F3708) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/BasicSearchEngine$4(0x108F3A90) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/BasicSearchEngine$2$AllTypeDeclarationsVisitor(0x108F4030) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/AbstractSearchScope(0x108F4628) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/AbstractJavaSearchScope(0x108F47C8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/JavaWorkspaceScope(0x108F4920) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/TypeNameRequestorWrapper(0x108F4DB8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/JavaSearchScope(0x108F4F18) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/AccessRuleSet(0x108F5750) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/AndPattern(0x108F5A30) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/OrPattern(0x108F5C98) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/PackageDeclarationPattern(0x108F5F98) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern(0x108F61D0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/LocalVariablePattern(0x108F6528) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/TypeParameterPattern(0x108F6890) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern(0x108F6C88) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern$PackageNameSet(0x108F7080) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/PatternSearchJob(0x108F7228) 3CLTEXTCLASS org/eclipse/jdt/core/search/SearchDocument(0x108F75C0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/JavaSearchDocument(0x108F7838) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/IndexSelector(0x108F7AF0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/SimpleSet(0x108F7F98) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/MatchLocator(0x108F8320) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SourceRefElementInfo(0x108FA3D0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/MemberElementInfo(0x108FA588) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/IGenericType(0x108FA6E0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/JavaSearchPattern(0x1087AE38) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/VariablePattern(0x1087B480) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/FieldPattern(0x1087B6E8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/DeclarationOfAccessedFieldsPattern(0x1087BB08) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/IntersectingPattern(0x1087BD18) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern(0x1087C010) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/DeclarationOfReferencedTypesPattern(0x1087C4C8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/MethodPattern(0x1087C6E0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/DeclarationOfReferencedMethodsPattern(0x1087CD40) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/BasicSearchEngine(0x1087CF10) 3CLTEXTCLASS org/eclipse/jdt/core/search/IJavaSearchScope(0x1087DC68) 3CLTEXTCLASS org/eclipse/jdt/core/search/TypeNameMatch(0x1087DDD0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/JavaSearchTypeNameMatch(0x1087E000) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/IndexQueryRequestor(0x1087E220) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/PathCollector(0x1087E320) 3CLTEXTCLASS org/eclipse/jdt/core/search/SearchParticipant(0x1087E4B8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/JavaSearchParticipant(0x1087E720) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/ConstructorPattern(0x1087EA68) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/ConstructorDeclarationPattern(0x1087F148) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/BasicSearchEngine$1(0x1087F428) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ASTVisitor(0x1087F9D8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/BasicSearchEngine$1$AllConstructorDeclarationsVisitor(0x10881210) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern(0x10881960) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/matching/SecondaryTypeDeclarationPattern(0x10881E10) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/BasicSearchEngine$2(0x10882048) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/BasicSearchEngine$3(0x10882230) 3CLTEXTCLASS org/eclipse/jdt/internal/core/AnnotatableInfo(0x10882460) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/ISourceType(0x108825E8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaProjectElementInfo(0x108827B0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JarPackageFragmentRoot(0xDC3182A8) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IJavaProject;(0xDC318A10) 3CLTEXTCLASS org/eclipse/jdt/core/IBufferFactory(0xDC318AB0) 3CLTEXTCLASS org/eclipse/jdt/core/IBuffer(0xDC318B60) 3CLTEXTCLASS org/eclipse/jdt/core/dom/ASTNode(0xDC318E28) 3CLTEXTCLASS org/eclipse/jdt/core/dom/Expression(0xDC31A4A8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/IDocElement(0xDC31A6D0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/Name(0xDC31A860) 3CLTEXTCLASS org/eclipse/jdt/core/dom/SimpleName(0xDC31AC10) 3CLTEXTCLASS org/eclipse/jdt/core/dom/IBinding(0xDC31B1A8) 3CLTEXTCLASS org/eclipse/jdt/core/dom/IMethodBinding(0xDC31B328) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ClasspathEntry(0xDC31B588) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/ClasspathEntry;(0xDC31C960) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IClasspathAttribute;(0xDC31CA18) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IAccessRule;(0xDC31CAD0) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IClasspathEntry;(0xDC31CB88) 3CLTEXTCLASS org/eclipse/jdt/core/IMember(0xDC31CC28) 3CLTEXTCLASS org/eclipse/jdt/core/IAnnotatable(0xDC31CDA8) 3CLTEXTCLASS org/eclipse/jdt/core/IType(0xDC31CE68) 3CLTEXTCLASS org/eclipse/jdt/core/IMethod(0xDC31D2F0) 3CLTEXTCLASS org/eclipse/jdt/core/ISourceRange(0xDC31D4E8) 3CLTEXTCLASS org/eclipse/jdt/core/SourceRange(0xDC31D5C8) 3CLTEXTCLASS org/eclipse/jdt/core/IJarEntryResource(0xDC31D798) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IJarEntryResource;(0xDC31D8B0) 3CLTEXTCLASS org/eclipse/jdt/core/dom/CompilationUnit(0xDC31DA98) 3CLTEXTCLASS org/eclipse/jdt/core/compiler/InvalidInputException(0xDC31E458) 3CLTEXTCLASS org/eclipse/jdt/core/IInitializer(0xDC31E578) 3CLTEXTCLASS org/eclipse/jdt/core/IField(0xDC31E640) 3CLTEXTCLASS org/eclipse/jdt/core/IPackageDeclaration(0xDC31E778) 3CLTEXTCLASS org/eclipse/jdt/core/IImportDeclaration(0xDC31E848) 3CLTEXTCLASS org/eclipse/jdt/core/ILocalVariable(0xDC31E938) 3CLTEXTCLASS org/eclipse/jdt/core/ITypeParameter(0xDC31EA28) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$20(0xDC31EB38) 3CLTEXTCLASS org/eclipse/jdt/core/search/SearchEngine(0xDC31ED08) 3CLTEXTCLASS org/eclipse/jdt/core/search/ISearchPattern(0xDC31F2A0) 3CLTEXTCLASS org/eclipse/jdt/core/search/SearchRequestor(0xDC31F360) 3CLTEXTCLASS org/eclipse/jdt/core/search/SearchEngine$ResultCollectorAdapter(0xDC31F4C0) 3CLTEXTCLASS org/eclipse/jdt/core/search/SearchPattern(0xDC31F688) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/TypeBinding(0xDC3101A8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding(0xDC310E20) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/Substitution(0xDC311DB8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding(0xDC3120C0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding(0xDC313100) 3CLTEXTCLASS org/eclipse/jdt/core/compiler/CharOperation(0xDC313868) 3CLTEXTCLASS org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants(0xDC313F60) 3CLTEXTCLASS org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions(0xDC314EB8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$13(0xDC316B70) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$14(0xDC316D28) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$17(0xDC316EB0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$18(0xDC316FD8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaElementInfo(0xDC317128) 3CLTEXTCLASS org/eclipse/jdt/internal/core/OpenableElementInfo(0xDC3172B0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelInfo(0xDC317488) 3CLTEXTCLASS org/eclipse/jdt/core/IJavaModelStatusConstants(0xDC317620) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelStatus(0xDC3177D8) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IJavaElement;(0xDC317EA8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/SourceElementParser(0xDC3086A8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/IndexingParser(0xDC30A0E0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/processing/IJob(0xDC30A948) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/IndexRequest(0xDC30AA80) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/AddJarFileToIndex(0xDC30AC80) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/IndexBinaryFolder(0xDC30B248) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/IndexAllProject(0xDC30B5E0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/search/processing/IJob;(0xDC30BA58) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/SimpleLookupTable(0xDC30BB28) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelCache(0xDC30BE00) 3CLTEXTCLASS org/eclipse/jdt/internal/core/VerboseElementCache(0xDC30C330) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/ICacheEnumeration(0xDC30C608) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaCorePreferenceInitializer(0xDC30C6D8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/impl/CompilerOptions(0xDC30CA78) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/impl/IrritantSet(0xDC30DE20) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/impl/ITypeRequestor(0xDC30E2C0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/problem/ProblemSeverities(0xDC30E390) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/Compiler(0xDC30E4B8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ICompilerRequestor(0xDC30EE50) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/TypeConstants(0xDC30EF00) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/impl/ReferenceContext(0xDC30F998) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/problem/AbortCompilation(0xDC30FAC0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/problem/AbortCompilationUnit(0xDC30FDC8) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/SourceTypeCollisionException(0xDC30FF48) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/Parser(0xDC300660) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/CommentRecorderParser(0xDC3062C0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/ASTNode(0xDC306CC0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/Util(0xDC3076B0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CopyResourceElementsOperation(0xDC6E6190) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CopyElementsOperation(0xDC6E6DF8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/MoveResourceElementsOperation(0xDC6E74B8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/MoveElementsOperation(0xDC6E77E8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/RenameResourceElementsOperation(0xDC6E7B18) 3CLTEXTCLASS org/eclipse/jdt/internal/core/RenameElementsOperation(0xDC6E7EB0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/JavaElement;(0xDC6E8190) 3CLTEXTCLASS org/eclipse/jdt/internal/core/BatchInitializationMonitor(0xDC6E8268) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/WeakHashSet(0xDC6E84F8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/WeakHashSet$HashableWeakReference(0xDC6E87E0) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/util/WeakHashSet$HashableWeakReference;(0xDC6E89A8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/WeakHashSetOfCharArray(0xDC6E8A70) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/WeakHashSetOfCharArray$HashableWeakReference(0xDC6E8D70) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/core/util/WeakHashSetOfCharArray$HashableWeakReference;(0xDC6E8F58) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$CompilationParticipants(0xDC6E9018) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/Util$Comparer(0xDC6E9338) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ExternalFoldersManager(0xDC6E9420) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ExternalFoldersManager$RefreshJob(0xDC6E9BB8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/DeltaProcessingState(0xDC6E9EC0) 3CLTEXTCLASS org/eclipse/jdt/core/IElementChangedListener(0xDC6EA960) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/IElementChangedListener;(0xDC6EAA28) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$EclipsePreferencesListener(0xDC6EAAE0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$2(0xDC6EAE20) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$3(0xDC6EAFD8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/processing/JobManager(0xDC6EB198) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/IIndexConstants(0xDC6EB7D8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/indexing/IndexManager(0xDC6EBAF0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/processing/JobManager$1$ProgressJob(0xDC6ECA50) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/IProblemFactory(0xDC6ECD00) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/ParserBasicInformation(0xDC6ECDF0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/parser/TerminalTokens(0xDC6ECED0) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/OperatorIds(0xDC6ED130) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/TypeIds(0xDC6ED238) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration(0xDC6ED560) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaElement(0xDC6B6A38) 3CLTEXTCLASS org/eclipse/jdt/core/IBufferChangedListener(0xDC6B7698) 3CLTEXTCLASS org/eclipse/jdt/internal/core/Openable(0xDC6B78C0) 3CLTEXTCLASS org/eclipse/jdt/core/IPackageFragmentRoot(0xDC6B8300) 3CLTEXTCLASS org/eclipse/jdt/internal/core/PackageFragmentRoot(0xDC6B86B0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ExternalPackageFragmentRoot(0xDC6B9530) 3CLTEXTCLASS org/eclipse/jdt/core/ISourceReference(0xDC6B9958) 3CLTEXTCLASS org/eclipse/jdt/core/ICodeAssist(0xDC6B9A28) 3CLTEXTCLASS org/eclipse/jdt/core/ITypeRoot(0xDC6B9B60) 3CLTEXTCLASS org/eclipse/jdt/core/ICompilationUnit(0xDC6B9C60) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/IDependent(0xDC6B9F48) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/env/ICompilationUnit(0xDC6BA000) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/SuffixConstants(0xDC6BA0D8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/CompilationUnit(0xDC6BA4C0) 3CLTEXTCLASS org/eclipse/jdt/core/IJavaElementDelta(0xDC6BBCE8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$11(0xDC6BBED0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModel(0xDC6BC2B0) 3CLTEXTCLASS org/eclipse/jdt/core/IJavaProject(0xDC6BCC08) 3CLTEXTCLASS org/eclipse/jdt/internal/core/search/IRestrictedAccessTypeRequestor(0xDC6BD018) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/LRUCache(0xDC6BD140) 3CLTEXTCLASS org/eclipse/jdt/internal/core/OverflowingLRUCache(0xDC6BD7C0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ElementCache(0xDC6BDE28) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$19(0xDC6BE190) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager$1(0xDC6BE408) 3CLTEXTCLASS [Lorg/eclipse/jdt/core/ICompilationUnit;(0xDC6BE580) 3CLTEXTCLASS org/eclipse/jdt/core/IJavaModelStatus(0xDC6BE620) 3CLTEXTCLASS org/eclipse/jdt/internal/codeassist/ISelectionRequestor(0xDC6BE708) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelManager(0xDC6A71C8) 3CLTEXTCLASS org/eclipse/jdt/core/IClasspathContainer(0xDC6AA010) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/util/Util$Displayable(0xDC6AA100) 3CLTEXTCLASS org/eclipse/jdt/core/ISourceManipulation(0xDC6AA1B0) 3CLTEXTCLASS org/eclipse/jdt/core/IPackageFragment(0xDC6AA290) 3CLTEXTCLASS org/eclipse/jdt/internal/core/MultiOperation(0xDC6AA548) 3CLTEXTCLASS org/eclipse/jdt/internal/compiler/lookup/Binding(0xDC6AAAA0) 3CLTEXTCLASS org/eclipse/jdt/internal/core/JavaModelOperation(0xDC6AD390) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ChangeClasspathOperation(0xDC6AE118) 3CLTEXTCLASS org/eclipse/jdt/internal/core/SetVariablesOperation(0xDC6AE518) 3CLTEXTCLASS org/eclipse/jdt/internal/core/util/Messages(0xDC6AEA00) 3CLTEXTCLASS org/eclipse/jdt/core/IClasspathEntry(0xDC6AB258) 3CLTEXTCLASS org/eclipse/jdt/core/IWorkingCopy(0xDC6AB3F8) 3CLTEXTCLASS org/eclipse/jdt/core/search/TypeNameRequestor(0xDC6AB5A8) 3CLTEXTCLASS org/eclipse/jdt/core/JavaCore$1(0xDC6AB6A0) 3CLTEXTCLASS org/eclipse/jdt/core/IAccessRule(0xDC6AB780) 3CLTEXTCLASS org/eclipse/jdt/core/IClasspathAttribute(0xDC6AB860) 3CLTEXTCLASS org/eclipse/jdt/internal/core/ClasspathEntry$AssertionFailedException(0xDC6AB978) 3CLTEXTCLASS org/eclipse/jdt/core/IRegion(0xDC6ABA80) 3CLTEXTCLASS org/eclipse/jdt/core/JavaModelException(0xDC6ABBB0) 3CLTEXTCLASS org/eclipse/jdt/core/IJavaElement(0xDC6A6830) 3CLTEXTCLASS org/eclipse/jdt/internal/core/DefaultWorkingCopyOwner(0xDC6A6A78) 3CLTEXTCLASS org/eclipse/jdt/core/IOpenable(0xDC6A6BD8) 3CLTEXTCLASS org/eclipse/jdt/core/IParent(0xDC6A6D10) 3CLTEXTCLASS org/eclipse/jdt/core/IJavaModel(0xDC6A6DD0) 3CLTEXTCLASS org/eclipse/jdt/core/JavaCore(0xDC6A4AF8) 3CLTEXTCLASS org/eclipse/jdt/core/WorkingCopyOwner(0xDD909580) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0322D10) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/DocumentLineDiffer(0xD99C7D08) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/DocumentLineDiffer$2(0xD99C8B08) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/DiffRegion(0xD99C9078) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/DocumentLineDiffer$RangeDifferenceFactory(0xD99C9458) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/DocumentLineDiffer$LineChangeInfo(0xD99C95A8) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/DocumentLineDiffer$1(0xD99C9768) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/QuickDiffRangeDifference(0xD99C9928) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/compare/equivalence/IHashFunction(0xD99C9B20) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/QuickDiffMessages(0xD99C9BE8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$TextEditorSavable(0xD99C9E20) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/DocumentLineDiffer$3(0xD99CA128) 3CLTEXTCLASS org/eclipse/ui/texteditor/StatusLineContributionItem$1(0xD99CA2E0) 3CLTEXTCLASS org/eclipse/ui/texteditor/StatusLineContributionItem$Listener(0xD99CA420) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/NLSUtility(0xD99CA578) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$3(0xD99CA690) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/compare/equivalence/DJBHashFunction(0xD99CA7D0) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/compare/equivalence/Hash(0xD99CA920) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/compare/equivalence/IntHash(0xD99CAA68) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/compare/equivalence/DocumentEquivalenceClass(0xD99CAB98) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/compare/equivalence/DocEquivalenceComparator(0xD99CAF40) 3CLTEXTCLASS org/eclipse/ui/texteditor/spelling/ISpellingEngine(0xD99CB120) 3CLTEXTCLASS org/eclipse/ui/texteditor/spelling/SpellingService$1(0xD99CB1F0) 3CLTEXTCLASS org/eclipse/ui/texteditor/spelling/SpellingProblem(0xD99CB3A0) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/EditPosition(0xD99CB668) 3CLTEXTCLASS org/eclipse/ui/texteditor/TextSelectionNavigationLocation(0xD99CB800) 3CLTEXTCLASS org/eclipse/ui/texteditor/EditorStatusLine(0xD99CBD60) 3CLTEXTCLASS org/eclipse/ui/texteditor/DefaultRangeIndicator$1(0xD99CBFB0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$24(0xD99CC108) 3CLTEXTCLASS org/eclipse/ui/texteditor/EditorStatusLine$StatusLineClearer(0xD99CC240) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$10(0xD99CC3B8) 3CLTEXTCLASS org/eclipse/ui/texteditor/HyperlinkDetectorDescriptor$1(0xD99CC4E8) 3CLTEXTCLASS org/eclipse/ui/texteditor/IAnnotationImageProvider(0xD99CC690) 3CLTEXTCLASS org/eclipse/ui/texteditor/link/EditorLinkedModeUI$EditorHistoryUpdater(0xD99CC780) 3CLTEXTCLASS org/eclipse/ui/texteditor/TextOperationAction$1(0xD99CC918) 3CLTEXTCLASS org/eclipse/ui/texteditor/InfoForm(0xD99CCA70) 3CLTEXTCLASS org/eclipse/ui/texteditor/InfoForm$1(0xD99CCF08) 3CLTEXTCLASS org/eclipse/ui/texteditor/InfoForm$2(0xD99CD038) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$6(0xD99CD1D0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$23(0xD99CD310) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$12(0xD99CD478) 3CLTEXTCLASS org/eclipse/ui/texteditor/SourceViewerDecorationSupport(0xD990E330) 3CLTEXTCLASS org/eclipse/ui/texteditor/SourceViewerDecorationSupport$IBeamStrategy(0xD990EDA8) 3CLTEXTCLASS org/eclipse/ui/texteditor/spelling/SpellingReconcileStrategy(0xD990EF78) 3CLTEXTCLASS org/eclipse/ui/texteditor/spelling/ISpellingProblemCollector(0xD990F2D0) 3CLTEXTCLASS org/eclipse/ui/texteditor/spelling/SpellingContext(0xD990F3C0) 3CLTEXTCLASS org/eclipse/ui/texteditor/HyperlinkDetectorRegistry$HyperlinkDetectorDelegate(0xD990F4F0) 3CLTEXTCLASS org/eclipse/ui/texteditor/KeyBindingSupportForAssistant(0xD990F7B8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$16(0xD990FB48) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$17(0xD990FCF0) 3CLTEXTCLASS org/eclipse/ui/texteditor/ITextEditorDropTargetListener(0xD990FE28) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$21(0xD990FF10) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$22(0xD9910210) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$18(0xD99104F0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$20(0xD99106A0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$13(0xD99107C0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$14(0xD9910930) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$AbstractSelectionChangedListener(0xD9910C30) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$SelectionListener(0xD9910DA0) 3CLTEXTCLASS org/eclipse/ui/texteditor/TextNavigationAction(0xD9911090) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$ToggleOverwriteModeAction(0xD9911588) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$ScrollLinesAction(0xD9911800) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$LineEndAction(0xD9911AD8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$LineStartAction(0xD9911EE8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$ShowRulerContextMenuAction(0xD99122F0) 3CLTEXTCLASS org/eclipse/ui/texteditor/IAbstractTextEditorHelpContextIds(0xD9912530) 3CLTEXTCLASS org/eclipse/ui/texteditor/TextViewerDeleteLineTarget(0xD9912918) 3CLTEXTCLASS org/eclipse/ui/texteditor/TextViewerDeleteLineTarget$DeleteLineClipboard(0xD9912C68) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$26(0xD9913120) 3CLTEXTCLASS org/eclipse/ui/texteditor/IFindReplaceTargetExtension2(0xD99132F0) 3CLTEXTCLASS org/eclipse/ui/texteditor/FindReplaceTarget(0xD99133F8) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/ICompoundEditListener(0xD99137B0) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/CompoundEditExitStrategy(0xD9913888) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/CompoundEditExitStrategy$EventListener(0xD9913CF0) 3CLTEXTCLASS org/eclipse/ui/texteditor/MoveLinesAction$1(0xD9913F88) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/HippieCompletionEngine(0xD99140C8) 3CLTEXTCLASS org/eclipse/ui/texteditor/HippieCompleteAction$1(0xD9914560) 3CLTEXTCLASS org/eclipse/ui/texteditor/GotoAnnotationAction(0xD9914740) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$27(0xD99149F0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$28(0xD9914B38) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$ActionActivationCode(0xD9914CC8) 3CLTEXTCLASS org/eclipse/ui/texteditor/SelectAnnotationRulerAction(0xD9914EE0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$2(0xD9915220) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$ElementStateListener$Validator(0xD99153D0) 3CLTEXTCLASS org/eclipse/ui/texteditor/rulers/RulerColumnPreferenceAdapter(0xD9915580) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/rulers/StringSetSerializer(0xD9915750) 3CLTEXTCLASS org/eclipse/ui/texteditor/rulers/IContributedRulerColumn(0xD9915958) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$11(0xD9915A80) 3CLTEXTCLASS org/eclipse/ui/texteditor/rulers/AbstractContributedRulerColumn(0xD9915C48) 3CLTEXTCLASS org/eclipse/ui/texteditor/SourceViewerDecorationSupport$1(0xD9915E40) 3CLTEXTCLASS org/eclipse/ui/texteditor/quickdiff/QuickDiff(0xD9915F80) 3CLTEXTCLASS org/eclipse/ui/texteditor/ITextEditorActionConstants(0xD9C76428) 3CLTEXTCLASS org/eclipse/ui/texteditor/BasicTextEditorActionContributor$StatusFieldDef(0xD9C769E0) 3CLTEXTCLASS [Lorg/eclipse/ui/texteditor/BasicTextEditorActionContributor$StatusFieldDef;(0xD9C76B78) 3CLTEXTCLASS org/eclipse/ui/texteditor/RetargetTextEditorAction(0xD9C76CD8) 3CLTEXTCLASS org/eclipse/ui/texteditor/RetargetTextEditorAction$1(0xD9C770B0) 3CLTEXTCLASS org/eclipse/ui/texteditor/RetargetTextEditorAction$2(0xD9C771E0) 3CLTEXTCLASS org/eclipse/ui/texteditor/IStatusFieldExtension(0xD9C77328) 3CLTEXTCLASS org/eclipse/ui/texteditor/StatusLineContributionItem(0xD9C77480) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractRulerActionDelegate(0xD9C77970) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$19(0xD9C77CD8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDocumentProvider(0xD9C77F30) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDocumentProvider$DocumentProviderOperation(0xD9C78998) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDocumentProvider$1$ResetOperation(0xD9C78AE8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDocumentProvider$1$SaveOperation(0xD9C78C50) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDocumentProvider$1$ValidateStateOperation(0xD9C78E70) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDocumentProvider$1$SynchronizeOperation(0xD9C79020) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDocumentProvider$ElementInfo(0xD9C79188) 3CLTEXTCLASS org/eclipse/ui/texteditor/HyperlinkDetectorRegistry(0xD9C79350) 3CLTEXTCLASS org/eclipse/ui/texteditor/HyperlinkDetectorDescriptor(0xD9C79590) 3CLTEXTCLASS org/eclipse/ui/texteditor/HyperlinkDetectorTargetDescriptor(0xD9C79A28) 3CLTEXTCLASS [Lorg/eclipse/ui/texteditor/HyperlinkDetectorTargetDescriptor;(0xD9C79D98) 3CLTEXTCLASS [Lorg/eclipse/ui/texteditor/HyperlinkDetectorDescriptor;(0xD9C79E50) 3CLTEXTCLASS org/eclipse/ui/texteditor/spelling/SpellingService(0xD9C79F18) 3CLTEXTCLASS org/eclipse/ui/texteditor/spelling/SpellingEngineDescriptor(0xD9C7A1F0) 3CLTEXTCLASS org/eclipse/ui/texteditor/spelling/ISpellingPreferenceBlock(0xD9C7A4C0) 3CLTEXTCLASS [Lorg/eclipse/ui/texteditor/spelling/SpellingEngineDescriptor;(0xD9C7A5F8) 3CLTEXTCLASS org/eclipse/ui/texteditor/rulers/RulerColumnRegistry(0xD9C7A6B8) 3CLTEXTCLASS org/eclipse/ui/texteditor/rulers/RulerColumnRegistry$1(0xD9C7AC08) 3CLTEXTCLASS org/eclipse/ui/texteditor/rulers/RulerColumnDescriptor(0xD9C7AD58) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/rulers/ExtensionPointHelper(0xD9C7B2B0) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/rulers/RulerColumnTarget(0xD9C7B618) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/rulers/AllTarget(0xD9C7B820) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/rulers/OrTarget(0xD9C7B968) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/rulers/ContentTypeTarget(0xD9C7BB48) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/rulers/EditorIdTarget(0xD9C7BD10) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/rulers/ClassTarget(0xD9C7BEB8) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/rulers/RulerColumnPlacement(0xD9C7C078) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/rulers/RulerColumnPlacementConstraint(0xD9C7C2F0) 3CLTEXTCLASS org/eclipse/ui/texteditor/ConfigurationElementSorter$ConfigurationElementComparator(0xD9C7C438) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/rulers/DAG(0xD9C7C828) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/rulers/DAG$MultiMap(0xD9C7CB00) 3CLTEXTCLASS org/eclipse/ui/texteditor/rulers/RulerColumnRegistry$2(0xD9C7CD18) 3CLTEXTCLASS org/eclipse/ui/texteditor/templates/ITemplatesPage(0xD9C7CE38) 3CLTEXTCLASS org/eclipse/ui/texteditor/IncrementalFindTarget(0xD9C7CF68) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$ColumnSupport(0xD9C7DAC8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$ActivationListener(0xD9C7DEE0) 3CLTEXTCLASS org/eclipse/ui/texteditor/quickdiff/IQuickDiffReferenceProvider(0xD9C7E200) 3CLTEXTCLASS org/eclipse/ui/texteditor/TextOperationAction(0xD9C45A60) 3CLTEXTCLASS org/eclipse/ui/texteditor/DeleteLineAction(0xD9C45E88) 3CLTEXTCLASS org/eclipse/ui/texteditor/JoinLinesAction(0xD9C46340) 3CLTEXTCLASS org/eclipse/ui/texteditor/MarkAction(0xD9C467A8) 3CLTEXTCLASS org/eclipse/ui/texteditor/IReadOnlyDependent(0xD9C46A00) 3CLTEXTCLASS org/eclipse/ui/texteditor/ShiftAction(0xD9C46B88) 3CLTEXTCLASS org/eclipse/ui/texteditor/FindReplaceAction(0xD9C46FB0) 3CLTEXTCLASS org/eclipse/ui/texteditor/FindNextAction(0xD9C47430) 3CLTEXTCLASS org/eclipse/ui/texteditor/IncrementalFindAction(0xD9C47BE8) 3CLTEXTCLASS org/eclipse/ui/texteditor/RevertToSavedAction(0xD9C47F90) 3CLTEXTCLASS org/eclipse/ui/texteditor/GotoLineAction(0xD9C48248) 3CLTEXTCLASS org/eclipse/ui/texteditor/MoveLinesAction(0xD9C486D8) 3CLTEXTCLASS org/eclipse/ui/texteditor/CaseAction(0xD9C48DD8) 3CLTEXTCLASS org/eclipse/ui/texteditor/InsertLineAction(0xD9C491A0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$ToggleInsertModeAction(0xD9C49580) 3CLTEXTCLASS org/eclipse/ui/texteditor/HippieCompleteAction(0xD9C49830) 3CLTEXTCLASS org/eclipse/ui/texteditor/ContentAssistAction(0xD9C49EC0) 3CLTEXTCLASS org/eclipse/ui/texteditor/RecenterAction(0xD9C4A298) 3CLTEXTCLASS org/eclipse/ui/texteditor/ShowWhitespaceCharactersAction(0xD9C4A598) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$InformationDispatchAction(0xD9C4A980) 3CLTEXTCLASS org/eclipse/ui/texteditor/BlockSelectionModeToggleAction(0xD9C4AE80) 3CLTEXTCLASS org/eclipse/ui/texteditor/DefaultRangeIndicator(0xD9C4B0B0) 3CLTEXTCLASS org/eclipse/ui/texteditor/rulers/IColumnSupport(0xD9C4B3C0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$SelectionProvider(0xD9C4B4D0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$IdMapEntry(0xD9C4B710) 3CLTEXTCLASS [Lorg/eclipse/ui/texteditor/AbstractTextEditor$IdMapEntry;(0xD9C4B848) 3CLTEXTCLASS org/eclipse/ui/texteditor/EditorMessages(0xD9C4B900) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$PositionLabelValue(0xD9C4BC08) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$ActivationCodeTrigger(0xD9C4BD50) 3CLTEXTCLASS org/eclipse/ui/texteditor/IElementStateListenerExtension(0xD9C4C010) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$ElementStateListener(0xD9C4C118) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$TextInputListener(0xD9C4C470) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$TextListener(0xD9C4C5C0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$9(0xD9C4C840) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$PropertyChangeListener(0xD9C4CA90) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$FontPropertyChangeListener(0xD9C4CBC0) 3CLTEXTCLASS org/eclipse/ui/texteditor/ITextEditorExtension3$InsertMode(0xD9C4CD58) 3CLTEXTCLASS org/eclipse/ui/texteditor/link/EditorLinkedModeUI(0xD9C4CE90) 3CLTEXTCLASS org/eclipse/ui/texteditor/BasicTextEditorActionContributor(0xD9C4D048) 3CLTEXTCLASS org/eclipse/ui/texteditor/IStatusField(0xD9C4D5B8) 3CLTEXTCLASS org/eclipse/ui/texteditor/quickdiff/ReferenceProviderDescriptor(0xD9C4D6A0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor(0xDBF02358) 3CLTEXTCLASS org/eclipse/ui/texteditor/ITextEditor(0xDBF00030) 3CLTEXTCLASS org/eclipse/ui/texteditor/ITextEditorExtension(0xDBF001E8) 3CLTEXTCLASS org/eclipse/ui/texteditor/ITextEditorExtension2(0xDBF002C8) 3CLTEXTCLASS org/eclipse/ui/texteditor/ITextEditorExtension3(0xDBF00388) 3CLTEXTCLASS org/eclipse/ui/texteditor/ITextEditorExtension4(0xDBF004B0) 3CLTEXTCLASS org/eclipse/ui/texteditor/ITextEditorExtension5(0xDBF00570) 3CLTEXTCLASS org/eclipse/ui/texteditor/StatusTextEditor(0xDBF00940) 3CLTEXTCLASS org/eclipse/ui/texteditor/GotoLastEditPositionAction(0xDBF01108) 3CLTEXTCLASS org/eclipse/ui/texteditor/IElementStateListener(0xDBF014A0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$ICursorListener(0xDBF01590) 3CLTEXTCLASS org/eclipse/ui/texteditor/IEditorStatusLine(0xDBF01648) 3CLTEXTCLASS org/eclipse/ui/texteditor/IDeleteLineTarget(0xDBF016F8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractTextEditor$25(0xDBF017C8) 3CLTEXTCLASS org/eclipse/ui/texteditor/ResourceAction(0xDBF01988) 3CLTEXTCLASS org/eclipse/ui/texteditor/TextEditorAction(0xDBF01D28) 3CLTEXTCLASS org/eclipse/ui/texteditor/ConfigurationElementSorter(0xDC32F210) 3CLTEXTCLASS org/eclipse/ui/texteditor/AnnotationPreference(0xDC32F458) 3CLTEXTCLASS org/eclipse/ui/texteditor/IDocumentProviderExtension(0xDC32FF60) 3CLTEXTCLASS org/eclipse/ui/texteditor/IDocumentProviderExtension4(0xDC330080) 3CLTEXTCLASS org/eclipse/ui/texteditor/ISchedulingRuleProvider(0xDC330130) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/quickdiff/QuickDiffExtensionsRegistry(0xDC6D5E90) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/spelling/SpellingEngineRegistry(0xDC6D60C0) 3CLTEXTCLASS org/eclipse/ui/texteditor/IDocumentProviderExtension2(0xDC6D6318) 3CLTEXTCLASS org/eclipse/ui/texteditor/IDocumentProviderExtension3(0xDC6D63D8) 3CLTEXTCLASS org/eclipse/ui/texteditor/IDocumentProviderExtension5(0xDC6D6488) 3CLTEXTCLASS org/eclipse/ui/texteditor/IUpdate(0xDC6D6538) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/TextEditorPlugin(0xDC6B60A8) 3CLTEXTCLASS org/eclipse/ui/texteditor/IDocumentProvider(0xDD95D640) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE033B080) 3CLTEXTCLASS org/eclipse/jface/text/DocumentRewriteSession(0xDA9901B0) 3CLTEXTCLASS org/eclipse/jface/text/DocumentRewriteSessionEvent(0xDA990308) 3CLTEXTCLASS [Lorg/eclipse/text/edits/TextEdit;(0xDA9904A8) 3CLTEXTCLASS org/eclipse/text/edits/TextEdit$InsertionComparator(0xDA990560) 3CLTEXTCLASS org/eclipse/text/edits/MoveSourceEdit(0xDA9907C0) 3CLTEXTCLASS org/eclipse/text/edits/CopySourceEdit(0xDA9910A8) 3CLTEXTCLASS org/eclipse/text/edits/InsertEdit(0xDA9916F8) 3CLTEXTCLASS org/eclipse/text/edits/ISourceModifier(0xDA9919D0) 3CLTEXTCLASS org/eclipse/text/edits/MoveTargetEdit(0xDA991B88) 3CLTEXTCLASS org/eclipse/text/edits/CopyTargetEdit(0xDA992088) 3CLTEXTCLASS org/eclipse/text/edits/RangeMarker(0xDA992518) 3CLTEXTCLASS org/eclipse/text/edits/TextEditProcessor(0xDA992798) 3CLTEXTCLASS org/eclipse/text/edits/UndoCollector(0xDA992B60) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationModel$AnnotationsInterator(0xDA992DE8) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationModel$RegionIterator(0xDA992FB8) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeModel(0xDA993260) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedPosition(0xDA993980) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeManager(0xDA993C40) 3CLTEXTCLASS org/eclipse/jface/text/RewriteSessionEditProcessor(0xDA993FB0) 3CLTEXTCLASS org/eclipse/text/edits/TextEditVisitor(0xDA9941A8) 3CLTEXTCLASS org/eclipse/jface/text/RewriteSessionEditProcessor$SizeVisitor(0xDA9943F8) 3CLTEXTCLASS org/eclipse/text/edits/CopyingRangeMarker(0xDA994710) 3CLTEXTCLASS org/eclipse/text/edits/UndoEdit(0xDA994A78) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationModel$2(0xDA994E58) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedPositionGroup(0xDA995028) 3CLTEXTCLASS org/eclipse/jface/text/link/InclusivePositionUpdater(0xDA9955B0) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeModel$DocumentListener(0xDA995770) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeManager$Listener(0xDA9959C8) 3CLTEXTCLASS [Lorg/eclipse/jface/text/link/LinkedPosition;(0xDA995B40) 3CLTEXTCLASS org/eclipse/jface/text/AbstractDocument$RegisteredReplace(0xDA995BF8) 3CLTEXTCLASS org/eclipse/jface/text/projection/ChildDocumentManager(0xDA995D20) 3CLTEXTCLASS org/eclipse/jface/text/projection/ChildDocument(0xDA996028) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationModel(0xD9CBE610) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationModelEvent(0xD9CBEFC0) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationModel$InternalModelListener(0xD9CBF300) 3CLTEXTCLASS org/eclipse/jface/text/source/IAnnotationMap(0xD9CBF468) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationMap(0xD9CBF5C0) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationModel$1(0xD9CBF950) 3CLTEXTCLASS org/eclipse/jface/text/ISlaveDocumentManager(0xD9CBFA80) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentRewriteSessionListener(0xD9CBFB80) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentPartitioningListener(0xD9CBFC30) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentPartitioningListenerExtension(0xD9CBFCE0) 3CLTEXTCLASS [Lorg/eclipse/jface/text/IRegion;(0xD9CBFDA8) 3CLTEXTCLASS org/eclipse/text/undo/IDocumentUndoListener(0xD9CBFE48) 3CLTEXTCLASS org/eclipse/text/edits/MultiTextEdit(0xD9CBFFF0) 3CLTEXTCLASS [Lorg/eclipse/jface/text/source/Annotation;(0xD9CC0498) 3CLTEXTCLASS org/eclipse/jface/text/projection/ProjectionDocument(0xD9CC0710) 3CLTEXTCLASS org/eclipse/jface/text/ISlaveDocumentManagerExtension(0xD9CC11A8) 3CLTEXTCLASS org/eclipse/jface/text/projection/ProjectionDocumentManager(0xD9CC1298) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationModel$MetaIterator(0xD9CC1638) 3CLTEXTCLASS org/eclipse/jface/text/projection/IMinimalMapping(0xD9CC17D8) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentInformationMapping(0xD9CC18C8) 3CLTEXTCLASS org/eclipse/jface/text/projection/Segment(0xD9CC1A50) 3CLTEXTCLASS org/eclipse/jface/text/SlaveDocumentEvent(0xD9CC1C00) 3CLTEXTCLASS org/eclipse/jface/text/projection/ProjectionDocumentEvent(0xD9CC1D48) 3CLTEXTCLASS org/eclipse/jface/text/projection/Fragment(0xD9CC1F58) 3CLTEXTCLASS org/eclipse/jface/text/projection/FragmentUpdater(0xD9CC2080) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentInformationMappingExtension(0xD9CC22C8) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentInformationMappingExtension2(0xD9CC23B8) 3CLTEXTCLASS org/eclipse/jface/text/projection/ProjectionMapping(0xD9CC24C0) 3CLTEXTCLASS org/eclipse/jface/text/projection/ProjectionTextStore(0xD9CC2BF0) 3CLTEXTCLASS org/eclipse/jface/text/projection/ProjectionTextStore$ReusableRegion(0xD9CC2E98) 3CLTEXTCLASS org/eclipse/jface/text/projection/SegmentUpdater(0xD9CC3028) 3CLTEXTCLASS org/eclipse/jface/text/TreeLineTracker(0xD9CC3300) 3CLTEXTCLASS org/eclipse/jface/text/AbstractLineTracker$2(0xD9CC3B20) 3CLTEXTCLASS org/eclipse/jface/text/TreeLineTracker$Node(0xD9CC3C88) 3CLTEXTCLASS [Lorg/eclipse/jface/text/projection/Fragment;(0xD9CC3E68) 3CLTEXTCLASS org/eclipse/jface/text/TypedRegion(0xD9CC3F28) 3CLTEXTCLASS [Lorg/eclipse/jface/text/TypedRegion;(0xD9CC40F8) 3CLTEXTCLASS org/eclipse/text/undo/DocumentUndoManagerRegistry(0xD9CC41B0) 3CLTEXTCLASS org/eclipse/text/undo/DocumentUndoManagerRegistry$Record(0xD9CC4370) 3CLTEXTCLASS org/eclipse/text/undo/IDocumentUndoManager(0xD9CC44B0) 3CLTEXTCLASS org/eclipse/text/undo/DocumentUndoManager(0xD9CC46A0) 3CLTEXTCLASS org/eclipse/text/undo/DocumentUndoManager$UndoableTextChange(0xD9CC4FE8) 3CLTEXTCLASS org/eclipse/text/undo/DocumentUndoManager$UndoableCompoundTextChange(0xD9CC5580) 3CLTEXTCLASS org/eclipse/text/undo/UndoMessages(0xD9CC58D8) 3CLTEXTCLASS org/eclipse/text/undo/DocumentUndoManager$HistoryListener(0xD9CC5AA8) 3CLTEXTCLASS org/eclipse/text/undo/DocumentUndoManager$DocumentListener(0xD9CC5C58) 3CLTEXTCLASS org/eclipse/text/edits/DeleteEdit(0xD9CC5F70) 3CLTEXTCLASS org/eclipse/jface/text/templates/TemplateException(0xD9CC6218) 3CLTEXTCLASS org/eclipse/jface/text/DocumentRewriteSessionType(0xD9CC6380) 3CLTEXTCLASS org/eclipse/jface/text/Document(0xDB3610B0) 3CLTEXTCLASS org/eclipse/jface/text/ISynchronizable(0xDB361438) 3CLTEXTCLASS org/eclipse/jface/text/IPositionUpdater(0xDB3614F8) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentPartitioningListenerExtension2(0xDB3615A8) 3CLTEXTCLASS org/eclipse/jface/text/ITypedRegion(0xDB361658) 3CLTEXTCLASS org/eclipse/jface/text/BadPartitioningException(0xDB361750) 3CLTEXTCLASS org/eclipse/jface/text/ITextStore(0xDB361870) 3CLTEXTCLASS org/eclipse/jface/text/CopyOnWriteTextStore(0xDB361988) 3CLTEXTCLASS org/eclipse/jface/text/GapTextStore(0xDB361BA0) 3CLTEXTCLASS org/eclipse/jface/text/CopyOnWriteTextStore$StringTextStore(0xDB361F20) 3CLTEXTCLASS org/eclipse/jface/text/ILineTrackerExtension(0xDB362140) 3CLTEXTCLASS org/eclipse/jface/text/AbstractLineTracker(0xDB362260) 3CLTEXTCLASS org/eclipse/jface/text/DefaultLineTracker(0xDB362718) 3CLTEXTCLASS org/eclipse/jface/text/ListLineTracker(0xDB362950) 3CLTEXTCLASS org/eclipse/jface/text/AbstractLineTracker$1(0xDB362D50) 3CLTEXTCLASS org/eclipse/jface/text/AbstractLineTracker$DelimiterInfo(0xDB362EC0) 3CLTEXTCLASS org/eclipse/jface/text/DefaultPositionUpdater(0xDB362FC0) 3CLTEXTCLASS org/eclipse/jface/text/Position(0xDB3632A0) 3CLTEXTCLASS org/eclipse/jface/text/DocumentEvent(0xDB363558) 3CLTEXTCLASS org/eclipse/jface/text/Line(0xDB3637F8) 3CLTEXTCLASS [Lorg/eclipse/jface/text/Position;(0xDB363958) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentPartitioner(0xDB3639F8) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentPartitionerExtension(0xDB363B18) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentPartitionerExtension2(0xDB363BC8) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentPartitionerExtension3(0xDB363CA8) 3CLTEXTCLASS org/eclipse/jface/text/TypedPosition(0xDB363DC8) 3CLTEXTCLASS org/eclipse/jface/text/TextUtilities(0xDB363FD0) 3CLTEXTCLASS org/eclipse/jface/text/DocumentPartitioningChangedEvent(0xDB364530) 3CLTEXTCLASS org/eclipse/jface/text/Region(0xDB364790) 3CLTEXTCLASS org/eclipse/jface/text/source/Annotation(0xDB364978) 3CLTEXTCLASS org/eclipse/jface/text/link/ILinkedModeListener(0xDB364B58) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentExtension$IReplace(0xDB364C40) 3CLTEXTCLASS org/eclipse/jface/text/source/IAnnotationModelExtension(0xDB364CF0) 3CLTEXTCLASS org/eclipse/jface/text/source/IAnnotationModelExtension2(0xDB364E00) 3CLTEXTCLASS org/eclipse/jface/text/BadPositionCategoryException(0xDB396870) 3CLTEXTCLASS [Lorg/eclipse/jface/text/IDocument;(0xDB3969A8) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentExtension(0xDB396A48) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentExtension2(0xDB396B38) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentExtension3(0xDB396C18) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentExtension4(0xDB396D38) 3CLTEXTCLASS org/eclipse/jface/text/IRepairableDocument(0xDB396E88) 3CLTEXTCLASS org/eclipse/jface/text/IRepairableDocumentExtension(0xDB396F38) 3CLTEXTCLASS org/eclipse/jface/text/AbstractDocument(0xDB397180) 3CLTEXTCLASS org/eclipse/text/edits/TextEditGroup(0xDB398568) 3CLTEXTCLASS org/eclipse/text/edits/TextEdit(0xDBFF3370) 3CLTEXTCLASS org/eclipse/text/edits/ReplaceEdit(0xDBFF3E30) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentListener(0xDBFF4108) 3CLTEXTCLASS org/eclipse/jface/text/IDocument(0xDC175BE0) 3CLTEXTCLASS org/eclipse/jface/text/IRegion(0xDC175F80) 3CLTEXTCLASS org/eclipse/jface/text/BadLocationException(0xDC176080) 3CLTEXTCLASS org/eclipse/text/edits/MalformedTreeException(0xDC1761E8) 3CLTEXTCLASS org/eclipse/jface/text/source/IAnnotationModelListenerExtension(0xDC144AA0) 3CLTEXTCLASS org/eclipse/jface/text/source/IAnnotationModel(0xDC144B50) 3CLTEXTCLASS org/eclipse/jface/text/ILineTracker(0xDC144C70) 3CLTEXTCLASS org/eclipse/jface/text/source/IAnnotationModelListener(0xDE2AF0C0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE033D268) 3CLTEXTCLASS org/eclipse/jface/internal/text/link/contentassist/ContextInformationPopup2(0xD94DC778) 3CLTEXTCLASS org/eclipse/jface/internal/text/link/contentassist/PopupCloser2(0xD94DD1C0) 3CLTEXTCLASS org/eclipse/jface/internal/text/link/contentassist/CompletionProposalPopup2(0xD94DD4C0) 3CLTEXTCLASS org/eclipse/jface/internal/text/link/contentassist/CompletionProposalPopup2$1(0xD94DE070) 3CLTEXTCLASS org/eclipse/jface/internal/text/link/contentassist/CompletionProposalPopup2$2(0xD94DE1F8) 3CLTEXTCLASS org/eclipse/jface/text/link/ProposalPosition(0xD94DE3C8) 3CLTEXTCLASS [Lorg/eclipse/jface/text/contentassist/ICompletionProposal;(0xD94DE5B8) 3CLTEXTCLASS org/eclipse/jface/internal/text/link/contentassist/Helper2(0xD94DE670) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$ExitFlags(0xD94DE778) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$4(0xD94DE878) 3CLTEXTCLASS [Lorg/eclipse/jface/text/hyperlink/IHyperlink;(0xD94DEA60) 3CLTEXTCLASS org/eclipse/jface/text/IInformationControlExtension(0xD94DEB00) 3CLTEXTCLASS org/eclipse/jface/text/IInformationControlExtension4(0xD94DEBB0) 3CLTEXTCLASS org/eclipse/jface/text/IInformationControlExtension5(0xD94DEC60) 3CLTEXTCLASS org/eclipse/jface/text/AbstractInformationControl(0xD94DEDD8) 3CLTEXTCLASS org/eclipse/jface/text/IInformationControlExtension2(0xD94DF850) 3CLTEXTCLASS org/eclipse/jface/text/AbstractInformationControl$1(0xD94DF918) 3CLTEXTCLASS org/eclipse/jface/text/AbstractInformationControlManager$2(0xD94DFA50) 3CLTEXTCLASS org/eclipse/jface/text/source/TextInvocationContext(0xD94DFB90) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ICompletionProposalExtension5(0xD94DFCE0) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ICompletionProposalExtension6(0xD94DFD90) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ICompletionProposalExtension3(0xD94DFE40) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ContentAssistEvent(0xD94DFF28) 3CLTEXTCLASS org/eclipse/jface/internal/text/html/HTMLPrinter(0xD94E0048) 3CLTEXTCLASS org/eclipse/jface/internal/text/html/HTMLPrinter$1(0xD94E0628) 3CLTEXTCLASS org/eclipse/jface/internal/text/html/BrowserInput(0xD94E0788) 3CLTEXTCLASS org/eclipse/jface/internal/text/html/BrowserInformationControlInput(0xD94E0900) 3CLTEXTCLASS org/eclipse/jface/text/IDelayedInputChangeProvider(0xD94E0A28) 3CLTEXTCLASS org/eclipse/jface/internal/text/html/BrowserInformationControl(0xD94E0B90) 3CLTEXTCLASS org/eclipse/jface/text/source/LineNumberRulerColumn$6(0xD99D7D00) 3CLTEXTCLASS org/eclipse/jface/text/source/LineNumberRulerColumn$MouseHandler(0xD99D7E58) 3CLTEXTCLASS org/eclipse/jface/text/source/LineNumberRulerColumn$3(0xD99D8330) 3CLTEXTCLASS org/eclipse/jface/text/source/LineNumberRulerColumn$2(0xD99D84B8) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$RewriteTarget(0xD99D8648) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$ViewerState(0xD99D87F0) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$ColumnPosition(0xD99D8CF0) 3CLTEXTCLASS org/eclipse/jface/text/IBlockTextSelection(0xD99D8DF8) 3CLTEXTCLASS org/eclipse/jface/internal/text/NonDeletingPositionUpdater(0xD99D8F08) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$5(0xD99D90C8) 3CLTEXTCLASS org/eclipse/jface/text/source/OverviewRuler$FilterIterator(0xD99D9290) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationRulerColumn$ReusableRegion(0xD99D9540) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationRulerColumn$Tuple(0xD99D9678) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionAnnotation$DisplayDisposeRunnable(0xD99D9778) 3CLTEXTCLASS org/eclipse/jface/text/source/ImageUtilities(0xD99D98D0) 3CLTEXTCLASS org/eclipse/jface/text/source/LineRange(0xD99D9A58) 3CLTEXTCLASS org/eclipse/jface/internal/text/source/DiffPainter$1(0xD99D9BA0) 3CLTEXTCLASS org/eclipse/jface/internal/text/source/DiffPainter$2(0xD99D9CD8) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationPainter$Decoration(0xD99D9E00) 3CLTEXTCLASS org/eclipse/jface/text/IInformationControlExtension3(0xD99D9FB8) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionViewer$1(0xD99DA0B0) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionViewer$ProjectionCommandQueue(0xD99DA240) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionViewer$ProjectionCommand(0xD99DA468) 3CLTEXTCLASS org/eclipse/jface/text/source/OverviewRuler$HeaderPainter(0xD99DA5F0) 3CLTEXTCLASS org/eclipse/jface/text/TextViewerHoverManager$5(0xD99DA848) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/AbstractHyperlinkDetector(0xD99DA980) 3CLTEXTCLASS [Lorg/eclipse/jface/text/hyperlink/AbstractHyperlinkDetector;(0xD99DAB10) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/URLHyperlinkDetector(0xD99DABD8) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/IHyperlink(0xD99DAE10) 3CLTEXTCLASS org/eclipse/jface/text/source/DefaultCharacterPairMatcher$DocumentPartitionAccessor(0xD99DAF18) 3CLTEXTCLASS org/eclipse/jface/text/DocumentCommand$Command(0xD99DB180) 3CLTEXTCLASS org/eclipse/jface/text/DocumentCommand$CommandIterator(0xD99DB358) 3CLTEXTCLASS org/eclipse/jface/text/DocumentCommand$ReverseListIterator(0xD99DB578) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$ILinkedModeUIFocusListener(0xD99DB6F0) 3CLTEXTCLASS org/eclipse/jface/internal/text/link/contentassist/IProposalListener(0xD99DB7B0) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$LinkedModeUITarget(0xD99DB880) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$EmptyTarget(0xD99DB998) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$Closer(0xD99DBAF8) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$ExitListener(0xD99DBD68) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$MySelectionListener(0xD99DBF08) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$ProposalListener(0xD99DC0C8) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$DocumentListener(0xD99DC210) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$NullExitPolicy(0xD99DC410) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$EmtpyFocusListener(0xD99DC538) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$1(0xD99DC678) 3CLTEXTCLASS [Lorg/eclipse/jface/text/link/LinkedModeUI$LinkedModeUITarget;(0xD99DC7D8) 3CLTEXTCLASS org/eclipse/jface/text/link/TabStopIterator(0xD99DC8B0) 3CLTEXTCLASS org/eclipse/jface/text/link/TabStopIterator$SequenceComparator(0xD99DCC10) 3CLTEXTCLASS org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2(0xD99DCE20) 3CLTEXTCLASS org/eclipse/jface/internal/text/link/contentassist/IContentAssistListener2(0xD99DDA58) 3CLTEXTCLASS [Lorg/eclipse/jface/internal/text/link/contentassist/IContentAssistListener2;(0xD99DDB28) 3CLTEXTCLASS org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2$3(0xD99DDBE0) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$KeyListener(0xD99DDD10) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$VerifyKeyListenersManager$Batch(0xD99DDFC8) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedPositionAnnotations(0xD99DE178) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$3(0xD99DE698) 3CLTEXTCLASS org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2$LayoutManager(0xD99DE810) 3CLTEXTCLASS org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2$InternalListener(0xD99DEC50) 3CLTEXTCLASS org/eclipse/jface/internal/text/link/contentassist/AdditionalInfoController2(0xD99DEEA8) 3CLTEXTCLASS org/eclipse/jface/internal/text/link/contentassist/AdditionalInfoController2$TableSelectionListener(0xD99DF360) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionRulerColumn(0xD99AFCA8) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationRulerColumn$5(0xD99B06E8) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationRulerColumn$InternalListener(0xD99B0E90) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationRulerColumn$TupleComparator(0xD99B1018) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionAnnotationHover(0xD99B1180) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationRulerColumn$1(0xD99B1508) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationRulerColumn$2(0xD99B1658) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationRulerColumn$3(0xD99B17A8) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationRulerColumn$4(0xD99B1970) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionRulerColumn$1(0xD99B1AB0) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionRulerColumn$2(0xD99B1BE0) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationRulerColumn$6(0xD99B1D60) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionSummary$Summarizer(0xD99B1F08) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentAdapterExtension(0xD99B2108) 3CLTEXTCLASS org/eclipse/jface/text/DefaultDocumentAdapter(0xD99B2220) 3CLTEXTCLASS org/eclipse/jface/text/TextEvent(0xD99B28B8) 3CLTEXTCLASS org/eclipse/jface/text/PaintManager$1(0xD99B2A80) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationPainter$1(0xD99B2BB0) 3CLTEXTCLASS org/eclipse/jface/text/TextPresentation(0xD99B2D40) 3CLTEXTCLASS org/eclipse/jface/text/TextPresentation$FilterIterator(0xD99B3380) 3CLTEXTCLASS org/eclipse/jface/text/TextViewerUndoManager$DocumentUndoListener(0xD99B35D8) 3CLTEXTCLASS org/eclipse/jface/text/source/MatchingCharacterPainter(0xD99B3808) 3CLTEXTCLASS org/eclipse/jface/text/CursorLinePainter(0xD99B3C30) 3CLTEXTCLASS org/eclipse/jface/text/source/LineNumberRulerColumn$4(0xD99B46B0) 3CLTEXTCLASS org/eclipse/jface/text/source/LineNumberRulerColumn$InternalListener(0xD99B4E70) 3CLTEXTCLASS org/eclipse/jface/text/source/LineNumberRulerColumn$1(0xD99B5028) 3CLTEXTCLASS org/eclipse/jface/internal/text/revisions/RevisionPainter(0xD99B51A8) 3CLTEXTCLASS org/eclipse/jface/internal/text/revisions/RevisionPainter$ColorTool(0xD99B61E8) 3CLTEXTCLASS org/eclipse/jface/internal/text/revisions/RevisionPainter$MouseHandler(0xD99B65C0) 3CLTEXTCLASS org/eclipse/jface/text/source/IAnnotationHoverExtension2(0xD99B6840) 3CLTEXTCLASS org/eclipse/jface/internal/text/revisions/RevisionPainter$RevisionHover(0xD99B6920) 3CLTEXTCLASS org/eclipse/jface/internal/text/revisions/RevisionPainter$AnnotationListener(0xD99B6BA8) 3CLTEXTCLASS org/eclipse/jface/internal/text/revisions/RevisionSelectionProvider(0xD99B6D08) 3CLTEXTCLASS org/eclipse/jface/internal/text/source/DiffPainter(0xD99B7088) 3CLTEXTCLASS org/eclipse/jface/internal/text/source/DiffPainter$AnnotationListener(0xD99B7778) 3CLTEXTCLASS org/eclipse/jface/text/source/ILineDiffer(0xD99B78A0) 3CLTEXTCLASS org/eclipse/jface/text/source/ILineDifferExtension2(0xD99B7990) 3CLTEXTCLASS org/eclipse/jface/text/source/ILineDifferExtension(0xD99B7A40) 3CLTEXTCLASS org/eclipse/jface/text/source/ILineDiffInfo(0xD99B7B00) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/HyperlinkManager(0xD9936690) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/HyperlinkManager$DETECTION_STRATEGY(0xD9936D80) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/MultipleHyperlinkPresenter$MultipleHyperlinkHoverManager(0xD9936F68) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/MultipleHyperlinkPresenter$MultipleHyperlinkHover(0xD99373A0) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/MultipleHyperlinkPresenter$6(0xD9937570) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/MultipleHyperlinkPresenter$MultipleHyperlinkHoverManager$Closer(0xD9937718) 3CLTEXTCLASS [Lorg/eclipse/jface/text/IAutoEditStrategy;(0xD9937B20) 3CLTEXTCLASS org/eclipse/jface/text/DefaultIndentLineAutoEditStrategy(0xD9937BE0) 3CLTEXTCLASS org/eclipse/jface/text/DefaultTextDoubleClickStrategy(0xD9937DD0) 3CLTEXTCLASS org/eclipse/jface/text/DefaultTextDoubleClickStrategy$DocumentCharacterIterator(0xD9938010) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$TextHoverKey(0xD99382B0) 3CLTEXTCLASS org/eclipse/jface/text/AbstractHoverInformationControlManager$3(0xD9938538) 3CLTEXTCLASS org/eclipse/jface/text/AbstractHoverInformationControlManager$5(0xD99387D0) 3CLTEXTCLASS org/eclipse/jface/text/TextViewerHoverManager$4(0xD9938990) 3CLTEXTCLASS org/eclipse/jface/text/AbstractHoverInformationControlManager$MouseTracker(0xD9938C70) 3CLTEXTCLASS org/eclipse/jface/text/AbstractHoverInformationControlManager$Closer(0xD9939120) 3CLTEXTCLASS org/eclipse/jface/text/ITextViewerExtension8$EnrichMode(0xD99396E0) 3CLTEXTCLASS org/eclipse/jface/text/TextViewerHoverManager$1(0xD9939850) 3CLTEXTCLASS org/eclipse/jface/text/TextViewerHoverManager$2(0xD9939998) 3CLTEXTCLASS org/eclipse/jface/text/TextViewerHoverManager$3(0xD9939AC0) 3CLTEXTCLASS org/eclipse/jface/internal/text/InformationControlReplacer$DefaultInformationControlCreator(0xD9939C08) 3CLTEXTCLASS org/eclipse/jface/internal/text/StickyHoverManager$Closer(0xD9939D60) 3CLTEXTCLASS org/eclipse/jface/text/source/ILineRange(0xD993A200) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationBarHoverManager$1(0xD993A2F8) 3CLTEXTCLASS org/eclipse/jface/text/source/CompositeRuler$CompositeRulerCanvas$ListenerInfo(0xD993A508) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$TextDoubleClickStrategyConnector(0xD993A600) 3CLTEXTCLASS org/eclipse/jface/text/TextViewerUndoManager$KeyAndMouseListener(0xD993A7F0) 3CLTEXTCLASS org/eclipse/jface/text/TextViewerUndoManager$TextInputListener(0xD993A9F0) 3CLTEXTCLASS org/eclipse/jface/text/IFindReplaceTargetExtension3(0xD993AB40) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$FindReplaceTarget(0xD993AC58) 3CLTEXTCLASS org/eclipse/jface/text/source/IVerticalRulerListener(0xD993B0E0) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationPainter(0xD993B218) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionSupport$ProjectionAnnotationsPainter(0xD993C028) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationPainter$SquigglesStrategy(0xD993C1A8) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationPainter$HighlightingStrategy(0xD993C370) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationPainter$ReusableRegion(0xD993C4A0) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionSupport$ProjectionDrawingStrategy(0xD993C5D8) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationPainter$2(0xD993C7E0) 3CLTEXTCLASS org/eclipse/jface/text/PaintManager(0xD993C958) 3CLTEXTCLASS org/eclipse/jface/text/IPaintPositionManager(0xD993CDD0) 3CLTEXTCLASS org/eclipse/jface/text/PaintManager$PositionManager(0xD993CEB8) 3CLTEXTCLASS org/eclipse/jface/text/PaintManager$PaintPositionUpdater(0xD993D128) 3CLTEXTCLASS org/eclipse/jface/text/JFaceTextUtil(0xD993D290) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationRulerColumn(0xD993D778) 3CLTEXTCLASS [Lorg/eclipse/jface/text/revisions/IRevisionRulerColumnExtension$RenderingMode;(0xD993E390) 3CLTEXTCLASS org/eclipse/jface/text/source/LineNumberRulerColumn$5(0xD993E448) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/CompletionProposalPopup(0xD992E640) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ContentAssistant$InternalListener(0xD992F9E0) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/AdditionalInfoController(0xD992FC58) 3CLTEXTCLASS org/eclipse/jface/internal/text/InternalAccessor(0xD9930178) 3CLTEXTCLASS org/eclipse/jface/text/AbstractInformationControlManager$MyInternalAccessor(0xD9930338) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/AdditionalInfoController$Timer(0xD9930570) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/AdditionalInfoController$10(0xD9930A50) 3CLTEXTCLASS org/eclipse/jface/text/AbstractInformationControlManager$Anchor(0xD9930BB0) 3CLTEXTCLASS [Lorg/eclipse/jface/text/AbstractInformationControlManager$Anchor;(0xD9930D20) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/AdditionalInfoController$TableSelectionListener(0xD9930DE0) 3CLTEXTCLASS org/eclipse/jface/text/IInformationControlCreatorExtension(0xD9930F38) 3CLTEXTCLASS org/eclipse/jface/text/AbstractReusableInformationControlCreator(0xD9931020) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/AdditionalInfoController$DefaultPresenterControlCreator(0xD9931250) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ContextInformationPopup(0xD99313B0) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/PopupCloser(0xD9931F90) 3CLTEXTCLASS org/eclipse/jface/text/IInputChangedListener(0xD9932428) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ICompletionProposalExtension2(0xD99324D8) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/CompletionProposalPopup$1(0xD99325D0) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ICompletionProposal(0xD9932788) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ICompletionProposalExtension(0xD9932888) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/CompletionProposalPopup$EmptyProposal(0xD99329A8) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/CompletionProposalPopup$ProposalSelectionHandler(0xD9932C18) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/Helper(0xD9932DC0) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ContentAssistant$3(0xD9932EC8) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ContentAssistant$AutoAssistListener(0xD9933038) 3CLTEXTCLASS org/eclipse/jface/text/source/ContentAssistantFacade(0xD99333E8) 3CLTEXTCLASS org/eclipse/jface/text/quickassist/IQuickAssistAssistantExtension(0xD9933558) 3CLTEXTCLASS org/eclipse/jface/text/quickassist/QuickAssistAssistant(0xD9933678) 3CLTEXTCLASS org/eclipse/jface/text/quickassist/QuickAssistAssistant$QuickAssistAssistantImpl(0xD9933BE0) 3CLTEXTCLASS org/eclipse/jface/text/quickassist/QuickAssistAssistant$ContentAssistProcessor(0xD9933EA0) 3CLTEXTCLASS org/eclipse/jface/text/formatter/MultiPassContentFormatter(0xD9934088) 3CLTEXTCLASS org/eclipse/jface/text/formatter/IFormattingStrategyExtension(0xD9934400) 3CLTEXTCLASS org/eclipse/jface/text/formatter/ContextBasedFormattingStrategy(0xD9934500) 3CLTEXTCLASS org/eclipse/jface/text/information/IInformationPresenterExtension(0xD99346E8) 3CLTEXTCLASS org/eclipse/jface/text/information/InformationPresenter(0xD9934888) 3CLTEXTCLASS org/eclipse/jface/text/AbstractInformationControlManager$IInformationControlCloser(0xD9934DE0) 3CLTEXTCLASS org/eclipse/jface/text/IViewportListener(0xD9934EC0) 3CLTEXTCLASS org/eclipse/jface/text/information/InformationPresenter$Closer(0xD9934FC0) 3CLTEXTCLASS org/eclipse/jface/text/information/IInformationProviderExtension(0xD9935360) 3CLTEXTCLASS org/eclipse/jface/text/ITextHoverExtension(0xD9935410) 3CLTEXTCLASS org/eclipse/jface/text/ITextHoverExtension2(0xD99354C0) 3CLTEXTCLASS org/eclipse/jface/text/AbstractInformationControlManager$1(0xD9935588) 3CLTEXTCLASS org/eclipse/jface/text/IUndoManagerExtension(0xD99356A8) 3CLTEXTCLASS org/eclipse/jface/text/TextViewerUndoManager(0xD9935798) 3CLTEXTCLASS org/eclipse/jface/text/source/DefaultAnnotationHover(0xD9935D60) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/IHyperlinkPresenterExtension(0xD9936110) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/MultipleHyperlinkPresenter(0xD9936208) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$VerifyKeyListenersManager(0xD9CEE678) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$DocumentRewriteSessionListener(0xD9CEE958) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$1(0xD9CEEB08) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$2(0xD9CEEC88) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$3(0xD9CEEDC0) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$4(0xD9CEEF10) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$CursorListener(0xD9CEF090) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$ViewportGuard(0xD9CEF318) 3CLTEXTCLASS org/eclipse/jface/text/source/CompositeRuler$1(0xD9CEF538) 3CLTEXTCLASS org/eclipse/jface/text/source/CompositeRuler$2(0xD9CEF698) 3CLTEXTCLASS org/eclipse/jface/text/source/OverviewRuler$2(0xD9CEF7F0) 3CLTEXTCLASS org/eclipse/jface/text/source/OverviewRuler$3(0xD9CEF918) 3CLTEXTCLASS org/eclipse/jface/text/source/OverviewRuler$4(0xD9CEFA68) 3CLTEXTCLASS org/eclipse/jface/text/source/OverviewRuler$5(0xD9CEFBB0) 3CLTEXTCLASS org/eclipse/jface/text/source/OverviewRuler$6(0xD9CEFCD8) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionViewer$AnnotationModelListener(0xD9CEFE18) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionSupport(0xD9CEFFF8) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationPainter$IDrawingStrategy(0xD9CF04F0) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/IProjectionListener(0xD9CF05A0) 3CLTEXTCLASS org/eclipse/jface/text/IPainter(0xD9CF0660) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionAnnotationModel(0xD9CF0818) 3CLTEXTCLASS org/eclipse/jface/text/IInformationControl(0xD9CF0A90) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionSummary(0xD9CF0C48) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/AnnotationBag(0xD9CF1148) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionSupport$ProjectionListener(0xD9CF1308) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/IProjectionPosition(0xD9CF1458) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationPainter$ITextStyleStrategy(0xD9CF1518) 3CLTEXTCLASS org/eclipse/jface/text/ITextPresentationListener(0xD9CF15C8) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationPainter$BoxStrategy(0xD9CF1690) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationPainter$NullStrategy(0xD9CF17D0) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationPainter$UnderlineStrategy(0xD9CF18D0) 3CLTEXTCLASS org/eclipse/jface/text/presentation/PresentationReconciler$InternalListener(0xD9CF1A38) 3CLTEXTCLASS org/eclipse/jface/text/rules/DefaultDamagerRepairer(0xD9CF1E78) 3CLTEXTCLASS org/eclipse/jface/text/reconciler/IReconcilingStrategyExtension(0xD9CF21F0) 3CLTEXTCLASS [Lorg/eclipse/jface/text/reconciler/IReconcilingStrategy;(0xD9CF22C8) 3CLTEXTCLASS org/eclipse/jface/text/reconciler/AbstractReconciler(0xD9CF23C8) 3CLTEXTCLASS org/eclipse/jface/text/reconciler/MonoReconciler(0xD9CF2980) 3CLTEXTCLASS org/eclipse/jface/text/reconciler/AbstractReconciler$BackgroundThread(0xD9CF2C40) 3CLTEXTCLASS org/eclipse/jface/text/reconciler/DirtyRegionQueue(0xD9CF2F28) 3CLTEXTCLASS org/eclipse/jface/text/reconciler/AbstractReconciler$Listener(0xD9CF3120) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/IContentAssistantExtension(0xD9CF3398) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/IContentAssistantExtension2(0xD9CF3458) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/IContentAssistantExtension3(0xD9CF3568) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/IContentAssistantExtension4(0xD9CF3618) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ContentAssistant(0xD9CF3840) 3CLTEXTCLASS org/eclipse/jface/text/IEventConsumer(0xD9CF4B20) 3CLTEXTCLASS org/eclipse/jface/contentassist/IContentAssistSubjectControl(0xD9CF4BD0) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/IContentAssistListener(0xD9CF4DB0) 3CLTEXTCLASS [Lorg/eclipse/jface/text/contentassist/IContentAssistListener;(0xD9CF4E80) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ICompletionListener(0xD9CF4F20) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/IContextInformationValidator(0xD9CF4FF0) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ICompletionListenerExtension(0xD9CF50B0) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ContentAssistSubjectControlAdapter(0xD9CF51E8) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/ContentAssistant$LayoutManager(0xD9CF5860) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/DefaultHyperlinkPresenter(0xD9CF5D98) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/IHyperlinkDetector(0xD9CF6340) 3CLTEXTCLASS [Lorg/eclipse/jface/text/hyperlink/IHyperlinkDetector;(0xD9CF6408) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/IHyperlinkDetectorExtension(0xD9CF64A8) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/IHyperlinkDetectorExtension2(0xD9CF6558) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionViewer(0xD9CA68B0) 3CLTEXTCLASS [Lorg/eclipse/jface/text/rules/IToken;(0xD9CA7C60) 3CLTEXTCLASS org/eclipse/jface/text/source/IVerticalRulerExtension(0xD9CA7D00) 3CLTEXTCLASS org/eclipse/jface/text/source/CompositeRuler(0xD9CA7E30) 3CLTEXTCLASS org/eclipse/jface/text/IFindReplaceTarget(0xD9CA84F8) 3CLTEXTCLASS org/eclipse/jface/text/IFindReplaceTargetExtension(0xD9CA85F8) 3CLTEXTCLASS org/eclipse/jface/text/IRewriteTarget(0xD9CA8718) 3CLTEXTCLASS org/eclipse/jface/text/source/CompositeRuler$CompositeRulerCanvas(0xD9CA8E68) 3CLTEXTCLASS org/eclipse/jface/text/source/CompositeRuler$RulerLayout(0xD9CA9B98) 3CLTEXTCLASS org/eclipse/jface/text/source/OverviewRuler(0xD9CA9DE0) 3CLTEXTCLASS org/eclipse/jface/text/source/IAnnotationAccessExtension(0xD9CAAC58) 3CLTEXTCLASS org/eclipse/jface/text/source/IAnnotationAccessExtension2(0xD9CAAD60) 3CLTEXTCLASS org/eclipse/jface/text/source/OverviewRuler$InternalListener(0xD9CAAE30) 3CLTEXTCLASS org/eclipse/jface/text/source/OverviewRuler$1(0xD9CAB008) 3CLTEXTCLASS org/eclipse/jface/text/IDocumentAdapter(0xD9CAB130) 3CLTEXTCLASS org/eclipse/jface/text/AbstractInformationControlManager(0xD9CAB2B0) 3CLTEXTCLASS org/eclipse/jface/internal/text/InformationControlReplacer(0xD9CABFD8) 3CLTEXTCLASS org/eclipse/jface/text/IWidgetTokenKeeper(0xD9CAC3B8) 3CLTEXTCLASS org/eclipse/jface/text/IWidgetTokenKeeperExtension(0xD9CAC468) 3CLTEXTCLASS org/eclipse/jface/internal/text/StickyHoverManager(0xD9CAC618) 3CLTEXTCLASS org/eclipse/jface/text/AbstractHoverInformationControlManager(0xD9CACA70) 3CLTEXTCLASS org/eclipse/jface/text/TextViewerHoverManager(0xD9CAD130) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$11(0xD9CAD7E0) 3CLTEXTCLASS org/eclipse/jface/text/source/SourceViewer$RulerLayout(0xD9CAD9A8) 3CLTEXTCLASS org/eclipse/jface/text/source/AnnotationBarHoverManager(0xD9CADD50) 3CLTEXTCLASS org/eclipse/jface/text/source/ISourceViewerExtension2(0xD9C964B0) 3CLTEXTCLASS org/eclipse/jface/text/rules/IWhitespaceDetector(0xD9C96570) 3CLTEXTCLASS org/eclipse/jface/text/TextAttribute(0xD9C96648) 3CLTEXTCLASS org/eclipse/jface/text/rules/WhitespaceRule(0xD9C96870) 3CLTEXTCLASS org/eclipse/jface/text/IUndoManager(0xD9C969E8) 3CLTEXTCLASS org/eclipse/jface/text/presentation/IPresentationReconciler(0xD9C96B30) 3CLTEXTCLASS org/eclipse/jface/text/IAutoIndentStrategy(0xD9C96C10) 3CLTEXTCLASS org/eclipse/jface/text/ITextDoubleClickStrategy(0xD9C96CB0) 3CLTEXTCLASS org/eclipse/jface/text/hyperlink/IHyperlinkPresenter(0xD9C96D60) 3CLTEXTCLASS org/eclipse/jface/text/ITextHover(0xD9C96E50) 3CLTEXTCLASS org/eclipse/jface/text/reconciler/IReconcilingStrategy(0xD9C96F10) 3CLTEXTCLASS org/eclipse/jface/text/reconciler/IReconciler(0xD9C96FE0) 3CLTEXTCLASS org/eclipse/jface/text/quickassist/IQuickAssistProcessor(0xD9C970B0) 3CLTEXTCLASS org/eclipse/jface/text/quickassist/IQuickAssistAssistant(0xD9C97190) 3CLTEXTCLASS org/eclipse/jface/text/presentation/IPresentationDamager(0xD9C97318) 3CLTEXTCLASS org/eclipse/jface/text/presentation/IPresentationRepairer(0xD9C973D8) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/IContentAssistProcessor(0xD9C97498) 3CLTEXTCLASS org/eclipse/jface/text/contentassist/IContentAssistant(0xD9C97598) 3CLTEXTCLASS org/eclipse/jface/text/formatter/IFormattingStrategy(0xD9C976A0) 3CLTEXTCLASS org/eclipse/jface/text/formatter/IContentFormatter(0xD9C97770) 3CLTEXTCLASS org/eclipse/jface/text/information/IInformationPresenter(0xD9C97830) 3CLTEXTCLASS org/eclipse/jface/text/information/IInformationProvider(0xD9C97910) 3CLTEXTCLASS org/eclipse/jface/text/presentation/IPresentationReconcilerExtension(0xD9C979D0) 3CLTEXTCLASS org/eclipse/jface/text/presentation/PresentationReconciler(0xD9C97AC0) 3CLTEXTCLASS org/eclipse/jface/text/revisions/IRevisionRulerColumnExtension$RenderingMode(0xD9C98118) 3CLTEXTCLASS org/eclipse/jface/text/ITextViewerExtension2(0xD9C98238) 3CLTEXTCLASS org/eclipse/jface/text/ITextViewerExtension4(0xD9C98378) 3CLTEXTCLASS org/eclipse/jface/text/ITextViewerExtension6(0xD9C98448) 3CLTEXTCLASS org/eclipse/jface/text/ITextViewerExtension7(0xD9C98508) 3CLTEXTCLASS org/eclipse/jface/text/ITextViewerExtension8(0xD9C985B8) 3CLTEXTCLASS org/eclipse/jface/text/IEditingSupportRegistry(0xD9C98678) 3CLTEXTCLASS org/eclipse/jface/text/ITextOperationTarget(0xD9C98748) 3CLTEXTCLASS org/eclipse/jface/text/ITextOperationTargetExtension(0xD9C98838) 3CLTEXTCLASS org/eclipse/jface/text/IWidgetTokenOwner(0xD9C988E8) 3CLTEXTCLASS org/eclipse/jface/text/IWidgetTokenOwnerExtension(0xD9C989A8) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer(0xD9C98D38) 3CLTEXTCLASS org/eclipse/jface/text/source/ISourceViewerExtension(0xD9C9B7E0) 3CLTEXTCLASS org/eclipse/jface/text/source/ISourceViewerExtension3(0xD9C9B890) 3CLTEXTCLASS org/eclipse/jface/text/source/ISourceViewerExtension4(0xD9C9B960) 3CLTEXTCLASS org/eclipse/jface/text/source/SourceViewer(0xD9C9BD60) 3CLTEXTCLASS org/eclipse/jface/text/source/OverviewRulerHoverManager(0xD9C9CFC8) 3CLTEXTCLASS org/eclipse/jface/text/quickassist/IQuickAssistInvocationContext(0xD9C9D2C0) 3CLTEXTCLASS org/eclipse/jface/text/formatter/IFormattingContext(0xD9C9D390) 3CLTEXTCLASS org/eclipse/jface/text/source/SourceViewer$ColumnPosition(0xD9C9D530) 3CLTEXTCLASS org/eclipse/jface/text/formatter/IContentFormatterExtension(0xD9C9D638) 3CLTEXTCLASS org/eclipse/jface/text/source/projection/ProjectionAnnotation(0xD9C9D730) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$WidgetCommand(0xD9C9DB58) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$VisibleDocumentListener(0xD9C9DCE8) 3CLTEXTCLASS org/eclipse/jface/text/TextViewer$TextVerifyListener(0xD9C9DE88) 3CLTEXTCLASS org/eclipse/jface/text/DocumentCommand(0xD9C9E000) 3CLTEXTCLASS org/eclipse/jface/text/IMarkRegionTarget(0xD9C180C0) 3CLTEXTCLASS org/eclipse/jface/text/IAutoEditStrategy(0xD9C18180) 3CLTEXTCLASS org/eclipse/jface/text/source/IAnnotationPresentation(0xD9C18230) 3CLTEXTCLASS org/eclipse/jface/text/source/IOverviewRuler(0xD9C182F8) 3CLTEXTCLASS org/eclipse/jface/text/source/IAnnotationAccess(0xD9C18440) 3CLTEXTCLASS org/eclipse/jface/text/IInformationControlCreator(0xD9C18510) 3CLTEXTCLASS org/eclipse/jface/text/source/IVerticalRulerColumn(0xD9C185C0) 3CLTEXTCLASS org/eclipse/jface/text/source/LineNumberRulerColumn(0xD9C18730) 3CLTEXTCLASS org/eclipse/jface/text/source/IVerticalRulerInfoExtension(0xD9C19048) 3CLTEXTCLASS org/eclipse/jface/text/source/IChangeRulerColumn(0xD9C19128) 3CLTEXTCLASS org/eclipse/jface/text/revisions/IRevisionRulerColumn(0xD9C19238) 3CLTEXTCLASS org/eclipse/jface/text/revisions/IRevisionRulerColumnExtension(0xD9C19300) 3CLTEXTCLASS org/eclipse/jface/text/source/LineNumberChangeRulerColumn(0xD9C19538) 3CLTEXTCLASS org/eclipse/jface/text/source/IAnnotationHover(0xD9C19B98) 3CLTEXTCLASS org/eclipse/jface/text/source/IAnnotationHoverExtension(0xD9C19C48) 3CLTEXTCLASS org/eclipse/jface/text/information/IInformationProviderExtension2(0xD9C19D28) 3CLTEXTCLASS org/eclipse/jface/text/source/LineChangeHover(0xD9C19E18) 3CLTEXTCLASS org/eclipse/jface/text/ISelectionValidator(0xD9C1A288) 3CLTEXTCLASS org/eclipse/jface/text/source/SourceViewerConfiguration(0xD9C1A3B0) 3CLTEXTCLASS org/eclipse/jface/text/source/ICharacterPairMatcher(0xD9C1A820) 3CLTEXTCLASS org/eclipse/jface/text/quickassist/IQuickFixableAnnotation(0xD9C1A908) 3CLTEXTCLASS org/eclipse/jface/text/ITextViewerExtension3(0xD9C1A9D8) 3CLTEXTCLASS org/eclipse/jface/text/ITextViewerExtension5(0xD9C1AAF8) 3CLTEXTCLASS org/eclipse/jface/text/ITextViewerExtension(0xD9C1AC48) 3CLTEXTCLASS org/eclipse/jface/text/source/DefaultCharacterPairMatcher(0xD9C1AD90) 3CLTEXTCLASS org/eclipse/jface/text/source/DefaultCharacterPairMatcher$CharPairs(0xD9C1B060) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI(0xD9C1B298) 3CLTEXTCLASS org/eclipse/jface/text/link/LinkedModeUI$IExitPolicy(0xD9C1C000) 3CLTEXTCLASS org/eclipse/jface/text/rules/RuleBasedScanner(0xDAF64308) 3CLTEXTCLASS org/eclipse/jface/text/rules/BufferedRuleBasedScanner(0xDAF64690) 3CLTEXTCLASS org/eclipse/jface/text/rules/RuleBasedPartitionScanner(0xDAF64928) 3CLTEXTCLASS org/eclipse/jface/text/rules/IToken(0xDAF64B58) 3CLTEXTCLASS org/eclipse/jface/text/rules/IRule(0xDAF64C48) 3CLTEXTCLASS org/eclipse/jface/text/rules/Token(0xDAF64D28) 3CLTEXTCLASS org/eclipse/jface/text/rules/IPredicateRule(0xDAF64F40) 3CLTEXTCLASS org/eclipse/jface/text/rules/PatternRule(0xDAF65040) 3CLTEXTCLASS org/eclipse/jface/text/rules/SingleLineRule(0xDAF653C8) 3CLTEXTCLASS org/eclipse/jface/text/rules/WordPatternRule(0xDAF65540) 3CLTEXTCLASS org/eclipse/jface/text/rules/IWordDetector(0xDAF65728) 3CLTEXTCLASS org/eclipse/jface/text/rules/PatternRule$DecreasingCharArrayLengthComparator(0xDAF65800) 3CLTEXTCLASS org/eclipse/jface/text/rules/EndOfLineRule(0xDAF65950) 3CLTEXTCLASS org/eclipse/jface/text/rules/WordRule(0xDAF65AA8) 3CLTEXTCLASS [Lorg/eclipse/jface/text/rules/IPredicateRule;(0xDAF65D68) 3CLTEXTCLASS [Lorg/eclipse/jface/text/rules/IRule;(0xDAF65E20) 3CLTEXTCLASS org/eclipse/jface/text/TextSelection(0xDAF65EF0) 3CLTEXTCLASS org/eclipse/jface/text/source/IVerticalRulerInfo(0xDAF661D0) 3CLTEXTCLASS org/eclipse/jface/text/ITextViewer(0xDBC210E0) 3CLTEXTCLASS org/eclipse/jface/text/rules/ITokenScanner(0xDBC21438) 3CLTEXTCLASS org/eclipse/jface/text/rules/IPartitionTokenScanner(0xDBC21518) 3CLTEXTCLASS org/eclipse/jface/text/rules/FastPartitioner(0xDBC21648) 3CLTEXTCLASS org/eclipse/jface/text/rules/ICharacterScanner(0xDBC21EF0) 3CLTEXTCLASS org/eclipse/jface/text/source/IVerticalRuler(0xDBC21FD8) 3CLTEXTCLASS org/eclipse/jface/text/templates/persistence/TemplateStore(0xDC6D7730) 3CLTEXTCLASS org/eclipse/jface/text/ITextSelection(0xDC6D7D00) 3CLTEXTCLASS org/eclipse/jface/text/IEditingSupport(0xDC6D7DF8) 3CLTEXTCLASS org/eclipse/jface/text/source/ISharedTextColors(0xDD94D4B0) 3CLTEXTCLASS org/eclipse/jface/text/source/ISourceViewer(0xDD94D570) 3CLTEXTCLASS org/eclipse/jface/text/ITextListener(0xDD94D6D8) 3CLTEXTCLASS org/eclipse/jface/text/ITextInputListener(0xDD94D788) 3CLTEXTCLASS org/eclipse/jface/text/templates/ContextTypeRegistry(0xDC6D3AE0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0348C00) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/PropertyEventDispatcher(0xD99CFCD8) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/PropertyEventDispatcher$1(0xD99CFFA0) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/LineNumberColumn$1(0xD99D00D0) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/LineNumberColumn$2(0xD99D0228) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/LineNumberColumn$3(0xD99D0380) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/LineNumberColumn$4(0xD99D04B8) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/LineNumberColumn$5(0xD99D0600) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/LineNumberColumn$6(0xD99D0748) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/LineNumberColumn$7(0xD99D0890) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/LineNumberColumn$8(0xD99D09D8) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/LineNumberColumn$9(0xD99D0B10) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/LineNumberColumn$10(0xD99D0C78) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/LineNumberColumn$11(0xD99D0DE0) 3CLTEXTCLASS org/eclipse/ui/editors/text/TextFileDocumentProvider$SingleElementIterator(0xD99D0F50) 3CLTEXTCLASS org/eclipse/ui/internal/editors/quickdiff/LastSaveReferenceProvider$1(0xD99D10C8) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/WorkspaceOperationRunner(0xD99D1220) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/URLHyperlinkDetector(0xD99D1400) 3CLTEXTCLASS org/eclipse/ui/internal/editors/quickdiff/LastSaveReferenceProvider$ReadJob(0xD99D1630) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/NLSUtility(0xD99D1878) 3CLTEXTCLASS org/eclipse/ui/editors/text/TextEditorMessages(0xD99D1990) 3CLTEXTCLASS org/eclipse/ui/editors/text/DefaultEncodingSupport$4(0xD99D1C08) 3CLTEXTCLASS org/eclipse/ui/texteditor/MarkerUtilities(0xD99D1D38) 3CLTEXTCLASS org/eclipse/ui/texteditor/AnnotationTypeLookup(0xD99D20D8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AnnotationTypeLookup$AnnotationTypeMapping(0xD99D2410) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractMarkerAnnotationModel(0xD9CC6690) 3CLTEXTCLASS org/eclipse/ui/texteditor/ResourceMarkerAnnotationModel(0xD9CC6E98) 3CLTEXTCLASS org/eclipse/ui/texteditor/ResourceMarkerAnnotationModel$ResourceChangeListener(0xD9CC7290) 3CLTEXTCLASS org/eclipse/ui/editors/text/IEncodingSupport(0xD9CC73E8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditor$2(0xD9CC74E0) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/LineNumberColumn$ICompatibilityForwarder(0xD9CC76C0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AnnotationPreferenceLookup(0xD9CC77B0) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/DelegatingAnnotationPreference(0xD9CC7B38) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/AnnotationTypeHierarchy(0xD9CC8128) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/AnnotationType(0xD9CC8410) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/SharedTextColors(0xD9CC85C0) 3CLTEXTCLASS org/eclipse/ui/texteditor/DefaultMarkerAnnotationAccess(0xD9CC8828) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditor$1(0xD9CC8E78) 3CLTEXTCLASS org/eclipse/ui/texteditor/TaskRulerAction(0xD9CC9018) 3CLTEXTCLASS org/eclipse/ui/texteditor/MarkerRulerAction(0xD9CC9258) 3CLTEXTCLASS org/eclipse/ui/texteditor/TaskRulerAction$TaskMarkerRulerAction(0xD9CC9C38) 3CLTEXTCLASS org/eclipse/ui/texteditor/TextEditorMessages(0xD9CC9EA0) 3CLTEXTCLASS org/eclipse/ui/texteditor/SelectMarkerRulerAction(0xD9CCA1B0) 3CLTEXTCLASS org/eclipse/ui/editors/text/DefaultEncodingSupport(0xD9CCA8D8) 3CLTEXTCLASS org/eclipse/ui/editors/text/DefaultEncodingSupport$1(0xD9CCADE8) 3CLTEXTCLASS org/eclipse/ui/editors/text/ITextEditorHelpContextIds(0xD9CCAFB0) 3CLTEXTCLASS org/eclipse/ui/texteditor/ChangeEncodingAction$1(0xD9CCB200) 3CLTEXTCLASS org/eclipse/ui/internal/editors/quickdiff/QuickDiffMessages(0xD9CCB690) 3CLTEXTCLASS org/eclipse/ui/internal/editors/quickdiff/CompositeRevertAction(0xD9CCB8D8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditor$6(0xD9CCBC28) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditor$8(0xD9CCBEB8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditor$9(0xD9CCC178) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/RefreshEditorAction(0xD9CCC4A8) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/SharedTextColors$1(0xD9CCC7B8) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/AnnotationColumn(0xD9CCC938) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/AnnotationColumn$1(0xD9CCCDC8) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/LineNumberColumn(0xD9CCCFE0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditor$3(0xD9CCDC30) 3CLTEXTCLASS org/eclipse/ui/internal/editors/quickdiff/LastSaveReferenceProvider(0xD9CCDDD0) 3CLTEXTCLASS org/eclipse/ui/editors/text/FileBufferOperationAction$1(0xDBFDC198) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/SelectResourcesDialog$IFilter(0xDBFDC488) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/TextEditorMessages(0xDBFDC550) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/ConvertLineDelimitersToUnix(0xDBFDC960) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/ConvertLineDelimitersToWindows(0xDBFDCC00) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/TextChangeHover(0xDBFDCE00) 3CLTEXTCLASS org/eclipse/ui/texteditor/AddMarkerAction(0xDBFDD0B0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AddTaskAction(0xDBFDD788) 3CLTEXTCLASS org/eclipse/ui/texteditor/ChangeEncodingAction(0xDBFDDA98) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditor$4(0xDBFDDF20) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditor$5(0xDBFDE1A0) 3CLTEXTCLASS org/eclipse/ui/internal/editors/quickdiff/QuickDiffRestoreAction(0xDBFDE450) 3CLTEXTCLASS org/eclipse/ui/internal/editors/quickdiff/RevertLineAction(0xDBFDE9C0) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditor$7(0xDBFDED10) 3CLTEXTCLASS org/eclipse/ui/internal/texteditor/BooleanPreferenceToggleAction(0xDBFDEFE8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditor$10(0xDBFDF2B8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditor$11(0xDBFDF538) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditor$12(0xDBFDF7B8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditor$14(0xDBFDFBA8) 3CLTEXTCLASS org/eclipse/ui/internal/editors/quickdiff/RevertSelectionAction(0xDBFDFF00) 3CLTEXTCLASS org/eclipse/ui/internal/editors/quickdiff/RevertBlockAction(0xDBFE0290) 3CLTEXTCLASS org/eclipse/ui/internal/editors/quickdiff/RestoreAction(0xDBFE0600) 3CLTEXTCLASS org/eclipse/ui/editors/text/TextSourceViewerConfiguration(0xDBFE0950) 3CLTEXTCLASS org/eclipse/ui/texteditor/SimpleMarkerAnnotation(0xDBFE1000) 3CLTEXTCLASS org/eclipse/ui/texteditor/MarkerAnnotation(0xDBFE1288) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditor$GotoMarkerAdapter(0xDBFE17A8) 3CLTEXTCLASS org/eclipse/ui/texteditor/BookmarkRulerAction(0xDBFE1910) 3CLTEXTCLASS org/eclipse/ui/editors/text/StorageDocumentProvider(0xDBFE1B88) 3CLTEXTCLASS org/eclipse/ui/editors/text/StorageDocumentProvider$StorageInfo(0xDBFE22C0) 3CLTEXTCLASS org/eclipse/ui/editors/text/DocumentReader(0xDBFE2408) 3CLTEXTCLASS org/eclipse/ui/texteditor/ChainedPreferenceStore(0xDBFE2700) 3CLTEXTCLASS org/eclipse/ui/texteditor/ChainedPreferenceStore$PropertyChangeListener(0xDBFE2E28) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/EditorsPluginPreferenceInitializer(0xDBFE2FE8) 3CLTEXTCLASS org/eclipse/ui/editors/text/TextEditorPreferenceConstants(0xDBFE3310) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditorPreferenceConstants(0xDBFE3590) 3CLTEXTCLASS org/eclipse/ui/texteditor/DocumentProviderRegistry(0xDBFE3B08) 3CLTEXTCLASS org/eclipse/ui/editors/text/TextFileDocumentProvider$6(0xDC17AE30) 3CLTEXTCLASS org/eclipse/ui/editors/text/TextFileDocumentProvider$FileInfo(0xDC17AFC0) 3CLTEXTCLASS org/eclipse/ui/editors/text/TextFileDocumentProvider$FileBufferListener(0xDC17B0D0) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/UISynchronizationContext(0xDC17B3C0) 3CLTEXTCLASS org/eclipse/ui/editors/text/ForwardingDocumentProvider(0xDC17B5A8) 3CLTEXTCLASS org/eclipse/ui/texteditor/AbstractDecoratedTextEditor(0xDC17BF00) 3CLTEXTCLASS org/eclipse/ui/editors/text/FileBufferOperationAction(0xDC17E0D0) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/ConvertLineDelimitersAction(0xDC17E6D0) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/ConvertLineDelimitersToMacOS9(0xDC17EBA0) 3CLTEXTCLASS org/eclipse/ui/texteditor/ReadOnlyAnnotationPreference(0xDC370048) 3CLTEXTCLASS org/eclipse/ui/texteditor/MarkerAnnotationPreferences$AccessChecker(0xDC370678) 3CLTEXTCLASS org/eclipse/ui/editors/text/IStorageDocumentProvider(0xDC370820) 3CLTEXTCLASS org/eclipse/ui/editors/text/TextFileDocumentProvider(0xDC3709E0) 3CLTEXTCLASS org/eclipse/ui/editors/text/TextFileDocumentProvider$DocumentProviderOperation(0xDC371A28) 3CLTEXTCLASS org/eclipse/ui/editors/text/TextFileDocumentProvider$1(0xDC371BB8) 3CLTEXTCLASS org/eclipse/ui/editors/text/TextFileDocumentProvider$2(0xDC371D68) 3CLTEXTCLASS org/eclipse/ui/editors/text/EditorsUI(0xDC34EDE0) 3CLTEXTCLASS org/eclipse/ui/texteditor/MarkerAnnotationPreferences(0xDC34F100) 3CLTEXTCLASS org/eclipse/ui/editors/text/TextFileDocumentProvider$3(0xDC34F8E8) 3CLTEXTCLASS org/eclipse/ui/editors/text/TextFileDocumentProvider$4(0xDC34FA50) 3CLTEXTCLASS org/eclipse/ui/editors/text/TextFileDocumentProvider$5(0xDC34FBB0) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/EditorsPlugin$1(0xDD94C4A0) 3CLTEXTCLASS org/eclipse/ui/editors/text/templates/ContributionTemplateStore(0xDD94C658) 3CLTEXTCLASS org/eclipse/ui/internal/editors/text/EditorsPlugin(0xDD94BF18) 3CLTEXTCLASS org/eclipse/ui/editors/text/templates/ContributionContextTypeRegistry(0xDD94B758) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0196170) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/InlineConstantDescriptor(0x1114FF70) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/ExtractMethodDescriptor(0x11150100) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/ExtractLocalDescriptor(0x11150290) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/ExtractConstantDescriptor(0x11150420) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/ExtractClassDescriptor(0x111505E8) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/IntroduceParameterDescriptor(0x11150B30) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/IntroduceParameterObjectDescriptor(0x11150D10) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/IntroduceFactoryDescriptor(0x11151480) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/IntroduceIndirectionDescriptor(0x11151610) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/ConvertLocalVariableDescriptor(0x111517A0) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/EncapsulateFieldDescriptor(0x11151930) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/InferTypeArgumentsDescriptor(0x11151AC0) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/GeneralizeTypeDescriptor(0x11151C50) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/ExtractSuperclassDescriptor(0x11151DE0) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/DeleteDescriptor(0x11151F70) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/CopyDescriptor(0x11152100) 3CLTEXTCLASS org/eclipse/jdt/internal/core/refactoring/descriptors/RefactoringSignatureDescriptorFactory(0x11152250) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/RenameResourceDescriptor(0x111B3998) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/IJavaElementMapper(0x111B3C70) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/RenameJavaElementDescriptor(0x111B3DA8) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/ChangeMethodSignatureDescriptor(0x111B43F8) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/MoveMethodDescriptor(0x111B4588) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/MoveStaticMembersDescriptor(0x111B4728) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/ExtractInterfaceDescriptor(0x111B4AA8) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/UseSupertypeDescriptor(0x111B4C40) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/PullUpDescriptor(0x111B4F20) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/PushDownDescriptor(0x111B50B0) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/ConvertAnonymousDescriptor(0x111B5240) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/ConvertMemberTypeDescriptor(0x111B53D0) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/InlineMethodDescriptor(0x111B5560) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/InlineLocalVariableDescriptor(0x111B56F0) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/MoveDescriptor(0xD9731260) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/CompilationUnitChange(0xD9731900) 3CLTEXTCLASS org/eclipse/jdt/internal/core/manipulation/JavaElementPropertyTester(0xD9731D10) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/JavaRefactoringContribution(0xD9731F90) 3CLTEXTCLASS org/eclipse/jdt/core/refactoring/descriptors/JavaRefactoringDescriptor(0xD972C5A8) 3CLTEXTCLASS org/eclipse/jdt/internal/core/refactoring/descriptors/RenameResourceRefactoringContribution(0xD972CA30) 3CLTEXTCLASS org/eclipse/jdt/internal/core/manipulation/JavaManipulationPlugin(0xDC3D0080) 3CLTEXTCLASS org/eclipse/jdt/core/manipulation/JavaManipulation(0xDC6D9D00) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0EBE4B0) 3CLTEXTCLASS org/eclipse/ui/internal/views/contentoutline/ContentOutlineMessages(0xDC8B7DC8) 3CLTEXTCLASS org/eclipse/ui/views/contentoutline/IContentOutlinePage(0xDC8B7F28) 3CLTEXTCLASS org/eclipse/ui/views/contentoutline/ContentOutline(0xDBFC04D8) 3CLTEXTCLASS org/eclipse/ui/internal/views/ViewsPlugin(0xDC3D8168) 3CLTEXTCLASS org/eclipse/ui/views/properties/IPropertySource(0xDCB22650) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE071B678) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/TextFileBufferManager$9(0xD97DD488) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/TextFileBufferManager$8(0xD97DD5D0) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/DocumentReader$InternalDocumentListener(0xD97DD728) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/DocumentReader$DocumentCharSequence(0xD97DD890) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/TextFileBufferManager$7(0xD97DDA30) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/TextFileBufferManager$12(0xD97DDB78) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/ExtensionsRegistry(0xDC1A1C68) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/ResourceExtensionRegistry(0xDC1A2368) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/ResourceFileBuffer(0xDC1A2680) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/ResourceTextFileBuffer(0xDC1A2E40) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/ExtensionsRegistry$ContentTypeAdapter(0xDC1A37B0) 3CLTEXTCLASS org/eclipse/core/filebuffers/manipulation/IFileBufferOperation(0xDC1A3908) 3CLTEXTCLASS org/eclipse/core/filebuffers/manipulation/TextFileBufferOperation(0xDC1A39F0) 3CLTEXTCLASS org/eclipse/core/filebuffers/manipulation/ConvertLineDelimitersOperation(0xDC1A3CB8) 3CLTEXTCLASS org/eclipse/core/filebuffers/manipulation/FileBuffersMessages(0xDC1A3F50) 3CLTEXTCLASS org/eclipse/core/filebuffers/LocationKind(0xDC1A4100) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/DocumentReader(0xDC1A4298) 3CLTEXTCLASS org/eclipse/core/filebuffers/IPersistableAnnotationModel(0xDC1A44F8) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/FileBuffersMessages(0xDC1A45E0) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/ResourceTextFileBuffer$DocumentListener(0xDC1A47B8) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/Progress(0xDC1A4950) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/ResourceFileBuffer$FileSynchronizer(0xDC1A4AB0) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/ResourceFileBuffer$SafeFileChange(0xDC1A4D60) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/ResourceFileBuffer$3(0xDC1A4F38) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/ResourceFileBuffer$4(0xDC1A5088) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/ResourceFileBuffer$1(0xDC1A51C8) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/ResourceFileBuffer$2(0xDC1A5308) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/SynchronizableDocument(0xDC1A55C8) 3CLTEXTCLASS [Lorg/eclipse/core/filebuffers/IDocumentSetupParticipant;(0xDC1A5AE8) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/ResourceTextFileBufferManager(0xDC19BFB8) 3CLTEXTCLASS org/eclipse/core/filebuffers/IFileBuffer(0xDC19C608) 3CLTEXTCLASS org/eclipse/core/filebuffers/IStateValidationSupport(0xDC19C7F8) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/AbstractFileBuffer(0xDC19C950) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/FileStoreFileBuffer(0xDC19CC90) 3CLTEXTCLASS org/eclipse/core/filebuffers/ITextFileBuffer(0xDC19D0F8) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/FileStoreTextFileBuffer(0xDC19D298) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/ResourceTextFileBufferManager$1(0xDC19DBA8) 3CLTEXTCLASS org/eclipse/core/filebuffers/IDocumentSetupParticipantExtension(0xDC19DDB8) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/TextFileBufferManager(0xDC19AF80) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/TextFileBufferManager$SafeNotifier(0xDC19BAA0) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/TextFileBufferManager$11(0xDC19BBD8) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/TextFileBufferManager$3(0xDC19BD20) 3CLTEXTCLASS org/eclipse/core/filebuffers/ITextFileBufferManager(0xDC178590) 3CLTEXTCLASS org/eclipse/core/filebuffers/IFileBufferListener(0xDC178730) 3CLTEXTCLASS org/eclipse/core/filebuffers/ISynchronizationContext(0xDC178878) 3CLTEXTCLASS org/eclipse/core/filebuffers/IDocumentSetupParticipant(0xDC178928) 3CLTEXTCLASS org/eclipse/core/filebuffers/FileBuffers(0xDC1789F0) 3CLTEXTCLASS org/eclipse/core/internal/filebuffers/FileBuffersPlugin(0xDC174598) 3CLTEXTCLASS org/eclipse/core/filebuffers/IFileBufferManager(0xDC174760) 3CLTEXTCLASS org/eclipse/core/filebuffers/IAnnotationModelFactory(0xDC172990) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0A0A578) 3CLTEXTCLASS org/eclipse/team/internal/core/DefaultProjectSetCapability(0x10EBA298) 3CLTEXTCLASS org/eclipse/team/core/mapping/IResourceMappingMerger(0x10EBA388) 3CLTEXTCLASS org/eclipse/team/core/mapping/ISynchronizationScopeParticipantFactory(0x10EBA458) 3CLTEXTCLASS org/eclipse/team/core/IIgnoreInfo(0x10EBA508) 3CLTEXTCLASS [Lorg/eclipse/team/core/IIgnoreInfo;(0x10EBA5E0) 3CLTEXTCLASS org/eclipse/team/core/Team$1(0x10EBA6A0) 3CLTEXTCLASS org/eclipse/team/internal/core/StringMatcher(0x10EBA808) 3CLTEXTCLASS [Lorg/eclipse/team/internal/core/StringMatcher;(0x10EBAB88) 3CLTEXTCLASS org/eclipse/team/internal/core/MoveDeleteManager(0x10EBAC58) 3CLTEXTCLASS org/eclipse/team/internal/core/DefaultMoveDeleteHook(0x10EBAEB8) 3CLTEXTCLASS org/eclipse/team/internal/core/history/LocalFileRevision(0x10EBB078) 3CLTEXTCLASS org/eclipse/team/core/diff/provider/Diff(0x10EBB440) 3CLTEXTCLASS org/eclipse/team/core/diff/provider/TwoWayDiff(0x10EBB630) 3CLTEXTCLASS org/eclipse/team/core/mapping/IResourceDiff(0x10EBB7D0) 3CLTEXTCLASS org/eclipse/team/core/mapping/provider/ResourceDiff(0x10EBB8F8) 3CLTEXTCLASS org/eclipse/team/core/diff/IThreeWayDiff(0x10EBBB10) 3CLTEXTCLASS org/eclipse/team/core/diff/provider/ThreeWayDiff(0x10EBBC28) 3CLTEXTCLASS [Lorg/eclipse/team/internal/core/subscribers/ActiveChangeSet;(0x10EBBEF0) 3CLTEXTCLASS org/eclipse/team/core/mapping/provider/SynchronizationScopeManager(0x10EBBFE0) 3CLTEXTCLASS org/eclipse/team/core/subscribers/SubscriberScopeManager(0x10EBC710) 3CLTEXTCLASS org/eclipse/team/core/mapping/ISynchronizationContext(0x10EBCBF0) 3CLTEXTCLASS org/eclipse/team/core/mapping/provider/SynchronizationContext(0x10EBCD40) 3CLTEXTCLASS org/eclipse/team/core/mapping/IMergeContext(0x10EBCFA8) 3CLTEXTCLASS org/eclipse/team/core/mapping/provider/MergeContext(0x10EBD168) 3CLTEXTCLASS org/eclipse/team/core/subscribers/SubscriberMergeContext(0x10EBD9E8) 3CLTEXTCLASS org/eclipse/team/core/subscribers/ISubscriberChangeEvent(0xDA351100) 3CLTEXTCLASS org/eclipse/team/internal/core/mapping/SyncInfoToDiffConverter(0xDA351208) 3CLTEXTCLASS org/eclipse/team/core/variants/IResourceVariantComparator(0xDA351710) 3CLTEXTCLASS org/eclipse/team/core/variants/ResourceVariantByteStore(0xDA351818) 3CLTEXTCLASS org/eclipse/team/core/variants/IResourceVariantTree(0xDA3519B8) 3CLTEXTCLASS org/eclipse/team/core/variants/AbstractResourceVariantTree(0xDA351B00) 3CLTEXTCLASS org/eclipse/team/core/variants/ResourceVariantTree(0xDA351F88) 3CLTEXTCLASS org/eclipse/team/internal/core/subscribers/DescendantResourceVariantByteStore(0xDA3521F8) 3CLTEXTCLASS org/eclipse/team/core/diff/IDiff(0xDA352480) 3CLTEXTCLASS org/eclipse/team/core/diff/ITwoWayDiff(0xDA352560) 3CLTEXTCLASS org/eclipse/team/core/history/IFileRevision(0xDA352650) 3CLTEXTCLASS org/eclipse/team/internal/core/mapping/SyncInfoToDiffConverter$PrecalculatedSyncInfo(0xDA3527E0) 3CLTEXTCLASS org/eclipse/team/core/history/provider/FileRevision(0xDA352938) 3CLTEXTCLASS org/eclipse/team/internal/core/mapping/ResourceVariantFileRevision(0xDA352B50) 3CLTEXTCLASS org/eclipse/team/core/variants/IResourceVariant(0xDA352DE0) 3CLTEXTCLASS org/eclipse/team/core/variants/CachedResourceVariant(0xDA352F38) 3CLTEXTCLASS org/eclipse/team/core/variants/PersistantResourceVariantByteStore(0xDA3532B0) 3CLTEXTCLASS org/eclipse/team/internal/core/subscribers/ChangeSet(0xDA353600) 3CLTEXTCLASS org/eclipse/team/internal/core/subscribers/DiffChangeSet(0xDA353828) 3CLTEXTCLASS org/eclipse/team/internal/core/subscribers/ActiveChangeSet(0xDA353B88) 3CLTEXTCLASS org/eclipse/team/internal/core/subscribers/SubscriberResourceCollector(0xDA3540A8) 3CLTEXTCLASS org/eclipse/team/internal/core/subscribers/SubscriberChangeSetManager$ResourceCollector(0xDA354450) 3CLTEXTCLASS org/eclipse/team/internal/core/subscribers/SubscriberChangeSetManager$EventHandler(0xDA354648) 3CLTEXTCLASS org/eclipse/team/internal/core/streams/CRLFtoLFInputStream(0xDA354AA8) 3CLTEXTCLASS org/eclipse/team/internal/core/streams/ProgressMonitorInputStream(0xDA354CA8) 3CLTEXTCLASS org/eclipse/team/internal/core/streams/SizeConstrainedInputStream(0xDA354F08) 3CLTEXTCLASS org/eclipse/team/internal/core/streams/LFtoCRLFInputStream(0xDA355118) 3CLTEXTCLASS org/eclipse/team/internal/core/streams/TimeoutInputStream(0xDA355300) 3CLTEXTCLASS org/eclipse/team/internal/core/streams/PollingInputStream(0xDA355790) 3CLTEXTCLASS org/eclipse/team/internal/core/streams/TimeoutOutputStream(0xDA355AC0) 3CLTEXTCLASS org/eclipse/team/internal/core/streams/PollingOutputStream(0xDA355E68) 3CLTEXTCLASS org/eclipse/team/internal/core/Policy(0xDA356138) 3CLTEXTCLASS org/eclipse/team/internal/core/streams/TimeoutInputStream$1(0xDA356378) 3CLTEXTCLASS org/eclipse/team/internal/core/streams/TimeoutOutputStream$1(0xDA3564A0) 3CLTEXTCLASS org/eclipse/team/internal/core/InfiniteSubProgressMonitor(0xDA3565F0) 3CLTEXTCLASS org/eclipse/team/core/mapping/ISynchronizationScopeManager(0xDA3567C8) 3CLTEXTCLASS org/eclipse/team/internal/core/subscribers/BatchingLock$IFlushOperation(0xDA3568B8) 3CLTEXTCLASS org/eclipse/team/internal/core/subscribers/BatchingLock(0xDA356998) 3CLTEXTCLASS org/eclipse/team/internal/core/subscribers/BatchingLock$ThreadInfo(0xDA356D30) 3CLTEXTCLASS org/eclipse/team/internal/core/subscribers/BatchingLock$1(0xDA3571A0) 3CLTEXTCLASS org/eclipse/team/core/history/IFileHistoryProvider(0xDA3572A8) 3CLTEXTCLASS [Lorg/eclipse/team/internal/core/subscribers/ChangeSet;(0xDA3573A0) 3CLTEXTCLASS org/eclipse/team/core/subscribers/SubscriberChangeEvent(0xDA357460) 3CLTEXTCLASS [Lorg/eclipse/team/core/subscribers/SubscriberChangeEvent;(0xDA3575F0) 3CLTEXTCLASS [Lorg/eclipse/team/core/subscribers/ISubscriberChangeListener;(0xDA3576A8) 3CLTEXTCLASS org/eclipse/team/core/subscribers/Subscriber$1(0xDA357768) 3CLTEXTCLASS org/eclipse/team/core/diff/IDiffTree(0xDA3578B0) 3CLTEXTCLASS org/eclipse/team/core/diff/provider/DiffTree(0xDA357A88) 3CLTEXTCLASS org/eclipse/team/core/mapping/IResourceDiffTree(0xDA3581D8) 3CLTEXTCLASS org/eclipse/team/core/mapping/provider/ResourceDiffTree(0xDA358390) 3CLTEXTCLASS [Lorg/eclipse/team/core/mapping/provider/ResourceDiffTree;(0xDA3587D8) 3CLTEXTCLASS org/eclipse/team/core/RepositoryProviderType(0xDA3588A8) 3CLTEXTCLASS org/eclipse/team/core/DefaultRepositoryProviderType(0xDA358CA0) 3CLTEXTCLASS org/eclipse/team/core/ProjectSetCapability(0xDA358DC8) 3CLTEXTCLASS org/eclipse/team/internal/core/PessimisticResourceRuleFactory(0xDB114970) 3CLTEXTCLASS org/eclipse/team/internal/core/IRepositoryProviderListener(0xDB114B30) 3CLTEXTCLASS org/eclipse/team/internal/core/RepositoryProviderManager(0xDB114C18) 3CLTEXTCLASS org/eclipse/team/core/subscribers/ISubscriberChangeListener(0xDB114DE0) 3CLTEXTCLASS org/eclipse/team/internal/core/mapping/IStreamMergerDelegate(0xDB114E98) 3CLTEXTCLASS org/eclipse/team/core/mapping/IStorageMerger(0xDB114F48) 3CLTEXTCLASS org/eclipse/team/internal/core/TeamResourceChangeListener$1(0xDB115030) 3CLTEXTCLASS org/eclipse/team/core/subscribers/Subscriber(0xDB1151C8) 3CLTEXTCLASS org/eclipse/team/core/variants/ResourceVariantTreeSubscriber(0xDB1156D0) 3CLTEXTCLASS org/eclipse/team/internal/core/subscribers/ChangeSetManager(0xDB115BA0) 3CLTEXTCLASS org/eclipse/team/core/diff/IDiffChangeListener(0xDB115F48) 3CLTEXTCLASS org/eclipse/team/core/mapping/IChangeGroupingRequestor(0xDB116008) 3CLTEXTCLASS org/eclipse/team/internal/core/subscribers/ActiveChangeSetManager(0xDB116170) 3CLTEXTCLASS org/eclipse/team/internal/core/subscribers/SubscriberChangeSetManager(0xDB116980) 3CLTEXTCLASS org/eclipse/team/core/history/ITag(0xDB116DC0) 3CLTEXTCLASS org/eclipse/team/internal/core/BackgroundEventHandler(0xDB116EE0) 3CLTEXTCLASS org/eclipse/team/internal/core/BackgroundEventHandler$1(0xDB117560) 3CLTEXTCLASS org/eclipse/team/internal/core/BackgroundEventHandler$Event(0xDB1177C0) 3CLTEXTCLASS org/eclipse/team/internal/core/BackgroundEventHandler$ResourceEvent(0xDB117968) 3CLTEXTCLASS org/eclipse/team/internal/core/ExceptionCollector(0xDB117B60) 3CLTEXTCLASS org/eclipse/team/internal/core/BackgroundEventHandler$2(0xDB117DF8) 3CLTEXTCLASS org/eclipse/team/core/synchronize/SyncInfo(0xDB117F50) 3CLTEXTCLASS org/eclipse/team/core/subscribers/SubscriberResourceMappingContext(0xDB118408) 3CLTEXTCLASS org/eclipse/team/internal/core/FileContentManager$UserExtensionMappings(0xDC1BF540) 3CLTEXTCLASS org/eclipse/team/internal/core/PluginStringMappings(0xDC1BF7B0) 3CLTEXTCLASS org/eclipse/team/internal/core/TeamResourceChangeListener(0xDC1BFA08) 3CLTEXTCLASS org/eclipse/team/core/RepositoryProvider(0xDC1BFE78) 3CLTEXTCLASS org/eclipse/team/core/RepositoryProvider$2(0xDC1C0750) 3CLTEXTCLASS org/eclipse/team/internal/core/TeamHookDispatcher$1(0xDC1C08D8) 3CLTEXTCLASS org/eclipse/team/internal/core/FileModificationValidatorManager(0xDC1C09F8) 3CLTEXTCLASS org/eclipse/team/internal/core/DefaultFileModificationValidator(0xDC1C0C90) 3CLTEXTCLASS org/eclipse/team/core/ITeamStatus(0xDC1C0F90) 3CLTEXTCLASS org/eclipse/team/core/TeamStatus(0xDC1C10A8) 3CLTEXTCLASS org/eclipse/team/core/RepositoryProvider$1(0xDC1C1220) 3CLTEXTCLASS org/eclipse/team/core/diff/IDiffVisitor(0xDC1C1420) 3CLTEXTCLASS org/eclipse/team/core/TeamException(0xDC1BC4D0) 3CLTEXTCLASS org/eclipse/team/core/IFileContentManager(0xDC1BC708) 3CLTEXTCLASS org/eclipse/team/internal/core/Messages(0xDC1BC898) 3CLTEXTCLASS org/eclipse/team/internal/core/FileContentManager(0xDC1BCB80) 3CLTEXTCLASS org/eclipse/team/internal/core/UserStringMappings(0xDC1BD048) 3CLTEXTCLASS org/eclipse/team/core/Team(0xDC1AAF68) 3CLTEXTCLASS org/eclipse/team/internal/core/TeamPlugin(0xDC19E6B0) 3CLTEXTCLASS org/eclipse/team/internal/core/TeamHookDispatcher(0xDC19E138) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0278FD8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$13(0xDB5CFB20) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$14(0xDB5CFC50) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$15(0xDB5CFD80) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$1(0xDB5CFEB0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$3(0xDB5D0018) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$4(0xDB5D0140) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$5(0xDB5D0268) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$6(0xDB5D03A0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$7(0xDB5D04D8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardFirstPage$10(0xDB5D0628) 3CLTEXTCLASS org/eclipse/pde/internal/ui/util/AbstractOverlayIcon(0xDB5D0820) 3CLTEXTCLASS org/eclipse/pde/internal/ui/util/OverlayIcon(0xDB5D0AD8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/provisional/IBundeImportWizardPage(0xDB5D0C50) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportOperation(0xDB5D0E40) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportOperation$1(0xDB5D2010) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportOperation$2(0xDB5D23A8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportHelper(0xDB5D25F8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportHelper$1(0xDB5D2B78) 3CLTEXTCLASS org/eclipse/pde/internal/ui/ShowErrorInStackTraceConsoleAction(0xDB5D2C88) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/tools/ConvertProjectsAction(0xDB5D2E58) 3CLTEXTCLASS org/eclipse/pde/internal/ui/views/dependencies/OpenDependenciesAction(0xDB5D31A8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/tools/UpdateClasspathAction(0xDB5D33B8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/nls/InternationalizeAction(0xDB5D36C0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/nls/GetNonExternalizedStringsAction(0xDB5D3968) 3CLTEXTCLASS org/eclipse/pde/internal/ui/nls/ExternalizeStringsProcessor(0xDB5D3CB8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/nls/ExternalizeStringsWizard(0xDB5D4010) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/tools/OrganizeManifestsAction(0xDB5D4290) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/tools/IOrganizeManifestsSettings(0xDB5D4538) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/tools/OrganizeManifestsProcessor(0xDB5D46F0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/tools/OrganizeManifestsWizard(0xDB5D4EB0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/editor/OpenManifestAction(0xDB5D5160) 3CLTEXTCLASS org/eclipse/pde/internal/ui/correction/java/QuickFixProcessor(0xDB5D5430) 3CLTEXTCLASS org/eclipse/pde/internal/ui/correction/java/FindClassResolutionsOperation$AbstractClassResolutionCollector(0xDB5D5898) 3CLTEXTCLASS org/eclipse/pde/internal/ui/correction/java/QuickFixProcessor$1(0xDB5D59B0) 3CLTEXTCLASS org/eclipse/pde/ui/launcher/AbstractLaunchShortcut(0xDB5D5B30) 3CLTEXTCLASS org/eclipse/pde/ui/launcher/EclipseLaunchShortcut(0xDB5D5EC8) 3CLTEXTCLASS org/eclipse/pde/ui/launcher/OSGiLaunchShortcut(0xDB5D65B8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/PDEUIMessages(0xDB7C9350) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardFirstPage(0xDB7CB4C8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/util/SharedLabelProvider(0xDB7CC5B8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/PDELabelProvider(0xDB7CCCC0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$AvailableFilter(0xDB7CDCE0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$VersionFilter(0xDB7CDF08) 3CLTEXTCLASS org/eclipse/pde/internal/ui/util/SourcePluginFilter(0xDB7CE0D8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$RepositoryFilter(0xDB7CE298) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$2(0xDB7CE500) 3CLTEXTCLASS org/eclipse/pde/internal/ui/SWTFactory(0xDB7CE738) 3CLTEXTCLASS org/eclipse/pde/internal/ui/SWTFactory$1(0xDB7CF3A8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardFirstPage$2(0xDB7CFB60) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardFirstPage$3(0xDB7CFCA0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardFirstPage$4(0xDB7CFDE0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardFirstPage$5(0xDB7CFF10) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardFirstPage$6(0xDB7D00E8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardFirstPage$7(0xDB7D0220) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardFirstPage$8(0xDB7D0360) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardFirstPage$1(0xDB7D04B0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/parts/SharedPart(0xDB7D0608) 3CLTEXTCLASS org/eclipse/pde/internal/ui/parts/SharedPartWithButtons(0xDB7D0840) 3CLTEXTCLASS org/eclipse/pde/internal/ui/parts/StructuredViewerPart(0xDB7D0BB8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/parts/CheckboxTablePart(0xDB7D0E98) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardExpressPage$TablePart(0xDB7D1128) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage(0xDB74C8D0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/PDEPluginImages(0xDB74D7B0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/parts/WizardCheckboxTablePart(0xDB74ECB0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/parts/CheckboxTablePart$1(0xDB74F148) 3CLTEXTCLASS org/eclipse/pde/internal/ui/parts/CheckboxTablePart$2(0xDB74F288) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/ListUtil(0xDB74F3C8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/ListUtil$NameComparator(0xDB74F5B0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/ListUtil$PluginComparator(0xDB74F700) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/ListUtil$FeatureComparator(0xDB74F960) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/ListUtil$1(0xDB74FAC0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/ListUtil$2(0xDB74FBF8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/preferences/PreferenceInitializer(0xDB74FD48) 3CLTEXTCLASS org/eclipse/pde/internal/ui/editor/text/IColorManager(0xDB74FE80) 3CLTEXTCLASS org/eclipse/pde/internal/ui/editor/text/IPDEColorConstants(0xDB74FFA8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/editor/text/ColorManager(0xDB7501E8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/elements/DefaultContentProvider(0xDB750650) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/BaseImportWizardSecondPage(0xDB7AF3A0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardExpressPage(0xDB7AFBD0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/elements/ElementLabelProvider(0xDB7B0438) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/ListUtil$TableLabelProvider(0xDB7B0610) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportLabelProvider(0xDB7B0810) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardExpressPage$PluginContentProvider(0xDB7B0AF8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/BaseImportWizardSecondPage$ContentProvider(0xDB7B0CA0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardExpressPage$2(0xDB7B0DD0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardExpressPage$3(0xDB7B0F18) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardExpressPage$1(0xDB7B1060) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$ContentProvider(0xDB7B1190) 3CLTEXTCLASS org/eclipse/pde/internal/ui/launcher/PDELogFileProvider(0xDBF52BE0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizard(0xDBF52E58) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$8(0xDBF534A0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/util/SWTUtil(0xDBF535C8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$9(0xDBF538A8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$10(0xDBF539D8) 3CLTEXTCLASS org/eclipse/pde/internal/ui/PDEPlugin(0xDBF4F050) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$11(0xDBF4F628) 3CLTEXTCLASS org/eclipse/pde/internal/ui/IPDEUIConstants(0xDBF4EB78) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardDetailedPage$12(0xDBF4EDB0) 3CLTEXTCLASS org/eclipse/pde/internal/ui/wizards/imports/ExternalPluginLibrariesFilter(0xDC1F7870) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE02D4F10) 3CLTEXTCLASS org/eclipse/pde/internal/launching/launcher/LaunchConfigurationListener$1(0x109A1FA0) 3CLTEXTCLASS org/eclipse/pde/internal/launching/PDELaunchingPlugin$1(0xDBF4E360) 3CLTEXTCLASS org/eclipse/pde/internal/launching/PDELaunchingPlugin$DebugPluginUtil(0xDBF4E518) 3CLTEXTCLASS org/eclipse/pde/internal/launching/launcher/LaunchConfigurationListener(0xDBF4E6B0) 3CLTEXTCLASS org/eclipse/pde/internal/launching/PDELaunchingPlugin(0xDBF4DD18) 3CLTEXTCLASS org/eclipse/pde/internal/launching/IPDEConstants(0xDCEEE9D0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE031E7F8) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/ImportLogAction$ImportConfigurationLogAction(0x10CC0830) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/ImportLogAction$2(0x10CC0B70) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$GroupByAction(0x10CC0DF0) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$2(0x10CC1008) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$28(0x10CC1200) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$1(0x10CC1340) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$25(0x10CC1500) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$12(0x10BF4970) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$13(0x10BF4B70) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/AbstractEntry(0x10BF4D20) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogEntry(0x10BF4FF0) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/Group(0x10BF55C8) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogSession(0x10BF5780) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$32(0x10BF5A08) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$33(0x10BF5B70) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$34(0x10BF5CD8) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$35(0x10BF5F90) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$24(0x10BF6330) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$29(0x10BF6598) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogReader(0x10BF6720) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/TailInputStream(0x10BF6BA0) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$22(0x10BF6D80) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/Messages(0x10BF6EB0) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$16(0x10BF7168) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$17(0x10BF7338) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$18(0x10BF7508) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogViewContentProvider(0x10BF76E0) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogViewLabelProvider(0x10BF7910) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/SharedImages(0x10BF7D10) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$14(0x10BF7FA8) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$15(0x10BF8108) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/views/log/AbstractEntry;(0x10BF8258) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$26(0x10BF8310) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$27(0x10BF8460) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/ImportLogAction$1(0x10BF86C8) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$5(0x10BF2940) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$6(0x10BF2BD0) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$7(0x10BF2E38) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$8(0x10BF30A0) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$9(0x10BF3308) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/ImportLogAction(0x10BF3578) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/OpenIDELogFileAction(0x10BF3AC0) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$10(0x10BF3DE8) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/EventDetailsDialogAction(0x10BF40B0) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$11(0x10BF4478) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView(0x10BEF568) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogFilesManager(0xDBF4F7F0) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$3(0xDBF4FA60) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/LogView$4(0xDBF4FCF8) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/Activator(0xDBF52448) 3CLTEXTCLASS org/eclipse/ui/internal/views/log/ILogFileProvider(0xDBF50BA0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0EB5AE8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/universal/util/ImageUtil(0xDBA57998) 3CLTEXTCLASS org/eclipse/ui/internal/intro/universal/CustomizeAction(0xDBC85030) 3CLTEXTCLASS org/eclipse/ui/internal/intro/universal/IntroData(0xDBC85278) 3CLTEXTCLASS org/eclipse/ui/internal/intro/universal/PageData(0xDBC857F0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/universal/GroupData(0xDBC85CC8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/universal/BaseData(0xDBC86248) 3CLTEXTCLASS org/eclipse/ui/internal/intro/universal/ExtensionData(0xDBC863C8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/universal/SeparatorData(0xDBC86760) 3CLTEXTCLASS org/eclipse/ui/internal/intro/universal/Messages(0xDBC868B8) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/intro/universal/IntroData;(0xDBC86B58) 3CLTEXTCLASS org/eclipse/ui/internal/intro/universal/UniversalIntroConfigurer(0xDBC83F78) 3CLTEXTCLASS org/eclipse/ui/internal/intro/universal/UniversalIntroPlugin(0xDBC84B80) 3CLTEXTCLASS org/eclipse/ui/internal/intro/universal/IUniversalIntroConstants(0xDBC643E0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/universal/util/Log(0xDBC64790) 3CLTEXTCLASS org/eclipse/ui/internal/intro/universal/contentdetect/ContentDetectHelper(0xDD935FA0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/universal/contentdetect/ContentDetector(0xDD935AA0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0EC4BA8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/swt/RootPageForm$PageComposite(0xDBA44DB8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/swt/RootPageForm$RootPageLayout(0xDBA45520) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/swt/PageStyleManager(0xDBA45760) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/intro/impl/model/IntroPageTitle;(0xDBA45F78) 3CLTEXTCLASS org/eclipse/ui/intro/config/IIntroURL(0xDBA46018) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/url/IntroURL(0xDBA46110) 3CLTEXTCLASS org/eclipse/ui/intro/config/IIntroAction(0xDBA46BF0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/url/IntroURL$2(0xDBA46D58) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/swt/PageForm(0xDBA46F40) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/swt/PageForm$1(0xDBA472E0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/swt/PageFormWithNavigation(0xDBA47500) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/intro/impl/model/IntroLink;(0xDBA47860) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/intro/impl/model/IntroText;(0xDBA47918) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/History$HistoryObject(0xDBA479E8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/parts/StandbyPart(0xDBA47C00) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/parts/StandbyPart$StandbyLayout(0xDBA482F0) 3CLTEXTCLASS org/eclipse/ui/intro/config/IStandbyContentPart(0xDBA484F8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/url/IntroURL$1(0xDBA48620) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroLaunchBarElement(0xDBA487B0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/presentations/IntroLaunchBar(0xDBA48BB0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/presentations/IntroLaunchBar$BarLayout(0xDBA49680) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/presentations/IntroLaunchBar$3(0xDBA49900) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/presentations/IntroLaunchBar$4(0xDBA49B68) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/presentations/IntroLaunchBar$5(0xDBA49DD8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroLaunchBarShortcut(0xDBA4A008) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/intro/impl/model/IntroLaunchBarShortcut;(0xDBA4A278) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/presentations/IntroLaunchBar$1(0xDBA4A330) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/presentations/IntroLaunchBar$2(0xDBA4A468) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/swt/PageContentForm(0xDBA4A598) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/swt/PageWidgetFactory(0xDBA4A8E8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/swt/PageWidgetFactory$1(0xDBA4B0B8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/loader/ContentProviderManager(0xDBA4B2D0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroPartPresentation(0xDBCA4CB0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/AbstractIntroPartImplementation(0xDBCA5498) 3CLTEXTCLASS org/eclipse/ui/intro/config/IIntroContentProviderSite(0xDBCA59F0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/presentations/FormIntroPartImplementation(0xDBCA5B20) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/presentations/BrowserIntroPartImplementation(0xDBCA6480) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/presentations/TextIntroPartImplementation(0xDBCA7038) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/util/ModelUtil(0xDBCA7278) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/loader/IntroContentParser(0xDBCA79B8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/loader/IntroContentParser$1(0xDBCA7DE0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroInjectedIFrame(0xDBCA7F70) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/util/StringUtil(0xDBCA80F8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/util/IntroEvaluationContext(0xDBCA83F8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroModelRoot$ExtensionContent(0xDBCA85B0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroExtensionContent(0xDBCA8720) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/ExtensionMap(0xDBCA8CA8) 3CLTEXTCLASS org/eclipse/ui/intro/config/IntroElement(0xDBCA8EB0) 3CLTEXTCLASS [Lorg/eclipse/ui/intro/config/IntroElement;(0xDBCA9120) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/intro/impl/model/AbstractIntroElement;(0xDBCA91D8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/loader/SharedConfigExtensionsManager(0xDBCA9298) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroStandbyContentPart(0xDBCA9558) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroURLAction(0xDBCA9760) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/util/ReopenUtil(0xDBCA9918) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/FontSelection(0xDBCA9BB0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/url/IntroURLParser(0xDBCA9F30) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/AbstractIntroPartImplementation$1(0xDBCAA358) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/AbstractIntroPartImplementation$2(0xDBCAA608) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/AbstractIntroPartImplementation$3(0xDBCAA8B8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/AbstractIntroPartImplementation$4(0xDBCAAB68) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/presentations/BrowserIntroPartImplementation$1(0xDBCAAE88) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/History(0xDBCAB170) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/Messages(0xDBCAB518) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/util/ImageUtil(0xDBCAB708) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/presentations/BrowserIntroPartLocationListener(0xDBCABA98) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/swt/SharedStyleManager(0xDBCABE00) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/swt/SharedStyleManager$StyleContext(0xDBCAC238) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/swt/RootPageForm(0xDBCAC338) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/swt/RootPageForm$1(0xDBCAC870) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroContentProvider(0xDBC654C8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroAnchor(0xDBC65730) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroText(0xDBC658D8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroPageTitle(0xDBC65B60) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroHead(0xDBC65D38) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroInclude(0xDBC65F80) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroImage(0xDBC661D8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroLink(0xDBC664B8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroHTML(0xDBC668A0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroGroup(0xDBC66CA0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/AbstractIntroPage(0xDBC671A0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroPage(0xDBC67EA8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroHomePage(0xDBC681E8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/util/BundleUtil(0xDBC684A0) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroTheme(0xDBC68948) 3CLTEXTCLASS org/eclipse/ui/intro/config/IntroConfigurer(0xDBC68C28) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/AbstractBaseIntroElement(0xDBC62418) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/AbstractIntroContainer(0xDBC62730) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroModelRoot(0xDBC63060) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/IntroSeparator(0xDBC63E80) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/AbstractTextElement(0xDBC64088) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/loader/BaseExtensionPointManager(0xDBC34A80) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/loader/ExtensionPointManager(0xDBC34F00) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/loader/ModelLoaderUtil(0xDBC35168) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/AbstractIntroElement(0xDBC354A8) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/model/AbstractIntroIdElement(0xDBC35898) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/IIntroConstants(0xDBC34210) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/util/Log(0xDBC34380) 3CLTEXTCLASS org/eclipse/ui/intro/config/CustomizableIntroPart$1(0xDBC34600) 3CLTEXTCLASS org/eclipse/ui/internal/intro/impl/IntroPlugin(0xDBC33CB8) 3CLTEXTCLASS org/eclipse/ui/intro/config/CustomizableIntroPart(0xDBC31D68) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0FBDBC0) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/ObjectSegment(0xD90BE760) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/ImageSegment(0xD90BEB18) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/BreakSegment(0xD90BEE48) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/ControlSegment(0xD90BF098) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/IHyperlinkSegment(0xD90BF370) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/ImageHyperlinkSegment(0xD90BF4F0) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/TextSegment(0xD90BF840) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/TextHyperlinkSegment(0xD90C0020) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/AggregateHyperlinkSegment(0xD90C0308) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormText$1(0xD90C06E0) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormText$2(0xD90C0830) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormText$3(0xD90C0968) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormText$4(0xD90C0AA0) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormText$5(0xD90C0C00) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormText$6(0xD90C0D80) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormText$7(0xD90C0EF0) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormText$8(0xD90C1098) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormText$12(0xD90C11E0) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormText$13(0xD90C13A0) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/FormFonts(0xD90C16E8) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/FormFonts$BoldFontDescriptor(0xD90C1948) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/ResourceManagerManger(0xD90C1B10) 3CLTEXTCLASS org/eclipse/ui/internal/forms/Messages(0xD90C1CD0) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormText$10(0xD90C1E70) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormText$11(0xD90C1FC0) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/FormTextModel$ParseErrorHandler(0xD90C2140) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/forms/widgets/Paragraph;(0xD90C2280) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormText$9(0xD90C2338) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/forms/widgets/ParagraphSegment;(0xD90C24C8) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/Locator(0xD90C25A0) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/TextSegment$TextFragment(0xD90C27E8) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/forms/widgets/TextSegment$TextFragment;(0xD90C28E8) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/TextSegment$AreaRectangle(0xD90C29A8) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/TitleRegion$MenuHyperlink(0xDBA35AA8) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/TitleRegion$3(0xDBA362E8) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/TitleRegion$HoverListener(0xDBA36440) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/TitleRegion$2(0xDBA365F8) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/TitleRegion$1(0xDBA36730) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/WrappedPageBook(0xDBA36EA8) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/SharedScrolledComposite$1(0xDBA37678) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/FormUtil(0xDBA377A8) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/WrappedPageBook$PageBookLayout(0xDBA37E58) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ScrolledPageBook$1(0xDBA38020) 3CLTEXTCLASS org/eclipse/ui/forms/events/HyperlinkAdapter(0xDBA38150) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormToolkit$2(0xDBA38288) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/AbstractHyperlink$1(0xDBA383B8) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/AbstractHyperlink$2(0xDBA384F0) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/AbstractHyperlink$3(0xDBA38628) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/AbstractHyperlink$4(0xDBA38750) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/FormsResources(0xDBA388B8) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/Hyperlink$1(0xDBA38A78) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/Hyperlink$2(0xDBA38C08) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ImageHyperlink$1(0xDBA38E80) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/TableWrapLayout(0xDBA39008) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ColumnLayout(0xDBA39730) 3CLTEXTCLASS org/eclipse/ui/forms/events/HyperlinkEvent(0xDBA39A28) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/LayoutCache(0xDBA39BB0) 3CLTEXTCLASS [Lorg/eclipse/ui/forms/widgets/SizeCache;(0xDBA39D70) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/TableWrapData(0xDBA39E28) 3CLTEXTCLASS [Lorg/eclipse/ui/forms/widgets/TableWrapData;(0xDBA39FF8) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/TableWrapLayout$RowSpan(0xDBA3A0B8) 3CLTEXTCLASS org/eclipse/ui/forms/events/IExpansionListener(0xDBA3A230) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ExpandableComposite$ExpandableLayout(0xDBA3A318) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/TreeNode(0xDBA3AD78) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ToggleHyperlink$1(0xDBA3B630) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ToggleHyperlink$2(0xDBA3B780) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ToggleHyperlink$3(0xDBA3B8C0) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ToggleHyperlink$4(0xDBA3BA60) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ExpandableComposite$2(0xDBA3BD78) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ExpandableComposite$3(0xDBA3BEA0) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ExpandableComposite$4(0xDBA3C028) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ExpandableComposite$5(0xDBA3C180) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ExpandableComposite$7(0xDBA3C2E8) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ExpandableComposite$8(0xDBA3C4B0) 3CLTEXTCLASS org/eclipse/ui/forms/events/ExpansionAdapter(0xDBA3C648) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormText$FormTextLayout(0xDBA3C778) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/IFocusSelectable(0xDBA3CAB8) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/Paragraph(0xDBA3CBD0) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/ParagraphSegment(0xDBA3D070) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/FormHeading(0xDBA2DAB0) 3CLTEXTCLASS org/eclipse/ui/forms/IMessageManager(0xDBA2ED40) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/SizeCache(0xDBA2EF28) 3CLTEXTCLASS org/eclipse/ui/internal/forms/IMessageToolTipManager(0xDBA2F4B0) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/FormHeading$FormHeadingLayout(0xDBA2F598) 3CLTEXTCLASS org/eclipse/ui/forms/IMessage(0xDBA2F8A8) 3CLTEXTCLASS [Lorg/eclipse/ui/forms/IMessage;(0xDBA2F9A8) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/FormHeading$DefaultMessageToolTipManager(0xDBA2FA68) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/FormHeading$1(0xDBA2FC28) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/FormHeading$2(0xDBA2FD60) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/FormHeading$3(0xDBA2FEB0) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/FormHeading$4(0xDBA2FFF0) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/FormHeading$5(0xDBA30130) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/TitleRegion(0xDBA30938) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/TitleRegion$TitleRegionLayout(0xDBA31858) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/BusyIndicator(0xDBA321A0) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ToggleHyperlink(0xDBA33310) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/Twistie(0xDBA34390) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/BulletParagraph(0xDBA34CB0) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormText(0xDBA15A40) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ExpandableComposite(0xDBA17970) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/Section(0xDBA19090) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/SharedScrolledComposite(0xDBA1A400) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ScrolledPageBook(0xDBA1B608) 3CLTEXTCLASS org/eclipse/ui/forms/FormColors(0xDBA1C0D8) 3CLTEXTCLASS org/eclipse/ui/forms/HyperlinkGroup$GroupListener(0xDBA1C7A8) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormToolkit$VisibilityHandler(0xDBA1CA60) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormToolkit$KeyboardHandler(0xDBA1CBB0) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormToolkit$BoldFontHolder(0xDBA1CD10) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ILayoutExtension(0xDBA1CEB0) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/Form$FormLayout(0xDBA1CF98) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/Hyperlink(0xDBA00DD8) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/ImageHyperlink(0xDBA01FA8) 3CLTEXTCLASS org/eclipse/ui/forms/HyperlinkSettings(0xDBA02B00) 3CLTEXTCLASS org/eclipse/ui/forms/HyperlinkGroup(0xDBA02E10) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/Form(0xDBA038A0) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/AbstractHyperlink(0xDBCFE2D0) 3CLTEXTCLASS org/eclipse/ui/internal/forms/widgets/FormTextModel(0xDBCFEE98) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/LayoutComposite(0xDBCF6300) 3CLTEXTCLASS org/eclipse/ui/forms/widgets/FormToolkit(0xDBCF3B48) 3CLTEXTCLASS org/eclipse/ui/internal/forms/FormsPlugin(0xDBCEBA50) 3CLTEXTCLASS org/eclipse/ui/forms/events/IHyperlinkListener(0xDBC360E0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0BA5798) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/ui/sdk/scheduler/PreferenceInitializer(0x106AC6B8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/ui/sdk/scheduler/AutomaticUpdateMessages(0x106AC9B0) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/ui/sdk/scheduler/AutomaticUpdatePlugin(0x10428F10) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/ui/sdk/scheduler/AutomaticUpdateScheduler(0x1074C560) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0BF9358) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/operations/Activator(0x10429970) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/operations/Messages(0x10429AC8) 3CLTEXTCLASS org/eclipse/equinox/p2/operations/ProvisioningSession(0x106AC180) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0C541A8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/updatechecker/UpdateChecker(0x109185F8) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/p2/updatechecker/IUpdateChecker(0x100D34A8) 3CLTEXTCLASS org/eclipse/equinox/internal/p2/updatechecker/UpdateCheckerComponent(0x100D3600) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/p2/updatechecker/IUpdateListener(0x1041F8B0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0C84608) 3CLTEXTCLASS org/eclipse/update/internal/scheduler/UpdateSchedulerMessages(0x1088A468) 3CLTEXTCLASS org/eclipse/update/internal/scheduler/preferences/PreferenceInitializer(0x1088A680) 3CLTEXTCLASS org/eclipse/update/internal/scheduler/ScheduledPluginUninstall(0x1088A7D8) 3CLTEXTCLASS org/eclipse/update/internal/scheduler/UpdateSchedulerPlugin(0x10454A48) 3CLTEXTCLASS org/eclipse/update/internal/scheduler/SchedulerStartup(0x104543C8) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0380CC0) 3CLTEXTCLASS org/eclipse/update/internal/core/Messages(0x108ED230) 3CLTEXTCLASS org/eclipse/update/core/model/ModelObject(0x108C09D0) 3CLTEXTCLASS org/eclipse/update/internal/model/ConfigurationActivityModel(0x108C0F90) 3CLTEXTCLASS org/eclipse/update/internal/core/ConfigurationActivity(0x108C1250) 3CLTEXTCLASS [Lorg/eclipse/update/internal/core/ConfigurationActivity;(0x108C1448) 3CLTEXTCLASS org/eclipse/update/internal/core/UpdateManagerLogWriter(0x108B98B0) 3CLTEXTCLASS org/eclipse/update/configuration/IActivity(0x108B9E80) 3CLTEXTCLASS org/eclipse/update/internal/core/UpdateCore(0x108B8EE0) 3CLTEXTCLASS org/eclipse/update/operations/IOperation(0x1088D338) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0FC89F0) 3CLTEXTCLASS org/eclipse/pde/internal/core/feature/FeatureData(0x1116B930) 3CLTEXTCLASS org/eclipse/pde/internal/core/feature/FeaturePlugin(0x1116C050) 3CLTEXTCLASS org/eclipse/pde/internal/core/feature/FeatureChild(0x1116C620) 3CLTEXTCLASS org/eclipse/pde/internal/core/FeatureModelDelta(0x1116CD90) 3CLTEXTCLASS org/eclipse/pde/internal/core/FeatureTable$Idver(0x1116CFD8) 3CLTEXTCLASS org/eclipse/pde/internal/core/ExtensionDeltaEvent(0x1116D1D8) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/SourceEntryErrorReporter(0xDAF54FA0) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/SourceEntryErrorReporter$ProjectFolder(0xDAF557C0) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/SourceEntryErrorReporter$SourceFolder(0xDAF559C0) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/SourceEntryErrorReporter$OutputFolder(0xDAF55B10) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/SourceEntryErrorReporter$1$MissingOutputEntry(0xDAF55CC0) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/BuildErrorReporter$BuildProblem(0xDAF55E20) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/build/BuildModel(0xDAF56018) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/build/Build(0xDAF562A8) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/build/BuildModelFactory(0xDAF56678) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/build/BuildEntry(0xDAF56800) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/PDEMarkerFactory(0xDAF56DF0) 3CLTEXTCLASS org/eclipse/pde/internal/core/FeatureTable(0xDAF57038) 3CLTEXTCLASS org/eclipse/pde/internal/core/ifeature/IFeatureModel(0xDAF573B8) 3CLTEXTCLASS [Lorg/eclipse/pde/internal/core/ifeature/IFeatureModel;(0xDAF574E0) 3CLTEXTCLASS org/eclipse/pde/internal/core/FeatureModelManager$1(0xDAF57598) 3CLTEXTCLASS org/eclipse/pde/internal/core/ExternalFeatureModelManager(0xDAF576D0) 3CLTEXTCLASS org/eclipse/pde/internal/core/feature/AbstractFeatureModel(0xDAF57D08) 3CLTEXTCLASS org/eclipse/pde/internal/core/feature/ExternalFeatureModel(0xDAF58170) 3CLTEXTCLASS org/eclipse/pde/internal/core/ifeature/IFeatureModelFactory(0xDAF58438) 3CLTEXTCLASS org/eclipse/pde/internal/core/XMLDefaultHandler(0xDAF585C0) 3CLTEXTCLASS org/eclipse/pde/internal/core/XMLCopyrightHandler(0xDAF58980) 3CLTEXTCLASS org/eclipse/pde/internal/core/feature/FeatureObject(0xDAF58BF8) 3CLTEXTCLASS org/eclipse/pde/internal/core/feature/IdentifiableObject(0xDAF59170) 3CLTEXTCLASS org/eclipse/pde/internal/core/feature/VersionableObject(0xDAF59428) 3CLTEXTCLASS org/eclipse/pde/internal/core/feature/Feature(0xDAF597A0) 3CLTEXTCLASS org/eclipse/pde/internal/core/ifeature/IFeatureInfo(0xDAF5A698) 3CLTEXTCLASS [Lorg/eclipse/pde/internal/core/ifeature/IFeatureInfo;(0xDAF5A7E8) 3CLTEXTCLASS org/eclipse/pde/internal/core/feature/FeatureFactory(0xDAF5A8C0) 3CLTEXTCLASS org/eclipse/pde/internal/core/ifeature/IFeatureEntry(0xDAF5ABC8) 3CLTEXTCLASS org/eclipse/pde/internal/core/ifeature/IFeaturePlugin(0xDAF5ADD0) 3CLTEXTCLASS org/eclipse/pde/internal/core/ifeature/IFeatureData(0xDAF5AEE8) 3CLTEXTCLASS org/eclipse/pde/internal/core/ifeature/IFeatureChild(0xDAF5AFC8) 3CLTEXTCLASS org/eclipse/pde/internal/core/ifeature/IFeatureImport(0xDAF5B1C0) 3CLTEXTCLASS org/eclipse/pde/internal/core/ifeature/IFeatureURL(0xDAF5B348) 3CLTEXTCLASS org/eclipse/pde/internal/core/ifeature/IFeatureInstallHandler(0xDAF5B458) 3CLTEXTCLASS org/eclipse/pde/internal/core/ifeature/IFeatureURLElement(0xDAF5B570) 3CLTEXTCLASS org/eclipse/pde/internal/core/feature/FeatureInfo(0xDAF5B740) 3CLTEXTCLASS org/eclipse/pde/internal/core/feature/FeatureURL(0xDAF5BBA0) 3CLTEXTCLASS org/eclipse/pde/internal/core/feature/FeatureURLElement(0xDAF5BFB8) 3CLTEXTCLASS org/eclipse/pde/internal/core/feature/FeatureImport(0xDAF5C428) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/XMLErrorReporter(0x10A77088) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/ManifestErrorReporter(0x10A77A98) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/ExtensionsErrorReporter(0x10A78090) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/PluginBaseErrorReporter(0x10A78E38) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/PluginErrorReporter(0x10A793D8) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/FragmentErrorReporter(0x10A79708) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/ManifestConsistencyChecker$SelfVisitor(0x10A79978) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/ManifestConsistencyChecker$ClassChangeVisitor(0x10A79C60) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/ExtensionPointSchemaBuilder(0x10A79E78) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/SchemaErrorReporter(0x10A7A598) 3CLTEXTCLASS org/eclipse/pde/internal/core/ischema/ISchemaObject(0x10A7ACA8) 3CLTEXTCLASS org/eclipse/pde/internal/core/ischema/ISchema(0x10A7ADC0) 3CLTEXTCLASS org/eclipse/pde/internal/core/natures/PDE(0x10A7B018) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/ErrorReporter(0x10A7B1D8) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/JarManifestErrorReporter(0x10A7B5B8) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/BundleErrorReporter(0x10A7BBE0) 3CLTEXTCLASS org/eclipse/pde/internal/core/content/BundleManifestDescriber(0x10A7CDF0) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/IHeader(0x10A7D088) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/JarManifestHeader(0x10A7D1A8) 3CLTEXTCLASS org/eclipse/pde/internal/core/util/IdUtil(0x10A7D450) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/CompilerFlags(0x10A7D768) 3CLTEXTCLASS org/eclipse/pde/internal/core/util/VersionUtil(0x10A7DAE8) 3CLTEXTCLASS org/eclipse/pde/internal/core/util/ManifestUtils(0x10A7DDC8) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/BuildErrorReporter(0x10A7E098) 3CLTEXTCLASS org/eclipse/pde/internal/core/bundle/BundlePluginBase(0xDB10A300) 3CLTEXTCLASS org/eclipse/pde/internal/core/converter/PluginConverter(0xDB10B098) 3CLTEXTCLASS org/eclipse/pde/core/build/IBuild(0xDB10BE98) 3CLTEXTCLASS org/eclipse/pde/internal/core/BinaryRepositoryProvider(0xDB10BFE0) 3CLTEXTCLASS org/eclipse/pde/internal/core/BinaryRepositoryProvider$BinaryFileModificationValidator(0xDB10C310) 3CLTEXTCLASS org/eclipse/pde/internal/core/BinaryRepositoryProvider$BinaryMoveDeleteHook(0xDB10C470) 3CLTEXTCLASS org/eclipse/pde/internal/core/natures/BaseProject(0xDB10C670) 3CLTEXTCLASS org/eclipse/pde/internal/core/natures/PluginProject(0xDB10C8D0) 3CLTEXTCLASS org/eclipse/pde/internal/core/ClasspathComputer(0xDB10CA28) 3CLTEXTCLASS org/eclipse/pde/internal/core/ibundle/IBundlePlugin(0xDB10D190) 3CLTEXTCLASS org/eclipse/pde/internal/core/bundle/BundlePlugin(0xDB10D3A0) 3CLTEXTCLASS org/eclipse/pde/internal/core/WorkspaceModelManager$ModelChange(0xDB10D6B8) 3CLTEXTCLASS org/eclipse/pde/internal/core/ModelProviderEvent(0xDB10D820) 3CLTEXTCLASS [Lorg/eclipse/pde/core/IModel;(0xDB10D9E8) 3CLTEXTCLASS org/eclipse/pde/internal/core/PluginModelDelta(0xDB10DAB0) 3CLTEXTCLASS org/eclipse/pde/internal/core/PDEClasspathContainer(0xDB10DCC8) 3CLTEXTCLASS org/eclipse/pde/internal/core/RequiredPluginsClasspathContainer(0xDB10E130) 3CLTEXTCLASS [Lorg/eclipse/pde/core/plugin/ModelEntry;(0xDB10EAC8) 3CLTEXTCLASS org/eclipse/pde/internal/core/build/BuildModel(0xDB10EBF8) 3CLTEXTCLASS org/eclipse/pde/internal/core/build/WorkspaceBuildModel(0xDB10EFA8) 3CLTEXTCLASS org/eclipse/pde/core/build/IBuildModelFactory(0xDB10F3F8) 3CLTEXTCLASS org/eclipse/pde/internal/core/SourceLocation(0xDB10F4D0) 3CLTEXTCLASS org/eclipse/pde/internal/core/build/IBuildObject(0xDB10F670) 3CLTEXTCLASS org/eclipse/pde/internal/core/build/BuildObject(0xDB10F760) 3CLTEXTCLASS org/eclipse/pde/internal/core/build/Build(0xDB10F9A8) 3CLTEXTCLASS org/eclipse/pde/internal/core/build/BuildModelFactory(0xDB10FC68) 3CLTEXTCLASS org/eclipse/pde/core/build/IBuildEntry(0xDB10FD88) 3CLTEXTCLASS org/eclipse/pde/internal/core/build/BuildEntry(0xDB10FF68) 3CLTEXTCLASS org/eclipse/pde/internal/core/ibundle/IBundleFragment(0xDB1103E0) 3CLTEXTCLASS org/eclipse/pde/internal/core/bundle/BundleFragment(0xDB1105E8) 3CLTEXTCLASS org/eclipse/pde/internal/core/PDEManager(0xDB110A30) 3CLTEXTCLASS [Lorg/eclipse/pde/core/build/IBuildEntry;(0xDB110C98) 3CLTEXTCLASS org/eclipse/pde/internal/core/util/PropertiesUtil(0xDB110D50) 3CLTEXTCLASS org/eclipse/pde/internal/core/JavadocLocationManager(0xDB111038) 3CLTEXTCLASS org/eclipse/pde/internal/core/RequiredPluginsInitializer(0xDB1114B8) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/ManifestConsistencyChecker(0xDB111728) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/PDEBuilderHelper(0xDB111F08) 3CLTEXTCLASS org/eclipse/pde/internal/core/bundle/BundleModel(0xDB101FE0) 3CLTEXTCLASS org/eclipse/pde/internal/core/bundle/WorkspaceBundleModel(0xDB102540) 3CLTEXTCLASS org/eclipse/pde/internal/core/ibundle/IBundle(0xDB102A20) 3CLTEXTCLASS org/eclipse/pde/internal/core/ibundle/IBundleModelFactory(0xDB102B30) 3CLTEXTCLASS org/eclipse/pde/internal/core/bundle/BundleObject(0xDB102C30) 3CLTEXTCLASS org/eclipse/pde/internal/core/bundle/Bundle(0xDB102F08) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/IDocumentRange(0xDB1031D0) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/IDocumentKey(0xDB103290) 3CLTEXTCLASS org/eclipse/pde/internal/core/ibundle/IManifestHeader(0xDB103390) 3CLTEXTCLASS org/eclipse/pde/internal/core/util/HeaderMap(0xDB103510) 3CLTEXTCLASS org/eclipse/pde/internal/core/util/HeaderMap$HeaderComparator(0xDB103670) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/BundleModelFactory(0xDB1037B0) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/ManifestHeader(0xDB103B98) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/SingleManifestHeader(0xDB104068) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/BundleActivatorHeader(0xDB104400) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/BundleLocalizationHeader(0xDB104650) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/BundleNameHeader(0xDB1048A0) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/CompositeManifestHeader(0xDB104B18) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/RequiredExecutionEnvironmentHeader(0xDB1051E8) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/BundleSymbolicNameHeader(0xDB1055B0) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/BundleVendorHeader(0xDB105898) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/BundleVersionHeader(0xDB105AE8) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/BundleClasspathHeader(0xDB105D88) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/FragmentHostHeader(0xDB106030) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/BasePackageHeader(0xDB106318) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/ImportPackageHeader(0xDB1066F0) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/RequireBundleHeader(0xDB106A50) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/LazyStartHeader(0xDB106E98) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/BundleActivationPolicyHeader(0xDB107110) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/ExportPackageHeader(0xDB1073F8) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/IReconcilingParticipant(0xDB107688) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/IEditingModel(0xDB107738) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/AbstractEditingModel(0xDB107900) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/BundleModel(0xDB108110) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/PDEManifestElement(0xDB108448) 3CLTEXTCLASS org/eclipse/pde/core/ModelChangedEvent(0xDB108A20) 3CLTEXTCLASS org/eclipse/pde/core/IModelChangedListener(0xDB108C00) 3CLTEXTCLASS [Lorg/eclipse/pde/core/IModelChangedListener;(0xDB108CC8) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/ExecutionEnvironment(0xDB108DF8) 3CLTEXTCLASS [Lorg/eclipse/pde/internal/core/text/bundle/PDEManifestElement;(0xDB108FA0) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/PackageObject(0xDB1090E0) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/ExportPackageObject(0xDB109480) 3CLTEXTCLASS org/eclipse/pde/internal/core/text/bundle/PackageFriend(0xDB109A50) 3CLTEXTCLASS org/eclipse/pde/internal/core/ibundle/IBundlePluginBase(0xDB109BF8) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/Fragment(0xDB51CE10) 3CLTEXTCLASS org/eclipse/pde/internal/core/util/CoreUtility(0xDB51D448) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/AbstractTargetHandle(0xDB51DA10) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/LocalTargetHandle(0xDB51DD80) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/TargetPlatformService$ResourceProxyVisitor(0xDB51E258) 3CLTEXTCLASS [Lorg/eclipse/pde/internal/core/target/provisional/ITargetHandle;(0xDB51E3E0) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/TargetDefinition(0xDB51E538) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/provisional/IResolvedBundle(0xDB51F488) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/AbstractBundleContainer(0xDB51F618) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/ProfileBundleContainer(0xDB51FFB0) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/Messages(0xDB5205C8) 3CLTEXTCLASS [Lorg/eclipse/pde/internal/core/target/provisional/IBundleContainer;(0xDB520818) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/TargetDefinitionPersistenceHelper(0xDB5208D0) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/IUBundleContainer(0xDB521140) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/FeatureBundleContainer(0xDB521D20) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/TargetPlatformService$1(0xDB522310) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/TargetPersistence36Helper(0xDB522458) 3CLTEXTCLASS org/eclipse/pde/internal/core/util/PatternConstructor(0xDB522898) 3CLTEXTCLASS org/eclipse/pde/core/plugin/PluginRegistry(0xDB522AF0) 3CLTEXTCLASS org/eclipse/pde/internal/core/ibundle/IBundlePluginModelProvider(0xDB522E38) 3CLTEXTCLASS org/eclipse/pde/internal/core/ICoreConstants(0xDB522EE8) 3CLTEXTCLASS org/eclipse/pde/internal/core/SourceLocationManager(0xDB523580) 3CLTEXTCLASS org/eclipse/pde/internal/core/BundleManifestSourceLocationManager(0xDB523C60) 3CLTEXTCLASS org/eclipse/pde/internal/core/SourceLocationKey(0xDB524080) 3CLTEXTCLASS [Lorg/eclipse/pde/core/plugin/IPluginLibrary;(0xDB5241F8) 3CLTEXTCLASS org/eclipse/pde/internal/core/ClasspathUtilCore(0xDB5242B0) 3CLTEXTCLASS org/eclipse/pde/internal/core/project/PDEProject(0xDB524850) 3CLTEXTCLASS org/eclipse/pde/internal/core/PreferenceInitializer(0xDB7D8DE8) 3CLTEXTCLASS org/eclipse/pde/core/plugin/TargetPlatform(0xDB7D9140) 3CLTEXTCLASS org/eclipse/pde/internal/core/PluginPathFinder(0xDB7D9500) 3CLTEXTCLASS org/eclipse/pde/internal/core/P2Utils(0xDB7D9A20) 3CLTEXTCLASS org/eclipse/pde/internal/core/PDEAuxiliaryState(0xDB7DA488) 3CLTEXTCLASS org/eclipse/pde/internal/core/util/Headers(0xDB7DAD28) 3CLTEXTCLASS org/eclipse/pde/internal/core/TargetWeaver(0xDB7DB138) 3CLTEXTCLASS org/eclipse/pde/internal/core/PDEAuxiliaryState$PluginInfo(0xDB7DB478) 3CLTEXTCLASS org/eclipse/pde/internal/core/XMLPrintHandler(0xDB7DB570) 3CLTEXTCLASS org/eclipse/pde/internal/core/TargetPlatformHelper(0xDB7DB968) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IPluginLibrary(0xDB7DC4C8) 3CLTEXTCLASS org/eclipse/pde/core/IModelChangedEvent(0xDB7DC680) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IExtensions(0xDB7DC790) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/PluginHandler(0xDB7DC940) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IPluginAttribute(0xDB7DCD90) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IPluginParent(0xDB7DCE78) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IPluginElement(0xDB7DCFB0) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IPluginExtension(0xDB7DD118) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IPluginExtensionPoint(0xDB7DD220) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IMatchRules(0xDB7DD320) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IPluginReference(0xDB7DD448) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IPluginImport(0xDB7DD550) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IPluginBase(0xDB7DD678) 3CLTEXTCLASS org/eclipse/pde/core/ISourceObject(0xDB7DD868) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/IWritableDelimiter(0xDB7DD928) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/PluginObject(0xDB7DDA70) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/AbstractExtensions(0xDB7DE248) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/PluginBase(0xDB7DEA60) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IPlugin(0xDB7DF370) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/Plugin(0xDB7DF5D0) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/PluginLibrary(0xDB7DFB68) 3CLTEXTCLASS org/eclipse/pde/internal/core/PDEStateHelper(0xDB7E0168) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/IdentifiablePluginObject(0xDB7E0360) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/PluginImport(0xDB7E0650) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/WorkspacePluginModelBase(0xDB7A73A0) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/WorkspacePluginModel(0xDB7A7A68) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/WorkspaceFragmentModel(0xDB7A7DD8) 3CLTEXTCLASS org/eclipse/pde/internal/core/IExtensionDeltaEvent(0xDB7A8040) 3CLTEXTCLASS org/eclipse/pde/internal/core/ischema/ISchemaDescriptor(0xDB7A8130) 3CLTEXTCLASS org/eclipse/pde/internal/core/ExternalModelManager(0xDB7A8258) 3CLTEXTCLASS [Lorg/eclipse/pde/core/plugin/IPluginModelBase;(0xDB7A8658) 3CLTEXTCLASS org/eclipse/pde/internal/core/PDEExtensionRegistry(0xDB7A8748) 3CLTEXTCLASS org/eclipse/pde/internal/core/PDERegistryStrategy(0xDB7A8E10) 3CLTEXTCLASS org/eclipse/pde/internal/core/TargetPDERegistryStrategy(0xDB7A9490) 3CLTEXTCLASS org/eclipse/pde/core/IWritable(0xDB7A95D8) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IPluginObject(0xDB7A9688) 3CLTEXTCLASS org/eclipse/pde/internal/core/IPluginModelListener(0xDB7A9800) 3CLTEXTCLASS org/eclipse/pde/internal/core/IExtensionDeltaListener(0xDB7A98B0) 3CLTEXTCLASS org/eclipse/pde/internal/core/PDERegistryStrategy$RegistryListener(0xDB7A9980) 3CLTEXTCLASS org/eclipse/pde/internal/core/PDERegistryStrategy$ModelListener(0xDB7A9AE0) 3CLTEXTCLASS org/eclipse/pde/internal/core/PDERegistryStrategy$ExtensionListener(0xDB7A9CC8) 3CLTEXTCLASS org/eclipse/pde/internal/core/IFeatureModelListener(0xDB7A9E68) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/FeatureRebuilder(0xDB7A9F40) 3CLTEXTCLASS org/eclipse/pde/internal/core/FeatureModelManager(0xDB7AA248) 3CLTEXTCLASS org/eclipse/pde/internal/core/IFeatureModelDelta(0xDB7AA7D8) 3CLTEXTCLASS org/eclipse/pde/internal/core/WorkspaceFeatureModelManager(0xDB7AA938) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/provisional/ITargetPlatformService(0xDB7AAC20) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/TargetPlatformService(0xDB7AAE38) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/provisional/ITargetHandle(0xDB7ABB10) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/provisional/IBundleContainer(0xDB7ABBE0) 3CLTEXTCLASS org/eclipse/pde/core/project/IBundleProjectService(0xDB7ABCE0) 3CLTEXTCLASS org/eclipse/pde/internal/core/project/BundleProjectService(0xDB7ABE30) 3CLTEXTCLASS org/eclipse/pde/core/project/IBundleProjectDescription(0xDB7AC3B8) 3CLTEXTCLASS org/eclipse/pde/core/project/IHostDescription(0xDB7AC838) 3CLTEXTCLASS org/eclipse/pde/core/project/IPackageImportDescription(0xDB7AC8F8) 3CLTEXTCLASS org/eclipse/pde/core/project/IPackageExportDescription(0xDB7AC9C8) 3CLTEXTCLASS org/eclipse/pde/core/project/IRequiredBundleDescription(0xDB7ACAA8) 3CLTEXTCLASS org/eclipse/pde/core/project/IBundleClasspathEntry(0xDB7ACB88) 3CLTEXTCLASS org/eclipse/pde/internal/core/PDECore$1(0xDB7ACC80) 3CLTEXTCLASS org/eclipse/pde/internal/core/ifeature/IFeatureObject(0xDB7ACE60) 3CLTEXTCLASS org/eclipse/pde/core/IIdentifiable(0xDB7ACF98) 3CLTEXTCLASS org/eclipse/pde/internal/core/ifeature/IVersionable(0xDB7AD068) 3CLTEXTCLASS org/eclipse/pde/internal/core/ifeature/IEnvironment(0xDB7AD140) 3CLTEXTCLASS org/eclipse/pde/internal/core/ifeature/IFeature(0xDB7AD290) 3CLTEXTCLASS org/eclipse/pde/core/build/IBuildModel(0xDB7AD690) 3CLTEXTCLASS org/eclipse/pde/internal/core/MinimalState(0xDB7AD7D8) 3CLTEXTCLASS org/eclipse/pde/internal/core/PDEState(0xDB7AE1A8) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/ExternalPluginModelBase(0xDB7AEE30) 3CLTEXTCLASS org/eclipse/pde/internal/core/WorkspaceModelManager(0xDB7A2DF0) 3CLTEXTCLASS org/eclipse/pde/internal/core/WorkspacePluginModelManager(0xDB7A3460) 3CLTEXTCLASS org/eclipse/pde/internal/core/ibundle/IBundleModel(0xDB7A3CE0) 3CLTEXTCLASS org/eclipse/pde/internal/core/IModelChangeProviderExtension(0xDB7A3DE0) 3CLTEXTCLASS org/eclipse/pde/internal/core/AbstractModel(0xDB7A3F18) 3CLTEXTCLASS org/eclipse/pde/internal/core/AbstractNLModel(0xDB7A4460) 3CLTEXTCLASS org/eclipse/pde/core/IEditable(0xDB7A46E0) 3CLTEXTCLASS org/eclipse/pde/internal/core/ibundle/IBundlePluginModelBase(0xDB7A47C0) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IExtensionsModelFactory(0xDB7A4920) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IPluginModelFactory(0xDB7A4A00) 3CLTEXTCLASS org/eclipse/pde/internal/core/bundle/BundlePluginModelBase(0xDB7A4BD8) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IFragmentModel(0xDB7A5400) 3CLTEXTCLASS org/eclipse/pde/internal/core/ibundle/IBundleFragmentModel(0xDB7A54E8) 3CLTEXTCLASS org/eclipse/pde/internal/core/bundle/BundleFragmentModel(0xDB7A56E8) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IPluginModel(0xDB7A5948) 3CLTEXTCLASS org/eclipse/pde/internal/core/ibundle/IBundlePluginModel(0xDB7A5A30) 3CLTEXTCLASS org/eclipse/pde/internal/core/bundle/BundlePluginModel(0xDB7A5C30) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/AbstractPluginModelBase(0xDB7A5F88) 3CLTEXTCLASS org/eclipse/pde/core/IEditableModel(0xDB7A6620) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/ExternalPluginModel(0xDB7A67D8) 3CLTEXTCLASS org/eclipse/pde/internal/core/plugin/ExternalFragmentModel(0xDB7A6B18) 3CLTEXTCLASS org/eclipse/pde/internal/core/PluginModelManager(0xDB7522E0) 3CLTEXTCLASS org/eclipse/pde/core/IBaseModel(0xDB752F60) 3CLTEXTCLASS org/eclipse/pde/core/IModel(0xDB753048) 3CLTEXTCLASS org/eclipse/pde/core/IModelChangeProvider(0xDB753190) 3CLTEXTCLASS org/eclipse/pde/core/plugin/ISharedPluginModel(0xDB753270) 3CLTEXTCLASS org/eclipse/pde/core/plugin/ISharedExtensionsModel(0xDB753350) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IPluginModelBase(0xDB753438) 3CLTEXTCLASS org/eclipse/pde/internal/core/target/provisional/ITargetDefinition(0xDB7535C0) 3CLTEXTCLASS org/eclipse/pde/core/plugin/ModelEntry(0xDB7538A0) 3CLTEXTCLASS org/eclipse/pde/internal/core/PluginModelManager$LocalModelEntry(0xDB753B50) 3CLTEXTCLASS org/eclipse/pde/core/IModelProviderEvent(0xDB753CB8) 3CLTEXTCLASS org/eclipse/pde/internal/core/PluginModelManager$UpdateClasspathsJob(0xDB753EC8) 3CLTEXTCLASS org/eclipse/pde/internal/core/builders/PluginRebuilder(0xDB751260) 3CLTEXTCLASS org/eclipse/pde/internal/core/PDECoreMessages(0xDB7515C0) 3CLTEXTCLASS org/eclipse/pde/internal/core/AbstractModelManager(0xDB751AD0) 3CLTEXTCLASS org/eclipse/pde/internal/core/PDEPreferencesManager(0xDB751CC8) 3CLTEXTCLASS org/eclipse/pde/core/plugin/IFragment(0xDB751FC8) 3CLTEXTCLASS org/eclipse/pde/internal/core/JavaElementChangeListener(0xDB750A30) 3CLTEXTCLASS org/eclipse/pde/internal/core/IStateDeltaListener(0xDB750F48) 3CLTEXTCLASS org/eclipse/pde/internal/core/PDECore(0xDDCE03B0) 3CLTEXTCLASS org/eclipse/pde/core/IModelProviderListener(0xDBA636F0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0FC9148) 3CLTEXTCLASS org/eclipse/jdt/launching/AbstractVMInstall(0xDB153D50) 3CLTEXTCLASS org/eclipse/jdt/launching/VMStandin(0xDB154688) 3CLTEXTCLASS org/eclipse/jdt/launching/VMRunnerConfiguration(0xDB154A30) 3CLTEXTCLASS org/eclipse/jdt/launching/PropertyChangeEvent(0xDB154D80) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/CompositeId(0xDB154F08) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/StandardVM(0xDB155170) 3CLTEXTCLASS org/eclipse/jdt/launching/IVMRunner(0xDB1553C8) 3CLTEXTCLASS [Lorg/eclipse/jdt/launching/IVMInstall;(0xDB155490) 3CLTEXTCLASS [Lorg/eclipse/jdt/internal/launching/environments/Analyzer;(0xDB155548) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/environments/ExecutionEnvironmentAnalyzer(0xDB155600) 3CLTEXTCLASS org/eclipse/jdt/launching/environments/CompatibleEnvironment(0xDB155A40) 3CLTEXTCLASS [Lorg/eclipse/jdt/launching/environments/CompatibleEnvironment;(0xDB155B78) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/LaunchingPlugin$VMChanges(0xDB155C48) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/LaunchingPlugin$JREUpdateJob(0xDB1561F8) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/LaunchingPlugin$1(0xDB156448) 3CLTEXTCLASS [Lorg/eclipse/jdt/launching/environments/IAccessRuleParticipant;(0xDB1565D8) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/environments/DefaultAccessRuleParticipant(0xDB156690) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/JREContainer$RuleKey(0xDB156908) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/JREContainer$RuleEntry(0xDB156A70) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/EECompilationParticipant(0xDB156BD8) 3CLTEXTCLASS org/eclipse/jdt/launching/IRuntimeClasspathEntry2(0xDB156FD0) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/AbstractRuntimeClasspathEntry(0xDB157148) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/DefaultProjectClasspathEntry(0xDB1575C0) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/JavaLaunchableTester(0xDB157B70) 3CLTEXTCLASS org/eclipse/jdt/launching/IJavaLaunchConfigurationConstants(0xDB158330) 3CLTEXTCLASS org/eclipse/jdt/launching/AbstractJavaLaunchConfigurationDelegate(0xDB158820) 3CLTEXTCLASS org/eclipse/jdt/launching/JavaLaunchDelegate(0xDB159348) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/JavaSourceLookupDirector(0xDB159718) 3CLTEXTCLASS org/eclipse/jdt/launching/sourcelookup/containers/JavaSourceLookupParticipant(0xDB159998) 3CLTEXTCLASS org/eclipse/jdt/launching/IRuntimeClasspathEntryResolver2(0xDB159C70) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/RuntimeClasspathEntryResolver(0xDB159D60) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/JRERuntimeClasspathEntryResolver(0xDB159FC0) 3CLTEXTCLASS org/eclipse/jdt/launching/AbstractVMRunner(0xDB15A428) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/StandardVMRunner(0xDB15A780) 3CLTEXTCLASS org/eclipse/jdt/launching/ExecutionArguments(0xDB15AE28) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/RuntimeClasspathEntry(0xDB15B010) 3CLTEXTCLASS [Lorg/eclipse/jdt/launching/IRuntimeClasspathEntry;(0xDB15B868) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/DefaultEntryResolver(0xDB15B928) 3CLTEXTCLASS org/eclipse/jdt/launching/IRuntimeContainerComparator(0xDB15BAB0) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/LaunchingMessages(0xDB135C28) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/JREContainer(0xDB136010) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/JREContainer$1(0xDB136548) 3CLTEXTCLASS org/eclipse/jdt/launching/IVMInstallType(0xDB136758) 3CLTEXTCLASS org/eclipse/jdt/launching/AbstractVMInstallType(0xDB1368F0) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/StandardVMType(0xDB136C70) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/Standard11xVMType(0xDB137760) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/EEVMType(0xDB137A80) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/VMDefinitionsContainer(0xDB137E28) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/LaunchingPreferenceInitializer(0xDB138748) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/VMListener(0xDB1388E8) 3CLTEXTCLASS [Lorg/eclipse/jdt/launching/IVMInstallType;(0xDB138A68) 3CLTEXTCLASS org/eclipse/jdt/launching/LibraryLocation(0xDB138B38) 3CLTEXTCLASS [Lorg/eclipse/jdt/launching/LibraryLocation;(0xDB138DB8) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/LibraryInfo(0xDB138E80) 3CLTEXTCLASS org/eclipse/jdt/launching/sourcelookup/IJavaSourceLocation(0xDB138FE8) 3CLTEXTCLASS org/eclipse/jdt/launching/sourcelookup/ArchiveSourceLocation(0xDB1390F0) 3CLTEXTCLASS org/eclipse/jdt/launching/IVMInstall2(0xDB1396B0) 3CLTEXTCLASS org/eclipse/jdt/launching/IVMInstall3(0xDB139780) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/environments/EnvironmentsManager(0xDB7F2E80) 3CLTEXTCLASS org/eclipse/jdt/launching/environments/IExecutionEnvironment(0xDB7F35F0) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/environments/ExecutionEnvironment(0xDB7F3780) 3CLTEXTCLASS org/eclipse/jdt/launching/environments/IAccessRuleParticipant(0xDB7F3FD0) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/environments/ExecutionEnvironment$1(0xDB7F40A8) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/environments/AccessRuleParticipant(0xDB7F4250) 3CLTEXTCLASS org/eclipse/jdt/launching/environments/IExecutionEnvironmentAnalyzerDelegate(0xDB7F4470) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/environments/Analyzer(0xDB7F4540) 3CLTEXTCLASS [Lorg/eclipse/jdt/launching/environments/IExecutionEnvironment;(0xDB7F46D0) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/JREContainerInitializer(0xDB7F47B0) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/LaunchingPlugin$2(0xDB7060A0) 3CLTEXTCLASS org/eclipse/jdt/launching/IRuntimeClasspathProvider(0xDB706240) 3CLTEXTCLASS org/eclipse/jdt/launching/IRuntimeClasspathEntry(0xDB706300) 3CLTEXTCLASS org/eclipse/jdt/launching/IVMInstall(0xDB7064C8) 3CLTEXTCLASS org/eclipse/jdt/launching/IRuntimeClasspathEntryResolver(0xDB706640) 3CLTEXTCLASS org/eclipse/jdt/launching/environments/IExecutionEnvironmentsManager(0xDB706710) 3CLTEXTCLASS org/eclipse/jdt/launching/StandardClasspathProvider(0xDB7067F0) 3CLTEXTCLASS org/eclipse/jdt/launching/StandardSourcePathProvider(0xDB706A40) 3CLTEXTCLASS org/eclipse/jdt/internal/launching/LaunchingPlugin(0xDB70D3F0) 3CLTEXTCLASS org/eclipse/jdt/launching/IVMInstallChangedListener(0xDBA66B50) 3CLTEXTCLASS org/eclipse/jdt/launching/IVMConnector(0xDBA66CF8) 3CLTEXTCLASS org/eclipse/jdt/launching/JavaRuntime(0xDD919038) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0FC9B38) 3CLTEXTCLASS org/eclipse/debug/core/model/IValueModification(0xD93765D8) 3CLTEXTCLASS org/eclipse/debug/core/model/IVariable(0xD93766C8) 3CLTEXTCLASS org/eclipse/debug/core/model/IThread(0xD93767C0) 3CLTEXTCLASS org/eclipse/debug/core/model/IExpression(0xD93768E8) 3CLTEXTCLASS org/eclipse/debug/core/model/IErrorReportingExpression(0xD93769D8) 3CLTEXTCLASS org/eclipse/debug/core/model/IValue(0xD9376AB0) 3CLTEXTCLASS org/eclipse/debug/core/model/ILineBreakpoint(0xD9376BB0) 3CLTEXTCLASS org/eclipse/debug/core/model/IWatchpoint(0xD9376C90) 3CLTEXTCLASS org/eclipse/debug/core/IDebugEventFilter(0xD9376DA0) 3CLTEXTCLASS org/eclipse/debug/core/model/DebugElement(0xD9376E98) 3CLTEXTCLASS org/eclipse/debug/core/model/IIndexedValue(0xD9377228) 3CLTEXTCLASS org/eclipse/debug/internal/core/LaunchConfigurationWorkingCopy(0xD9377440) 3CLTEXTCLASS org/eclipse/debug/core/model/ISourceLocator(0xD9377F08) 3CLTEXTCLASS org/eclipse/debug/internal/core/LaunchConfigurationInfo(0xD9378048) 3CLTEXTCLASS org/eclipse/debug/internal/core/LaunchManager$ConfigurationNotifier(0xD93788D8) 3CLTEXTCLASS [Lorg/eclipse/debug/core/ILaunchDelegate;(0xD9378AE0) 3CLTEXTCLASS org/eclipse/debug/core/model/ILaunchConfigurationDelegate(0xD9378B80) 3CLTEXTCLASS org/eclipse/debug/core/model/ILaunchConfigurationDelegate2(0xD9378C30) 3CLTEXTCLASS org/eclipse/debug/core/model/LaunchConfigurationDelegate(0xD9378D68) 3CLTEXTCLASS org/eclipse/debug/core/model/IPersistableSourceLocator(0xD9379308) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/IPersistableSourceLocator2(0xD93793E0) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/ISourceLookupDirector(0xD93794B0) 3CLTEXTCLASS org/eclipse/debug/core/IStatusHandler(0xD9379670) 3CLTEXTCLASS org/eclipse/debug/core/model/LaunchConfigurationDelegate$1(0xD9379738) 3CLTEXTCLASS org/eclipse/debug/internal/core/BreakpointManager$BreakpointManagerVisitor(0xD93798D0) 3CLTEXTCLASS [Lorg/eclipse/debug/core/model/IProcess;(0xD9379CA8) 3CLTEXTCLASS [Lorg/eclipse/debug/core/model/IDebugTarget;(0xD9379D60) 3CLTEXTCLASS org/eclipse/debug/core/ILogicalStructureProvider(0xD9379E00) 3CLTEXTCLASS org/eclipse/debug/core/model/Breakpoint(0xD9379F18) 3CLTEXTCLASS org/eclipse/debug/core/model/ILogicalStructureTypeDelegate(0xD937A400) 3CLTEXTCLASS org/eclipse/debug/core/model/ILogicalStructureTypeDelegate2(0xD937A4C0) 3CLTEXTCLASS org/eclipse/debug/core/ILogicalStructureType(0xD937A570) 3CLTEXTCLASS org/eclipse/debug/internal/core/commands/Request(0xD937A668) 3CLTEXTCLASS org/eclipse/debug/internal/core/commands/DebugCommandRequest(0xD937A810) 3CLTEXTCLASS org/eclipse/debug/core/model/Breakpoint$1(0xD937A948) 3CLTEXTCLASS org/eclipse/debug/core/model/Breakpoint$4(0xD937AAA0) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/AbstractSourceLookupDirector(0xD937AC90) 3CLTEXTCLASS org/eclipse/debug/core/model/Breakpoint$3(0xD937B730) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/ISourceContainer(0xD937B870) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/containers/AbstractSourceContainer(0xD937B9D0) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/containers/CompositeSourceContainer(0xD937BCC0) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/containers/ContainerSourceContainer(0xD937BFA0) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/containers/ProjectSourceContainer(0xD937C3E8) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/containers/WorkspaceSourceContainer(0xD937C770) 3CLTEXTCLASS [Lorg/eclipse/debug/core/sourcelookup/ISourceContainer;(0xD937C9F8) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/containers/DefaultSourceContainer(0xD937CAF0) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/ISourceLookupParticipant(0xD937CD78) 3CLTEXTCLASS [Lorg/eclipse/debug/core/sourcelookup/ISourceLookupParticipant;(0xD937CE80) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/AbstractSourceLookupParticipant(0xD937CF58) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/ISourceContainerTypeDelegate(0xD937D210) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/ISourceContainerType(0xD937D2D0) 3CLTEXTCLASS org/eclipse/debug/internal/core/sourcelookup/SourceContainerType(0xD937D3D0) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/ISourcePathComputerDelegate(0xD937D620) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/ISourcePathComputer(0xD937D6D0) 3CLTEXTCLASS org/eclipse/debug/internal/core/sourcelookup/SourcePathComputer(0xD937D820) 3CLTEXTCLASS org/eclipse/debug/core/sourcelookup/containers/ArchiveSourceContainer(0xD937DA18) 3CLTEXTCLASS org/eclipse/debug/core/DebugPlugin$ArgumentParser(0xD937DD38) 3CLTEXTCLASS org/eclipse/debug/core/IStreamListener(0xD937DF68) 3CLTEXTCLASS org/eclipse/debug/internal/core/LaunchManager(0xDB76F920) 3CLTEXTCLASS org/eclipse/debug/core/DebugException(0xDB7716F8) 3CLTEXTCLASS org/eclipse/debug/core/ILaunchConfiguration(0xDB771818) 3CLTEXTCLASS org/eclipse/debug/core/ILaunchDelegate(0xDB771B60) 3CLTEXTCLASS org/eclipse/debug/internal/core/LaunchConfiguration(0xDB771D40) 3CLTEXTCLASS org/eclipse/debug/core/ILaunchMode(0xDB772BD0) 3CLTEXTCLASS [Lorg/eclipse/debug/core/ILaunch;(0xDB772CB8) 3CLTEXTCLASS org/eclipse/debug/core/ILaunchListener(0xDB772D58) 3CLTEXTCLASS org/eclipse/debug/core/Launch(0xDB772EC8) 3CLTEXTCLASS org/eclipse/debug/core/model/RuntimeProcess(0xDB773768) 3CLTEXTCLASS org/eclipse/debug/core/model/IStreamsProxy(0xDB773D98) 3CLTEXTCLASS org/eclipse/debug/core/model/IStreamsProxy2(0xDB773E68) 3CLTEXTCLASS org/eclipse/debug/internal/core/StreamsProxy(0xDB773F50) 3CLTEXTCLASS org/eclipse/debug/core/model/IStreamMonitor(0xDB7741B8) 3CLTEXTCLASS org/eclipse/debug/core/model/IFlushableStreamMonitor(0xDB774288) 3CLTEXTCLASS org/eclipse/debug/internal/core/OutputStreamMonitor(0xDB774398) 3CLTEXTCLASS org/eclipse/debug/internal/core/InputStreamMonitor(0xDB7747E8) 3CLTEXTCLASS org/eclipse/debug/internal/core/OutputStreamMonitor$1(0xDB774AE0) 3CLTEXTCLASS org/eclipse/debug/internal/core/InputStreamMonitor$1(0xDB774C08) 3CLTEXTCLASS org/eclipse/debug/core/model/RuntimeProcess$ProcessMonitorThread(0xDB774DB0) 3CLTEXTCLASS org/eclipse/debug/internal/core/LaunchManager$LaunchNotifier(0xDB775018) 3CLTEXTCLASS org/eclipse/debug/internal/core/LaunchManager$LaunchesNotifier(0xDB775228) 3CLTEXTCLASS org/eclipse/debug/core/DebugEvent(0xDB7754B0) 3CLTEXTCLASS [Lorg/eclipse/debug/core/DebugEvent;(0xDB7757F8) 3CLTEXTCLASS org/eclipse/debug/internal/core/OutputStreamMonitor$ContentNotifier(0xDB7758B8) 3CLTEXTCLASS org/eclipse/debug/core/IBreakpointListener(0xDB775A58) 3CLTEXTCLASS org/eclipse/debug/core/model/IMemoryBlockRetrieval(0xDB775B28) 3CLTEXTCLASS org/eclipse/debug/core/model/IDebugTarget(0xDB775BE8) 3CLTEXTCLASS org/eclipse/debug/internal/core/Preferences(0xDB775D28) 3CLTEXTCLASS org/eclipse/debug/internal/core/DebugPreferenceInitializer(0xDB7760E0) 3CLTEXTCLASS org/eclipse/debug/internal/core/StepFilterManager(0xDB776250) 3CLTEXTCLASS org/eclipse/debug/core/IRequest(0xDB776520) 3CLTEXTCLASS org/eclipse/debug/core/commands/IDebugCommandRequest(0xDB776610) 3CLTEXTCLASS org/eclipse/debug/internal/core/IInternalDebugCoreConstants(0xDB7766C8) 3CLTEXTCLASS org/eclipse/debug/internal/core/LaunchablePropertyTester(0xDB776830) 3CLTEXTCLASS org/eclipse/debug/core/ILaunchConfigurationType(0xDB776990) 3CLTEXTCLASS org/eclipse/debug/internal/core/LaunchConfigurationType(0xDB776BE8) 3CLTEXTCLASS org/eclipse/debug/core/ILaunchConfigurationWorkingCopy(0xDB7772F0) 3CLTEXTCLASS [Lorg/eclipse/debug/internal/core/LaunchDelegate;(0xDB7774F8) 3CLTEXTCLASS [Lorg/eclipse/debug/core/ILaunchConfigurationType;(0xDB7775B0) 3CLTEXTCLASS [Lorg/eclipse/debug/core/ILaunchMode;(0xDB777668) 3CLTEXTCLASS [Lorg/eclipse/debug/core/ILaunchConfiguration;(0xDB777720) 3CLTEXTCLASS org/eclipse/debug/core/commands/AbstractDebugCommand$UpdateJob(0xDB7478A0) 3CLTEXTCLASS org/eclipse/debug/internal/core/commands/StepCommand(0xDB747D68) 3CLTEXTCLASS org/eclipse/debug/internal/core/commands/StepOverCommand(0xDB748018) 3CLTEXTCLASS org/eclipse/debug/internal/core/commands/StepIntoCommand(0xDB748240) 3CLTEXTCLASS org/eclipse/debug/internal/core/commands/StepReturnCommand(0xDB748468) 3CLTEXTCLASS org/eclipse/debug/internal/core/commands/DropToFrameCommand(0xDB748690) 3CLTEXTCLASS org/eclipse/debug/internal/core/commands/DisconnectCommand(0xDB7488E0) 3CLTEXTCLASS org/eclipse/debug/internal/core/commands/SuspendCommand(0xDB748B30) 3CLTEXTCLASS org/eclipse/debug/internal/core/commands/ResumeCommand(0xDB748D80) 3CLTEXTCLASS org/eclipse/debug/internal/core/commands/StepFiltersCommand(0xDB748F98) 3CLTEXTCLASS org/eclipse/debug/core/model/IDisconnect(0xDB749200) 3CLTEXTCLASS org/eclipse/debug/core/model/IDropToFrame(0xDB7492D0) 3CLTEXTCLASS org/eclipse/debug/core/model/IStep(0xDB749390) 3CLTEXTCLASS org/eclipse/debug/core/model/IStepFilters(0xDB7494A0) 3CLTEXTCLASS org/eclipse/debug/core/model/ISuspendResume(0xDB749570) 3CLTEXTCLASS org/eclipse/debug/core/ILaunch(0xDB749660) 3CLTEXTCLASS org/eclipse/debug/core/model/IDebugElement(0xDB749808) 3CLTEXTCLASS org/eclipse/debug/core/IDebugEventSetListener(0xDB7498E0) 3CLTEXTCLASS org/eclipse/debug/core/ILaunchConfigurationListener(0xDB749990) 3CLTEXTCLASS org/eclipse/debug/internal/core/LaunchDelegate(0xDB749AA0) 3CLTEXTCLASS org/eclipse/debug/internal/core/LaunchMode(0xDB749F18) 3CLTEXTCLASS org/eclipse/debug/internal/core/LaunchManager$LaunchManagerVisitor(0xDB74A150) 3CLTEXTCLASS org/eclipse/debug/internal/core/LaunchManager$MappedResourceVisitor(0xDB74A308) 3CLTEXTCLASS org/eclipse/debug/internal/core/LaunchManager$ResourceProxyVisitor(0xDB74A4B0) 3CLTEXTCLASS org/eclipse/debug/core/ILaunchesListener2(0xDB74A610) 3CLTEXTCLASS org/eclipse/debug/core/IBreakpointsListener(0xDB74A6C8) 3CLTEXTCLASS org/eclipse/debug/internal/core/BreakpointManager(0xDB74A818) 3CLTEXTCLASS org/eclipse/debug/core/model/IBreakpoint(0xDB74B3A0) 3CLTEXTCLASS org/eclipse/debug/core/model/IBreakpointImportParticipant(0xDB74B5A8) 3CLTEXTCLASS org/eclipse/debug/core/IMemoryBlockListener(0xDB74B668) 3CLTEXTCLASS org/eclipse/debug/core/DebugPlugin$AsynchRunner(0xDB70B340) 3CLTEXTCLASS org/eclipse/debug/internal/core/DebugOptions(0xDB70B4F0) 3CLTEXTCLASS org/eclipse/debug/core/DebugPlugin$1(0xDB70B680) 3CLTEXTCLASS org/eclipse/debug/internal/core/commands/CommandAdapterFactory(0xDB70B810) 3CLTEXTCLASS org/eclipse/debug/core/commands/IDebugCommandHandler(0xDB70BC40) 3CLTEXTCLASS org/eclipse/debug/core/commands/ITerminateHandler(0xDB70BD00) 3CLTEXTCLASS org/eclipse/debug/core/commands/IStepOverHandler(0xDB70BDA0) 3CLTEXTCLASS org/eclipse/debug/core/commands/IStepIntoHandler(0xDB70BE40) 3CLTEXTCLASS org/eclipse/debug/core/commands/IStepReturnHandler(0xDB70BEE0) 3CLTEXTCLASS org/eclipse/debug/core/commands/IDropToFrameHandler(0xDB70BF80) 3CLTEXTCLASS org/eclipse/debug/core/commands/IDisconnectHandler(0xDB70C020) 3CLTEXTCLASS org/eclipse/debug/core/commands/ISuspendHandler(0xDB70C0C0) 3CLTEXTCLASS org/eclipse/debug/core/commands/IResumeHandler(0xDB70C160) 3CLTEXTCLASS org/eclipse/debug/core/commands/IStepFiltersHandler(0xDB70C200) 3CLTEXTCLASS org/eclipse/debug/core/commands/AbstractDebugCommand(0xDB70C2E8) 3CLTEXTCLASS org/eclipse/debug/internal/core/commands/ForEachCommand(0xDB70C630) 3CLTEXTCLASS org/eclipse/debug/internal/core/commands/TerminateCommand(0xDB70C7F8) 3CLTEXTCLASS org/eclipse/debug/core/commands/AbstractDebugCommand$1(0xDB70CAF8) 3CLTEXTCLASS org/eclipse/debug/internal/core/BreakpointManager$PostChangeListener(0xDB70CE40) 3CLTEXTCLASS org/eclipse/debug/internal/core/BreakpointManager$PostChangeVisitor(0xDB70CFB8) 3CLTEXTCLASS [Lorg/eclipse/debug/core/model/IBreakpoint;(0xDB70D140) 3CLTEXTCLASS org/eclipse/debug/core/IBreakpointManagerListener(0xDB70D1E0) 3CLTEXTCLASS org/eclipse/debug/core/IExpressionManager(0xDB7072A0) 3CLTEXTCLASS org/eclipse/debug/core/model/ITerminate(0xDB707428) 3CLTEXTCLASS org/eclipse/debug/core/model/IProcess(0xDB7074F8) 3CLTEXTCLASS org/eclipse/debug/core/DebugPlugin$StatusHandlerKey(0xDB7076C0) 3CLTEXTCLASS org/eclipse/debug/core/DebugPlugin$EventDispatchJob(0xDB7078F8) 3CLTEXTCLASS org/eclipse/debug/internal/core/DebugCoreMessages(0xDB707C08) 3CLTEXTCLASS org/eclipse/debug/core/DebugPlugin$EventNotifier(0xDB707EF8) 3CLTEXTCLASS org/eclipse/debug/core/model/IStackFrame(0xDB708130) 3CLTEXTCLASS org/eclipse/debug/core/IBreakpointManager(0xDCBBAA40) 3CLTEXTCLASS org/eclipse/debug/core/ILaunchManager(0xDCBBAC30) 3CLTEXTCLASS org/eclipse/debug/core/IMemoryBlockManager(0xDCBBB008) 3CLTEXTCLASS org/eclipse/debug/core/model/IFilteredStep(0xDCBBB118) 3CLTEXTCLASS org/eclipse/debug/core/DebugPlugin(0xDBAD0448) 3CLTEXTCLASS org/eclipse/debug/core/ILaunchesListener(0xDE505ED8) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE052FCA0) 3CLTEXTCLASS org/eclipse/equinox/internal/simpleconfigurator/manipulator/SimpleConfiguratorManipulatorImpl$LocationInfo(0xDB7F2628) 3CLTEXTCLASS org/eclipse/equinox/internal/simpleconfigurator/manipulator/SimpleConfiguratorManipulatorImpl(0xDD987608) 3CLTEXTCLASS org/eclipse/equinox/simpleconfigurator/manipulator/SimpleConfiguratorManipulator(0xDD906F40) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE0531A90) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/frameworkadmin/ConfigData(0xDB55FD10) 3CLTEXTCLASS org/eclipse/equinox/internal/frameworkadmin/utils/Utils(0xDB560228) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/frameworkadmin/FrameworkAdmin(0xDB7F4E70) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/frameworkadmin/FrameworkAdminRuntimeException(0xDB7F4FD0) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/frameworkadmin/LauncherData(0xDB7F5200) 3CLTEXTCLASS org/eclipse/equinox/internal/frameworkadmin/utils/SimpleBundlesState(0xDB7F5860) 3CLTEXTCLASS org/eclipse/equinox/frameworkadmin/BundleInfo(0xDB7EFDF8) 3CLTEXTCLASS [Lorg/eclipse/equinox/frameworkadmin/BundleInfo;(0xDB7F02A8) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/frameworkadmin/Manipulator(0xDB7F0348) 3CLTEXTCLASS org/eclipse/equinox/internal/frameworkadmin/utils/Activator(0xDD957AF8) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/frameworkadmin/BundlesState(0xDD957CB8) 3CLTEXTCLASS org/eclipse/equinox/internal/provisional/configuratormanipulator/ConfiguratorManipulator(0xDDCE0E90) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1619EE8) 3CLTEXTCLASS org/eclipse/equinox/internal/frameworkadmin/equinox/EquinoxFwConfigFileParser(0xDB555C78) 3CLTEXTCLASS org/eclipse/equinox/internal/frameworkadmin/equinox/EclipseLauncherParser(0xDB556728) 3CLTEXTCLASS org/eclipse/equinox/internal/frameworkadmin/equinox/utils/FileUtils(0xDB556DC0) 3CLTEXTCLASS org/eclipse/equinox/internal/frameworkadmin/equinox/ParserUtils(0xDB557318) 3CLTEXTCLASS org/eclipse/equinox/internal/frameworkadmin/equinox/Messages(0xDB5576B0) 3CLTEXTCLASS org/eclipse/equinox/internal/frameworkadmin/equinox/EquinoxLauncherData(0xDB53EFC8) 3CLTEXTCLASS org/eclipse/equinox/internal/frameworkadmin/equinox/EquinoxBundlesState(0xDB53F1C8) 3CLTEXTCLASS org/eclipse/equinox/internal/frameworkadmin/equinox/EquinoxManipulatorImpl(0xDB5369A8) 3CLTEXTCLASS org/eclipse/equinox/internal/frameworkadmin/equinox/Log(0xDD987FB0) 3CLTEXTCLASS org/eclipse/equinox/internal/frameworkadmin/equinox/EquinoxFwAdminImpl(0xDD91CB90) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE161BD40) 3CLTEXTCLASS org/eclipse/core/internal/variables/StringSubstitutionEngine(0xDB56F7E0) 3CLTEXTCLASS org/eclipse/core/internal/variables/StringSubstitutionEngine$VariableReference(0xDB56FBD8) 3CLTEXTCLASS org/eclipse/core/internal/variables/StringVariable(0xDB56FD40) 3CLTEXTCLASS org/eclipse/core/variables/IDynamicVariable(0xDB56FEA8) 3CLTEXTCLASS org/eclipse/core/internal/variables/DynamicVariable(0xDB56FFA0) 3CLTEXTCLASS org/eclipse/core/variables/IDynamicVariableResolver(0xDB5701B8) 3CLTEXTCLASS org/eclipse/core/internal/variables/EclipseHomeVariableResolver(0xDB570280) 3CLTEXTCLASS org/eclipse/core/internal/variables/StringVariableManager(0xDB56CC50) 3CLTEXTCLASS org/eclipse/core/variables/IStringVariableManager(0xDDC96400) 3CLTEXTCLASS org/eclipse/core/variables/IStringVariable(0xDDC965C0) 3CLTEXTCLASS org/eclipse/core/variables/IValueVariable(0xDDC96680) 3CLTEXTCLASS org/eclipse/core/variables/VariablesPlugin(0xDD985D88) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE10032C8) 3CLTEXTCLASS org/eclipse/team/ui/synchronize/TeamStateProvider$1(0xDA035E68) 3CLTEXTCLASS org/eclipse/team/ui/synchronize/ISynchronizeParticipant(0xDA035FB0) 3CLTEXTCLASS org/eclipse/team/ui/synchronize/AbstractSynchronizeParticipant(0xDA036218) 3CLTEXTCLASS org/eclipse/team/ui/synchronize/SubscriberParticipant(0xDA036968) 3CLTEXTCLASS org/eclipse/team/internal/ui/synchronize/IChangeSetProvider(0xDA037210) 3CLTEXTCLASS org/eclipse/team/ui/synchronize/ISynchronizeScope(0xDA0372C0) 3CLTEXTCLASS org/eclipse/team/ui/synchronize/AbstractSynchronizeScope(0xDA037408) 3CLTEXTCLASS org/eclipse/team/ui/synchronize/WorkspaceScope(0xDA037878) 3CLTEXTCLASS org/eclipse/team/ui/synchronize/WorkingSetScope(0xDA0379E8) 3CLTEXTCLASS org/eclipse/team/ui/synchronize/ResourceScope(0xDA037E30) 3CLTEXTCLASS org/eclipse/team/internal/ui/synchronize/ScopableSubscriberParticipant(0xDA038198) 3CLTEXTCLASS org/eclipse/team/internal/ui/actions/ConfigureProjectAction(0xDA038480) 3CLTEXTCLASS org/eclipse/team/internal/ui/actions/ApplyPatchAction(0xDA038720) 3CLTEXTCLASS org/eclipse/team/ui/synchronize/ISynchronizeModelElement(0xDA038948) 3CLTEXTCLASS org/eclipse/team/ui/PageCompareEditorInput(0xDA038BD0) 3CLTEXTCLASS org/eclipse/team/ui/history/HistoryPageCompareEditorInput(0xDA0391D0) 3CLTEXTCLASS org/eclipse/team/internal/ui/history/ShowLocalHistory(0xDA0397E8) 3CLTEXTCLASS org/eclipse/team/internal/ui/history/CompareLocalHistory(0xDA039B48) 3CLTEXTCLASS org/eclipse/team/internal/ui/history/ReplaceLocalHistory(0xDA039CB8) 3CLTEXTCLASS org/eclipse/team/internal/ui/history/ReplaceLocalHistory$2(0xDA03A030) 3CLTEXTCLASS org/eclipse/team/internal/ui/actions/CompareAction(0xDA03A390) 3CLTEXTCLASS org/eclipse/team/internal/ui/synchronize/SaveablesCompareEditorInput(0xDA03A7D0) 3CLTEXTCLASS org/eclipse/team/internal/ui/Utils(0x10D51B58) 3CLTEXTCLASS org/eclipse/team/internal/ui/Utils$1(0x10D52D38) 3CLTEXTCLASS org/eclipse/team/internal/ui/SWTUtils(0x10D52E80) 3CLTEXTCLASS org/eclipse/team/internal/ui/SWTUtils$1(0x10D535A8) 3CLTEXTCLASS org/eclipse/team/ui/mapping/ISynchronizationCompareAdapter(0x10D536E8) 3CLTEXTCLASS org/eclipse/team/internal/ui/actions/ITeamRunnableContext(0x10D53808) 3CLTEXTCLASS org/eclipse/team/internal/ui/actions/JobRunnableContext(0x10D538F0) 3CLTEXTCLASS org/eclipse/team/ui/TeamOperation$TeamOperationJobContext(0x10D53BC8) 3CLTEXTCLASS org/eclipse/team/internal/ui/actions/JobRunnableContext$IContextJob(0x10D53E08) 3CLTEXTCLASS org/eclipse/team/internal/ui/actions/JobRunnableContext$BasicJob(0x10D53FC0) 3CLTEXTCLASS org/eclipse/team/internal/ui/actions/JobRunnableContext$ResourceJob(0x10D54310) 3CLTEXTCLASS org/eclipse/team/ui/synchronize/TeamStateDescription(0x10D54590) 3CLTEXTCLASS org/eclipse/team/ui/mapping/ITeamStateChangeListener(0x10D547E0) 3CLTEXTCLASS org/eclipse/team/internal/ui/mapping/WorkspaceTeamStateProvider(0x10D548E8) 3CLTEXTCLASS org/eclipse/team/ui/mapping/ITeamStateChangeEvent(0x10D54DE8) 3CLTEXTCLASS org/eclipse/team/internal/ui/TeamAdapterFactory(0x10D54EE8) 3CLTEXTCLASS org/eclipse/team/ui/mapping/SynchronizationCompareAdapter(0x10D55220) 3CLTEXTCLASS org/eclipse/team/internal/ui/mapping/ResourceModelPersistenceAdapter(0x10D55600) 3CLTEXTCLASS org/eclipse/team/internal/ui/synchronize/DiffNodeWorkbenchAdapter(0x10D55940) 3CLTEXTCLASS org/eclipse/team/ui/history/IHistoryPage(0x10C6BC80) 3CLTEXTCLASS org/eclipse/team/ui/history/HistoryPage(0x10C6BE70) 3CLTEXTCLASS org/eclipse/team/ui/history/IHistoryCompareAdapter(0x10C6C108) 3CLTEXTCLASS org/eclipse/team/ui/TeamOperation(0x10C6C238) 3CLTEXTCLASS org/eclipse/team/internal/ui/actions/TeamAction(0x10C6C6A8) 3CLTEXTCLASS org/eclipse/team/internal/ui/dialogs/IPromptCondition(0x10C6CF68) 3CLTEXTCLASS org/eclipse/team/ui/mapping/ITeamStateDescription(0x10C6D028) 3CLTEXTCLASS org/eclipse/team/internal/ui/actions/TeamAction$1(0x10C6D160) 3CLTEXTCLASS org/eclipse/team/internal/ui/actions/TeamAction$2(0x10C6D358) 3CLTEXTCLASS org/eclipse/team/ui/mapping/SynchronizationStateTester(0x10C6D4A0) 3CLTEXTCLASS org/eclipse/team/ui/TeamUI(0x10C6D658) 3CLTEXTCLASS org/eclipse/team/ui/synchronize/TeamStateChangeEvent(0x10C6D8C8) 3CLTEXTCLASS org/eclipse/team/ui/synchronize/SubscriberTeamStateProvider(0xDC8090D0) 3CLTEXTCLASS org/eclipse/team/ui/synchronize/ISynchronizeManager(0xDC809428) 3CLTEXTCLASS org/eclipse/team/internal/ui/TeamUIPlugin$2(0xDC8096A0) 3CLTEXTCLASS org/eclipse/team/internal/ui/mapping/StreamMergerDelegate(0xDC809908) 3CLTEXTCLASS org/eclipse/team/internal/ui/TeamCapabilityHelper(0xDC809AC8) 3CLTEXTCLASS org/eclipse/team/internal/ui/TeamCapabilityHelper$1(0xDC809E70) 3CLTEXTCLASS org/eclipse/team/ui/mapping/ITeamStateProvider(0xDBACB158) 3CLTEXTCLASS org/eclipse/team/ui/synchronize/TeamStateProvider(0xDBACB2B8) 3CLTEXTCLASS org/eclipse/team/ui/history/HistoryPageSource(0xDBACB650) 3CLTEXTCLASS org/eclipse/team/internal/ui/TeamUIPlugin(0xDB595C38) 3CLTEXTCLASS org/eclipse/team/ui/history/IHistoryPageSource(0xDBACD750) 2CLTEXTCLLOAD Loader sun/reflect/DelegatingClassLoader(0xE10103E8) 3CLTEXTCLASS sun/reflect/GeneratedMethodAccessor8(0x10A9E520) 2CLTEXTCLLOAD Loader sun/reflect/DelegatingClassLoader(0xE0D81168) 3CLTEXTCLASS sun/reflect/GeneratedMethodAccessor9(0x10B1A9F8) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE103DA68) 3CLTEXTCLASS org/eclipse/pde/internal/build/BundleHelper(0xDB3F4020) 3CLTEXTCLASS org/eclipse/pde/internal/build/BuildActivator(0xDD5ECBC8) 3CLTEXTCLASS org/eclipse/pde/internal/build/IBuildPropertiesConstants(0xDB398860) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE17C8D90) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/IgnoreAction(0xDA0A9B90) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/AddAction(0xDA0AA050) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/FileModificationValidator(0xDA0AA440) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/ShowResourceInHistoryAction(0xDA0AAC30) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/ShowAnnotationAction(0xDA0AB120) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/CompareWithRevisionAction(0xDA0AB7F0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/CompareWithRevisionAction$2(0xDA0ABD00) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/ReplaceWithRevisionAction(0xDA0AC0A0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/ReplaceWithRevisionAction$1(0xDA0AC4C0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/EditAction(0xDA0AC8E0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/UneditAction(0xDA0ACD08) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/RepositoryProviderOperation(0xDA0A1B10) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/TagOperation(0xDA0A2440) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/CompareWithTagAction(0xDA0A2B58) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/CompareWithTagAction$1(0xDA0A2FE8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/subscriber/CVSParticipant(0xDA0A3228) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/subscriber/CompareParticipant(0xDA0A3820) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/SyncAction(0xDA0A3E70) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/CompareWithRemoteAction(0xDA0A47F0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/mappings/CVSSubscriberMergeContext(0xDA0A4B28) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/mappings/WorkspaceSubscriberContext(0xDA0A50D0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/subscriber/WorkspaceSynchronizeParticipant(0xDA0A5A68) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/ReplaceWithTagAction(0xDA0A5FE0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/ReplaceWithSelectableTagAction(0xDA0A6488) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/SingleCommandOperation(0xDA0A6880) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/UpdateOperation(0xDA0A6D48) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/ReplaceOperation(0xDA0A72E8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/ReplaceWithLatestRevisionAction(0xDA0A79D0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/ReplaceWithRemoteAction(0xDA0A7DA0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/GenerateDiffFileAction(0xDA0A8240) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/CommitAction(0xDA0A87D8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/CommitAction$CommitScopeManager(0xDA0A8C48) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/RestoreFromRepositoryAction(0xDA0A8F60) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/ResizableWizardDialog(0xDA0A9608) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSCompareEditorInput(0xDA01DF08) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/CompareRemoteWithTagAction(0xDA01E7F0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/WorkspaceAction(0xDA01EBA0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/WorkspaceTraversalAction(0xDA01F5C0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/TagAction(0xDA01FC88) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/TagInRepositoryAction(0xDA020298) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/MoveRemoteTagAction(0xDA0206D8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/ITagOperation(0xDA020A00) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/CheckoutOperation(0xDA020BE0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/CheckoutProjectOperation(0xDA020F58) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/CheckoutMultipleProjectsOperation(0xDA021A68) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/CVSOperation$1(0xDA021D90) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/CheckoutProjectOperation$2(0xDA021F88) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSLightweightDecorator$2(0xDA022100) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSLightweightDecorator$3(0xDA022230) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSDecoration(0xDA022408) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSDecoration$CachedImageDescriptor(0xDA022F70) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSTeamStateDescription(0xDA0230E0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSTeamStateProvider(0xDA023228) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSTeamStateProvider$1(0xDA0233D8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/UnmanageAction(0xDA023648) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/CVSActionSelectionProperties(0xDA0239A0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/ShowEditorsAction(0xDA023E40) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/SetKeywordSubstitutionAction(0xDA024258) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/UpdateSilentAction(0xDA024638) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/UpdateAction(0xDA024AE0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/MergeAction(0xDA024EC0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/BranchAction(0xDA0252F8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/TagLocalAction(0xDA0257D0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/CVSAction(0x10D85F30) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/OpenRemoteFileAction(0x10D86A80) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSLightweightDecorator(0x10D86E08) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RemoteViewPart$6(0x10D879E8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesView$9(0x10D87BB0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesFilterAction(0x10D87E70) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesView$10(0x10D880E8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesView$RepositoryDragSourceListener(0x10D88238) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSResourceTransfer(0x10D88478) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/NewRepositoryAction(0x10D887B0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSLightweightDecorator$1(0x10D889B0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/wizards/NewLocationWizard(0x10D88BC8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/wizards/CVSWizardPage(0x10D89210) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/wizards/ConfigurationWizardMainPage(0x10D898F0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/wizards/ConfigurationWizardMainPage$1(0x10D8A5C0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/wizards/ConfigurationWizardMainPage$2(0x10D8A800) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/wizards/ConfigurationWizardMainPage$3(0x10D8A948) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesView$2(0x10D8AA88) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/wizards/NewLocationWizard$1(0x10D8AC00) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesView$3(0x10D8AD50) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/CVSResourceElement(0x10D8AEC0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/VersionCategory(0x10D8B0D8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/TagCategory(0x10D8B4A0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/BranchCategory(0x10D8B6E8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/RemoteModule(0x10D8B8E8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/FetchMembersOperation$RemoteFolderFilter(0x10D8BC68) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/CVSTagElement$1(0x10D8BD60) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/DateTagCategory(0x10D8BEE0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/RepositoryLocationSchedulingRule(0x10D8C140) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/Policy(0x10D8C288) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/FetchMembersOperation(0x10D8C5B8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/FetchMembersOperation$InternalRemoteFolderMemberFetcher(0x10D8C9D0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/CheckoutAsAction(0x10D8CD90) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/CheckoutAction(0x10D8D108) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/ConfigureTagsFromRepoViewOnFolder(0x10D8D478) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/AddToBranchAction(0x10D8D860) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/AddToBranchAction$1(0x10D8DB18) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSUIMessages(0x10BAEEE8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSDecoratorConfiguration(0x10BB00E8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSPreferencesPage(0x10BB0520) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSPreferencesPage$Field(0x10BB0F30) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSPreferencesPage$ComboBox(0x10BB10C0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSPreferencesPage$IntegerComboBox(0x10BB1360) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/console/ConsoleDocument(0x10BB14E0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoryComparator(0x10BB16C0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RemoteViewPart$1(0x10BB1968) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RemoteViewPart$2(0x10BB1B48) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RemoteViewPart$3(0x10BB1DB0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/IRepositoryListener(0x10BB1F60) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesView$4(0x10BB20D8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesView$5(0x10BB2378) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesFilter(0x10BB25E8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesView$11(0x10BB2740) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/RemoteContentProvider(0x10BB28F8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesView$1(0x10BB2C28) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RemoteViewPart$DecoratingRepoLabelProvider(0x10BB2E40) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/AllRootsElement(0x10BB2FE8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoryManager(0x10BB3288) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesViewContentHandler(0x10BB4238) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/CommentHistoryContentHandler(0x10BB4810) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/CommentTemplatesContentHandler(0x10BB4A88) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoryManager$1(0x10BB4CC8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoryManager$2(0x10BB4E18) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/ui/repo/RepositoryRoot;(0x10BB4F90) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesView$6(0x10BB5048) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RemoveRootAction(0x10BB5278) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RemoveDateTagAction(0x10BB57E0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/CVSTagElement(0x10BB5B90) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/ui/model/CVSTagElement;(0x10BB6058) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesView$7(0x10BB61B0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesView$8(0x10BB63B0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesSortingActionGroup(0x10BB6550) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesSortingActionGroup$1(0x10BB69A0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesSortingActionGroup$2(0x10BB6C18) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSHistoryPage(0x10C57E10) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoryRoot(0x10C59E60) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/CVSOperation(0x10C5A988) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/RemoteOperation(0x10C5B0E8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/RepositoryLocationOperation(0x10C5B370) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/operations/RemoteLogOperation(0x10C5B6F8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesSortingActionGroup$3(0x10C5BB58) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/CVSRepositoryRootElement(0x10BD3DF0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSHistoryPageSource(0x10BD4030) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoryRoot$1(0x10BD4210) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/console/CVSOutputConsole(0x10BD44F8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesSortingActionGroup$4(0x10BD4E70) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RemoteViewPart$4(0x10BD5038) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RemoteViewPart$5(0x10BD51A0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/PasteConnectionStringAction(0x10BD52E0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/FetchAllMembersAction(0x10BD5648) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/actions/CompareRemoteResourcesAction(0x10BD5978) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSUIPlugin$IOpenableInShell(0xDAF9A660) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/CVSAdapterFactory(0xDAF9A738) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/CVSModelElement(0xDAF9AB90) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/RemoteResourceElement(0xDAF9AEB0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/RemoteFileElement(0xDAF9B030) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/model/RemoteFolderElement(0xDAF9B250) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/CVSUIPlugin(0xDAF98740) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RepositoriesView(0xDAF97AA8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ui/repo/RemoteViewPart(0xDAF97048) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE17D2E88) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/ConsoleListeners$1(0x10E40000) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/SyncFileWriter(0x10E40170) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSResourceRuleFactory(0x10E40BC8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/ICVSFileModificationValidator(0x10E40D18) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSCoreFileModificationValidator(0x10E40E18) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/MoveDeleteHook(0x10E413B0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/EclipseFolder$1(0x10E417B8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/CVSDateFormatter(0x10E41958) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/EclipseFile(0x10E41CE0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/SyncFileChangeListener$1(0x10E426F8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/FileModificationManager$1(0x10E42988) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/PruneFolderVisitor(0x10E42B78) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/IResourceStateChangeListener;(0x10E42DE0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/EclipseSynchronizer$1(0x10E42E98) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/SyncFileWriter$1(0x10E42FF8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/SyncFileWriter$2(0x10E43150) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/RemoteFile(0x10E43450) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/listeners/ILogEntryListener(0x10E44110) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSTeamProviderType(0x10E441F0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSProjectSetCapability(0x10E445A8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSCoreFileModificationValidator$1(0x10E44EB8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/MoveDeleteHook$1(0x10E450F8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/EclipseSynchronizer$2(0x10E45288) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/BuildCleanupListener$1(0x10E453E8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSCompareSubscriber(0x10E455C0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/ILogEntry(0x10E45BA8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/listeners/LogEntry(0x10E45D10) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/client/listeners/LogEntry;(0x10E46020) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/filehistory/CVSFileRevision(0x10E46110) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/filehistory/CVSFileRevision;(0x10E464E0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/EclipseFolder(0x10D8DF08) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Session(0x10D8E738) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Session$1(0x10D8F6C8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/ByteCountOutputStream(0x10D8F880) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Session$2(0x10D8F9E0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Session$3(0x10D8FBA8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/CRLFDetectInputStream(0x10D8FD58) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/connection/Connection(0x10D8FFD0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/syncinfo/MutableResourceSyncInfo(0x10D90468) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSStatus(0x10D90778) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Version$1(0x10D90B08) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Command$1(0x10D90D08) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/ICVSResource;(0x10D90F70) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/client/listeners/IConsoleListener;(0x10D91028) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/ConsoleListeners$2(0x10D910E8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/ConsoleListeners$4(0x10D91270) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/CVSTag;(0x10D913F0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/listeners/IUpdateMessageListener(0x10D91490) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/listeners/IStatusListener(0x10D91570) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/RemoteFolderMemberFetcher(0x10D91680) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/ICVSRemoteResource;(0x10D91CF0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/AbstractStructureVisitor(0x10D91DD0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/FileStructureVisitor(0x10D92358) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/AbstractStructureVisitor$1(0x10D92568) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/ConsoleListeners$3(0x10D926E0) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/ICVSRemoteFolder;(0x10D92860) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/ICVSFile;(0x10D92918) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/RemoteModule(0x10D92AE0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/listeners/ModuleDefinitionsListener(0x10D931C8) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/resources/RemoteModule;(0x10D933E8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/EclipseSynchronizer(0x10D93568) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/SyncInfoCache(0x10D947B8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/SessionPropertySyncInfoCache(0x10D94AF0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/SynchronizerSyncInfoCache(0x10D95328) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/syncinfo/ReentrantLock(0x10D959A8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/syncinfo/ReentrantLock$CVSThreadInfo(0x10D95B40) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/CVSException;(0x10D95D18) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSRevisionNumberCompareCriteria(0xDA359158) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/ICVSRemoteResource(0xDA359378) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/RemoteResource(0xDA359580) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/ICVSFolder(0xDA359AA0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/ICVSRemoteFolder(0xDA359C28) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/RemoteFolder(0xDA359E60) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/RemoteFolderTree(0xDA35AA50) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/ResourceStateChangeListeners(0xDA35AD98) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/ResourceStateChangeListeners$Notification(0xDA35B190) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/ResourceStateChangeListeners$1(0xDA35B338) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/ResourceStateChangeListeners$2(0xDA35B480) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/ResourceStateChangeListeners$3(0xDA35B5C8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/ResourceStateChangeListeners$4(0xDA35B710) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/ResourceStateChangeListeners$5(0xDA35B858) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/mapping/CVSActiveChangeSet(0xDA35B9F8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/ICVSStorage(0xDA35BB38) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/ICVSFile(0xDA35BC18) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/ICVSRemoteFile(0xDA35BE28) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/ICVSRepositoryLocation(0xDA35BF30) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/listeners/IConsoleListener(0xDA35C140) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/IUserInfo(0xDA35C220) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/connection/CVSRepositoryLocation(0xDA35C3A0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/connection/CVSAuthenticationException(0xDA35D620) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/connection/CVSCommunicationException(0xDA35D830) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/Policy(0xDA35DAD8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/ConsoleListeners(0xDA35DE68) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/ICVSListener(0xDA35E110) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/KnownRepositories(0xDA35E210) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/KnownRepositories$Notification(0xDA35E778) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/KnownRepositories$1(0xDA35E920) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/KnownRepositories$2(0xDA35EA68) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/ICVSRepositoryLocation;(0xDA35EBA0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/syncinfo/ResourceSyncInfo(0xDA35ECA0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/ICVSDecoratorEnablementListener(0xDA35F4D0) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/ICVSDecoratorEnablementListener;(0xDA35F598) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSTeamProvider(0xDA35F6C8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/IConnectionMethod(0xDA3602B8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/connection/PServerConnectionMethod(0xDA3603A8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/IServerConnection(0xDA3604E8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/connection/ExtConnectionMethod(0xDA3605E8) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/IConnectionMethod;(0xDA360740) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/connection/CVSRepositoryLocation$1(0xDA3607F8) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/ICVSListener;(0xDA360920) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/CVSWorkspaceRoot(0xDA3609E0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/FileNameMatcher(0xDA360EE8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Command$LocalOption(0xDA3290A8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/CheckoutWithOverwrite$CreatedResponseHandler(0xDA329290) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/CommandOutputListener(0xDA3293E0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/listeners/UpdateListener(0xDA3295F8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/Util(0xDA329A90) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSTag(0xDA32A0F0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/CVSEntryLineTag(0xDA32A588) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/listeners/ServerMessageLineMatcher(0xDA32A8D8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Commit(0xDA32AC28) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Diff(0xDA32B048) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/RemoteCommand(0xDA32B348) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/RDiff(0xDA32B5C0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Editors(0xDA32B808) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Import(0xDA32B9C0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/ICVSResourceVisitor(0xDA32BC00) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Log(0xDA32BD28) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Remove(0xDA32BFC0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Status(0xDA32C198) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Tag(0xDA32C348) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/listeners/TagListener(0xDA32C6C0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/RTag(0xDA32C8A8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Replace$CreatedResponseHandler(0xDA32CC60) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/SyncUpdate(0xDA32CE28) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Version(0xDA32D048) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/NOOPCommand(0xDA32D300) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/client/Command$GlobalOption;(0xDA32D4A8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Command$QuietOption(0xDA32D570) 3CLTEXTCLASS [Lorg/eclipse/team/internal/ccvs/core/client/Command$LocalOption;(0xDA32D6C0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Command$KSubstOption(0xDA32D7A0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/BuildCleanupListener(0xDA32DB20) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/FileModificationManager(0xDA32DE68) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/EclipseResource(0xDA32E228) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/util/SyncFileChangeListener(0xDA32E790) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/syncinfo/DeferredResourceChangeHandler(0xDA32ECB8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSMessages(0xDA32F0E0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSSyncTreeSubscriber$CVSSyncInfoToDiffConverter(0xDA32F5B0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSSyncInfo(0xDA32F710) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/syncinfo/CVSBaseResourceVariantTree(0xDA32FC48) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/syncinfo/CVSResourceVariantTree(0xDA32FEB0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSWorkspaceSubscriber$1(0xDA3306E8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/syncinfo/CVSDescendantResourceVariantByteStore(0xDA330898) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSWorkspaceSubscriber$2(0xDA330C18) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/filehistory/CVSResourceVariantFileRevision(0xDA330DB8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/RemoveEntryHandler(0xDA314380) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/StaticHandler(0xDA314568) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/StickyHandler(0xDA314768) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/UpdatedHandler(0xDA3149A8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/ValidRequestsHandler(0xDA314CF8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/ModuleExpansionHandler(0xDA314E38) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/MTHandler(0xDA314F80) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/NotifiedHandler(0xDA3151B0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/TemplateHandler(0xDA315340) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSException(0xDA3155A0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/connection/CVSServerException(0xDA3157F0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Checkout(0xDA3159D0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/CheckoutWithOverwrite(0xDA315F08) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Update(0xDA3160F0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Replace(0xDA316600) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/listeners/ICommandOutputListener(0xDA3167B8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/ICVSResource(0xDA3168E8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/ICVSRunnable(0xDA316AA8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Command$Option(0xDA316B78) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Command$GlobalOption(0xDA316D60) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/ExpandModules(0xDA316EB8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/ValidRequests(0xDA317020) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Add(0xDA3171B0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/syncinfo/FolderSyncInfo(0xDA3174C0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/syncinfo/MutableFolderSyncInfo(0xDA317A40) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/AbstractMessageCommand(0xDA317C88) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Admin(0xDA317E48) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Annotate(0xDA317FF0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/resources/EclipseResource$2(0xDA3181D8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Request(0xDAFF9028) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/Command(0xDAFF9678) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/ResponseHandler(0xDAFFA268) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/CheckedInHandler(0xDAFFA5A0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/CopyHandler(0xDAFFA788) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/ModTimeHandler(0xDAFFA950) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/NewEntryHandler(0xDAFFAB08) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/client/RemovedHandler(0xDAFFACF0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSProviderPlugin(0xDAFF4E10) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSWorkspaceSubscriber(0xDAFF4430) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/IResourceStateChangeListener(0xDAFE7F20) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/mapping/CVSActiveChangeSetCollector(0xDAFE80D0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/core/CVSSyncTreeSubscriber(0xDAF9C730) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1B99440) 3CLTEXTCLASS org/eclipse/jsch/internal/core/IUserInfo(0xDB1CEC50) 3CLTEXTCLASS org/eclipse/jsch/internal/core/ResponsiveSocketFactory(0xDB1CED58) 3CLTEXTCLASS org/eclipse/jsch/internal/core/ResponsiveSocketFactory$1(0xDB1CF190) 3CLTEXTCLASS org/eclipse/jsch/core/IPasswordStore(0x10DC12D0) 3CLTEXTCLASS org/eclipse/jsch/internal/core/JSchLocation(0x10DC13E0) 3CLTEXTCLASS org/eclipse/jsch/internal/core/PreferenceInitializer(0x10DC1720) 3CLTEXTCLASS org/eclipse/jsch/internal/core/Utils(0x10DC1940) 3CLTEXTCLASS org/eclipse/jsch/internal/core/UserInfoImpl(0x10DC1EB8) 3CLTEXTCLASS org/eclipse/jsch/internal/core/JSchProvider(0x10425ED0) 3CLTEXTCLASS org/eclipse/jsch/internal/core/IUserAuthenticator(0x10426370) 3CLTEXTCLASS org/eclipse/jsch/core/IJSchLocation(0x10426478) 3CLTEXTCLASS org/eclipse/jsch/internal/core/JSchCorePlugin(0xDAFFDA58) 3CLTEXTCLASS org/eclipse/jsch/core/IJSchService(0xDAFF5EB0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1B99DE8) 3CLTEXTCLASS com/jcraft/jsch/KeyExchange(0xDA3D6FF8) 3CLTEXTCLASS com/jcraft/jsch/DHG1(0xDA3D7480) 3CLTEXTCLASS com/jcraft/jsch/SignatureRSA(0xDA3D79B8) 3CLTEXTCLASS com/jcraft/jsch/HASH(0xDA3D7AB8) 3CLTEXTCLASS com/jcraft/jsch/jce/SHA1(0xDA3D7BC0) 3CLTEXTCLASS com/jcraft/jsch/DH(0xDA3D7D60) 3CLTEXTCLASS com/jcraft/jsch/jce/DH(0xDA3D7E98) 3CLTEXTCLASS com/jcraft/jsch/jce/SignatureRSA(0xDA3D8210) 3CLTEXTCLASS com/jcraft/jsch/jce/MD5(0xDA3D84A0) 3CLTEXTCLASS com/jcraft/jsch/jce/HMACMD5(0xDA3D8670) 3CLTEXTCLASS com/jcraft/jsch/UserAuth(0xDA3D88B0) 3CLTEXTCLASS com/jcraft/jsch/UserAuthNone(0xDA3D8A78) 3CLTEXTCLASS com/jcraft/jsch/UserAuthGSSAPIWithMIC(0xDA3D8D58) 3CLTEXTCLASS com/jcraft/jsch/UserAuthPublicKey(0xDA3D9088) 3CLTEXTCLASS com/jcraft/jsch/UserAuthPassword(0xDA3D93A8) 3CLTEXTCLASS com/jcraft/jsch/ChannelSession(0xDA3D9738) 3CLTEXTCLASS com/jcraft/jsch/ChannelShell(0xDA3D9DC8) 3CLTEXTCLASS com/jcraft/jsch/ChannelExec(0xDA3DA1C8) 3CLTEXTCLASS com/jcraft/jsch/ChannelX11(0xDA3DA628) 3CLTEXTCLASS com/jcraft/jsch/ChannelAgentForwarding(0xDA3DAC48) 3CLTEXTCLASS com/jcraft/jsch/ChannelDirectTCPIP(0xDA3DB1E0) 3CLTEXTCLASS com/jcraft/jsch/ChannelForwardedTCPIP(0xDA3DB798) 3CLTEXTCLASS com/jcraft/jsch/ChannelSftp(0xDA3DBFE0) 3CLTEXTCLASS com/jcraft/jsch/ChannelSubsystem(0xDA3DD698) 3CLTEXTCLASS com/jcraft/jsch/Channel$MyPipedInputStream(0xDA3DDAF0) 3CLTEXTCLASS com/jcraft/jsch/Channel$PassiveOutputStream(0xDA3DDC78) 3CLTEXTCLASS com/jcraft/jsch/Channel$1(0xDA3DDDA0) 3CLTEXTCLASS com/jcraft/jsch/Request(0xDA3DE070) 3CLTEXTCLASS com/jcraft/jsch/RequestWindowChange(0xDA3DE280) 3CLTEXTCLASS com/jcraft/jsch/RequestAgentForwarding(0xDA3DE480) 3CLTEXTCLASS com/jcraft/jsch/RequestX11(0xDA3DE648) 3CLTEXTCLASS com/jcraft/jsch/RequestPtyReq(0xDA3DE848) 3CLTEXTCLASS com/jcraft/jsch/RequestEnv(0xDA3DEAB8) 3CLTEXTCLASS com/jcraft/jsch/RequestExec(0xDA3DEC98) 3CLTEXTCLASS com/jcraft/jsch/Session(0x10E06E20) 3CLTEXTCLASS com/jcraft/jsch/JSchAuthCancelException(0x10E086B0) 3CLTEXTCLASS com/jcraft/jsch/JSchPartialAuthException(0x10E08830) 3CLTEXTCLASS com/jcraft/jsch/Channel(0x10E08A30) 3CLTEXTCLASS com/jcraft/jsch/Session$GlobalRequestReply(0x10E09410) 3CLTEXTCLASS com/jcraft/jsch/Buffer(0x10E09600) 3CLTEXTCLASS com/jcraft/jsch/Packet(0x10E09A28) 3CLTEXTCLASS com/jcraft/jsch/UIKeyboardInteractive(0x10E09C18) 3CLTEXTCLASS com/jcraft/jsch/IO(0x10E09D18) 3CLTEXTCLASS com/jcraft/jsch/Random(0x10E0A028) 3CLTEXTCLASS com/jcraft/jsch/jce/Random(0x10E0A0F0) 3CLTEXTCLASS com/jcraft/jsch/Cipher(0x10E0A230) 3CLTEXTCLASS com/jcraft/jsch/jce/AES256CTR(0x10E0A368) 3CLTEXTCLASS com/jcraft/jsch/jce/AES192CTR(0x10E0A5B0) 3CLTEXTCLASS com/jcraft/jsch/jce/AES128CTR(0x10E0A7F8) 3CLTEXTCLASS com/jcraft/jsch/jce/AES256CBC(0x10E0AA40) 3CLTEXTCLASS com/jcraft/jsch/KnownHosts(0x10DD5D20) 3CLTEXTCLASS com/jcraft/jsch/HostKey(0x10DD63B8) 3CLTEXTCLASS com/jcraft/jsch/KnownHosts$HashedHostKey(0x10DD6710) 3CLTEXTCLASS com/jcraft/jsch/MAC(0x10DD69F0) 3CLTEXTCLASS com/jcraft/jsch/Util(0x10DD6B08) 3CLTEXTCLASS com/jcraft/jsch/jce/AES192CBC(0x10DD7030) 3CLTEXTCLASS com/jcraft/jsch/jce/AES128CBC(0x10DD7278) 3CLTEXTCLASS com/jcraft/jsch/jce/TripleDESCTR(0x10DD74C0) 3CLTEXTCLASS com/jcraft/jsch/jce/ARCFOUR(0x10DD7720) 3CLTEXTCLASS com/jcraft/jsch/jce/ARCFOUR128(0x10DD7920) 3CLTEXTCLASS com/jcraft/jsch/JSch(0x10CED398) 3CLTEXTCLASS com/jcraft/jsch/HostKeyRepository(0x10CEDBB0) 3CLTEXTCLASS com/jcraft/jsch/Identity(0x10CEDD00) 3CLTEXTCLASS com/jcraft/jsch/Logger(0x10CEDE20) 3CLTEXTCLASS com/jcraft/jsch/JSch$1(0x10CEDF58) 3CLTEXTCLASS com/jcraft/jsch/jce/ARCFOUR256(0x10CEE088) 3CLTEXTCLASS com/jcraft/jsch/ProxyHTTP(0x10BD5E08) 3CLTEXTCLASS com/jcraft/jsch/ProxySOCKS5(0x10BD6218) 3CLTEXTCLASS com/jcraft/jsch/UserInfo(0x10BEEB30) 3CLTEXTCLASS com/jcraft/jsch/SocketFactory(0x10BEEC30) 3CLTEXTCLASS com/jcraft/jsch/Proxy(0x10BEED00) 3CLTEXTCLASS com/jcraft/jsch/JSchException(0x10CC9908) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1B9BF98) 3CLTEXTCLASS org/eclipse/ui/console/actions/ClearOutputAction(0xD9028168) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleResourceBundleMessages(0xD9028450) 3CLTEXTCLASS org/eclipse/ui/internal/console/ScrollLockAction(0xD9028690) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsolePageParticipantExtension(0xD9028930) 3CLTEXTCLASS org/eclipse/ui/console/IConsolePageParticipant(0xD9028B50) 3CLTEXTCLASS [Lorg/eclipse/ui/console/IConsolePageParticipant;(0xD9028C50) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleView$3(0xD9028D10) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleView$5(0xD9028EB0) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleView$2(0xD9029058) 3CLTEXTCLASS org/eclipse/ui/console/AbstractConsole$PropertyNotifier(0xD90291C0) 3CLTEXTCLASS org/eclipse/ui/internal/console/IOConsoleViewer$1(0xD90293A8) 3CLTEXTCLASS org/eclipse/ui/console/PatternMatchEvent(0xD90294F0) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleView(0xD90101E0) 3CLTEXTCLASS org/eclipse/ui/internal/console/IConsoleHelpContextIds(0xD9010F38) 3CLTEXTCLASS org/eclipse/ui/console/TextConsolePage(0xD90111C0) 3CLTEXTCLASS org/eclipse/ui/internal/console/IOConsolePage(0xD9011B90) 3CLTEXTCLASS org/eclipse/ui/internal/console/PinConsoleAction(0xD9011F60) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsolePluginImages(0xD9012218) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleDropDownAction(0xD9012650) 3CLTEXTCLASS org/eclipse/ui/internal/console/ShowConsoleAction(0xD9012BD0) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleDropDownAction$1(0xD9012F00) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleDropDownAction$2(0xD9013230) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleFactoryExtension(0xD9013498) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/console/ConsoleFactoryExtension;(0xD90137A0) 3CLTEXTCLASS org/eclipse/ui/internal/console/OpenConsoleAction(0xD9013900) 3CLTEXTCLASS org/eclipse/ui/internal/console/OpenConsoleAction$ConsoleFactoryAction(0xD9013DE8) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleView$6(0xD9014020) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleView$4(0xD90141F8) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleView$7(0xD90143A8) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleWorkbenchPart(0xD90145A0) 3CLTEXTCLASS org/eclipse/ui/console/TextConsoleViewer(0xD9014B90) 3CLTEXTCLASS org/eclipse/ui/internal/console/IOConsoleViewer(0xD9015C00) 3CLTEXTCLASS org/eclipse/ui/console/TextConsolePage$1(0xD9016298) 3CLTEXTCLASS org/eclipse/ui/console/TextConsolePage$2(0xD90163C0) 3CLTEXTCLASS org/eclipse/ui/internal/console/IOConsolePage$1(0xD9016560) 3CLTEXTCLASS org/eclipse/ui/console/TextConsoleViewer$3(0xD90167B8) 3CLTEXTCLASS org/eclipse/ui/console/TextConsoleViewer$1(0xD9016A18) 3CLTEXTCLASS org/eclipse/ui/console/TextConsoleViewer$2(0xD9016B70) 3CLTEXTCLASS org/eclipse/ui/console/TextConsoleViewer$4(0xD9016CF0) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleDocumentAdapter(0xD9016EC0) 3CLTEXTCLASS org/eclipse/ui/internal/console/IOConsoleViewer$2(0xD9017458) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/console/IOConsolePartition;(0xD90175A8) 3CLTEXTCLASS org/eclipse/ui/console/TextConsoleViewer$HyperlinkColorChangeListener(0xD9017660) 3CLTEXTCLASS org/eclipse/ui/console/TextConsoleViewer$5(0xD90177D0) 3CLTEXTCLASS org/eclipse/ui/console/TextConsolePage$3(0xD9017910) 3CLTEXTCLASS org/eclipse/ui/console/actions/TextViewerAction(0xD9017AE0) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleDocument(0x10D15968) 3CLTEXTCLASS org/eclipse/ui/internal/console/HyperlinkUpdater(0x10D15D90) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsolePatternMatcher(0x10D15F28) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsolePatternMatcher$MatchJob(0x10D16370) 3CLTEXTCLASS org/eclipse/ui/console/IOConsoleInputStream(0x10D16720) 3CLTEXTCLASS org/eclipse/ui/internal/console/IOConsolePartitioner(0x10D16AF0) 3CLTEXTCLASS org/eclipse/ui/internal/console/IOConsolePartitioner$TrimJob(0x10D17490) 3CLTEXTCLASS org/eclipse/ui/console/TextConsole$MatcherSchedulingRule(0x10D17810) 3CLTEXTCLASS org/eclipse/ui/internal/console/IOConsolePartitioner$QueueProcessingJob(0x10D17A80) 3CLTEXTCLASS [Lorg/eclipse/ui/console/IConsole;(0x10D17CF0) 3CLTEXTCLASS org/eclipse/ui/console/IOConsoleOutputStream(0x10D17DE0) 3CLTEXTCLASS org/eclipse/ui/console/IHyperlink(0x10D18218) 3CLTEXTCLASS org/eclipse/ui/internal/console/PatternMatchListenerExtension(0x10D18320) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleTypePropertyTester(0x10D18770) 3CLTEXTCLASS org/eclipse/ui/internal/console/PatternMatchListener(0x10D188B8) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsolePatternMatcher$CompiledPatternMatchListener(0x10D18AB0) 3CLTEXTCLASS [Lorg/eclipse/ui/internal/console/PatternMatchListener;(0x10D18BF0) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleManager$ConsoleNotifier(0x10D18CB0) 3CLTEXTCLASS org/eclipse/ui/internal/console/IOConsolePartitioner$1(0x10D18EB0) 3CLTEXTCLASS org/eclipse/ui/internal/console/IOConsolePartitioner$PendingPartition(0x10D18FD8) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleMessages(0x10D19150) 3CLTEXTCLASS org/eclipse/ui/console/IConsoleView(0x10D19330) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleHyperlinkPosition(0x10C5BDC8) 3CLTEXTCLASS org/eclipse/ui/console/IConsoleDocumentPartitioner(0x10C5BFA8) 3CLTEXTCLASS org/eclipse/ui/console/IConsoleConstants(0x10C5C070) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleManager(0x10C5C2D0) 3CLTEXTCLASS org/eclipse/ui/console/IPatternMatchListenerDelegate(0x10C5C8B0) 3CLTEXTCLASS org/eclipse/ui/console/IPatternMatchListener(0x10C5C980) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleManager$1(0x10C5CB68) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleManager$RepaintJob(0x10C5CF08) 3CLTEXTCLASS org/eclipse/ui/internal/console/ConsoleManager$ShowConsoleViewJob(0x10C5D330) 3CLTEXTCLASS org/eclipse/ui/console/AbstractConsole$Lifecycle(0x10C5D698) 3CLTEXTCLASS org/eclipse/ui/internal/console/IOConsolePartition(0x10C5D848) 3CLTEXTCLASS org/eclipse/ui/console/IOConsole(0x10A6AEB8) 3CLTEXTCLASS org/eclipse/ui/console/MessageConsole(0x10A6B3D0) 3CLTEXTCLASS org/eclipse/ui/console/ConsolePlugin(0x10A6B740) 3CLTEXTCLASS org/eclipse/ui/console/IConsoleManager(0x10A6BAA8) 3CLTEXTCLASS org/eclipse/ui/console/IConsoleListener(0x10A6BBE0) 3CLTEXTCLASS org/eclipse/ui/console/TextConsole(0x102243B8) 3CLTEXTCLASS org/eclipse/ui/console/AbstractConsole(0x10423730) 3CLTEXTCLASS org/eclipse/ui/console/IConsole(0x10BEB6F0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE10A89F0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ssh2/CVSSSH2ServerConnection$1(0x10D4F928) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ssh2/CVSSSH2ServerConnection$2(0x10D4FA68) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ssh2/CVSSSH2ServerConnection$SSH2IOException(0x10D4FBB0) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ssh2/CVSSSH2Messages(0x10D4FD00) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ssh2/JSchSession(0x10D4FF80) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ssh2/JSchSession$1(0x10D50420) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ssh2/PServerSSH2Method(0xDA399E88) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ssh2/CVSSSH2ServerConnection(0xDA399FE8) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ssh2/CVSSSH2Plugin(0xDA399940) 3CLTEXTCLASS org/eclipse/team/internal/ccvs/ssh2/CVSSSH2Method(0xDA397350) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE17E92E8) 3CLTEXTCLASS org/eclipse/jsch/internal/ui/JSchUIPlugin(0xDB17FB18) 3CLTEXTCLASS org/eclipse/jsch/internal/ui/authenticator/WorkbenchUserAuthenticator(0xDB114558) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1BDD0C8) 3CLTEXTCLASS org/eclipse/compare/internal/ResourceCompareInput$2(0xDA099D58) 3CLTEXTCLASS org/eclipse/compare/structuremergeviewer/IStructureComparator(0xDA09A2D0) 3CLTEXTCLASS org/eclipse/compare/structuremergeviewer/Differencer(0xDA09A3B8) 3CLTEXTCLASS org/eclipse/compare/internal/ResourceCompareInput$4(0xDA09A758) 3CLTEXTCLASS org/eclipse/compare/CompareEditorInput$1(0xDA09A8A0) 3CLTEXTCLASS org/eclipse/compare/internal/CompareContainer(0xDA09AA48) 3CLTEXTCLASS org/eclipse/compare/patch/ApplyPatchOperation(0xDA09AD18) 3CLTEXTCLASS org/eclipse/compare/patch/ApplyPatchOperation$1(0xDA09B120) 3CLTEXTCLASS org/eclipse/compare/internal/patch/Utilities(0xDA09B250) 3CLTEXTCLASS org/eclipse/compare/internal/patch/Utilities$1(0xDA09B4C0) 3CLTEXTCLASS org/eclipse/compare/patch/IFilePatch(0xDA09B5F0) 3CLTEXTCLASS org/eclipse/compare/internal/patch/FilePatch(0xDA09B760) 3CLTEXTCLASS [Lorg/eclipse/compare/patch/IFilePatch;(0xDA09B910) 3CLTEXTCLASS org/eclipse/compare/internal/EditionAction(0xDA09B9D8) 3CLTEXTCLASS org/eclipse/compare/internal/ReplaceWithEditionAction(0xDA09BE00) 3CLTEXTCLASS org/eclipse/compare/IContentChangeNotifier(0xDA09BF08) 3CLTEXTCLASS org/eclipse/compare/IStreamContentAccessor(0xDA09BFC8) 3CLTEXTCLASS org/eclipse/compare/BufferedContent(0xDA09C0B0) 3CLTEXTCLASS org/eclipse/compare/IEncodedStreamContentAccessor(0xDA09C2E0) 3CLTEXTCLASS org/eclipse/compare/IEditableContent(0xDA09C398) 3CLTEXTCLASS org/eclipse/compare/IModificationDate(0xDA09C468) 3CLTEXTCLASS org/eclipse/compare/IResourceProvider(0xDA09C518) 3CLTEXTCLASS org/eclipse/compare/IEditableContentExtension(0xDA09C5C8) 3CLTEXTCLASS org/eclipse/compare/ResourceNode(0xDA09C6F0) 3CLTEXTCLASS org/eclipse/compare/internal/EditionAction$DocumentBufferNode(0xDA09CB88) 3CLTEXTCLASS org/eclipse/compare/internal/ReplaceWithPreviousEditionAction(0xDA09CDA0) 3CLTEXTCLASS org/eclipse/compare/internal/CompareWithEditionAction(0xDA09CEC8) 3CLTEXTCLASS org/eclipse/compare/IContentChangeListener(0xDA09CFD0) 3CLTEXTCLASS org/eclipse/compare/internal/ComparePreferencePage(0xDA071A40) 3CLTEXTCLASS org/eclipse/compare/internal/TabFolderLayout(0xDA072550) 3CLTEXTCLASS org/eclipse/compare/internal/ICompareUIConstants(0xDA0726B0) 3CLTEXTCLASS org/eclipse/compare/ICompareNavigator(0xDA072938) 3CLTEXTCLASS org/eclipse/compare/CompareNavigator(0xDA072A10) 3CLTEXTCLASS org/eclipse/compare/internal/CompareEditorInputNavigator(0xDA072C00) 3CLTEXTCLASS org/eclipse/compare/Splitter(0xDA073460) 3CLTEXTCLASS org/eclipse/compare/CompareViewerPane(0xDA074370) 3CLTEXTCLASS org/eclipse/compare/CompareViewerSwitchingPane(0xDA0755D8) 3CLTEXTCLASS org/eclipse/compare/internal/CompareContentViewerSwitchingPane(0xDA076868) 3CLTEXTCLASS org/eclipse/compare/internal/CompareStructureViewerSwitchingPane(0xDA077C60) 3CLTEXTCLASS org/eclipse/compare/CompareEditorInput$10(0xDA078F90) 3CLTEXTCLASS org/eclipse/compare/internal/CompareUIPlugin$CompareRegistry(0xDA367D70) 3CLTEXTCLASS org/eclipse/compare/structuremergeviewer/ICompareInput(0xDA368038) 3CLTEXTCLASS org/eclipse/compare/ITypedElement(0xDA368170) 3CLTEXTCLASS org/eclipse/compare/structuremergeviewer/IDiffElement(0xDA368268) 3CLTEXTCLASS org/eclipse/compare/structuremergeviewer/DiffElement(0xDA368370) 3CLTEXTCLASS org/eclipse/compare/structuremergeviewer/IDiffContainer(0xDA368528) 3CLTEXTCLASS org/eclipse/compare/structuremergeviewer/DiffContainer(0xDA368660) 3CLTEXTCLASS org/eclipse/compare/structuremergeviewer/DiffNode(0xDA368928) 3CLTEXTCLASS org/eclipse/compare/internal/BaseCompareAction(0xDA368E18) 3CLTEXTCLASS org/eclipse/compare/internal/AddFromHistoryAction(0xDA368FA8) 3CLTEXTCLASS org/eclipse/compare/internal/Utilities(0xDA3692A0) 3CLTEXTCLASS org/eclipse/compare/internal/CompareAction(0xDA36A030) 3CLTEXTCLASS org/eclipse/compare/internal/ResourceCompareInput(0xDA36A360) 3CLTEXTCLASS org/eclipse/compare/CompareConfiguration(0xDA36AC08) 3CLTEXTCLASS org/eclipse/compare/internal/DiffImageDescriptor(0xDA36B478) 3CLTEXTCLASS org/eclipse/compare/ICompareInputLabelProvider(0xDA36B788) 3CLTEXTCLASS org/eclipse/compare/CompareConfiguration$DefaultLabelProvider(0xDA36B908) 3CLTEXTCLASS org/eclipse/compare/structuremergeviewer/DiffTreeViewer(0xDA384208) 3CLTEXTCLASS org/eclipse/compare/structuremergeviewer/StructureDiffViewer(0xDA385118) 3CLTEXTCLASS org/eclipse/compare/internal/ComparePreferenceInitializer(0xDA385D50) 3CLTEXTCLASS org/eclipse/compare/internal/CompareUIPlugin(0xDA36EC80) 3CLTEXTCLASS org/eclipse/compare/CompareEditorInput(0xDAFF6A88) 3CLTEXTCLASS org/eclipse/compare/ICompareContainer(0xDD9204D0) 3CLTEXTCLASS org/eclipse/compare/IPropertyChangeNotifier(0xDA37BB28) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1846908) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/AbstractChangeNode(0xD9146970) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/InternalAPI(0xD9146DA0) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/RefactoringWizardDialog2$1(0xD9146EC8) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/Messages(0xD9147000) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/UIPerformChangeOperation$1(0xD9147120) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/UIPerformChangeOperation$2(0xD91472A8) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/FinishResult(0xD91473E0) 3CLTEXTCLASS org/eclipse/ltk/ui/refactoring/resource/RenameResourceWizard(0xD9147630) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/history/SortableRefactoringHistoryControl(0xD913EFD0) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/RefactoringWizardDialog2$MessageBox(0xD9140438) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/RefactoringWizardDialog2$PageBook(0xD9141348) 3CLTEXTCLASS org/eclipse/ltk/ui/refactoring/UserInputWizardPage(0xD9141BB8) 3CLTEXTCLASS org/eclipse/ltk/ui/refactoring/resource/DeleteResourcesWizard$DeleteResourcesRefactoringConfigurationPage(0xD9142088) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/UIPerformChangeOperation(0xD9142550) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/RefactoringStatusViewer(0xD9142E60) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/IPreviewWizardPage(0xD9143BA0) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/PreviewWizardPage(0xD9143D68) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/PreviewWizardPage$5(0xD9144A18) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/PreviewWizardPage$NextChange(0xD9144BE0) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/PreviewWizardPage$PreviousChange(0xD9144EF0) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/PreviewWizardPage$FilterDropDownAction(0xD9145210) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/util/ViewerPane(0xD9145D18) 3CLTEXTCLASS org/eclipse/ltk/ui/refactoring/IChangePreviewViewer(0xD9146588) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/PreviewNode(0xD91466A0) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/RefactoringStatusDialog(0xD90D21A0) 3CLTEXTCLASS org/eclipse/ltk/ui/refactoring/history/IRefactoringHistoryControl(0xD90D25C0) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/history/RefactoringHistoryControl(0xD90D2DD8) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/RefactoringWizardDialog(0xD90D3F88) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/RefactoringWizardDialog2(0xD90D4560) 3CLTEXTCLASS org/eclipse/ltk/ui/refactoring/history/ISortableRefactoringHistoryControl(0xD90D52A0) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/ChangeElementTreeViewer(0xD90D5730) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/RefactoringUIMessages(0xD90F8E08) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/RefactoringPluginImages(0xD90F9220) 3CLTEXTCLASS org/eclipse/ltk/ui/refactoring/RefactoringWizardOpenOperation(0xD90F97E8) 3CLTEXTCLASS org/eclipse/ltk/ui/refactoring/RefactoringWizardOpenOperation$1(0xD90F9AE0) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/WorkbenchRunnableAdapter(0xD90F9D78) 3CLTEXTCLASS org/eclipse/ltk/ui/refactoring/RefactoringWizardPage(0xD90FA050) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/IErrorWizardPage(0xD90FA2D8) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/ErrorWizardPage(0xD90FA490) 3CLTEXTCLASS org/eclipse/ltk/ui/refactoring/RefactoringUI(0xD90FA958) 3CLTEXTCLASS org/eclipse/ltk/ui/refactoring/RefactoringWizard(0xDA371900) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/actions/AbstractResourcesHandler(0xDA3722C8) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/actions/DeleteResourcesHandler(0xDA3725E0) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/UIQueryFactory(0x10DBA1D0) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/history/RefactoringPropertyPageTester(0x10DBA3C0) 3CLTEXTCLASS org/eclipse/ltk/ui/refactoring/resource/DeleteResourcesWizard(0x10DBA6F8) 3CLTEXTCLASS org/eclipse/ltk/internal/ui/refactoring/RefactoringUIPlugin(0x104243A0) 3CLTEXTCLASS org/eclipse/ltk/ui/refactoring/model/AbstractSynchronizationCompareAdapter(0x10BEA0C0) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1847468) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/RenameRefactoring(0x1107FDD8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/MoveProcessor(0x1107FF68) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/MoveRefactoring(0x110800C0) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/CopyProcessor(0x11080260) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/CopyRefactoring(0x110803B8) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/resource/RenameResourceRefactoringContribution(0x11080538) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/resource/RenameResourceDescriptor(0x110807D0) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/resource/MoveResourcesRefactoringContribution(0x11080B18) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/resource/MoveResourcesDescriptor(0x11080E30) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/resource/DeleteResourcesRefactoringContribution(0x110811D0) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/resource/DeleteResourceChange$1(0x11081498) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/resource/undostates/ResourceUndoState(0x110815F8) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/resource/undostates/AbstractResourceUndoState(0x11081828) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/resource/undostates/ContainerUndoState(0x11081B08) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/resource/undostates/ProjectUndoState(0x11081F38) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/resource/undostates/FolderUndoState(0x11082248) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/resource/undostates/FileUndoState(0x110824E8) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/resource/undostates/MarkerUndoState(0x110828C0) 3CLTEXTCLASS [Lorg/eclipse/ltk/internal/core/refactoring/resource/undostates/MarkerUndoState;(0x11082A78) 3CLTEXTCLASS [Lorg/eclipse/ltk/internal/core/refactoring/resource/undostates/AbstractResourceUndoState;(0x11082B30) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/resource/undostates/IFileContentDescription(0x11082BD0) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/CompositeChange$1(0x11082CC0) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/RefactoringHistoryService$5(0x11082E28) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/history/RefactoringHistoryEvent(0x11082FD0) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/DefaultRefactoringDescriptorProxy(0x11083160) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/RefactoringSessionTransformer(0x11083398) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/RefactoringSessionTransformer$AttributeComparator(0x11083778) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/RefactoringHistoryManager$DOMWriter(0x11083970) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/RefactoringHistoryManager$2(0x11083D78) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/UnknownRefactoringDescriptor(0x11083EC0) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/Refactoring(0xD9038150) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/ProcessorBasedRefactoring(0xD9038450) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/DeleteRefactoring(0xD9038B68) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/ProcessorBasedRefactoring$ProcessorChange(0xD9038D38) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/IConditionChecker(0xD9038FD8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/resource/DeleteResourcesDescriptor(0xD90390E8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/resource/DeleteResourceChange(0xD90393D8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/CheckConditionsOperation(0xD9039828) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/RefactoringCoreMessages(0xD9039A68) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/Resources(0xD9039DB8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/PerformChangeOperation(0xD903A1F8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/CreateChangeOperation(0xD903A638) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/CreateChangeOperation$1(0xD903A9B0) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/UndoManager2(0xD903ABE0) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/UndoManager2$NullQuery(0xD903B1F8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/RefactoringTickProvider(0xD903B350) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/CheckConditionsContext(0xD903B528) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/ValidateEditChecker(0xD903B8D8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/ResourceChangeChecker(0xD903BB10) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/resource/DeleteResourcesProcessor$1(0xD903BDD8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/SharableParticipants(0xD903BF20) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/resource/ResourceProcessors(0xD903C080) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/RefactoringArguments(0xD903C2C0) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/DeleteArguments(0xD903C3C0) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/ParticipantManager(0xD903C4C0) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/RenameArguments(0xD903C870) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/MoveArguments(0xD903CA10) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/CreateArguments(0xD903CBB8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/CopyArguments(0xD903CCC0) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/ParticipantExtensionPoint(0xD903CE58) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/RefactoringParticipant(0xD903D248) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/RenameParticipant(0xD903D4B8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/MoveParticipant(0xD903D648) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/DeleteParticipant(0xD903D7D8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/CreateParticipant(0xD903D968) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/CopyParticipant(0xD903DAF8) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/ParticipantDescriptor(0xD903DC78) 3CLTEXTCLASS [Lorg/eclipse/ltk/core/refactoring/participants/RefactoringParticipant;(0xD903DFF0) 3CLTEXTCLASS [Lorg/eclipse/ltk/core/refactoring/participants/DeleteParticipant;(0xD903E0A8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/ResourceChangeChecker$1(0xD903E160) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/CheckConditionsContext$1(0xD903E300) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/Messages(0xD903E420) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/resource/UndoDeleteResourceChange(0xD903E570) 3CLTEXTCLASS [Lorg/eclipse/ltk/core/refactoring/Change;(0xD903E828) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/NotCancelableProgressMonitor(0xD903E908) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/PerformChangeOperation$1(0xD903EA38) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/resource/ResourceChange$ValidationState(0xD903EC98) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/RefactoringUndoContext(0xD903EF60) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/RefactoringHistoryManager(0xD903F138) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/RefactoringContribution(0xD903FDF8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/RenameProcessor(0xD903FF98) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/UndoableOperation2ChangeAdapter(0xD99F3140) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/ChangeDescriptor(0xD99F3810) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/RefactoringChangeDescriptor(0xD99F38F8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/resource/ResourceChange(0xD99F3A48) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/resource/MoveResourceChange(0xD99F3E48) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/TextEditBasedChange(0xD99F4290) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/TextChange(0xD99F4790) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/CompositeChange(0xD99F4F20) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/TextFileChange(0xD99F5618) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/RefactoringStatus(0xD99F5BF8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/DocumentChange(0xD99F62E0) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/DeleteProcessor(0xD99F6678) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/resource/DeleteResourcesProcessor(0xD99F67D8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/IResourceMapper(0xD99F6E88) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/RefactoringHistoryService(0x10EE51E8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/history/RefactoringHistory(0x10EE5F28) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/RefactoringHistoryImplementation(0x10EE6060) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/RefactoringHistoryService$NullRefactoringHistory(0x10EE6350) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/RefactoringDescriptorProxy(0x10EE64E8) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/RefactoringDescriptorProxyAdapter(0x10EE66C8) 3CLTEXTCLASS [Lorg/eclipse/ltk/core/refactoring/RefactoringDescriptorProxy;(0x10EE6888) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/RefactoringHistoryService$1(0x10EE69A8) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/RefactoringHistoryService$2(0x10EE6B30) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/RefactoringHistoryService$3(0x10EE6C58) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/RefactoringHistorySerializer(0x10EE6D88) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/IValidationCheckResultQuery(0x10EE7010) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/RefactoringDescriptor(0x10ED4A30) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/DefaultRefactoringDescriptor(0x10ED4E18) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/history/IRefactoringHistoryService(0x10ED4FB8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/RefactoringCore(0x10ED5168) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/RefactoringCore$DefaultQueryFactory(0x10ED5338) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/participants/RefactoringProcessor(0x10ED54A0) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/Change(0x10ED56E0) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/history/IRefactoringHistoryListener(0x104553B8) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/IUndoManager(0x10455468) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/history/RefactoringContributionManager(0x10455620) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/NullChange(0x104559C0) 3CLTEXTCLASS org/eclipse/ltk/internal/core/refactoring/RefactoringCorePlugin(0x102BE408) 3CLTEXTCLASS org/eclipse/ltk/core/refactoring/IValidationCheckResultQueryFactory(0x10A6ED80) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE14C3CD0) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileMap(0xDAB581A8) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileMap$Flags(0xDAB58808) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager$GeneratedPackageFragmentRoot(0xDAB58998) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager(0xDA99B8F0) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedSourceFolderManager(0xDA99C688) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/AptProject(0xDA99CBE8) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/generatedfile/CompilationUnitHelper(0xDA99CEE0) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/generatedfile/WorkingCopyCleanupListener(0xDA99D1C8) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/util/ManyToMany(0xDA99D3E8) 3CLTEXTCLASS org/eclipse/jdt/apt/core/util/IFactoryPath(0xDAD4A1A0) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedResourceChangeListener(0xDAD4A2D8) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/AptCompilationParticipant$1(0xDAD4A5F8) 3CLTEXTCLASS org/eclipse/jdt/apt/core/util/AptPreferenceConstants(0xDAD4A728) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/util/AptCorePreferenceInitializer(0xDAD4A940) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedResourceChangeListener$PostChangeVisitor(0xDAD4AAD8) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedResourceChangeListener$PreBuildVisitor(0xDAD4ACA0) 3CLTEXTCLASS org/eclipse/jdt/apt/core/util/AptConfig(0xDA9EE740) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/AptPlugin(0xDAD2F090) 3CLTEXTCLASS org/eclipse/jdt/apt/core/internal/AptCompilationParticipant(0xDAD2EB48) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE111DF50) 3CLTEXTCLASS org/eclipse/compare/internal/core/LCS(0xD99FA640) 3CLTEXTCLASS org/eclipse/compare/rangedifferencer/RangeComparatorLCS(0xD99FA8F8) 3CLTEXTCLASS org/eclipse/compare/internal/core/Messages(0xD99FAC08) 3CLTEXTCLASS org/eclipse/compare/internal/core/patch/LineReader(0xDA0CE038) 3CLTEXTCLASS [Lorg/eclipse/compare/internal/core/patch/FilePatch2;(0xDA0CE3D8) 3CLTEXTCLASS org/eclipse/compare/rangedifferencer/AbstractRangeDifferenceFactory(0xDA0CE4A0) 3CLTEXTCLASS org/eclipse/compare/rangedifferencer/IRangeComparator(0xDA0CE610) 3CLTEXTCLASS org/eclipse/compare/rangedifferencer/RangeDifference(0xDA0CE720) 3CLTEXTCLASS org/eclipse/compare/rangedifferencer/RangeDifferencer(0xDA0CEAB0) 3CLTEXTCLASS org/eclipse/compare/rangedifferencer/RangeDifferencer$1(0xDA0CEEE8) 3CLTEXTCLASS org/eclipse/compare/patch/IFilePatch2(0xDA0CD7E0) 3CLTEXTCLASS org/eclipse/compare/internal/core/patch/FilePatch2(0xDA0CD958) 3CLTEXTCLASS [Lorg/eclipse/compare/rangedifferencer/RangeDifference;(0xDA0CDE30) 3CLTEXTCLASS org/eclipse/compare/internal/core/ComparePlugin(0xDA0BEC98) 3CLTEXTCLASS org/eclipse/compare/patch/ReaderCreator(0xDA0BEEA8) 3CLTEXTCLASS org/eclipse/compare/internal/core/patch/PatchReader(0xDA0BE5A8) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1E676C0) 3CLTEXTCLASS org/eclipse/jdt/internal/junit/ui/TestMethodSelectionDialog(0xD97D95F8) 3CLTEXTCLASS org/eclipse/jdt/internal/junit/wizards/UpdateTestSuite(0xD97D9C38) 3CLTEXTCLASS org/eclipse/jdt/internal/junit/ui/GotoReferencedTestAction(0xD97D8C40) 3CLTEXTCLASS org/eclipse/jdt/internal/junit/ui/JUnitPlugin(0xD97C88B8) 3CLTEXTCLASS org/eclipse/jdt/internal/junit/ui/JUnitQuickFixProcessor(0xD97C8370) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1F29F40) 3CLTEXTCLASS org/eclipse/debug/ui/actions/ContextualLaunchAction(0xD90E8DC8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/DebugContextualLaunchAction(0xD90E9410) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/RunContextualLaunchAction(0xD90E9540) 3CLTEXTCLASS org/eclipse/debug/internal/ui/DebugUIPlugin$PendingLaunch(0xD90E96D8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/DebugUIPlugin$9(0xD90E98B0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ProcessConsole(0x110C7F58) 3CLTEXTCLASS org/eclipse/debug/ui/console/ConsoleColorProvider(0x110C8A60) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ProcessConsole$2(0x110C8D70) 3CLTEXTCLASS org/eclipse/debug/internal/ui/ColorManager(0x110C8FC8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ProcessConsole$StreamListener(0x110C91C0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ProcessConsole$InputReadJob(0x110C9528) 3CLTEXTCLASS org/eclipse/debug/ui/console/IConsoleLineTracker(0x110C9798) 3CLTEXTCLASS [Lorg/eclipse/debug/ui/console/IConsoleLineTracker;(0x110C9880) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ProcessTypePropertyTester(0x110C9950) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ProcessConsole$1(0x110C9AA0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ConsoleMessages(0x110C9C00) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/RemoveAllTerminatedAction(0x110C9DD0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ConsoleShowPreferencesAction(0x110CA120) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ProcessConsolePageParticipant(0x110CA348) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ShowWhenContentChangesAction(0x110CAAD0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ShowStandardOutAction(0x110CAE28) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ShowStandardErrorAction(0x110CB150) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ConsoleRemoveLaunchAction(0x110CB4A0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ConsoleRemoveAllTerminatedAction(0x110CB9E0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ConsoleTerminateAction(0x110CBDD8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ProcessConsolePageParticipant$EOFHandler(0x110CC1E0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/stringsubstitution/SelectedResourceManager$4(0x110CC380) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/expressions/WatchExpressionFactoryTester(0x110CC4C8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/expressions/WatchHandler(0x110CC6A0) 3CLTEXTCLASS org/eclipse/debug/ui/actions/IWatchExpressionFactoryAdapter2(0x110CCA28) 3CLTEXTCLASS org/eclipse/debug/ui/contexts/IDebugContextProvider(0x110CCAE8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/stringsubstitution/SelectedResourceManager$1(0x110CCBE0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/stringsubstitution/SelectedResourceManager$2(0x110CCD18) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/LaunchConfigurationTypeContribution(0x110CCE58) 3CLTEXTCLASS org/eclipse/debug/ui/actions/LaunchAction(0x110CD048) 3CLTEXTCLASS org/eclipse/debug/internal/ui/DefaultLabelProvider(0x110CD4D8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/PerspectiveManager$1(0x110CDE10) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ProcessConsolePageParticipant$1(0x110CDF80) 3CLTEXTCLASS org/eclipse/debug/internal/ui/contextlaunching/ContextMessages(0x110CE0B8) 3CLTEXTCLASS org/eclipse/debug/ui/actions/RulerToggleBreakpointActionDelegate(0x110CE270) 3CLTEXTCLASS org/eclipse/debug/ui/actions/ToggleBreakpointAction(0x110CE4E0) 3CLTEXTCLASS org/eclipse/debug/ui/actions/ToggleBreakpointAction$1(0x110CE948) 3CLTEXTCLASS org/eclipse/debug/ui/actions/RunToLineActionDelegate(0x110CEA90) 3CLTEXTCLASS org/eclipse/debug/ui/actions/RunToLineActionDelegate$DebugContextListener(0x110CEF38) 3CLTEXTCLASS org/eclipse/debug/ui/actions/RunToLineActionDelegate$1(0x110CF120) 3CLTEXTCLASS org/eclipse/debug/ui/actions/RulerBreakpointAction(0x110CF368) 3CLTEXTCLASS org/eclipse/debug/ui/actions/RulerEnableDisableBreakpointActionDelegate(0x110CF678) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/breakpoints/RulerEnableDisableBreakpointAction(0x110CF868) 3CLTEXTCLASS org/eclipse/debug/ui/InspectPopupDialog(0xD93C4688) 3CLTEXTCLASS org/eclipse/debug/ui/contexts/IDebugContextManager(0xD93C4DF8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/contexts/DebugContextManager(0xD93C4EF0) 3CLTEXTCLASS org/eclipse/debug/ui/contexts/IDebugContextService(0xD93C51D8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/contexts/DebugContextManager$WindowListener(0xD93C5368) 3CLTEXTCLASS org/eclipse/debug/internal/ui/contexts/DebugModelContextBindingManager(0xD93C5558) 3CLTEXTCLASS org/eclipse/debug/internal/ui/contexts/DebugModelContextBindingManager$1(0xD93C5DC8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/contexts/DebugWindowContextService(0xD93C60B0) 3CLTEXTCLASS [Lorg/eclipse/debug/internal/ui/contexts/DebugWindowContextService;(0xD93C6758) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/ViewContextManager(0xD93C6820) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/ViewContextService(0xD93C6A90) 3CLTEXTCLASS org/eclipse/debug/internal/ui/contexts/DebugContextSourceProvider(0xD93C7768) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/ViewContextService$ViewBinding(0xD93C79E0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/ViewContextService$DebugContextViewBindings(0xD93C7EB0) 3CLTEXTCLASS org/eclipse/debug/ui/actions/LaunchShortcutsAction$2(0xD93C8270) 3CLTEXTCLASS org/eclipse/debug/internal/ui/ResourceExtender(0xD93C83E0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/LaunchShortcutAction(0xD93C87E0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/DebugUIMessages(0xD93C8BD8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/sourcelookup/Prompter(0xD93C9050) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/SaveScopeResourcesHandler(0xD93C9228) 3CLTEXTCLASS org/eclipse/debug/internal/ui/sourcelookup/Prompter$1(0xD93C95F8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/CompileErrorProjectPromptStatusHandler(0xD93C9788) 3CLTEXTCLASS org/eclipse/debug/ui/contexts/ISuspendTrigger(0xD93C9A18) 3CLTEXTCLASS org/eclipse/debug/internal/ui/contexts/SuspendTriggerAdapterFactory(0xD93C9AF8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/contexts/LaunchSuspendTrigger(0xD93C9D18) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/LaunchDelegateContribution(0xD93CA050) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/PerspectiveManager$PerspectiveContext(0xD93CA1B0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/LaunchConfigurationPresentationManager(0xD93CA428) 3CLTEXTCLASS org/eclipse/debug/ui/ILaunchConfigurationTabGroup(0xD93CAA08) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/LaunchConfigurationTabGroupExtension(0xD93CAB50) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/PerspectiveManager$2(0xD93CAE68) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/console/ProcessConsoleManager(0xD93CAFF8) 3CLTEXTCLASS org/eclipse/debug/ui/console/IConsoleColorProvider(0xD93CB4F8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/sourcelookup/SourceLookupManager(0xD93CB600) 3CLTEXTCLASS org/eclipse/debug/ui/sourcelookup/ISourceDisplay(0xD93CB838) 3CLTEXTCLASS org/eclipse/debug/internal/ui/sourcelookup/SourceLookupService(0xD93CB910) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/ClosedProjectFilter(0xD93CBC00) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/DeletedProjectFilter(0xD93CBD60) 3CLTEXTCLASS org/eclipse/debug/ui/console/IConsole(0xD93CBE90) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/ElementContentProvider$3(0xD937E708) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/provisional/IModelProxyFactory(0xD937E938) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/provisional/IModelProxy(0xD937E9E8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/DebugTargetContentProvider(0xD937EB40) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/provisional/IElementLabelProvider(0xD937ED40) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/ElementLabelProvider(0xD937EE38) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/ElementLabelProvider$ILabelJob(0xD937F178) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/ElementLabelProvider$UILabelJob(0xD937F338) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/ElementLabelProvider$LabelJob(0xD937F6C0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/provisional/IColumnPresentationFactory(0xD937F938) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/provisional/IElementEditor(0xD937F9F8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/provisional/IColumnPresentation(0xD937FAB8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/VariableEditor(0xD937FBF8) 3CLTEXTCLASS org/eclipse/debug/ui/actions/IWatchExpressionFactoryAdapter(0xD937FD30) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/provisional/IElementMementoProvider(0xD937FDE0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/DebugElementLabelProvider(0xD937FEF0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/VariableLabelProvider(0xD9380188) 3CLTEXTCLASS org/eclipse/debug/ui/IDebugModelPresentationExtension(0xD93804A8) 3CLTEXTCLASS org/eclipse/debug/ui/IValueDetailListener(0xD9380578) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/VariableContentProvider(0xD9380698) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/ExpressionLabelProvider(0xD9380AD0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/ExpressionContentProvider(0xD9380E50) 3CLTEXTCLASS org/eclipse/debug/ui/actions/IWatchExpressionFactoryAdapterExtension(0xD93811B8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/ElementMementoProvider(0xD9381298) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/DebugElementMementoProvider(0xD9381450) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/ElementMementoProvider$1(0xD93816F8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/ElementMementoProvider$2(0xD9381A58) 3CLTEXTCLASS org/eclipse/debug/ui/DebugUITools(0xD9381CD0) 3CLTEXTCLASS org/eclipse/debug/ui/sourcelookup/ISourceLookupResult(0xD9382570) 3CLTEXTCLASS org/eclipse/debug/ui/IDebugEditorPresentation(0xD9382650) 3CLTEXTCLASS org/eclipse/debug/ui/IInstructionPointerPresentation(0xD9382710) 3CLTEXTCLASS org/eclipse/debug/internal/ui/DelegatingModelPresentation(0xD9382898) 3CLTEXTCLASS org/eclipse/debug/internal/ui/DynamicInstructionPointerAnnotation(0xD9383018) 3CLTEXTCLASS org/eclipse/debug/internal/ui/InstructionPointerAnnotation(0xD93831A0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/LazyModelPresentation(0xD9383348) 3CLTEXTCLASS org/eclipse/debug/internal/ui/CompositeDebugImageDescriptor(0xD9383B40) 3CLTEXTCLASS org/eclipse/debug/ui/actions/IRunToLineTarget(0xD9383DF0) 3CLTEXTCLASS org/eclipse/debug/ui/actions/IToggleBreakpointsTargetExtension(0xD9383EB0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/breakpoints/RetargetMethodBreakpointAction(0xD9383FE8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/breakpoints/RetargetToggleLineBreakpointAction(0xD93841E0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/breakpoints/RetargetToggleBreakpointAction(0xD93843D8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/OpenRunConfigurations(0xD9384648) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/RunAsAction(0xD93848B8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/RunHistoryMenuAction(0xD9384AC0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/RelaunchLastAction(0xD9384C30) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/DebugLastAction(0xD93851C0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/RunLastAction(0xD93853C8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/OpenDebugConfigurations(0xD9385658) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/DebugAsAction(0xD93858C8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/DebugHistoryMenuAction(0xD9385AD0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/DebugToolbarAction(0xD9385C68) 3CLTEXTCLASS org/eclipse/debug/ui/DebugPopup(0xD9385EA0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/LaunchGroupExtension(0xD9350CF8) 3CLTEXTCLASS [Lorg/eclipse/debug/ui/ILaunchGroup;(0xD9350F88) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/LaunchHistory(0xD93510A0) 3CLTEXTCLASS org/eclipse/debug/ui/actions/AbstractLaunchHistoryAction$3(0xD93517C0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/ActionMessages(0xD9351960) 3CLTEXTCLASS org/eclipse/debug/ui/actions/LaunchShortcutsAction(0xD9351E10) 3CLTEXTCLASS org/eclipse/debug/ui/actions/OpenLaunchDialogAction(0xD9352618) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/OrganizeFavoritesAction(0xD9352AB8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/LaunchConfigurationsMessages(0xD9352CD0) 3CLTEXTCLASS org/eclipse/debug/ui/actions/AbstractLaunchHistoryAction$2(0xD93530C0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/stringsubstitution/SelectedResourceManager(0xD9353240) 3CLTEXTCLASS org/eclipse/debug/ui/ILaunchShortcut(0xD9353638) 3CLTEXTCLASS org/eclipse/debug/ui/ILaunchShortcut2(0xD93536F8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/LaunchShortcutExtension(0xD9353860) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/LaunchShortcutExtension$LaunchCommandHandler(0xD9354060) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/LaunchConfigurationManager$ShortcutComparator(0xD9354218) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/AbstractRemoveAllActionDelegate(0xD93543A0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/breakpoints/RemoveAllBreakpointsAction(0xD9354620) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/breakpoints/SkipAllBreakpointsAction(0xD93549A0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/breakpoints/SkipAllBreakpointsAction$1(0xD9354F88) 3CLTEXTCLASS org/eclipse/debug/internal/ui/DebugPluginImages(0xD93551D0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/RetargetAction(0xD9355E58) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/IToggleBreakpointsTargetManagerListener(0xD93563E8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/breakpoints/RetargetBreakpointAction(0xD9356508) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/breakpoints/RetargetWatchpointAction(0xD9356838) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/RetargetAction$EmptySelection(0xD93569D8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/ToggleBreakpointsTargetManager(0xD9356AF8) 3CLTEXTCLASS org/eclipse/debug/ui/actions/IToggleBreakpointsTargetFactory(0xD9357170) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/ToggleBreakpointsTargetManager$ToggleBreakpointsTargetAdapterFactory(0xD9357290) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/ToggleBreakpointsTargetManager$ToggleTargetFactory(0xD9357590) 3CLTEXTCLASS org/eclipse/debug/ui/actions/IToggleBreakpointsTarget(0xD9357A00) 3CLTEXTCLASS org/eclipse/debug/ui/IBreakpointTypeCategory(0xD9357B00) 3CLTEXTCLASS org/eclipse/debug/ui/BreakpointTypeCategory(0xD9357BD0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/provisional/IElementContentProvider(0xD9357DD0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/ElementContentProvider(0xD9357EF0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/StackFrameContentProvider(0xD9358328) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/provisional/IViewerUpdate(0xD9358510) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/ElementContentProvider$1(0xD93586F8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/model/elements/ElementContentProvider$2(0xD9358A28) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/breakpoints/BreakpointWorkingSetCache(0xD9348CB0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/IInternalDebugUIConstants(0xD9348EF0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/memory/IMemoryView(0xD93496F0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/memory/IMemoryViewPane(0xD93497C0) 3CLTEXTCLASS org/eclipse/debug/ui/contexts/IDebugContextListener(0xD9349918) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/memory/AbstractMemoryViewPane(0xD9349A58) 3CLTEXTCLASS org/eclipse/debug/ui/memory/IMemoryRenderingContainer(0xD934A2F8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/memory/RenderingViewPane(0xD934A4D8) 3CLTEXTCLASS org/eclipse/debug/ui/memory/IMemoryRendering(0xD934B1A0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/memory/RenderingViewPane$3(0xD934B440) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/memory/RenderingViewPane$8(0xD934B858) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/memory/MemoryBlocksTreeViewPane(0xD934BB60) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/provisional/IPresentationContext(0xD934C398) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/memory/AddMemoryBlockAction(0xD934C5C8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/memory/RetargetAddMemoryBlockAction(0xD934CE60) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/ITreeModelViewer(0xD934D1A8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/ITreeModelContentProviderTarget(0xD934D3A8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/ITreeModelLabelProviderTarget(0xD934D5D8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/ITreeModelCheckProviderTarget(0xD934D6A8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/InternalTreeModelViewer(0xD934DBB0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/viewers/model/provisional/TreeModelViewer(0xD934F648) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/memory/MemoryViewTreeViewer(0xD93500D8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/DebugUIPlugin$3(0xD9350620) 3CLTEXTCLASS org/eclipse/debug/internal/ui/DebugUIPlugin$4(0xD9350788) 3CLTEXTCLASS org/eclipse/debug/internal/ui/ILaunchLabelChangedListener(0xD93508B8) 3CLTEXTCLASS org/eclipse/debug/ui/ILaunchGroup(0xD9350978) 3CLTEXTCLASS org/eclipse/debug/ui/actions/AbstractLaunchHistoryAction$1(0xD9350AA8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/memory/MemoryViewUtil$1(0xD9486FF8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/contextlaunching/LaunchingResourceManager(0xD9487348) 3CLTEXTCLASS org/eclipse/debug/internal/ui/contextlaunching/LaunchingResourceManager$1(0xD9487E28) 3CLTEXTCLASS org/eclipse/debug/internal/ui/contextlaunching/LaunchingResourceManager$2(0xD94880A0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/LaunchConfigurationManager(0xD9488380) 3CLTEXTCLASS org/eclipse/debug/ui/ILaunchConfigurationTab(0xD9489348) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/breakpoints/BreakpointOrganizerManager(0xD9489510) 3CLTEXTCLASS org/eclipse/debug/ui/IBreakpointOrganizerDelegate(0xD9489840) 3CLTEXTCLASS org/eclipse/debug/internal/ui/breakpoints/provisional/IBreakpointOrganizer(0xD94899F0) 3CLTEXTCLASS org/eclipse/debug/ui/IBreakpointOrganizerDelegateExtension(0xD9489AD8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/breakpoints/BreakpointOrganizerExtension(0xD9489BF8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/breakpoints/BreakpointOrganizerManager$1(0xD9489FD8) 3CLTEXTCLASS org/eclipse/debug/ui/AbstractBreakpointOrganizerDelegate(0xD948A118) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/breakpoints/WorkingSetBreakpointOrganizer(0xD948A3C0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/breakpoints/BreakpointSetOrganizer(0xD948A708) 3CLTEXTCLASS org/eclipse/debug/internal/ui/DebugUIPlugin$8(0xD943AE80) 3CLTEXTCLASS org/eclipse/debug/internal/ui/DebugUIPlugin$2(0xD943B288) 3CLTEXTCLASS org/eclipse/debug/ui/contexts/ISuspendTriggerListener(0xD943B448) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/PerspectiveManager(0xD943B570) 3CLTEXTCLASS org/eclipse/debug/internal/ui/launchConfigurations/PerspectiveManager$PerspectiveSwitchLock(0xD943C130) 3CLTEXTCLASS org/eclipse/debug/internal/ui/DebugUIPreferenceInitializer(0xD943C2E0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/views/memory/MemoryViewUtil(0xD943C7A8) 3CLTEXTCLASS org/eclipse/debug/internal/ui/DebugUIPlugin(0xD929C300) 3CLTEXTCLASS org/eclipse/debug/ui/actions/AbstractLaunchToolbarAction(0xD979C4C0) 3CLTEXTCLASS org/eclipse/debug/internal/ui/actions/RunToolbarAction(0xD979C7A8) 3CLTEXTCLASS org/eclipse/debug/ui/ISourcePresentation(0xD979C8E0) 3CLTEXTCLASS org/eclipse/debug/ui/IDebugModelPresentation(0xD979C9A0) 3CLTEXTCLASS org/eclipse/debug/ui/actions/AbstractLaunchHistoryAction(0xD97DC378) 3CLTEXTCLASS org/eclipse/debug/internal/ui/ILaunchHistoryChangedListener(0xD9C66318) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1F62638) 3CLTEXTCLASS org/eclipse/jdt/debug/ui/launchConfigurations/JavaAppletLaunchShortcut(0xDAB781D0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/RunToLineAdapter(0xDAB784E8) 3CLTEXTCLASS org/eclipse/jdt/debug/ui/actions/JavaBreakpointPropertiesRulerActionDelegate(0xDAB78898) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/JavaBreakpointPropertiesRulerAction(0xDAB78A88) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/ActionMessages(0xDAB78D00) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/console/JavaStackTraceHyperlink(0xDAB79030) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/console/JavaStackTraceHyperlink$1(0xDAB79628) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/console/JavaStackTraceHyperlink$2(0xDAB799A0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/console/JavaNativeStackTraceHyperlink(0xDAB79CA0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/breakpoints/AddExceptionAction$2(0xD93BC658) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/StepIntoSelectionActionDelegate(0xD93BC8B0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/snippeteditor/ISnippetStateChangedListener(0xD93BCEF0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/EvaluateAction(0xD93BD070) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/ForceReturnAction(0xD93BDF58) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/ExecuteAction(0xD93BE2F0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/DisplayAction(0xD93BE600) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/PopupDisplayAction(0xD93BEA78) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/PopupDisplayAction$DisplayPopup(0xD93BEEA8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/InspectAction(0xD93BF2D8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/PopupInspectAction(0xD93BF720) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/PopupInspectAction$2(0xD93BFB20) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/WatchAction(0xD93BFE48) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/ObjectActionDelegate(0xD93C0120) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/heapwalking/AllInstancesActionDelegate(0xD93C0400) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/heapwalking/InstanceCountActionDelegate(0xD93C0B58) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/heapwalking/AllReferencesActionDelegate(0xD93C0DA8) 3CLTEXTCLASS org/eclipse/jdt/debug/ui/launchConfigurations/JavaLaunchShortcut(0xD93C11C8) 3CLTEXTCLASS org/eclipse/jdt/debug/ui/launchConfigurations/JavaApplicationLaunchShortcut(0xD93C17D8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/launcher/LauncherMessages(0xD93C1C28) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/launcher/MainMethodSearchEngine(0xD93C1F68) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/launcher/MainMethodSearchEngine$MethodCollector(0xD93C2278) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/launcher/MainMethodSearchEngine$1(0xD93C2428) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/JavaDebugOptionsManager$InitJob(0xD93C2668) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/DebugUIMessages(0xD93C2978) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/breakpoints/SuspendOnCompilationErrorListener(0xD93C2FA8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/breakpoints/SuspendOnUncaughtExceptionListener(0xD93C3230) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/console/JavaConsoleTracker(0xD93C3498) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/console/JavaLikeExtensionsResolver(0xD93C3640) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/console/JavaNativeConsoleTracker(0xD93C37B0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/console/JavaExceptionConsoleTracker(0xD93C3920) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/JavaDebugHover(0xD93C3AB0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/JDIImageDescriptor(0xD939E6E8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/variables/JavaVariableContentProvider(0xD939EB48) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/variables/JavaExpressionContentProvider(0xD939EE70) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/heapwalking/JavaWatchExpressionFilter(0xD939F128) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/variables/JavaStackFrameMementoProvider(0xD939F2A8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/variables/JavaStackFrameLabelProvider(0xD939F440) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/JavaHotCodeReplaceListener(0xD939F5E0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/breakpoints/ExceptionInspector(0xD939F8E0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/JDIDebugUIPlugin$2(0xD939FCD0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/JavaDebugOptionsManager(0xD939FED0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/EvaluationContextManager(0xD93A0AE0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/EvaluationContextManager$1(0xD93A1090) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/ToggleBreakpointAdapter(0xD93A1260) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/ToggleBreakpointAdapter$2(0xD93A2098) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/ToggleBreakpointAdapter$3(0xD93A25B8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/ToggleBreakpointAdapter$4(0xD93A2A78) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/ToggleBreakpointAdapter$5(0xD93A2EA8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/ActionDelegateHelper(0xD93A32F8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/snippeteditor/JavaSnippetEditor(0xD93A3BF0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/breakpoints/AddClassPrepareBreakpointAction(0xD93A56B8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/breakpoints/AddExceptionAction(0xD93A59D8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/breakpoints/AddExceptionTypeDialogExtension(0xD93A5E78) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/breakpoints/AddExceptionAction$1(0xD93A61D0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/JDIDebugUIPreferenceInitializer(0xD92A1DE8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/IJDIPreferencesConstants(0xD92A2068) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/threadgroups/JavaThreadGroupLabelProvider(0xD92A23E0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/JavaDebugImages(0xD92A25A8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/sourcelookup/JavaDebugShowInAdapterFactory(0xD92A2CA8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/variables/ColumnPresentationAdapterFactory(0xD92A2E88) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/variables/JavaVariableColumnPresentationFactory(0xD92A30B0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/variables/JavaVariableEditor(0xD92A32B8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/classpath/ClasspathEntryAdapterFactory(0xD92A3430) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/variables/JavaDebugElementAdapterFactory(0xD92A35E8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/variables/JavaVariableLabelProvider(0xD92A3980) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/JDIModelPresentation(0xD92A4050) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/monitors/JavaContendedMonitor(0xD9462390) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/monitors/JavaOwnedMonitor(0xD94627F8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/monitors/JavaOwningThread(0xD9462C58) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/monitors/JavaWaitingThread(0xD9462FE8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/threadgroups/TargetAdapterFactory(0xD9463358) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/threadgroups/JavaModelProxyFactory(0xD9463570) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/threadgroups/JavaDebugTargetContentProvider(0xD9463718) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/threadgroups/ThreadGroupAdapterFactory(0xD94638E8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/monitors/JavaElementContentProvider(0xD9463B38) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/threadgroups/JavaThreadGroupContentProvider(0xD9463DA8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/monitors/JavaElementContentProvider$1(0xD9463F88) 3CLTEXTCLASS org/eclipse/jdt/debug/ui/IJavaDebugUIConstants(0xD94640D8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/display/JavaInspectExpression(0xD9289520) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/JavaSourceLocationWorkbenchAdapterFactory(0xD9289910) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/JavaBreakpointWorkbenchAdapterFactory(0xD9289AC8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/breakpoints/JavaBreakpointTypeAdapterFactory(0xD9289C78) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/monitors/MonitorsAdapterFactory(0xD9289FC0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/variables/JavaStackFrameContentProvider(0xD928A358) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/PackageSelectionDialog(0xD92539F0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/ActionFilterAdapterFactory(0xD9253D50) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/JDIDebugUIPlugin(0xD94307F0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/ui/actions/RetargettableActionAdapterFactory(0xDBAB16E8) 2CLTEXTCLLOAD Loader org/eclipse/osgi/internal/baseadaptor/DefaultClassLoader(0xE1F62DB8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/logicalstructures/JDIAllInstancesValue(0xD93DC750) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/model/JDIReferenceListValue(0xD93DCE10) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/logicalstructures/JavaLogicalStructures(0xD93DD3D8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/IJDIEventListener(0xD93DD950) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/breakpoints/JavaBreakpoint(0xD93DDB90) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/breakpoints/JavaExceptionBreakpoint(0xD93DEE00) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/logicalstructures/JavaLogicalStructure(0xD93DF860) 3CLTEXTCLASS com/sun/jdi/request/EventRequest(0xD93DFF40) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaType(0xD93E0090) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaReferenceType(0xD93E0160) 3CLTEXTCLASS com/sun/jdi/VMDisconnectedException(0xD93E0330) 3CLTEXTCLASS com/sun/jdi/Type(0xD93E0450) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/JDIDebugPluginPreferenceInitializer(0xD93E0530) 3CLTEXTCLASS com/sun/jdi/Value(0xD93E0690) 3CLTEXTCLASS [Lorg/eclipse/jdt/debug/core/IJavaObject;(0xD93E0760) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/breakpoints/JavaExceptionBreakpoint$1(0xD93E0818) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/logicalstructures/JavaLogicalStructures$PreferenceListener(0xD93E0A70) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaFieldVariable(0xD93E0BE0) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaWatchpoint(0xD93AC180) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaMethodBreakpoint(0xD93AC270) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaMethodEntryBreakpoint(0xD93AC3E0) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaClassPrepareBreakpoint(0xD93AC4C8) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaBreakpointListener(0xD93AC598) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/logicalstructures/IJavaStructuresListener(0xD93AC6C0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/breakpoints/ValidBreakpointLocationLocator(0xD93ACA40) 3CLTEXTCLASS org/eclipse/jdt/debug/eval/IEvaluationListener(0xD93AD9C0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/model/JDIDebugElement(0xD93ADB20) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/model/JDIValue(0xD93AE228) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaObject(0xD93AE9E8) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/model/JDIObjectValue(0xD93AEC88) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaArray(0xD93AF310) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/model/JDIArrayValue(0xD93AF5A8) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaDebugTarget(0xD944E2D8) 3CLTEXTCLASS com/sun/jdi/Mirror(0xD944E6D8) 3CLTEXTCLASS com/sun/jdi/VirtualMachine(0xD944E798) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaModifiers(0xD944EBD0) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaStackFrame(0xD944ECE0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/hcr/JavaHotCodeReplaceManager$ChangedClassFilesVisitor(0xD944EFB0) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/breakpoints/BreakpointListenerManager(0xD944F338) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaVariable(0xD944F5D8) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaThread(0xD944F6E0) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaThreadGroup(0xD944F8F8) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaValue(0xD944FA08) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaLineBreakpoint(0xD944FB00) 3CLTEXTCLASS org/eclipse/jdt/debug/core/JDIDebugModel(0xD944FC48) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaPatternBreakpoint(0xD9450128) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/hcr/JavaHotCodeReplaceManager(0xD927EEE8) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaStratumLineBreakpoint(0xD927FD30) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaBreakpoint(0xD9467390) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/JDIDebugOptions(0xD9467590) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/JDIDebugPlugin$1(0xD9467708) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaTargetPatternBreakpoint(0xD9467870) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaExceptionBreakpoint(0xD9467968) 3CLTEXTCLASS org/eclipse/jdt/internal/debug/core/JDIDebugPlugin(0xDD589B58) 3CLTEXTCLASS org/eclipse/jdt/debug/core/IJavaHotCodeReplaceListener(0xD946ACB8) NULL ------------------------------------------------------------------------ 0SECTION Javadump End section NULL ---------------------- END OF DUMP -------------------------------------'); [22001-184]
01-18 00:12:04 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Value too long for column "ATTACH_DESC VARCHAR(999999)": "STRINGDECODE('diff --git a/.gitignore b/.gitignore index 144b5bf..b22cae3 100644 --- a/.gitignore +++ b/.gitignore @@ -1,12 +1,8... (1086956)"; SQL statement:
INSERT INTO ATTACHMENT VALUES (365181,209545,'patch','diff --git a/.gitignore b/.gitignore index 144b5bf..b22cae3 100644 --- a/.gitignore +++ b/.gitignore @@ -1,12 +1,8 @@ -bin/ +/*/*/bin/ *~ *.rej *.bak -core -*.patch javacore.* heapdump.* core.* Snap.* -target/ - diff --git a/bundles/org.eclipse.core.commands/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.core.commands/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.core.commands/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.core.commands/src/org/eclipse/core/commands/operations/DefaultOperationHistory.java b/bundles/org.eclipse.core.commands/src/org/eclipse/core/commands/operations/DefaultOperationHistory.java index 57450ea..4364814 100644 --- a/bundles/org.eclipse.core.commands/src/org/eclipse/core/commands/operations/DefaultOperationHistory.java +++ b/bundles/org.eclipse.core.commands/src/org/eclipse/core/commands/operations/DefaultOperationHistory.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2008 IBM Corporation and others. + * Copyright (c) 2005, 2010 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,6 +7,8 @@ * * Contributors: * IBM Corporation - initial API and implementation + * Tasktop Technologies - Bug 323444 - [Undo] [Commands] java.util.ConcurrentModificationException + * when trying to get the undo history from a source viewer *******************************************************************************/ package org.eclipse.core.commands.operations; @@ -551,8 +553,8 @@ */ List filtered = new ArrayList(); - Iterator iterator = list.iterator(); synchronized (undoRedoHistoryLock) { + Iterator iterator = list.iterator(); while (iterator.hasNext()) { IUndoableOperation operation = (IUndoableOperation) iterator .next(); diff --git a/bundles/org.eclipse.core.databinding.beans/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.core.databinding.beans/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.core.databinding.beans/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.core.databinding.observable/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.core.databinding.observable/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.core.databinding.observable/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.core.databinding.observable/META-INF/MANIFEST.MF b/bundles/org.eclipse.core.databinding.observable/META-INF/MANIFEST.MF index a99b010..12b7a1e 100644 --- a/bundles/org.eclipse.core.databinding.observable/META-INF/MANIFEST.MF +++ b/bundles/org.eclipse.core.databinding.observable/META-INF/MANIFEST.MF @@ -2,7 +2,7 @@ Bundle-ManifestVersion: 2 Bundle-Name: %pluginName Bundle-SymbolicName: org.eclipse.core.databinding.observable -Bundle-Version: 1.3.0.qualifier +Bundle-Version: 1.4.1.qualifier Bundle-ClassPath: . Bundle-Vendor: %providerName Bundle-Localization: plugin diff --git a/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/list/AbstractObservableList.java b/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/list/AbstractObservableList.java index 8641afb..1bd705d 100644 --- a/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/list/AbstractObservableList.java +++ b/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/list/AbstractObservableList.java @@ -8,7 +8,8 @@ * Contributors: * IBM Corporation - initial API and implementation * Brad Reynolds - bugs 164653, 167204 - * Matthew Hall - bugs 118516, 208858, 208332, 247367, 146397, 249526 + * Matthew Hall - bugs 118516, 208858, 208332, 247367, 146397, 249526, + * 349038 *******************************************************************************/ package org.eclipse.core.databinding.observable.list; @@ -63,7 +64,7 @@ private final Realm realm; private PrivateChangeSupport changeSupport; - private boolean disposed = false; + private volatile boolean disposed = false; /** * @param realm @@ -89,8 +90,8 @@ * @return whether this observable list has any registered listeners. * @since 1.2 */ - protected boolean hasListeners() { - return changeSupport.hasListeners(); + protected synchronized boolean hasListeners() { + return !disposed &amp;&amp; changeSupport.hasListeners(); } public boolean isStale() { @@ -99,13 +100,15 @@ } public synchronized void addListChangeListener(IListChangeListener listener) { - if (!disposed) + if (!disposed) { changeSupport.addListener(ListChangeEvent.TYPE, listener); + } } public synchronized void removeListChangeListener(IListChangeListener listener) { - if (!disposed) + if (!disposed) { changeSupport.removeListener(ListChangeEvent.TYPE, listener); + } } protected void fireListChange(ListDiff diff) { @@ -115,30 +118,34 @@ } public synchronized void addChangeListener(IChangeListener listener) { - if (!disposed) + if (!disposed) { changeSupport.addChangeListener(listener); + } } public synchronized void removeChangeListener(IChangeListener listener) { - if (!disposed) + if (!disposed) { changeSupport.removeChangeListener(listener); + } } public synchronized void addStaleListener(IStaleListener listener) { - if (!disposed) + if (!disposed) { changeSupport.addStaleListener(listener); + } } public synchronized void removeStaleListener(IStaleListener listener) { - if (!disposed) + if (!disposed) { changeSupport.removeStaleListener(listener); + } } /** * @since 1.2 */ public synchronized void addDisposeListener(IDisposeListener listener) { - if (changeSupport != null) { + if (!disposed) { changeSupport.addDisposeListener(listener); } } @@ -147,7 +154,7 @@ * @since 1.2 */ public synchronized void removeDisposeListener(IDisposeListener listener) { - if (changeSupport != null) { + if (!disposed) { changeSupport.removeDisposeListener(listener); } } diff --git a/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/list/WritableList.java b/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/list/WritableList.java index 8302f6e..7d447a5 100644 --- a/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/list/WritableList.java +++ b/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/list/WritableList.java @@ -12,6 +12,7 @@ * Brad Reynolds - bug 147515 * Sebastian Fuchs - bug 243848 * Matthew Hall - bugs 208858, 213145, 243848 + * Ovidio Mallo - bug 332367 *******************************************************************************/ package org.eclipse.core.databinding.observable.list; @@ -19,6 +20,7 @@ import java.util.Collection; import java.util.Iterator; import java.util.List; +import java.util.ListIterator; import org.eclipse.core.databinding.observable.Diffs; import org.eclipse.core.databinding.observable.Realm; @@ -125,9 +127,9 @@ public Object set(int index, Object element) { checkRealm(); Object oldElement = wrappedList.set(index, element); - fireListChange(Diffs.createListDiff(Diffs.createListDiffEntry(index, - false, oldElement), Diffs.createListDiffEntry(index, true, - element))); + fireListChange(Diffs.createListDiff( + Diffs.createListDiffEntry(index, false, oldElement), + Diffs.createListDiffEntry(index, true, element))); return oldElement; } @@ -147,9 +149,9 @@ return wrappedList.get(oldIndex); Object element = wrappedList.remove(oldIndex); wrappedList.add(newIndex, element); - fireListChange(Diffs.createListDiff(Diffs.createListDiffEntry(oldIndex, - false, element), Diffs.createListDiffEntry(newIndex, true, - element))); + fireListChange(Diffs.createListDiff( + Diffs.createListDiffEntry(oldIndex, false, element), + Diffs.createListDiffEntry(newIndex, true, element))); return element; } @@ -259,15 +261,19 @@ public void clear() { checkRealm(); - List entries = new ArrayList(); - for (Iterator it = wrappedList.iterator(); it.hasNext();) { - Object element = it.next(); - // always report 0 as the remove index - entries.add(Diffs.createListDiffEntry(0, false, element)); - it.remove(); + // We remove the elements from back to front which is typically much + // faster on common list implementations like ArrayList. + ListDiffEntry[] entries = new ListDiffEntry[wrappedList.size()]; + int entryIndex = 0; + for (ListIterator it = wrappedList.listIterator(wrappedList.size()); it + .hasPrevious();) { + int elementIndex = it.previousIndex(); + Object element = it.previous(); + entries[entryIndex++] = Diffs.createListDiffEntry(elementIndex, + false, element); } - fireListChange(Diffs.createListDiff((ListDiffEntry[]) entries - .toArray(new ListDiffEntry[entries.size()]))); + wrappedList.clear(); + fireListChange(Diffs.createListDiff(entries)); } /** diff --git a/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/map/AbstractObservableMap.java b/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/map/AbstractObservableMap.java index fddee3e..8d5e35a 100644 --- a/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/map/AbstractObservableMap.java +++ b/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/map/AbstractObservableMap.java @@ -8,7 +8,8 @@ * Contributors: * IBM Corporation - initial API and implementation * Brad Reynolds - bug 164653 - * Matthew Hall - bugs 118516, 146397, 226289, 246103, 249526, 264307 + * Matthew Hall - bugs 118516, 146397, 226289, 246103, 249526, 264307, + * 349038 *******************************************************************************/ package org.eclipse.core.databinding.observable.map; @@ -60,7 +61,7 @@ private final Realm realm; private PrivateChangeSupport changeSupport; - private boolean disposed = false; + private volatile boolean disposed = false; private boolean stale; @@ -93,23 +94,27 @@ } public synchronized void addMapChangeListener(IMapChangeListener listener) { - if (!disposed) + if (!disposed) { changeSupport.addListener(MapChangeEvent.TYPE, listener); + } } public synchronized void removeMapChangeListener(IMapChangeListener listener) { - if (!disposed) + if (!disposed) { changeSupport.removeListener(MapChangeEvent.TYPE, listener); + } } public synchronized void addChangeListener(IChangeListener listener) { - if (!disposed) + if (!disposed) { changeSupport.addChangeListener(listener); + } } public synchronized void addStaleListener(IStaleListener listener) { - if (!disposed) + if (!disposed) { changeSupport.addStaleListener(listener); + } } /** @@ -123,17 +128,19 @@ /** * @since 1.2 */ - public void addDisposeListener(IDisposeListener listener) { - if (!disposed) + public synchronized void addDisposeListener(IDisposeListener listener) { + if (!disposed) { changeSupport.addDisposeListener(listener); + } } /** * @since 1.2 */ - public void removeDisposeListener(IDisposeListener listener) { - if (!disposed) + public synchronized void removeDisposeListener(IDisposeListener listener) { + if (!disposed) { changeSupport.removeDisposeListener(listener); + } } /** @@ -176,11 +183,15 @@ } public synchronized void removeChangeListener(IChangeListener listener) { - changeSupport.removeChangeListener(listener); + if (!disposed) { + changeSupport.removeChangeListener(listener); + } } public synchronized void removeStaleListener(IStaleListener listener) { - changeSupport.removeStaleListener(listener); + if (!disposed) { + changeSupport.removeStaleListener(listener); + } } /** diff --git a/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/masterdetail/MasterDetailObservables.java b/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/masterdetail/MasterDetailObservables.java index e75dc53..203a1cf 100644 --- a/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/masterdetail/MasterDetailObservables.java +++ b/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/databinding/observable/masterdetail/MasterDetailObservables.java @@ -9,6 +9,7 @@ * IBM Corporation - initial API and implementation * Brad Reynolds - bug 147515 * Matthew Hall - bug 221704, 226289 + * Ovidio Mallo - bugs 305367 *******************************************************************************/ package org.eclipse.core.databinding.observable.masterdetail; @@ -21,6 +22,9 @@ import org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableMap; import org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableSet; import org.eclipse.core.internal.databinding.observable.masterdetail.DetailObservableValue; +import org.eclipse.core.internal.databinding.observable.masterdetail.ListDetailValueObservableList; +import org.eclipse.core.internal.databinding.observable.masterdetail.MapDetailValueObservableMap; +import org.eclipse.core.internal.databinding.observable.masterdetail.SetDetailValueObservableMap; /** * Allows for the observation of an attribute, the detail, of an observable @@ -29,7 +33,7 @@ * @since 1.0 */ public class MasterDetailObservables { - + /** * Creates a detail observable value from a master observable value and a * factory. This can be used to create observable values that represent a @@ -145,4 +149,119 @@ return new DetailObservableMap(detailFactory, master, detailKeyType, detailValueType); } + + /** + * Returns a detail observable list where each element is the detail value + * of the element in the master observable list. The provided factory is + * used to create the detail observable values for every master element + * which then define the elements of the detail list. The detail list + * resides in the same realm as the given master list. + * + * + * Note that since the values of the returned list are detail values of the + * elements of the master list, the only modifications supported are through + * the {@link IObservableList#set(int, Object)} method. Modifications made + * through the returned list are made through the detail observables created + * by the specified observable factory. + * + * + * @param masterList + * The master observable list. + * @param detailFactory + * The factory for creating {@link IObservableValue} instances + * for the elements of the master list which then define the + * elements of the new detail list. + * @param detailType + * The value type of the detail values, typically of type + * java.lang.Class. May be null. + * @return A detail observable list with elements which correspond to the + * detail values of the elements of the master list. + * + * @since 1.4 + */ + public static IObservableList detailValues(IObservableList masterList, + IObservableFactory detailFactory, Object detailType) { + return new ListDetailValueObservableList(masterList, detailFactory, + detailType); + } + + /** + * Returns a detail observable map where the map&apos;s key set is the same as + * the given observable set, and where each value is the detail value of the + * element in the master observable set. The provided factory is used to + * create the detail observable values for every master key which then + * define the values of the detail map. The detail map resides in the same + * realm as the given master set. + * + * + * Note that since the values of the returned map are detail values of the + * elements of the master set, the only modifications supported are through + * the {@link IObservableMap#put(Object, Object)} and + * {@link IObservableMap#putAll(java.util.Map)} methods. Therefore, the + * returned map does not add entries for elements not already contained in + * the master set. Modifications made through the returned detail map are + * made through the detail observables created by the specified observable + * factory. + * + * + * @param masterSet + * The master observable set. + * @param detailFactory + * The factory for creating {@link IObservableValue} instances + * for the elements of the master set which then define the + * values of the new detail map. + * @param detailType + * The value type of the detail values, typically of type + * java.lang.Class. May be null. + * @return A detail observable map with the given master set as key set and + * with values which correspond to the detail values of the elements + * of the master set. + * + * @since 1.4 + */ + public static IObservableMap detailValues(IObservableSet masterSet, + IObservableFactory detailFactory, Object detailType) { + return new SetDetailValueObservableMap(masterSet, detailFactory, + detailType); + } + + /** + * Returns a detail observable map where the map&apos;s key set is the same as + * the one of the given master observable map, and where each value is the + * detail value of the corresponding value in the master observable map. The + * provided factory is used to create the detail observable values for every + * master value which then define the values of the detail map. The detail + * map resides in the same realm as the given master map. + * + * + * Note that since the values of the returned map are detail values of the + * values of the master map, the only modifications supported are through + * the {@link IObservableMap#put(Object, Object)} and + * {@link IObservableMap#putAll(java.util.Map)} methods. Therefore, the + * returned map does not add entries for keys not already contained in the + * master map&apos;s key set. Modifications made through the returned detail map + * are made through the detail observables created by the specified + * observable factory. + * + * + * @param masterMap + * The master observable map. + * @param detailFactory + * The factory for creating {@link IObservableValue} instances + * for the values of the master map which then define the values + * of the new detail map. + * @param detailType + * The value type of the detail values, typically of type + * java.lang.Class. May be null. + * @return A detail observable map with the same key set as the given master + * observable map and with values which correspond to the detail + * values of the values of the master map. + * + * @since 1.4 + */ + public static IObservableMap detailValues(IObservableMap masterMap, + IObservableFactory detailFactory, Object detailType) { + return new MapDetailValueObservableMap(masterMap, detailFactory, + detailType); + } } diff --git a/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/internal/databinding/observable/masterdetail/ListDetailValueObservableList.java b/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/internal/databinding/observable/masterdetail/ListDetailValueObservableList.java new file mode 100644 index 0000000..df985d8 --- /dev/null +++ b/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/internal/databinding/observable/masterdetail/ListDetailValueObservableList.java @@ -0,0 +1,351 @@ +/******************************************************************************* + * Copyright (c) 2010 Ovidio Mallo and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * Ovidio Mallo - initial API and implementation (bug 305367) + ******************************************************************************/ + +package org.eclipse.core.internal.databinding.observable.masterdetail; + +import java.util.ArrayList; +import java.util.BitSet; +import java.util.Collection; +import java.util.Collections; +import java.util.Iterator; +import java.util.RandomAccess; + +import org.eclipse.core.databinding.observable.Diffs; +import org.eclipse.core.databinding.observable.DisposeEvent; +import org.eclipse.core.databinding.observable.IDisposeListener; +import org.eclipse.core.databinding.observable.IObserving; +import org.eclipse.core.databinding.observable.IStaleListener; +import org.eclipse.core.databinding.observable.ObservableTracker; +import org.eclipse.core.databinding.observable.StaleEvent; +import org.eclipse.core.databinding.observable.list.AbstractObservableList; +import org.eclipse.core.databinding.observable.list.IListChangeListener; +import org.eclipse.core.databinding.observable.list.IObservableList; +import org.eclipse.core.databinding.observable.list.ListChangeEvent; +import org.eclipse.core.databinding.observable.list.ListDiff; +import org.eclipse.core.databinding.observable.list.ListDiffEntry; +import org.eclipse.core.databinding.observable.masterdetail.IObservableFactory; +import org.eclipse.core.databinding.observable.value.IObservableValue; +import org.eclipse.core.databinding.observable.value.IValueChangeListener; +import org.eclipse.core.databinding.observable.value.ValueChangeEvent; +import org.eclipse.core.internal.databinding.identity.IdentityMap; +import org.eclipse.core.internal.databinding.identity.IdentitySet; + +/** + * @since 1.4 + */ +public class ListDetailValueObservableList extends AbstractObservableList + implements IObserving, RandomAccess { + + private IObservableList masterList; + + private IObservableFactory detailFactory; + + private Object detailType; + + // The list of detail observables. + private ArrayList detailList; + + // Maps every master to a DetailEntry containing the detail observable. This + // map is used to avoid that multiple detail observables are created for the + // same master. + private IdentityMap masterDetailMap = new IdentityMap(); + + private IdentitySet staleDetailObservables = new IdentitySet(); + + private IListChangeListener masterListListener = new IListChangeListener() { + public void handleListChange(ListChangeEvent event) { + handleMasterListChange(event.diff); + } + }; + + private IValueChangeListener detailValueListener = new IValueChangeListener() { + public void handleValueChange(ValueChangeEvent event) { + if (!event.getObservable().isStale()) { + staleDetailObservables.remove(event.getObservable()); + } + handleDetailValueChange(event); + } + }; + + private IStaleListener masterStaleListener = new IStaleListener() { + public void handleStale(StaleEvent staleEvent) { + fireStale(); + } + }; + + private IStaleListener detailStaleListener = new IStaleListener() { + public void handleStale(StaleEvent staleEvent) { + boolean wasStale = isStale(); + staleDetailObservables.add((staleEvent.getObservable())); + if (!wasStale) { + fireStale(); + } + } + }; + + /** + * + * @param masterList + * @param detailFactory + * @param detailType + */ + public ListDetailValueObservableList(IObservableList masterList, + IObservableFactory detailFactory, Object detailType) { + super(masterList.getRealm()); + this.masterList = masterList; + this.detailFactory = detailFactory; + this.detailType = detailType; + this.detailList = new ArrayList(); + + // Add change/stale/dispose listeners on the master list. + masterList.addListChangeListener(masterListListener); + masterList.addStaleListener(masterStaleListener); + masterList.addDisposeListener(new IDisposeListener() { + public void handleDispose(DisposeEvent event) { + ListDetailValueObservableList.this.dispose(); + } + }); + + ListDiff initMasterDiff = Diffs.computeListDiff(Collections.EMPTY_LIST, + masterList); + handleMasterListChange(initMasterDiff); + } + + protected synchronized void firstListenerAdded() { + for (int i = 0; i &lt; detailList.size(); i++) { + IObservableValue detail = (IObservableValue) detailList.get(i); + detail.addValueChangeListener(detailValueListener); + detail.addStaleListener(detailStaleListener); + if (detail.isStale()) { + staleDetailObservables.add(detail); + } + } + } + + protected synchronized void lastListenerRemoved() { + if (isDisposed()) { + return; + } + + for (int i = 0; i &lt; detailList.size(); i++) { + IObservableValue detail = (IObservableValue) detailList.get(i); + detail.removeValueChangeListener(detailValueListener); + detail.removeStaleListener(detailStaleListener); + } + staleDetailObservables.clear(); + } + + private void handleMasterListChange(ListDiff masterListDiff) { + boolean wasStale = isStale(); + + boolean hasListeners = hasListeners(); + ListDiffEntry[] masterEntries = masterListDiff.getDifferences(); + ListDiffEntry[] detailEntries = new ListDiffEntry[masterEntries.length]; + for (int i = 0; i &lt; masterEntries.length; i++) { + ListDiffEntry masterEntry = masterEntries[i]; + int index = masterEntry.getPosition(); + + Object masterElement = masterEntry.getElement(); + Object detailValue; + if (masterEntry.isAddition()) { + detailValue = addDetailObservable(masterElement, index); + } else { + detailValue = removeDetailObservable(masterElement, index); + } + + if (hasListeners) { + // Create the corresponding diff for the detail list. + detailEntries[i] = Diffs.createListDiffEntry(index, + masterEntry.isAddition(), detailValue); + } + } + + if (hasListeners) { + if (!wasStale &amp;&amp; isStale()) { + fireStale(); + } + + // Fire a list change event with the adapted diff. + fireListChange(Diffs.createListDiff(detailEntries)); + } + } + + private Object addDetailObservable(Object masterElement, int index) { + DetailEntry detailEntry = (DetailEntry) masterDetailMap + .get(masterElement); + if (detailEntry != null) { + // If we already have a detail observable for the given + // masterElement, we increment the reference count. + detailEntry.masterReferenceCount++; + detailList.add(index, detailEntry.detailObservable); + return detailEntry.detailObservable.getValue(); + } + + IObservableValue detail = createDetailObservable(masterElement); + masterDetailMap.put(masterElement, new DetailEntry(detail)); + + detailList.add(index, detail); + + if (hasListeners()) { + detail.addValueChangeListener(detailValueListener); + detail.addStaleListener(detailStaleListener); + if (detail.isStale()) { + staleDetailObservables.add(detail); + } + } + + return detail.getValue(); + } + + private Object removeDetailObservable(Object masterElement, int index) { + IObservableValue detail = (IObservableValue) detailList.remove(index); + Object detailValue = detail.getValue(); + + DetailEntry detailEntry = (DetailEntry) masterDetailMap + .get(masterElement); + + // We may only dispose the detail observable ASA there are no more + // masters referencing it. + detailEntry.masterReferenceCount--; + if (detailEntry.masterReferenceCount == 0) { + masterDetailMap.remove(masterElement); + staleDetailObservables.remove(detail); + detail.dispose(); + } + + return detailValue; + } + + private void handleDetailValueChange(ValueChangeEvent event) { + IObservableValue detail = event.getObservableValue(); + + // When we get a change event on a detail observable, we must find its + // position while there may also be duplicate entries. + BitSet detailIndexes = new BitSet(); + for (int i = 0; i &lt; detailList.size(); i++) { + if (detailList.get(i) == detail) { + detailIndexes.set(i); + } + } + + // Create the diff for every found position. + Object oldValue = event.diff.getOldValue(); + Object newValue = event.diff.getNewValue(); + ListDiffEntry[] diffEntries = new ListDiffEntry[2 * detailIndexes + .cardinality()]; + int diffIndex = 0; + for (int b = detailIndexes.nextSetBit(0); b != -1; b = detailIndexes + .nextSetBit(b + 1)) { + diffEntries[diffIndex++] = Diffs.createListDiffEntry(b, false, + oldValue); + diffEntries[diffIndex++] = Diffs.createListDiffEntry(b, true, + newValue); + } + fireListChange(Diffs.createListDiff(diffEntries)); + } + + private IObservableValue createDetailObservable(Object masterElement) { + ObservableTracker.setIgnore(true); + try { + return (IObservableValue) detailFactory + .createObservable(masterElement); + } finally { + ObservableTracker.setIgnore(false); + } + } + + protected int doGetSize() { + return detailList.size(); + } + + public Object get(int index) { + ObservableTracker.getterCalled(this); + return ((IObservableValue) detailList.get(index)).getValue(); + } + + public Object set(int index, Object element) { + IObservableValue detail = (IObservableValue) detailList.get(index); + Object oldElement = detail.getValue(); + detail.setValue(element); + return oldElement; + } + + public Object move(int oldIndex, int newIndex) { + throw new UnsupportedOperationException(); + } + + public boolean remove(Object o) { + throw new UnsupportedOperationException(); + } + + public boolean removeAll(Collection c) { + throw new UnsupportedOperationException(); + } + + public boolean retainAll(Collection c) { + throw new UnsupportedOperationException(); + } + + public void clear() { + throw new UnsupportedOperationException(); + } + + public Object getElementType() { + return detailType; + } + + public boolean isStale() { + return super.isStale() + || (masterList != null &amp;&amp; masterList.isStale()) + || (staleDetailObservables != null &amp;&amp; !staleDetailObservables + .isEmpty()); + } + + public Object getObserved() { + return masterList; + } + + public synchronized void dispose() { + if (masterList != null) { + masterList.removeListChangeListener(masterListListener); + masterList.removeStaleListener(masterStaleListener); + } + + if (detailList != null) { + for (Iterator iter = detailList.iterator(); iter.hasNext();) { + IObservableValue detailValue = (IObservableValue) iter.next(); + detailValue.dispose(); + } + detailList.clear(); + } + + masterList = null; + detailFactory = null; + detailType = null; + masterListListener = null; + detailValueListener = null; + masterDetailMap = null; + staleDetailObservables = null; + + super.dispose(); + } + + private static final class DetailEntry { + + private final IObservableValue detailObservable; + + private int masterReferenceCount = 1; + + public DetailEntry(IObservableValue detailObservable) { + this.detailObservable = detailObservable; + } + } +} diff --git a/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/internal/databinding/observable/masterdetail/MapDetailValueObservableMap.java b/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/internal/databinding/observable/masterdetail/MapDetailValueObservableMap.java new file mode 100644 index 0000000..fc3cec1 --- /dev/null +++ b/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/internal/databinding/observable/masterdetail/MapDetailValueObservableMap.java @@ -0,0 +1,405 @@ +/******************************************************************************* + * Copyright (c) 2010 Ovidio Mallo and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * Ovidio Mallo - initial API and implementation (bug 305367) + ******************************************************************************/ + +package org.eclipse.core.internal.databinding.observable.masterdetail; + +import java.util.AbstractSet; +import java.util.Collections; +import java.util.IdentityHashMap; +import java.util.Iterator; +import java.util.Map; +import java.util.Set; + +import org.eclipse.core.databinding.observable.Diffs; +import org.eclipse.core.databinding.observable.DisposeEvent; +import org.eclipse.core.databinding.observable.IDisposeListener; +import org.eclipse.core.databinding.observable.IObserving; +import org.eclipse.core.databinding.observable.IStaleListener; +import org.eclipse.core.databinding.observable.ObservableTracker; +import org.eclipse.core.databinding.observable.StaleEvent; +import org.eclipse.core.databinding.observable.map.AbstractObservableMap; +import org.eclipse.core.databinding.observable.map.IMapChangeListener; +import org.eclipse.core.databinding.observable.map.IObservableMap; +import org.eclipse.core.databinding.observable.map.MapChangeEvent; +import org.eclipse.core.databinding.observable.map.MapDiff; +import org.eclipse.core.databinding.observable.masterdetail.IObservableFactory; +import org.eclipse.core.databinding.observable.value.IObservableValue; +import org.eclipse.core.databinding.observable.value.IValueChangeListener; +import org.eclipse.core.databinding.observable.value.ValueChangeEvent; +import org.eclipse.core.internal.databinding.identity.IdentityMap; +import org.eclipse.core.internal.databinding.identity.IdentitySet; +import org.eclipse.core.internal.databinding.observable.Util; + +/** + * @since 1.4 + */ +public class MapDetailValueObservableMap extends AbstractObservableMap + implements IObserving { + + private IObservableMap masterMap; + + private IObservableFactory observableValueFactory; + + private Object detailValueType; + + private Set entrySet; + + private IdentityHashMap keyDetailMap = new IdentityHashMap(); + + private IdentitySet staleDetailObservables = new IdentitySet(); + + private IMapChangeListener masterMapListener = new IMapChangeListener() { + public void handleMapChange(MapChangeEvent event) { + handleMasterMapChange(event.diff); + } + }; + + private IStaleListener masterStaleListener = new IStaleListener() { + public void handleStale(StaleEvent staleEvent) { + fireStale(); + } + }; + + private IStaleListener detailStaleListener = new IStaleListener() { + public void handleStale(StaleEvent staleEvent) { + addStaleDetailObservable((IObservableValue) staleEvent + .getObservable()); + } + }; + + /** + * @param masterMap + * @param observableValueFactory + * @param detailValueType + */ + public MapDetailValueObservableMap(IObservableMap masterMap, + IObservableFactory observableValueFactory, Object detailValueType) { + super(masterMap.getRealm()); + this.masterMap = masterMap; + this.observableValueFactory = observableValueFactory; + this.detailValueType = detailValueType; + + // Add change/stale/dispose listeners on the master map. + masterMap.addMapChangeListener(masterMapListener); + masterMap.addStaleListener(masterStaleListener); + masterMap.addDisposeListener(new IDisposeListener() { + public void handleDispose(DisposeEvent event) { + MapDetailValueObservableMap.this.dispose(); + } + }); + + // Initialize the map with the current state of the master map. + MapDiff initMasterDiff = Diffs.computeMapDiff(Collections.EMPTY_MAP, + masterMap); + handleMasterMapChange(initMasterDiff); + } + + private void handleMasterMapChange(MapDiff diff) { + // Collect the detail values for the master values in the input diff. + IdentityMap oldValues = new IdentityMap(); + IdentityMap newValues = new IdentityMap(); + + // Handle added master values. + Set addedKeys = diff.getAddedKeys(); + for (Iterator iter = addedKeys.iterator(); iter.hasNext();) { + Object addedKey = iter.next(); + + // For added master values, we set up a new detail observable. + addDetailObservable(addedKey); + + // Get the value of the created detail observable for the new diff. + IObservableValue detailValue = getDetailObservableValue(addedKey); + newValues.put(addedKey, detailValue.getValue()); + } + + // Handle removed master values. + Set removedKeys = diff.getRemovedKeys(); + for (Iterator iter = removedKeys.iterator(); iter.hasNext();) { + Object removedKey = iter.next(); + + // First of all, get the current detail value and add it to the set + // of old values of the new diff. + IObservableValue detailValue = getDetailObservableValue(removedKey); + oldValues.put(removedKey, detailValue.getValue()); + + // For removed master values, we dispose the detail observable. + removeDetailObservable(removedKey); + } + + // Handle changed master values. + Set changedKeys = diff.getChangedKeys(); + for (Iterator iter = changedKeys.iterator(); iter.hasNext();) { + Object changedKey = iter.next(); + + // Get the detail value prior to the change and add it to the set of + // old values of the new diff. + IObservableValue oldDetailValue = getDetailObservableValue(changedKey); + oldValues.put(changedKey, oldDetailValue.getValue()); + + // Remove the old detail value for the old master value and add it + // again for the new master value. + removeDetailObservable(changedKey); + addDetailObservable(changedKey); + + // Get the new detail value and add it to the set of new values. + IObservableValue newDetailValue = getDetailObservableValue(changedKey); + newValues.put(changedKey, newDetailValue.getValue()); + } + + // The different key sets are the same, only the values change. + fireMapChange(Diffs.createMapDiff(addedKeys, removedKeys, changedKeys, + oldValues, newValues)); + } + + private void addDetailObservable(final Object addedKey) { + Object masterElement = masterMap.get(addedKey); + + IObservableValue detailValue = (IObservableValue) keyDetailMap + .get(addedKey); + + if (detailValue == null) { + detailValue = createDetailObservable(masterElement); + + keyDetailMap.put(addedKey, detailValue); + + detailValue.addValueChangeListener(new IValueChangeListener() { + public void handleValueChange(ValueChangeEvent event) { + if (!event.getObservableValue().isStale()) { + staleDetailObservables.remove(event.getSource()); + } + + fireMapChange(Diffs.createMapDiffSingleChange(addedKey, + event.diff.getOldValue(), event.diff.getNewValue())); + } + }); + + if (detailValue.isStale()) { + addStaleDetailObservable(detailValue); + } + } + + detailValue.addStaleListener(detailStaleListener); + } + + private IObservableValue createDetailObservable(Object masterElement) { + ObservableTracker.setIgnore(true); + try { + return (IObservableValue) observableValueFactory + .createObservable(masterElement); + } finally { + ObservableTracker.setIgnore(false); + } + } + + private void removeDetailObservable(Object removedKey) { + if (isDisposed()) { + return; + } + + IObservableValue detailValue = (IObservableValue) keyDetailMap + .remove(removedKey); + staleDetailObservables.remove(detailValue); + detailValue.dispose(); + } + + private IObservableValue getDetailObservableValue(Object masterKey) { + return (IObservableValue) keyDetailMap.get(masterKey); + } + + private void addStaleDetailObservable(IObservableValue detailObservable) { + boolean wasStale = isStale(); + staleDetailObservables.add(detailObservable); + if (!wasStale) { + fireStale(); + } + } + + public Set keySet() { + getterCalled(); + + return masterMap.keySet(); + } + + public Object get(Object key) { + getterCalled(); + + if (!containsKey(key)) { + return null; + } + + IObservableValue detailValue = getDetailObservableValue(key); + return detailValue.getValue(); + } + + public Object put(Object key, Object value) { + if (!containsKey(key)) { + return null; + } + + IObservableValue detailValue = getDetailObservableValue(key); + Object oldValue = detailValue.getValue(); + detailValue.setValue(value); + return oldValue; + } + + public boolean containsKey(Object key) { + getterCalled(); + + return masterMap.containsKey(key); + } + + public Object remove(Object key) { + checkRealm(); + + if (!containsKey(key)) { + return null; + } + + IObservableValue detailValue = getDetailObservableValue(key); + Object oldValue = detailValue.getValue(); + + masterMap.remove(key); + + return oldValue; + } + + public int size() { + getterCalled(); + + return masterMap.size(); + } + + public boolean isStale() { + return super.isStale() + || (masterMap != null &amp;&amp; masterMap.isStale()) + || (staleDetailObservables != null &amp;&amp; !staleDetailObservables + .isEmpty()); + } + + public Object getKeyType() { + return masterMap.getKeyType(); + } + + public Object getValueType() { + return detailValueType; + } + + public Object getObserved() { + return masterMap; + } + + public synchronized void dispose() { + if (masterMap != null) { + masterMap.removeMapChangeListener(masterMapListener); + masterMap.removeStaleListener(masterStaleListener); + } + + if (keyDetailMap != null) { + for (Iterator iter = keyDetailMap.values().iterator(); iter + .hasNext();) { + IObservableValue detailValue = (IObservableValue) iter.next(); + detailValue.dispose(); + } + keyDetailMap.clear(); + } + + masterMap = null; + observableValueFactory = null; + detailValueType = null; + keyDetailMap = null; + masterStaleListener = null; + detailStaleListener = null; + staleDetailObservables = null; + + super.dispose(); + } + + public Set entrySet() { + getterCalled(); + + if (entrySet == null) { + entrySet = new EntrySet(); + } + return entrySet; + } + + private void getterCalled() { + ObservableTracker.getterCalled(this); + } + + private class EntrySet extends AbstractSet { + + public Iterator iterator() { + final Iterator keyIterator = keySet().iterator(); + return new Iterator() { + + public boolean hasNext() { + return keyIterator.hasNext(); + } + + public Object next() { + Object key = keyIterator.next(); + return new MapEntry(key); + } + + public void remove() { + keyIterator.remove(); + } + }; + } + + public int size() { + return MapDetailValueObservableMap.this.size(); + } + } + + private final class MapEntry implements Map.Entry { + + private final Object key; + + private MapEntry(Object key) { + this.key = key; + } + + public Object getKey() { + MapDetailValueObservableMap.this.getterCalled(); + return key; + } + + public Object getValue() { + return MapDetailValueObservableMap.this.get(getKey()); + } + + public Object setValue(Object value) { + return MapDetailValueObservableMap.this.put(getKey(), value); + } + + public boolean equals(Object o) { + MapDetailValueObservableMap.this.getterCalled(); + if (o == this) + return true; + if (o == null) + return false; + if (!(o instanceof Map.Entry)) + return false; + Map.Entry that = (Map.Entry) o; + return Util.equals(this.getKey(), that.getKey()) + &amp;&amp; Util.equals(this.getValue(), that.getValue()); + } + + public int hashCode() { + MapDetailValueObservableMap.this.getterCalled(); + Object value = getValue(); + return (getKey() == null ? 0 : getKey().hashCode()) + ^ (value == null ? 0 : value.hashCode()); + } + } +} diff --git a/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/internal/databinding/observable/masterdetail/SetDetailValueObservableMap.java b/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/internal/databinding/observable/masterdetail/SetDetailValueObservableMap.java new file mode 100644 index 0000000..f66a1c9 --- /dev/null +++ b/bundles/org.eclipse.core.databinding.observable/src/org/eclipse/core/internal/databinding/observable/masterdetail/SetDetailValueObservableMap.java @@ -0,0 +1,178 @@ +/******************************************************************************* + * Copyright (c) 2010 Ovidio Mallo and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * Ovidio Mallo - initial API and implementation (bug 305367) + ******************************************************************************/ + +package org.eclipse.core.internal.databinding.observable.masterdetail; + +import java.util.HashMap; +import java.util.Map; + +import org.eclipse.core.databinding.observable.IObserving; +import org.eclipse.core.databinding.observable.IStaleListener; +import org.eclipse.core.databinding.observable.ObservableTracker; +import org.eclipse.core.databinding.observable.StaleEvent; +import org.eclipse.core.databinding.observable.map.ComputedObservableMap; +import org.eclipse.core.databinding.observable.masterdetail.IObservableFactory; +import org.eclipse.core.databinding.observable.set.IObservableSet; +import org.eclipse.core.databinding.observable.value.IObservableValue; +import org.eclipse.core.databinding.observable.value.IValueChangeListener; +import org.eclipse.core.databinding.observable.value.ValueChangeEvent; +import org.eclipse.core.internal.databinding.identity.IdentitySet; + +/** + * @since 1.4 + */ +public class SetDetailValueObservableMap extends ComputedObservableMap + implements IObserving { + + private IObservableFactory observableValueFactory; + + private Map detailObservableValueMap = new HashMap(); + + private IdentitySet staleDetailObservables = new IdentitySet(); + + private IStaleListener detailStaleListener = new IStaleListener() { + public void handleStale(StaleEvent staleEvent) { + addStaleDetailObservable((IObservableValue) staleEvent + .getObservable()); + } + }; + + /** + * @param masterKeySet + * @param observableValueFactory + * @param detailValueType + */ + public SetDetailValueObservableMap(IObservableSet masterKeySet, + IObservableFactory observableValueFactory, Object detailValueType) { + super(masterKeySet, detailValueType); + this.observableValueFactory = observableValueFactory; + } + + protected void hookListener(final Object addedKey) { + final IObservableValue detailValue = getDetailObservableValue(addedKey); + + detailValue.addValueChangeListener(new IValueChangeListener() { + public void handleValueChange(ValueChangeEvent event) { + if (!event.getObservableValue().isStale()) { + staleDetailObservables.remove(detailValue); + } + + fireSingleChange(addedKey, event.diff.getOldValue(), + event.diff.getNewValue()); + } + }); + + detailValue.addStaleListener(detailStaleListener); + } + + protected void unhookListener(Object removedKey) { + if (isDisposed()) { + return; + } + + IObservableValue detailValue = (IObservableValue) detailObservableValueMap + .remove(removedKey); + staleDetailObservables.remove(detailValue); + detailValue.dispose(); + } + + private IObservableValue getDetailObservableValue(Object masterKey) { + IObservableValue detailValue = (IObservableValue) detailObservableValueMap + .get(masterKey); + + if (detailValue == null) { + ObservableTracker.setIgnore(true); + try { + detailValue = (IObservableValue) observableValueFactory + .createObservable(masterKey); + } finally { + ObservableTracker.setIgnore(false); + } + + detailObservableValueMap.put(masterKey, detailValue); + + if (detailValue.isStale()) { + addStaleDetailObservable(detailValue); + } + } + + return detailValue; + } + + private void addStaleDetailObservable(IObservableValue detailObservable) { + boolean wasStale = isStale(); + staleDetailObservables.add(detailObservable); + if (!wasStale) { + fireStale(); + } + } + + protected Object doGet(Object key) { + IObservableValue detailValue = getDetailObservableValue(key); + return detailValue.getValue(); + } + + protected Object doPut(Object key, Object value) { + IObservableValue detailValue = getDetailObservableValue(key); + Object oldValue = detailValue.getValue(); + detailValue.setValue(value); + return oldValue; + } + + public boolean containsKey(Object key) { + getterCalled(); + + return keySet().contains(key); + } + + public Object remove(Object key) { + checkRealm(); + + if (!containsKey(key)) { + return null; + } + + IObservableValue detailValue = getDetailObservableValue(key); + Object oldValue = detailValue.getValue(); + + keySet().remove(key); + + return oldValue; + } + + public int size() { + getterCalled(); + + return keySet().size(); + } + + public boolean isStale() { + return super.isStale() || staleDetailObservables != null + &amp;&amp; !staleDetailObservables.isEmpty(); + } + + public Object getObserved() { + return keySet(); + } + + public synchronized void dispose() { + super.dispose(); + + observableValueFactory = null; + detailObservableValueMap = null; + detailStaleListener = null; + staleDetailObservables = null; + } + + private void getterCalled() { + ObservableTracker.getterCalled(this); + } +} diff --git a/bundles/org.eclipse.core.databinding.property/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.core.databinding.property/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.core.databinding.property/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.core.databinding.property/META-INF/MANIFEST.MF b/bundles/org.eclipse.core.databinding.property/META-INF/MANIFEST.MF index c2b26cc..11b5608 100644 --- a/bundles/org.eclipse.core.databinding.property/META-INF/MANIFEST.MF +++ b/bundles/org.eclipse.core.databinding.property/META-INF/MANIFEST.MF @@ -2,7 +2,7 @@ Bundle-ManifestVersion: 2 Bundle-Name: %pluginName Bundle-SymbolicName: org.eclipse.core.databinding.property -Bundle-Version: 1.3.0.qualifier +Bundle-Version: 1.4.0.qualifier Bundle-ClassPath: . Bundle-Vendor: %providerName Bundle-Localization: plugin diff --git a/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/list/ListProperty.java b/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/list/ListProperty.java index 139a093..cf9590b 100644 --- a/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/list/ListProperty.java +++ b/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/list/ListProperty.java @@ -8,6 +8,7 @@ * Contributors: * Matthew Hall - initial API and implementation (bug 194734) * Matthew Hall - bug 195222 + * Ovidio Mallo - bug 331348 ******************************************************************************/ package org.eclipse.core.databinding.property.list; @@ -33,10 +34,22 @@ * @since 1.2 */ public abstract class ListProperty implements IListProperty { + /** + * By default, this method returns Collections.EMPTY_LIST in + * case the source object is null. Otherwise, this method + * delegates to {@link #doGetList(Object)}. + * + * + * Clients may override this method if they e.g. want to return a specific + * default list in case the source object is null. + * + * + * @see #doGetList(Object) + * * @since 1.3 */ - public final List getList(Object source) { + public List getList(Object source) { if (source == null) { return Collections.EMPTY_LIST; } @@ -132,8 +145,8 @@ } public IObservableList observeDetail(IObservableValue master) { - return MasterDetailObservables.detailList(master, listFactory(master - .getRealm()), getElementType()); + return MasterDetailObservables.detailList(master, + listFactory(master.getRealm()), getElementType()); } public final IListProperty values(IValueProperty detailValue) { diff --git a/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/map/MapProperty.java b/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/map/MapProperty.java index 70fcd95..2b1d5d6 100644 --- a/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/map/MapProperty.java +++ b/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/map/MapProperty.java @@ -8,6 +8,7 @@ * Contributors: * Matthew Hall - initial API and implementation (bug 194734) * Matthew Hall - bug 195222 + * Ovidio Mallo - bug 331348 ******************************************************************************/ package org.eclipse.core.databinding.property.map; @@ -33,10 +34,22 @@ * @since 1.2 */ public abstract class MapProperty implements IMapProperty { + /** + * By default, this method returns Collections.EMPTY_MAP in + * case the source object is null. Otherwise, this method + * delegates to {@link #doGetMap(Object)}. + * + * + * Clients may override this method if they e.g. want to return a specific + * default map in case the source object is null. + * + * + * @see #doGetMap(Object) + * * @since 1.3 */ - public final Map getMap(Object source) { + public Map getMap(Object source) { if (source == null) { return Collections.EMPTY_MAP; } @@ -134,8 +147,8 @@ } public IObservableMap observeDetail(IObservableValue master) { - return MasterDetailObservables.detailMap(master, mapFactory(master - .getRealm()), getKeyType(), getValueType()); + return MasterDetailObservables.detailMap(master, + mapFactory(master.getRealm()), getKeyType(), getValueType()); } public final IMapProperty values(IValueProperty detailValues) { diff --git a/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/set/SetProperty.java b/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/set/SetProperty.java index 8b213ec..52c68c8 100644 --- a/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/set/SetProperty.java +++ b/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/set/SetProperty.java @@ -8,6 +8,7 @@ * Contributors: * Matthew Hall - initial API and implementation (bug 194734) * Matthew Hall - bug 195222 + * Ovidio Mallo - bug 331348 ******************************************************************************/ package org.eclipse.core.databinding.property.set; @@ -34,10 +35,22 @@ * @since 1.2 */ public abstract class SetProperty implements ISetProperty { + /** + * By default, this method returns Collections.EMPTY_SET in + * case the source object is null. Otherwise, this method + * delegates to {@link #doGetSet(Object)}. + * + * + * Clients may override this method if they e.g. want to return a specific + * default set in case the source object is null. + * + * + * @see #doGetSet(Object) + * * @since 1.3 */ - public final Set getSet(Object source) { + public Set getSet(Object source) { if (source == null) { return Collections.EMPTY_SET; } @@ -134,8 +147,8 @@ } public IObservableSet observeDetail(IObservableValue master) { - return MasterDetailObservables.detailSet(master, setFactory(master - .getRealm()), getElementType()); + return MasterDetailObservables.detailSet(master, + setFactory(master.getRealm()), getElementType()); } public final IMapProperty values(IValueProperty detailValues) { diff --git a/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/value/ValueProperty.java b/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/value/ValueProperty.java index d726668..5024b3b 100644 --- a/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/value/ValueProperty.java +++ b/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/databinding/property/value/ValueProperty.java @@ -8,14 +8,18 @@ * Contributors: * Matthew Hall - initial API and implementation (bug 194734) * Matthew Hall - bug 195222 + * Ovidio Mallo - bugs 331348, 305367 ******************************************************************************/ package org.eclipse.core.databinding.property.value; import org.eclipse.core.databinding.observable.IObservable; import org.eclipse.core.databinding.observable.Realm; +import org.eclipse.core.databinding.observable.list.IObservableList; +import org.eclipse.core.databinding.observable.map.IObservableMap; import org.eclipse.core.databinding.observable.masterdetail.IObservableFactory; import org.eclipse.core.databinding.observable.masterdetail.MasterDetailObservables; +import org.eclipse.core.databinding.observable.set.IObservableSet; import org.eclipse.core.databinding.observable.value.IObservableValue; import org.eclipse.core.databinding.property.list.IListProperty; import org.eclipse.core.databinding.property.map.IMapProperty; @@ -31,10 +35,22 @@ * @since 1.2 */ public abstract class ValueProperty implements IValueProperty { + /** + * By default, this method returns null in case the source + * object is itself null. Otherwise, this method delegates to + * {@link #doGetValue(Object)}. + * + * + * Clients may override this method if they e.g. want to return a specific + * default value in case the source object is null. + * + * + * @see #doGetValue(Object) + * * @since 1.3 */ - public final Object getValue(Object source) { + public Object getValue(Object source) { if (source == null) { return null; } @@ -108,8 +124,32 @@ } public IObservableValue observeDetail(IObservableValue master) { - return MasterDetailObservables.detailValue(master, valueFactory(master - .getRealm()), getValueType()); + return MasterDetailObservables.detailValue(master, + valueFactory(master.getRealm()), getValueType()); + } + + /** + * @since 1.4 + */ + public IObservableList observeDetail(IObservableList master) { + return MasterDetailObservables.detailValues(master, + valueFactory(master.getRealm()), getValueType()); + } + + /** + * @since 1.4 + */ + public IObservableMap observeDetail(IObservableSet master) { + return MasterDetailObservables.detailValues(master, + valueFactory(master.getRealm()), getValueType()); + } + + /** + * @since 1.4 + */ + public IObservableMap observeDetail(IObservableMap master) { + return MasterDetailObservables.detailValues(master, + valueFactory(master.getRealm()), getValueType()); } public final IValueProperty value(IValueProperty detailValue) { diff --git a/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/internal/databinding/property/map/SimplePropertyObservableMap.java b/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/internal/databinding/property/map/SimplePropertyObservableMap.java index ee1e56e..df7fd0d 100644 --- a/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/internal/databinding/property/map/SimplePropertyObservableMap.java +++ b/bundles/org.eclipse.core.databinding.property/src/org/eclipse/core/internal/databinding/property/map/SimplePropertyObservableMap.java @@ -8,6 +8,7 @@ * Contributors: * Matthew Hall - initial API and implementation (bug 194734) * Matthew Hall - bugs 265561, 262287, 268203, 268688, 301774, 303847 + * Ovidio Mallo - bug 332367 ******************************************************************************/ package org.eclipse.core.internal.databinding.property.map; @@ -184,8 +185,8 @@ getterCalled(); checkForComodification(); - MapDiff diff = Diffs.createMapDiffSingleRemove(last.getKey(), last - .getValue()); + MapDiff diff = Diffs.createMapDiffSingleRemove(last.getKey(), + last.getValue()); updateMap(map, diff); iterator.remove(); // stay in sync @@ -281,6 +282,17 @@ return oldValue; } + public void clear() { + getterCalled(); + + Map map = getMap(); + if (map.isEmpty()) + return; + + MapDiff diff = Diffs.createMapDiffRemoveAll(new HashMap(map)); + updateMap(map, diff); + } + public Collection values() { getterCalled(); // AbstractMap depends on entrySet() to fulfil values() API, so all diff --git a/bundles/org.eclipse.core.databinding/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.core.databinding/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.core.databinding/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.core.databinding/META-INF/MANIFEST.MF b/bundles/org.eclipse.core.databinding/META-INF/MANIFEST.MF index 703e8b7..3730552 100644 --- a/bundles/org.eclipse.core.databinding/META-INF/MANIFEST.MF +++ b/bundles/org.eclipse.core.databinding/META-INF/MANIFEST.MF @@ -2,7 +2,7 @@ Bundle-ManifestVersion: 2 Bundle-Name: %pluginName Bundle-SymbolicName: org.eclipse.core.databinding -Bundle-Version: 1.3.100.qualifier +Bundle-Version: 1.4.1.qualifier Bundle-ClassPath: . Bundle-Vendor: %providerName Bundle-Localization: plugin diff --git a/bundles/org.eclipse.core.databinding/src/org/eclipse/core/databinding/BindingProperties.java b/bundles/org.eclipse.core.databinding/src/org/eclipse/core/databinding/BindingProperties.java index aae4869..0977bf9 100644 --- a/bundles/org.eclipse.core.databinding/src/org/eclipse/core/databinding/BindingProperties.java +++ b/bundles/org.eclipse.core.databinding/src/org/eclipse/core/databinding/BindingProperties.java @@ -8,16 +8,19 @@ * Contributors: * Matthew Hall - initial API and implementation (bug 263709) * Matthew Hall - bug 264954 + * Ovidio Mallo - bug 306611 ******************************************************************************/ package org.eclipse.core.databinding; +import org.eclipse.core.databinding.conversion.IConverter; import org.eclipse.core.databinding.observable.IObservable; import org.eclipse.core.databinding.property.Properties; import org.eclipse.core.databinding.property.list.IListProperty; import org.eclipse.core.databinding.property.value.IValueProperty; import org.eclipse.core.internal.databinding.BindingModelProperty; import org.eclipse.core.internal.databinding.BindingTargetProperty; +import org.eclipse.core.internal.databinding.ConverterValueProperty; import org.eclipse.core.internal.databinding.DataBindingContextBindingsProperty; import org.eclipse.core.internal.databinding.DataBindingContextValidationStatusProvidersProperty; import org.eclipse.core.internal.databinding.ValidationStatusProviderModelsProperty; @@ -111,4 +114,24 @@ public static IListProperty validationStatusProviders() { return new DataBindingContextValidationStatusProvidersProperty(); } + + /** + * Returns an {@link IValueProperty} whose value results from applying the + * given {@link IConverter} on the source object of the value property. + * Consequently, the {@link IValueProperty#getValueType() value type} of the + * returned property is the same as the {@link IConverter#getToType() target + * type} of the converter. Setting a value on the property is not supported. + * + * @param converter + * The converter to apply to the source object of the value + * property. + * @return A new instance of a value property whose value is the result of + * applying the given converter to the source object passed to the + * value property. + * + * @since 1.4 + */ + public static IValueProperty convertedValue(IConverter converter) { + return new ConverterValueProperty(converter); + } } diff --git a/bundles/org.eclipse.core.databinding/src/org/eclipse/core/databinding/validation/MultiValidator.java b/bundles/org.eclipse.core.databinding/src/org/eclipse/core/databinding/validation/MultiValidator.java index 2a5ca85..6364e02 100644 --- a/bundles/org.eclipse.core.databinding/src/org/eclipse/core/databinding/validation/MultiValidator.java +++ b/bundles/org.eclipse.core.databinding/src/org/eclipse/core/databinding/validation/MultiValidator.java @@ -8,8 +8,9 @@ * Contributors: * Matthew Hall - initial API and implementation (bug 218269) * Boris Bokowski - bug 218269 - * Matthew Hall - bug 237884, 240590, 251003, 251424, 278550 + * Matthew Hall - bug 237884, 240590, 251003, 251424, 278550, 332504 * Ovidio Mallo - bug 238909, 235859 + * Stefan R�ck - bug 332504 ******************************************************************************/ package org.eclipse.core.databinding.validation; @@ -209,7 +210,6 @@ */ public IObservableValue getValidationStatus() { if (unmodifiableValidationStatus == null) { - revalidate(); ObservableTracker.setIgnore(true); try { unmodifiableValidationStatus = Observables @@ -217,6 +217,7 @@ } finally { ObservableTracker.setIgnore(false); } + revalidate(); } return unmodifiableValidationStatus; } @@ -263,6 +264,19 @@ try { List newTargets = new ArrayList(Arrays.asList(dependencies)); + // Internal observables should not be dependencies + // (prevent dependency loop) + for (Iterator itNew = newTargets.iterator(); itNew.hasNext();) { + Object newDependency = itNew.next(); + if (newDependency == validationStatus + || newDependency == unmodifiableValidationStatus + || newDependency == targets + || newDependency == unmodifiableTargets + || newDependency == models) { + itNew.remove(); + } + } + // This loop is roughly equivalent to: // targets.retainAll(newTargets); // newTargets.removeAll(targets); @@ -277,14 +291,6 @@ // new dependencies itNew.remove(); continue outer; - } else if (newDependency == validationStatus - || newDependency == unmodifiableValidationStatus - || newDependency == targets - || newDependency == unmodifiableTargets - || newDependency == models) { - // Internal observables should not be dependencies - // (prevent dependency loop) - itNew.remove(); } } // Old dependency is no longer a dependency--remove from diff --git a/bundles/org.eclipse.core.databinding/src/org/eclipse/core/internal/databinding/ConverterValueProperty.java b/bundles/org.eclipse.core.databinding/src/org/eclipse/core/internal/databinding/ConverterValueProperty.java new file mode 100644 index 0000000..32ca3a7 --- /dev/null +++ b/bundles/org.eclipse.core.databinding/src/org/eclipse/core/internal/databinding/ConverterValueProperty.java @@ -0,0 +1,68 @@ +/******************************************************************************* + * Copyright (c) 2010 Ovidio Mallo and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * Ovidio Mallo - initial API and implementation (bug 306611) + ******************************************************************************/ + +package org.eclipse.core.internal.databinding; + +import org.eclipse.core.databinding.conversion.IConverter; +import org.eclipse.core.databinding.property.INativePropertyListener; +import org.eclipse.core.databinding.property.ISimplePropertyListener; +import org.eclipse.core.databinding.property.value.SimpleValueProperty; + +/** + * Simple value property which applies a given converter on a source object in + * order to produce the property&apos;s value. + */ +public class ConverterValueProperty extends SimpleValueProperty { + + private final IConverter converter; + + /** + * Creates a new value property which applies the given converter on the + * source object in order to produce the property&apos;s value. + * + * @param converter + * The converter to apply to the source object. + */ + public ConverterValueProperty(IConverter converter) { + this.converter = converter; + } + + public Object getValueType() { + // the property type is the converter&apos;s target type + return converter.getToType(); + } + + public Object getValue(Object source) { + // We do also pass null values to the converter. + return doGetValue(source); + } + + protected Object doGetValue(Object source) { + // delegate to the IConverter + return converter.convert(source); + } + + protected void doSetValue(Object source, Object value) { + // setting a value is not supported + throw new UnsupportedOperationException(toString() + + &quot;: Setter not supported on a converted value!&quot;); //$NON-NLS-1$ + } + + public INativePropertyListener adaptListener( + ISimplePropertyListener listener) { + // no listener API + return null; + } + + public String toString() { + return &quot;IConverter#convert(source) &quot;; //$NON-NLS-1$ + } +} diff --git a/bundles/org.eclipse.jface.databinding/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.jface.databinding/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.jface.databinding/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.jface.databinding/META-INF/MANIFEST.MF b/bundles/org.eclipse.jface.databinding/META-INF/MANIFEST.MF index 274f3aa..47b97f9 100644 --- a/bundles/org.eclipse.jface.databinding/META-INF/MANIFEST.MF +++ b/bundles/org.eclipse.jface.databinding/META-INF/MANIFEST.MF @@ -2,7 +2,7 @@ Bundle-ManifestVersion: 2 Bundle-Name: %pluginName Bundle-SymbolicName: org.eclipse.jface.databinding -Bundle-Version: 1.5.0.qualifier +Bundle-Version: 1.6.0.qualifier Bundle-ClassPath: . Bundle-Vendor: %providerName Bundle-Localization: plugin diff --git a/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/databinding/swt/SWTObservables.java b/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/databinding/swt/SWTObservables.java index 1aeefc7..004ed7d 100644 --- a/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/databinding/swt/SWTObservables.java +++ b/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/databinding/swt/SWTObservables.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2009 IBM Corporation and others. + * Copyright (c) 2005, 2009, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -10,7 +10,7 @@ * Matt Carter - bug 170668 * Brad Reynolds - bug 170848 * Matthew Hall - bugs 180746, 207844, 245647, 248621, 232917, 194734, - * 195222, 256543, 213893, 262320, 264286, 266563 + * 195222, 256543, 213893, 262320, 264286, 266563, 306203 * Michael Krauter - bug 180223 * Boris Bokowski - bug 245647 * Tom Schindl - bug 246462 @@ -517,6 +517,8 @@ * Returns an observable observing the editable attribute of the provided * control. The supported types are: * + * org.eclipse.swt.custom.CCombo (since 1.6) + * org.eclipse.swt.custom.StyledText (since 1.6) * org.eclipse.swt.widgets.Text * * diff --git a/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/databinding/swt/WidgetProperties.java b/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/databinding/swt/WidgetProperties.java index e9b9dc5..89ad173 100644 --- a/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/databinding/swt/WidgetProperties.java +++ b/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/databinding/swt/WidgetProperties.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2008, 2009 Matthew Hall and others. + * Copyright (c) 2008, 2009, 2011 Matthew Hall and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -8,7 +8,7 @@ * Contributors: * Matthew Hall - initial API and implementation (bug 194734) * Matthew Hall - bugs 256543, 213893, 262320, 262946, 264286, 266563, - * 169876 + * 169876, 306203 ******************************************************************************/ package org.eclipse.jface.databinding.swt; @@ -91,10 +91,11 @@ /** * Returns a value property for observing the editable state of a + * {@link CCombo} (since 1.6), {@link StyledText} (since 1.6), or * {@link Text}. * * @return a value property for observing the editable state of a - * {@link Text}. + * {@link CCombo}, {@link StyledText}, or {@link Text}. */ public static IWidgetValueProperty editable() { return new WidgetEditableProperty(); diff --git a/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/internal/databinding/swt/CComboEditableProperty.java b/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/internal/databinding/swt/CComboEditableProperty.java new file mode 100644 index 0000000..401771d --- /dev/null +++ b/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/internal/databinding/swt/CComboEditableProperty.java @@ -0,0 +1,32 @@ +/******************************************************************************* + * Copyright (c) 2011 Matthew Hall and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * Matthew Hall - initial API and implementation (bug 306203) + ******************************************************************************/ + +package org.eclipse.jface.internal.databinding.swt; + +import org.eclipse.swt.custom.CCombo; + +/** + * @since 3.3 + * + */ +public class CComboEditableProperty extends WidgetBooleanValueProperty { + boolean doGetBooleanValue(Object source) { + return ((CCombo) source).getEditable(); + } + + void doSetBooleanValue(Object source, boolean value) { + ((CCombo) source).setEditable(value); + } + + public String toString() { + return &quot;CCombo.editable &quot;; //$NON-NLS-1$ + } +} diff --git a/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/internal/databinding/swt/StyledTextEditableProperty.java b/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/internal/databinding/swt/StyledTextEditableProperty.java new file mode 100644 index 0000000..179809c --- /dev/null +++ b/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/internal/databinding/swt/StyledTextEditableProperty.java @@ -0,0 +1,32 @@ +/******************************************************************************* + * Copyright (c) 2011 Matthew Hall and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * Matthew Hall - initial API and implementation (bug 306203) + ******************************************************************************/ + +package org.eclipse.jface.internal.databinding.swt; + +import org.eclipse.swt.custom.StyledText; + +/** + * @since 3.3 + * + */ +public class StyledTextEditableProperty extends WidgetBooleanValueProperty { + boolean doGetBooleanValue(Object source) { + return ((StyledText) source).getEditable(); + } + + void doSetBooleanValue(Object source, boolean value) { + ((StyledText) source).setEditable(value); + } + + public String toString() { + return &quot;StyledText.editable &quot;; //$NON-NLS-1$ + } +} diff --git a/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/internal/databinding/swt/WidgetEditableProperty.java b/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/internal/databinding/swt/WidgetEditableProperty.java index 60ebd82..f1d1a6f 100644 --- a/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/internal/databinding/swt/WidgetEditableProperty.java +++ b/bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/internal/databinding/swt/WidgetEditableProperty.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2009 Matthew Hall and others. + * Copyright (c) 2009, 2011 Matthew Hall and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,11 +7,14 @@ * * Contributors: * Matthew Hall - initial API and implementation (bug 264286) + * Matthew Hall - bug 306203 *******************************************************************************/ package org.eclipse.jface.internal.databinding.swt; import org.eclipse.core.databinding.property.value.IValueProperty; +import org.eclipse.swt.custom.CCombo; +import org.eclipse.swt.custom.StyledText; import org.eclipse.swt.widgets.Text; /** @@ -20,6 +23,8 @@ */ public class WidgetEditableProperty extends WidgetDelegatingValueProperty { IValueProperty text; + IValueProperty ccombo; + IValueProperty styledText; /** * @@ -34,6 +39,18 @@ text = new TextEditableProperty(); return text; } + if (source instanceof CCombo) { + if (ccombo == null) { + ccombo = new CComboEditableProperty(); + } + return ccombo; + } + if (source instanceof StyledText) { + if (styledText == null) { + styledText = new StyledTextEditableProperty(); + } + return styledText; + } throw notSupported(source); } } \ No newline at end of file diff --git a/bundles/org.eclipse.jface/.cvsignore b/bundles/org.eclipse.jface/.cvsignore deleted file mode 100644 index ba077a4..0000000 --- a/bundles/org.eclipse.jface/.cvsignore +++ /dev/null @@ -1 +0,0 @@ -bin diff --git a/bundles/org.eclipse.jface/.options b/bundles/org.eclipse.jface/.options index f62a68c..a96d276 100644 --- a/bundles/org.eclipse.jface/.options +++ b/bundles/org.eclipse.jface/.options @@ -1,7 +1,7 @@ # Debugging options for the org.eclipse.jface plugin. -# Turn on debugging for the org.eclipse.ui plugin. -org.eclipse.jface/debug=false +# Turn on debugging for the org.eclipse.jface plugin. +org.eclipse.jface/debug=true # Log a message if a dialog is opened without a parent org.eclipse.jface/debug/dialog/noparent=false @@ -9,6 +9,9 @@ # Always log reentrant calls to viewers (if set to false, it just logs the first reentrant call) org.eclipse.jface/debug/viewers/reentrantViewerCalls=false +# Log illegal equal elements in a viewer +org.eclipse.jface/debug/viewers/equalElements=false + # Show the jface new look for the preferences dialog org.eclipse.jface/newlook/preferences/showNewLook=false diff --git a/bundles/org.eclipse.jface/.settings/.api_filters b/bundles/org.eclipse.jface/.settings/.api_filters new file mode 100644 index 0000000..a203a09 --- /dev/null +++ b/bundles/org.eclipse.jface/.settings/.api_filters @@ -0,0 +1,10 @@ + + + + + + + + + + \ No newline at end of file diff --git a/bundles/org.eclipse.jface/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.jface/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.jface/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.jface/.settings/org.eclipse.pde.prefs b/bundles/org.eclipse.jface/.settings/org.eclipse.pde.prefs index fee4b04..cd939fe 100644 --- a/bundles/org.eclipse.jface/.settings/org.eclipse.pde.prefs +++ b/bundles/org.eclipse.jface/.settings/org.eclipse.pde.prefs @@ -1,14 +1,35 @@ -#Sat Mar 19 15:31:31 EST 2005 -compilers.p.deprecated=0 -compilers.p.illegal-att-value=0 -compilers.p.no-required-att=0 -compilers.p.not-externalized-att=0 -compilers.p.unknown-attribute=0 -compilers.p.unknown-class=0 -compilers.p.unknown-element=1 -compilers.p.unknown-resource=0 -compilers.p.unresolved-ex-points=0 -compilers.p.unresolved-import=0 -compilers.p.unused-element-or-attribute=1 -compilers.use-project=true -eclipse.preferences.version=1 +compilers.f.unresolved-features=1 +compilers.f.unresolved-plugins=1 +compilers.incompatible-environment=0 +compilers.p.build=1 +compilers.p.build.bin.includes=1 +compilers.p.build.encodings=2 +compilers.p.build.java.compiler=2 +compilers.p.build.java.compliance=1 +compilers.p.build.missing.output=2 +compilers.p.build.output.library=1 +compilers.p.build.source.library=1 +compilers.p.build.src.includes=1 +compilers.p.deprecated=0 +compilers.p.discouraged-class=1 +compilers.p.illegal-att-value=0 +compilers.p.internal=1 +compilers.p.missing-packages=0 +compilers.p.missing-version-export-package=2 +compilers.p.missing-version-import-package=2 +compilers.p.missing-version-require-bundle=2 +compilers.p.no-required-att=0 +compilers.p.not-externalized-att=0 +compilers.p.unknown-attribute=0 +compilers.p.unknown-class=0 +compilers.p.unknown-element=1 +compilers.p.unknown-identifier=1 +compilers.p.unknown-resource=0 +compilers.p.unresolved-ex-points=0 +compilers.p.unresolved-import=0 +compilers.p.unused-element-or-attribute=1 +compilers.s.create-docs=false +compilers.s.doc-folder=doc +compilers.s.open-tags=1 +compilers.use-project=true +eclipse.preferences.version=1 diff --git a/bundles/org.eclipse.jface/META-INF/MANIFEST.MF b/bundles/org.eclipse.jface/META-INF/MANIFEST.MF index 68b6e05..ef02130 100644 --- a/bundles/org.eclipse.jface/META-INF/MANIFEST.MF +++ b/bundles/org.eclipse.jface/META-INF/MANIFEST.MF @@ -2,7 +2,7 @@ Bundle-ManifestVersion: 2 Bundle-Name: %pluginName Bundle-SymbolicName: org.eclipse.jface -Bundle-Version: 3.7.0.qualifier +Bundle-Version: 3.8.0.qualifier Bundle-ClassPath: . Bundle-Vendor: %providerName Bundle-Localization: plugin diff --git a/bundles/org.eclipse.jface/build.properties b/bundles/org.eclipse.jface/build.properties index 2c04303..a3eb1b3 100644 --- a/bundles/org.eclipse.jface/build.properties +++ b/bundles/org.eclipse.jface/build.properties @@ -11,6 +11,7 @@ bin.includes = plugin.properties,\ about.html,\ .,\ - META-INF/ + META-INF/,\ + icons/ src.includes = about.html source.. = src/ diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/action/ActionContributionItem.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/action/ActionContributionItem.java index cfe7518..eab5620 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/action/ActionContributionItem.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/action/ActionContributionItem.java @@ -1332,17 +1332,17 @@ */ private void handleHideProxy(final Menu proxy) { proxy.removeListener(SWT.Hide, getMenuCreatorListener()); - MenuItem parentItem = proxy.getParentItem(); - parentItem.setMenu(holdMenu); - if (holdMenu != null &amp;&amp; !holdMenu.isDisposed()) { - holdMenu.notifyListeners(SWT.Hide, null); - } - holdMenu = null; proxy.getDisplay().asyncExec(new Runnable() { public void run() { if (!proxy.isDisposed()) { + MenuItem parentItem = proxy.getParentItem(); proxy.dispose(); + parentItem.setMenu(holdMenu); } + if (holdMenu != null &amp;&amp; !holdMenu.isDisposed()) { + holdMenu.notifyListeners(SWT.Hide, null); + } + holdMenu = null; } }); } diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/action/MenuManager.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/action/MenuManager.java index 93463d7..e4a4eda 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/action/MenuManager.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/action/MenuManager.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -40,6 +40,7 @@ * */ public class MenuManager extends ContributionManager implements IMenuManager { + private static final String MANAGER_KEY = &quot;org.eclipse.jface.action.MenuManager.managerKey&quot;; //$NON-NLS-1$ /** * The menu id. @@ -174,6 +175,7 @@ public Menu createContextMenu(Control parent) { if (!menuExist()) { menu = new Menu(parent); + menu.setData(MANAGER_KEY, this); initializeMenu(); } return menu; @@ -191,6 +193,7 @@ public Menu createMenuBar(Decorations parent) { if (!menuExist()) { menu = new Menu(parent, SWT.BAR); + menu.setData(MANAGER_KEY, this); update(false); } return menu; @@ -275,6 +278,7 @@ if (!menuExist()) { menu = new Menu(parent); + menu.setData(MANAGER_KEY, this); } menuItem.setMenu(menu); @@ -895,7 +899,7 @@ char character = Character.toUpperCase(text .charAt(index + 1)); - if (callback.isAcceleratorInUse(SWT.ALT | character)) { + if (callback.isAcceleratorInUse(SWT.ALT | character) &amp;&amp; isTopLevelMenu()) { if (index == 0) { text = text.substring(1); } else { @@ -918,6 +922,16 @@ } } + private boolean isTopLevelMenu() { + if (menu != null &amp;&amp; !menu.isDisposed() &amp;&amp; menuItem != null + &amp;&amp; !menuItem.isDisposed()) { + Menu parentMenu = menuItem.getParent(); + return parentMenu != null + &amp;&amp; ((parentMenu.getStyle() &amp; SWT.BAR) == SWT.BAR); + } + return false; + } + /** * Dispose any images allocated for this menu */ diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/action/StatusLine.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/action/StatusLine.java index 443017e..315e8dc 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/action/StatusLine.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/action/StatusLine.java @@ -12,12 +12,19 @@ package org.eclipse.jface.action; import org.eclipse.core.runtime.IProgressMonitor; - +import org.eclipse.jface.dialogs.ProgressIndicator; +import org.eclipse.jface.resource.ImageDescriptor; +import org.eclipse.jface.resource.JFaceColors; +import org.eclipse.jface.resource.JFaceResources; +import org.eclipse.jface.util.Util; import org.eclipse.swt.SWT; import org.eclipse.swt.accessibility.ACC; import org.eclipse.swt.accessibility.AccessibleControlAdapter; import org.eclipse.swt.accessibility.AccessibleControlEvent; import org.eclipse.swt.custom.CLabel; +import org.eclipse.swt.dnd.Clipboard; +import org.eclipse.swt.dnd.TextTransfer; +import org.eclipse.swt.dnd.Transfer; import org.eclipse.swt.events.DisposeEvent; import org.eclipse.swt.events.DisposeListener; import org.eclipse.swt.events.SelectionAdapter; @@ -33,14 +40,10 @@ import org.eclipse.swt.widgets.Control; import org.eclipse.swt.widgets.Display; import org.eclipse.swt.widgets.Layout; +import org.eclipse.swt.widgets.Menu; +import org.eclipse.swt.widgets.MenuItem; import org.eclipse.swt.widgets.ToolBar; import org.eclipse.swt.widgets.ToolItem; - -import org.eclipse.jface.dialogs.ProgressIndicator; -import org.eclipse.jface.resource.ImageDescriptor; -import org.eclipse.jface.resource.JFaceColors; -import org.eclipse.jface.resource.JFaceResources; -import org.eclipse.jface.util.Util; /** * A StatusLine control is a SWT Composite with a horizontal layout which hosts @@ -113,6 +116,8 @@ /** stop image descriptor */ protected static ImageDescriptor fgStopImage = ImageDescriptor .createFromFile(StatusLine.class, &quot;images/stop.gif&quot;);//$NON-NLS-1$ + + private MenuItem copyMenuItem; static { JFaceResources.getImageRegistry().put( &quot;org.eclipse.jface.parts.StatusLine.stopImage&quot;, fgStopImage);//$NON-NLS-1$ @@ -282,13 +287,26 @@ setLayout(new StatusLineLayout()); fMessageLabel = new CLabel(this, SWT.NONE);// SWT.SHADOW_IN); - // Color[] colors = new Color[2]; - // colors[0] = - // parent.getDisplay().getSystemColor(SWT.COLOR_WIDGET_LIGHT_SHADOW); - // colors[1] = fMessageLabel.getBackground(); - // int[] gradient = new int[] {JFaceColors.STATUS_PERCENT}; - // fMessageLabel.setBackground(colors, gradient); - + + // this would need extra work to make this accessible + // from the workbench command framework. + Menu menu = new Menu(fMessageLabel); + fMessageLabel.setMenu(menu); + copyMenuItem = new MenuItem(menu, SWT.PUSH); + copyMenuItem.setText(JFaceResources.getString(&quot;copy&quot;)); //$NON-NLS-1$ + copyMenuItem.addSelectionListener(new SelectionAdapter() { + public void widgetSelected(SelectionEvent e) { + String text = fMessageLabel.getText(); + if (text != null &amp;&amp; text.length() &gt; 0) { + text = LegacyActionTools.removeMnemonics(text); + Clipboard cp = new Clipboard(e.display); + cp.setContents(new Object[] { text }, + new Transfer[] { TextTransfer.getInstance() }); + cp.dispose(); + } + } + }); + fProgressIsVisible = false; fCancelEnabled = false; @@ -678,6 +696,10 @@ fMessageLabel.setText(fMessageText == null ? &quot;&quot; : fMessageText); //$NON-NLS-1$ fMessageLabel.setImage(fMessageImage); } + if (copyMenuItem != null &amp;&amp; !copyMenuItem.isDisposed()) { + String text = fMessageLabel.getText(); + copyMenuItem.setEnabled(text != null &amp;&amp; text.length() &gt; 0); + } } } diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/action/StatusLineManager.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/action/StatusLineManager.java index a17e0fc..7eed699 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/action/StatusLineManager.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/action/StatusLineManager.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -13,6 +13,7 @@ import org.eclipse.core.runtime.IProgressMonitor; import org.eclipse.core.runtime.IProgressMonitorWithBlocking; import org.eclipse.core.runtime.IStatus; +import org.eclipse.core.runtime.NullProgressMonitor; import org.eclipse.swt.SWT; import org.eclipse.swt.graphics.Image; import org.eclipse.swt.widgets.Composite; @@ -145,10 +146,10 @@ * Method declared on IStatusLineManager */ public IProgressMonitor getProgressMonitor() { + final IProgressMonitor progressDelegate = statusLineExist() ? getProgressMonitorDelegate() + : new NullProgressMonitor(); return new IProgressMonitorWithBlocking() { - - IProgressMonitor progressDelegate = getProgressMonitorDelegate(); /* (non-Javadoc) * @see org.eclipse.core.runtime.IProgressMonitor#beginTask(java.lang.String, int) diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/ErrorDialog.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/ErrorDialog.java index 25159bb..d986f37 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/ErrorDialog.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/ErrorDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -9,6 +9,8 @@ * IBM Corporation - initial API and implementation * Sebastian Davids - Fix for bug 19346 - Dialog font should * be activated and used by other components. + * Krzysztof Daniel Bug 96373 - [ErrorHandling] + * ErrorDialog details area becomes huge with multi-line strings *******************************************************************************/ package org.eclipse.jface.dialogs; @@ -57,11 +59,6 @@ * Static to prevent opening of error dialogs for automated testing. */ public static boolean AUTOMATED_MODE = false; - - /** - * Reserve room for this many list items. - */ - private static final int LIST_ITEM_COUNT = 7; /** * The nesting indent. @@ -195,6 +192,10 @@ if (provider == null) return; + + if(!provider.validFor(status)){ + return; + } Composite supportArea = new Composite(parent, SWT.NONE); provider.createSupportArea(supportArea, status); @@ -315,7 +316,7 @@ GridData data = new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.GRAB_HORIZONTAL | GridData.VERTICAL_ALIGN_FILL | GridData.GRAB_VERTICAL); - data.heightHint = list.getItemHeight() * LIST_ITEM_COUNT; + data.heightHint = 150; data.horizontalSpan = 2; list.setLayoutData(data); list.setFont(parent.getFont()); @@ -605,22 +606,26 @@ * pressing the details button. */ private void toggleDetailsArea() { + boolean opened = false; Point windowSize = getShell().getSize(); - Point oldSize = getShell().computeSize(SWT.DEFAULT, SWT.DEFAULT); if (listCreated) { list.dispose(); listCreated = false; detailsButton.setText(IDialogConstants.SHOW_DETAILS_LABEL); + opened = false; } else { list = createDropDownList((Composite) getContents()); detailsButton.setText(IDialogConstants.HIDE_DETAILS_LABEL); getContents().getShell().layout(); + opened = true; } Point newSize = getShell().computeSize(SWT.DEFAULT, SWT.DEFAULT); - getShell() - .setSize( - new Point(windowSize.x, windowSize.y - + (newSize.y - oldSize.y))); + int diffY = newSize.y - windowSize.y; + // increase the dialog height if details were opened and such increase is necessary + // decrease the dialog height if details were closed and empty space appeared + if ((opened &amp;&amp; diffY &gt; 0) || (!opened &amp;&amp; diffY &lt; 0)) { + getShell().setSize(new Point(windowSize.x, windowSize.y + (diffY))); + } } /** diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/ErrorSupportProvider.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/ErrorSupportProvider.java index 9293ac9..9bb4f4c 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/ErrorSupportProvider.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/ErrorSupportProvider.java @@ -30,4 +30,19 @@ * @return Control */ public abstract Control createSupportArea(Composite parent, IStatus status); + + /** + * This method is called before + * {@link #createSupportArea(Composite, IStatus)} to check if the + * {@link ErrorSupportProvider} will display any significant + * informations. If not, then it will not be presented at all. + * + * @param status + * - {@link IStatus} for which status are will be requested. + * @return true if provider is able to process particular {@link IStatus} + * @since 3.7 + */ + public boolean validFor(IStatus status){ + return true; + } } diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/IDialogConstants.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/IDialogConstants.java index 883a4c2..fbc7ee3 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/IDialogConstants.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/IDialogConstants.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2006 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -36,10 +36,8 @@ import org.eclipse.jface.resource.JFaceResources; /** - * IDialogConstants is the interface for common dialog strings and ids - * used throughout JFace. - * It is recommended that you use these labels and ids whereever - * for consistency with the JFace dialogs. + * IDialogConstants is the interface for common dialog strings and ids used throughout JFace. It is + * recommended that you use these labels and ids wherever for consistency with the JFace dialogs. */ public interface IDialogConstants { // button ids @@ -171,103 +169,202 @@ // button labels /** * The label for OK buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.OK_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String OK_LABEL = JFaceResources.getString(&quot;ok&quot;); //$NON-NLS-1$ + public String OK_LABEL = JFaceResources.getString(IDialogLabelKeys.OK_LABEL_KEY); /** * The label for cancel buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.CANCEL_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String CANCEL_LABEL = JFaceResources.getString(&quot;cancel&quot;); //$NON-NLS-1$ + public String CANCEL_LABEL = JFaceResources.getString(IDialogLabelKeys.CANCEL_LABEL_KEY); /** * The label for yes buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.YES_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String YES_LABEL = JFaceResources.getString(&quot;yes&quot;); //$NON-NLS-1$ - + public String YES_LABEL = JFaceResources.getString(IDialogLabelKeys.YES_LABEL_KEY); /** * The label for no buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.NO_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String NO_LABEL = JFaceResources.getString(&quot;no&quot;); //$NON-NLS-1$ + public String NO_LABEL = JFaceResources.getString(IDialogLabelKeys.NO_LABEL_KEY); /** * The label for not to all buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.NO_TO_ALL_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String NO_TO_ALL_LABEL = JFaceResources.getString(&quot;notoall&quot;); //$NON-NLS-1$ + public String NO_TO_ALL_LABEL = JFaceResources.getString(IDialogLabelKeys.NO_TO_ALL_LABEL_KEY); /** * The label for yes to all buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.YES_TO_ALL_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String YES_TO_ALL_LABEL = JFaceResources.getString(&quot;yestoall&quot;); //$NON-NLS-1$ + public String YES_TO_ALL_LABEL = JFaceResources.getString(IDialogLabelKeys.YES_TO_ALL_LABEL_KEY); /** * The label for skip buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.SKIP_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String SKIP_LABEL = JFaceResources.getString(&quot;skip&quot;); //$NON-NLS-1$ + public String SKIP_LABEL = JFaceResources.getString(IDialogLabelKeys.SKIP_LABEL_KEY); /** * The label for stop buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.STOP_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String STOP_LABEL = JFaceResources.getString(&quot;stop&quot;); //$NON-NLS-1$ + public String STOP_LABEL = JFaceResources.getString(IDialogLabelKeys.STOP_LABEL_KEY); /** * The label for abort buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.ABORT_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String ABORT_LABEL = JFaceResources.getString(&quot;abort&quot;); //$NON-NLS-1$ + public String ABORT_LABEL = JFaceResources.getString(IDialogLabelKeys.ABORT_LABEL_KEY); /** * The label for retry buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.RETRY_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String RETRY_LABEL = JFaceResources.getString(&quot;retry&quot;); //$NON-NLS-1$ + public String RETRY_LABEL = JFaceResources.getString(IDialogLabelKeys.RETRY_LABEL_KEY); /** * The label for ignore buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.IGNORE_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String IGNORE_LABEL = JFaceResources.getString(&quot;ignore&quot;); //$NON-NLS-1$ + public String IGNORE_LABEL = JFaceResources.getString(IDialogLabelKeys.IGNORE_LABEL_KEY); /** * The label for proceed buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.PROCEED_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String PROCEED_LABEL = JFaceResources.getString(&quot;proceed&quot;); //$NON-NLS-1$ + public String PROCEED_LABEL = JFaceResources.getString(IDialogLabelKeys.PROCEED_LABEL_KEY); /** * The label for open buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.OPEN_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String OPEN_LABEL = JFaceResources.getString(&quot;open&quot;); //$NON-NLS-1$ + public String OPEN_LABEL = JFaceResources.getString(IDialogLabelKeys.OPEN_LABEL_KEY); /** * The label for close buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.CLOSE_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String CLOSE_LABEL = JFaceResources.getString(&quot;close&quot;); //$NON-NLS-1$ + public String CLOSE_LABEL = JFaceResources.getString(IDialogLabelKeys.CLOSE_LABEL_KEY); /** * The label for show details buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.SHOW_DETAILS_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String SHOW_DETAILS_LABEL = JFaceResources.getString(&quot;showDetails&quot;); //$NON-NLS-1$ + public String SHOW_DETAILS_LABEL = JFaceResources.getString(IDialogLabelKeys.SHOW_DETAILS_LABEL_KEY); /** * The label for hide details buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.HIDE_DETAILS_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String HIDE_DETAILS_LABEL = JFaceResources.getString(&quot;hideDetails&quot;); //$NON-NLS-1$ + public String HIDE_DETAILS_LABEL = JFaceResources.getString(IDialogLabelKeys.HIDE_DETAILS_LABEL_KEY); /** * The label for back buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.BACK_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String BACK_LABEL = JFaceResources.getString(&quot;backButton&quot;); //$NON-NLS-1$ + public String BACK_LABEL = JFaceResources.getString(IDialogLabelKeys.BACK_LABEL_KEY); /** * The label for next buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.NEXT_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String NEXT_LABEL = JFaceResources.getString(&quot;nextButton&quot;); //$NON-NLS-1$ + public String NEXT_LABEL = JFaceResources.getString(IDialogLabelKeys.NEXT_LABEL_KEY); /** * The label for finish buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.FINISH_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String FINISH_LABEL = JFaceResources.getString(&quot;finish&quot;); //$NON-NLS-1$ + public String FINISH_LABEL = JFaceResources.getString(IDialogLabelKeys.FINISH_LABEL_KEY); /** * The label for help buttons. + * Using this static label string provides optimum performance by looking + * up the label only once when JFace is initialized. However, clients that + * wish to support multiple locales in one system should instead use the pattern + * JFaceResources.getString(IDialogLabelKeys.HELP_LABEL_KEY) + * so that a locale other than the default may be consulted. */ - public String HELP_LABEL = JFaceResources.getString(&quot;help&quot;); //$NON-NLS-1$ + public String HELP_LABEL = JFaceResources.getString(IDialogLabelKeys.HELP_LABEL_KEY); // Margins, spacings, and sizes /** diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/IDialogLabelKeys.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/IDialogLabelKeys.java new file mode 100644 index 0000000..0f4465a --- /dev/null +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/IDialogLabelKeys.java @@ -0,0 +1,209 @@ +/******************************************************************************* + * Copyright (c) 2011 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + *******************************************************************************/ +package org.eclipse.jface.dialogs; + +/** + * IDialogLabelKeys contains publicly accessible keys to the common dialog + * labels used throughout JFace. IDialogConstants provides + * access to these labels using static constants. This is the preferred + * method when the client is optimizing for performance and is known to be + * used in a single-locale system. Using the keys and accessing the + * common dialog labels dynamically is the preferred method when the client + * may be running in a multi-locale system. + * + * @see IDialogConstants + * @since 3.7 + * + * @noimplement This interface is not intended to be implemented by clients. + + */ +public interface IDialogLabelKeys { + + /** + * The key used to retrieve the label for OK buttons. Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.OK_LABEL_KEY) to retrieve the label + * dynamically when using multiple locales. + * + * @since 3.7 + */ + public String OK_LABEL_KEY = &quot;ok&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for cancel buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.CANCEL_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String CANCEL_LABEL_KEY = &quot;cancel&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for yes buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.YES_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String YES_LABEL_KEY = &quot;yes&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for no buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.NO_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String NO_LABEL_KEY = &quot;no&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for no to all buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.NO_TO_ALL_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String NO_TO_ALL_LABEL_KEY = &quot;notoall&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for yes to all buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.YES_TO_ALL_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String YES_TO_ALL_LABEL_KEY = &quot;yestoall&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for skip buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.SKIP_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String SKIP_LABEL_KEY = &quot;skip&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for stop buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.STOP_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String STOP_LABEL_KEY = &quot;stop&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for abort buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.ABORT_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String ABORT_LABEL_KEY = &quot;abort&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for retry buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.RETRY_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String RETRY_LABEL_KEY = &quot;retry&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for ignore buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.IGNORE_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String IGNORE_LABEL_KEY = &quot;ignore&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for proceed buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.PROCEED_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String PROCEED_LABEL_KEY = &quot;proceed&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for open buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.OPEN_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String OPEN_LABEL_KEY = &quot;open&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for close buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.CLOSE_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String CLOSE_LABEL_KEY = &quot;close&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for show details buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.SHOW_DETAILS_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String SHOW_DETAILS_LABEL_KEY = &quot;showDetails&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for hide details buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.HIDE_DETAILS_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String HIDE_DETAILS_LABEL_KEY = &quot;hideDetails&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for back buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.BACK_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String BACK_LABEL_KEY = &quot;backButton&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for next buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.NEXT_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String NEXT_LABEL_KEY = &quot;nextButton&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for finish buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.FINISH_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String FINISH_LABEL_KEY = &quot;finish&quot;; //$NON-NLS-1$ + + /** + * The key used to retrieve the label for help buttons. + * Clients should use the pattern + * JFaceResources.getString(IDialogLabelKeys.HELP_LABEL_KEY) + * to retrieve the label dynamically when using multiple locales. + * @since 3.7 + */ + public String HELP_LABEL_KEY = &quot;help&quot;; //$NON-NLS-1$ +} diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/PopupDialog.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/PopupDialog.java index 9ff1bf4..87c0f6c 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/PopupDialog.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/PopupDialog.java @@ -76,9 +76,15 @@ /** * */ - private static final GridDataFactory LAYOUTDATA_GRAB_BOTH = GridDataFactory - .fillDefaults().grab(true, true); + private static GridDataFactory grabBothGridDataFactory; + private static GridDataFactory getGrabBothGridData() { + if (grabBothGridDataFactory == null) { + grabBothGridDataFactory = GridDataFactory.fillDefaults().grab(true, true); + } + return grabBothGridDataFactory; + } + /** * The dialog settings key name for stored dialog x location. */ @@ -293,9 +299,15 @@ /** * */ - private static final GridLayoutFactory POPUP_LAYOUT_FACTORY = GridLayoutFactory - .fillDefaults().margins(POPUP_MARGINWIDTH, POPUP_MARGINHEIGHT) - .spacing(POPUP_HORIZONTALSPACING, POPUP_VERTICALSPACING); + private static GridLayoutFactory popupLayoutFactory; + private static GridLayoutFactory getPopupLayout() { + if (popupLayoutFactory == null) { + popupLayoutFactory = GridLayoutFactory.fillDefaults() + .margins(POPUP_MARGINWIDTH, POPUP_MARGINHEIGHT) + .spacing(POPUP_HORIZONTALSPACING, POPUP_VERTICALSPACING); + } + return popupLayoutFactory; + } /** * The dialog&apos;s toolbar for the move and resize capabilities. @@ -676,8 +688,8 @@ */ protected Control createContents(Composite parent) { Composite composite = new Composite(parent, SWT.NONE); - POPUP_LAYOUT_FACTORY.applyTo(composite); - LAYOUTDATA_GRAB_BOTH.applyTo(composite); + getPopupLayout().applyTo(composite); + getGrabBothGridData().applyTo(composite); // Title area if (hasTitleArea()) { @@ -689,7 +701,7 @@ // Create a grid data layout data if one was not provided. // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=118025 if (dialogArea.getLayoutData() == null) { - LAYOUTDATA_GRAB_BOTH.applyTo(dialogArea); + getGrabBothGridData().applyTo(dialogArea); } // Info field @@ -730,8 +742,8 @@ */ protected Control createDialogArea(Composite parent) { Composite composite = new Composite(parent, SWT.NONE); - POPUP_LAYOUT_FACTORY.applyTo(composite); - LAYOUTDATA_GRAB_BOTH.applyTo(composite); + getPopupLayout().applyTo(composite); + getGrabBothGridData().applyTo(composite); return composite; } @@ -802,7 +814,7 @@ protected Control createTitleMenuArea(Composite parent) { Composite titleAreaComposite = new Composite(parent, SWT.NONE); - POPUP_LAYOUT_FACTORY.copy().numColumns(2).applyTo(titleAreaComposite); + getPopupLayout().copy().numColumns(2).applyTo(titleAreaComposite); GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER).grab(true, false).applyTo(titleAreaComposite); diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/TrayDialog.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/TrayDialog.java index da2103a..0a63339 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/TrayDialog.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/dialogs/TrayDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2008 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -86,15 +86,20 @@ private static boolean dialogHelpAvailable; - /* + /** * The dialog&apos;s tray (null if none). */ private DialogTray tray; - /* - * The tray&apos;s control. + /** + * The tray&apos;s control (null if none). */ private Control trayControl; + + /** + * The control that had focus before the tray was opened (null if none). + */ + private Control nonTrayFocusControl; /* * The separator to the left of the sash. @@ -119,6 +124,11 @@ private int shellWidth; private ControlAdapter resizeListener; + + /** + * The help button (null if none). + */ + private ToolItem fHelpButton; /** * Creates a tray dialog instance. Note that the window will have no visual @@ -149,6 +159,15 @@ throw new IllegalStateException(&quot;Tray was not open&quot;); //$NON-NLS-1$ } Shell shell = getShell(); + Control focusControl = shell.getDisplay().getFocusControl(); + if (focusControl!= null &amp;&amp; isContained(trayControl, focusControl)) { + if (nonTrayFocusControl!= null &amp;&amp; !nonTrayFocusControl.isDisposed()) { + nonTrayFocusControl.setFocus(); + } else { + shell.setFocus(); + } + } + nonTrayFocusControl= null; shell.removeControlListener (resizeListener); resizeListener = null; int trayWidth = trayControl.getSize().x + leftSeparator.getSize().x + sash.getSize().x + rightSeparator.getSize().x; @@ -163,12 +182,35 @@ sash = null; Rectangle bounds = shell.getBounds(); shell.setBounds(bounds.x + ((getDefaultOrientation() == SWT.RIGHT_TO_LEFT) ? trayWidth : 0), bounds.y, bounds.width - trayWidth, bounds.height); + if (fHelpButton != null) { + fHelpButton.setSelection(false); + } } - /* (non-Javadoc) - * @see org.eclipse.jface.dialogs.Dialog#close() + /** + * Returns true if the given Control is a direct or indirect child of + * container. + * + * @param container + * the potential parent + * @param control + * @return boolean true if control is a child of container */ - public boolean close() { + private boolean isContained(Control container, Control control) { + Composite parent; + while ((parent = control.getParent()) != null) { + if (parent == container) { + return true; + } + control = parent; + } + return false; + } + + /* (non-Javadoc) + * @see org.eclipse.jface.window.Window#handleShellCloseEvent() + */ + protected void handleShellCloseEvent() { /* * Close the tray to ensure that those dialogs that remember their * size do not store the tray size. @@ -176,7 +218,8 @@ if (getTray() != null) { closeTray(); } - return super.close(); + + super.handleShellCloseEvent(); } /* (non-Javadoc) @@ -238,10 +281,10 @@ cursor.dispose(); } }); - ToolItem item = new ToolItem(toolBar, SWT.NONE); - item.setImage(image); - item.setToolTipText(JFaceResources.getString(&quot;helpToolTip&quot;)); //$NON-NLS-1$ - item.addSelectionListener(new SelectionAdapter() { + fHelpButton = new ToolItem(toolBar, SWT.CHECK); + fHelpButton.setImage(image); + fHelpButton.setToolTipText(JFaceResources.getString(&quot;helpToolTip&quot;)); //$NON-NLS-1$ + fHelpButton.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { helpPressed(); } @@ -326,23 +369,34 @@ * context help behavior (e.g. F1 on Windows). It traverses the widget * tree upward until it finds a widget that has a help listener on it, * then invokes a help event on that widget. + * If the help tray is already open, it closes it and doesn&apos;t invoke + * any help listener. */ private void helpPressed() { - if (getShell() != null) { - Control c = getShell().getDisplay().getFocusControl(); - while (c != null) { - if (c.isListening(SWT.Help)) { - c.notifyListeners(SWT.Help, new Event()); - break; - } - c = c.getParent(); - } - } + if (getTray() == null || + fHelpButton != null &amp;&amp; fHelpButton.getSelection()) { // help button was not selected before + if (getShell() != null) { + Control c = getShell().getDisplay().getFocusControl(); + while (c != null) { + if (c.isListening(SWT.Help)) { + c.notifyListeners(SWT.Help, new Event()); + break; + } + c = c.getParent(); + } + if (fHelpButton != null &amp;&amp; getTray() != null) { + fHelpButton.setSelection(true); + } + } + + } else { + closeTray(); + } } /** * Constructs the tray&apos;s widgets and displays the tray in this dialog. The - * dialog&apos;s size will be adjusted to accomodate the tray. + * dialog&apos;s size will be adjusted to accommodate the tray. * * @param tray the tray to show in this dialog * @throws IllegalStateException if the dialog already has a tray open @@ -360,6 +414,10 @@ throw new UnsupportedOperationException(&quot;Trays not supported with custom layouts&quot;); //$NON-NLS-1$ } final Shell shell = getShell(); + Control focusControl = shell.getDisplay().getFocusControl(); + if (focusControl != null &amp;&amp; isContained(shell, focusControl)) { + nonTrayFocusControl = focusControl; + } leftSeparator = new Label(shell, SWT.SEPARATOR | SWT.VERTICAL); leftSeparator.setLayoutData(new GridData(GridData.FILL_VERTICAL)); sash = new Sash(shell, SWT.VERTICAL); diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/fieldassist/ControlDecoration.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/fieldassist/ControlDecoration.java index 062499b..a46f926 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/fieldassist/ControlDecoration.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/fieldassist/ControlDecoration.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2006, 2009 IBM Corporation and others. + * Copyright (c) 2006, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -39,6 +39,7 @@ import org.eclipse.swt.widgets.Listener; import org.eclipse.swt.widgets.Shell; import org.eclipse.swt.widgets.Widget; + /** * ControlDecoration renders an image decoration near a control. It allows @@ -897,9 +898,9 @@ } /** - * Set the image shown in this control decoration. Update the rendered - * decoration. - * + * Set the description text that may be shown in a hover for this + * decoration. Update the rendered decoration. + * * @param text * the text to be shown as a description for the decoration, or * null if none has been set. diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/internal/InternalPolicy.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/internal/InternalPolicy.java index 94d354d..d7135e3 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/internal/InternalPolicy.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/internal/InternalPolicy.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007, 2009 IBM Corporation and others. + * Copyright (c) 2007, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -25,6 +25,13 @@ * @since 3.3 */ public static boolean DEBUG_LOG_REENTRANT_VIEWER_CALLS = false; + + /** + * (NON-API) A flag to indicate whether illegal equal elements in a viewer should be logged. + * + * @since 3.7 + */ + public static boolean DEBUG_LOG_EQUAL_VIEWER_ELEMENTS= false; /** * (NON-API) A flag to indicate whether label provider changed notifications diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/preference/PreferenceDialog.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/preference/PreferenceDialog.java index c28d36c..cf524b2 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/preference/PreferenceDialog.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/preference/PreferenceDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -252,18 +252,19 @@ protected void cancelPressed() { // Inform all pages that we are cancelling Iterator nodes = preferenceManager.getElements(PreferenceManager.PRE_ORDER).iterator(); + final boolean[] cancelOK = new boolean[] { true }; while (nodes.hasNext()) { final IPreferenceNode node = (IPreferenceNode) nodes.next(); if (getPage(node) != null) { SafeRunnable.run(new SafeRunnable() { public void run() { if (!getPage(node).performCancel()) { - return; + cancelOK[0] = false; } } - - }); + if (!cancelOK[0]) + return; } } diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/resource/CompositeImageDescriptor.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/resource/CompositeImageDescriptor.java index 9db0480..e92a608 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/resource/CompositeImageDescriptor.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/resource/CompositeImageDescriptor.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2007 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,6 +7,7 @@ * * Contributors: * IBM Corporation - initial API and implementation + * Stephan Wahlbrink - fix for bug 341702 - incorrect mixing of images with alpha channel *******************************************************************************/ package org.eclipse.jface.resource; @@ -130,10 +131,24 @@ dstRed = (dstPixel &amp; 0xFF) &gt;&gt;&gt; 0; dstGreen = (dstPixel &amp; 0xFF00) &gt;&gt;&gt; 8; dstBlue = (dstPixel &amp; 0xFF0000) &gt;&gt;&gt; 16; - dstRed += (srcRed - dstRed) * srcAlpha / 255; - dstGreen += (srcGreen - dstGreen) * srcAlpha / 255; - dstBlue += (srcBlue - dstBlue) * srcAlpha / 255; - dstAlpha += (srcAlpha - dstAlpha) * srcAlpha / 255; + if (dstAlpha == 255) { // simplified calculations for performance + dstRed += (srcRed - dstRed) * srcAlpha / 255; + dstGreen += (srcGreen - dstGreen) * srcAlpha / 255; + dstBlue += (srcBlue - dstBlue) * srcAlpha / 255; + } else { + // See Porter T., Duff T. 1984. &quot;Compositing Digital Images&quot;. + // Computer Graphics 18 (3): 253�259. + dstRed = srcRed * srcAlpha * 255 + dstRed * dstAlpha * (255 - srcAlpha); + dstGreen = srcGreen * srcAlpha * 255 + dstGreen * dstAlpha * (255 - srcAlpha); + dstBlue = srcBlue * srcAlpha * 255 + dstBlue * dstAlpha * (255 - srcAlpha); + dstAlpha = srcAlpha * 255 + dstAlpha * (255 - srcAlpha); + if (dstAlpha != 0) { // if both original alphas == 0, then all colors are 0 + dstRed /= dstAlpha; + dstGreen /= dstAlpha; + dstBlue /= dstAlpha; + dstAlpha /= 255; + } + } } dst.setPixel(dstX, dstY, ((dstRed &amp; 0xFF) &lt;&lt; 0) | ((dstGreen &amp; 0xFF) &lt;&lt; 8) | ((dstBlue &amp; 0xFF) &lt;&lt; 16)); dst.setAlpha(dstX, dstY, dstAlpha); diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/resource/jfacefonts_windowsvista.properties b/bundles/org.eclipse.jface/src/org/eclipse/jface/resource/jfacefonts_windowsvista.properties new file mode 100644 index 0000000..40267d8 --- /dev/null +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/resource/jfacefonts_windowsvista.properties @@ -0,0 +1,22 @@ +############################################################################### +# Copyright (c) 2011 IBM Corporation and others. +# All rights reserved. This program and the accompanying materials +# are made available under the terms of the Eclipse Public License v1.0 +# which accompanies this distribution, and is available at +# http://www.eclipse.org/legal/epl-v10.html +# +# Contributors: +# IBM Corporation - initial API and implementation +############################################################################### +# Font file for JFace when running under Windows Vista +############################################################# +# START NON-TRANSLATABLE +org.eclipse.jface.bannerfont.0=Segoe UI-bold-10 +org.eclipse.jface.bannerfont.1=Tahoma-bold-10 + +org.eclipse.jface.headerfont.0=Segoe UI-bold-12 +org.eclipse.jface.headerfont.1=Tahoma-bold-12 + +org.eclipse.jface.textfont.0=Consolas-regular-10 +org.eclipse.jface.textfont.1=Courier New-regular-10 +# END NON-TRANSLATABLE \ No newline at end of file diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/util/OpenStrategy.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/util/OpenStrategy.java index 7f6c9ac..692f25e 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/util/OpenStrategy.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/util/OpenStrategy.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -89,6 +89,16 @@ // Not declared final, see bug 246209 private static int TIME = 500; + /** + * Returns the delay for post selection events. + * + * @return the delay for post selection events in milliseconds + * @since 3.7 + */ + public static final int getPostSelectionDelay() { + return TIME; + } + /* SINGLE_CLICK or DOUBLE_CLICK; * In case of SINGLE_CLICK, the bits SELECT_ON_HOVER and ARROW_KEYS_OPEN * my be set as well. */ diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/AbstractTreeViewer.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/AbstractTreeViewer.java index 01661ea..96d0594 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/AbstractTreeViewer.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/AbstractTreeViewer.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -13,6 +13,7 @@ * Michael Schneider, bug 210747 * Bruce Sutton, bug 221768 * Matthew Hall, bug 221988 + * Julien Desgats, bug 203950 *******************************************************************************/ package org.eclipse.jface.viewers; @@ -24,7 +25,11 @@ import java.util.List; import org.eclipse.core.runtime.Assert; +import org.eclipse.core.runtime.IStatus; import org.eclipse.core.runtime.ListenerList; +import org.eclipse.core.runtime.Status; +import org.eclipse.jface.internal.InternalPolicy; +import org.eclipse.jface.util.Policy; import org.eclipse.jface.util.SafeRunnable; import org.eclipse.swt.SWT; import org.eclipse.swt.custom.BusyIndicator; @@ -84,6 +89,12 @@ * @see #setAutoExpandLevel */ private int expandToLevel = 0; + + /** + * Indicates if filters should be checked to determine expandability of + * a tree node. + */ + private boolean isExpandableCheckFilters = false; /** * Safe runnable used to update an item. @@ -1347,12 +1358,14 @@ } Object[] result = tpcp.getChildren(path); if (result != null) { + assertElementsNotNull(parent, result); return result; } } else if (cp instanceof ITreeContentProvider) { ITreeContentProvider tcp = (ITreeContentProvider) cp; Object[] result = tcp.getChildren(parent); if (result != null) { + assertElementsNotNull(parent, result); return result; } } @@ -1363,6 +1376,41 @@ } } + /** + * Asserts that the given array of elements is itself non- null + * and contains no null elements. + * + * @param parent + * the parent element + * @param elements + * the array to check + * + * @see #assertElementsNotNull(Object[]) + */ + private void assertElementsNotNull(Object parent, Object[] elements) { + Assert.isNotNull(elements); + for (int i = 0, n = elements.length; i &lt; n; ++i) { + Assert.isNotNull(elements[i]); + } + + if (InternalPolicy.DEBUG_LOG_EQUAL_VIEWER_ELEMENTS + &amp;&amp; elements.length &gt; 1) { + CustomHashtable elementSet = newHashtable(elements.length * 2); + for (int i = 0; i &lt; elements.length; i++) { + Object element = elements[i]; + Object old = elementSet.put(element, element); + if (old != null) { + String message = &quot;Sibling elements in viewer must not be equal:\n &quot; //$NON-NLS-1$ + + old + &quot;,\n &quot; + element + &quot;,\n parent: &quot; + parent; //$NON-NLS-1$ //$NON-NLS-2$ + Policy.getLog().log( + new Status(IStatus.WARNING, Policy.JFACE, message, + new RuntimeException())); + return; + } + } + } + } + /** * Returns all selected items for the given SWT control. * @@ -2049,7 +2097,7 @@ * hasChildren on this viewer&apos;s content provider. It may be * overridden if necessary. * - * + * @see #setExpandPreCheckFilters(boolean) * @param elementOrTreePath * the element or path * @return true if the tree node representing the given @@ -2079,11 +2127,19 @@ path = new TreePath(new Object[] { element }); } } - return tpcp.hasChildren(path); + boolean hasChildren = tpcp.hasChildren(path); + if (hasChildren &amp;&amp; isExpandableCheckFilters &amp;&amp; hasFilters()) { + return getFilteredChildren(path).length &gt; 0; + } + return hasChildren; } if (cp instanceof ITreeContentProvider) { ITreeContentProvider tcp = (ITreeContentProvider) cp; - return tcp.hasChildren(element); + boolean hasChildren = tcp.hasChildren(element); + if (hasChildren &amp;&amp; isExpandableCheckFilters &amp;&amp; hasFilters()) { + return getFilteredChildren(element).length &gt; 0; + } + return hasChildren; } return false; } @@ -2621,7 +2677,7 @@ int i = 0; while (numItemsToDispose &gt; 0 &amp;&amp; i &lt; items.length) { Object data = items[i].getData(); - if (data == null || items.length - i &lt;= numItemsToDispose || !children.containsKey(data)) { + if (data == null || !children.containsKey(data)) { if (data != null) { disassociate(items[i]); } @@ -3104,4 +3160,26 @@ protected ViewerRow getViewerRowFromItem(Widget item) { return null; } + + /** + * Instructs {@link #isExpandable(Object)} to consult filters to more accurately + * determine if an item can be expanded. + * + * Setting this value to true will affect performance of the tree + * viewer. + * + * To improve performance, by default the tree viewer does not consult filters when + * determining if a tree node could be expanded. + * + * @param checkFilters true to instruct tree viewer to consult filters + * @see #isExpandable(Object) + * @since 3.8 + */ + public void setExpandPreCheckFilters(boolean checkFilters) { + if (checkFilters != isExpandableCheckFilters) { + this.isExpandableCheckFilters = checkFilters; + refresh(); + } + } + } diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/ColumnViewerEditor.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/ColumnViewerEditor.java index 609fcd0..6228d32 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/ColumnViewerEditor.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/ColumnViewerEditor.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2006, 2009 IBM Corporation and others. + * Copyright (c) 2006, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -9,6 +9,7 @@ * IBM Corporation - initial API and implementation * Tom Schindl - refactoring (bug 153993) * fix in bug: 151295,178946,166500,195908,201906,207676,180504,216706,218336 + * Tony Juckel - Bug 130854 - JFace TableViewer ignoring ICellEditor validator state *******************************************************************************/ package org.eclipse.jface.viewers; @@ -307,7 +308,7 @@ Item t = (Item) this.cell.getItem(); // don&apos;t null out table item -- same item is still selected - if (t != null &amp;&amp; !t.isDisposed()) { + if (t != null &amp;&amp; !t.isDisposed() &amp;&amp; c.isValueValid()) { saveEditorValue(c); } if (!viewer.getControl().isDisposed()) { diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/StructuredViewer.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/StructuredViewer.java index 2f2a4e4..4710519 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/StructuredViewer.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/StructuredViewer.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -17,9 +17,13 @@ import java.util.List; import org.eclipse.core.runtime.Assert; +import org.eclipse.core.runtime.IStatus; import org.eclipse.core.runtime.ListenerList; +import org.eclipse.core.runtime.Status; +import org.eclipse.jface.internal.InternalPolicy; import org.eclipse.jface.util.IOpenEventListener; import org.eclipse.jface.util.OpenStrategy; +import org.eclipse.jface.util.Policy; import org.eclipse.jface.util.SafeRunnable; import org.eclipse.swt.SWT; import org.eclipse.swt.custom.TableTreeItem; @@ -594,6 +598,23 @@ for (int i = 0, n = elements.length; i &lt; n; ++i) { Assert.isNotNull(elements[i]); } + + if (InternalPolicy.DEBUG_LOG_EQUAL_VIEWER_ELEMENTS + &amp;&amp; elements.length &gt; 1) { + CustomHashtable elementSet = newHashtable(elements.length * 2); + for (int i = 0; i &lt; elements.length; i++) { + Object element = elements[i]; + Object old = elementSet.put(element, element); + if (old != null) { + String message = &quot;Sibling elements in viewer must not be equal:\n &quot; //$NON-NLS-1$ + + old + &quot;,\n &quot; + element; //$NON-NLS-1$ + Policy.getLog().log( + new Status(IStatus.WARNING, Policy.JFACE, message, + new RuntimeException())); + return; + } + } + } } /** diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/StyledCellLabelProvider.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/StyledCellLabelProvider.java index 93cc607..c0bae3a 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/StyledCellLabelProvider.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/StyledCellLabelProvider.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007, 2010 IBM Corporation and others. + * Copyright (c) 2007, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -271,7 +271,7 @@ return; ViewerCell cell= getViewerCell(event, element); - boolean applyColors = useColors(event); // returns false because of bug 228376 + boolean applyColors = useColors(event); TextLayout layout = getSharedTextLayout(event.display); @@ -288,8 +288,8 @@ */ private int updateTextLayout(TextLayout layout, ViewerCell cell, boolean applyColors) { - layout.setText(&quot;&quot;); //$NON-NLS-1$ //make sure all previous ranges are cleared (see bug 226090) - + layout.setStyle(null, 0, Integer.MAX_VALUE); // clear old styles + layout.setText(cell.getText()); layout.setFont(cell.getFont()); // set also if null to clear previous usages @@ -361,19 +361,7 @@ Rectangle textBounds = cell.getTextBounds(); if (textBounds != null) { TextLayout textLayout= getSharedTextLayout(event.display); - - /* remove-begin if bug 228376 fixed */ - if (!applyColors) { - // need to remove colors for selected elements: measure doesn&apos;t provide that information, see bug 228376 - StyleRange[] styleRanges= cell.getStyleRanges(); - if (styleRanges != null) { - for (int i= 0; i &lt; styleRanges.length; i++) { - StyleRange curr = prepareStyleRange(styleRanges[i], applyColors); - textLayout.setStyle(curr, curr.start, curr.start + curr.length - 1); - } - } - } - /* remove-end if bug 228376 fixed */ + // text layout already configured in measure(Event, Object) Rectangle layoutBounds = textLayout.getBounds(); diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/ViewerComparator.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/ViewerComparator.java index 893cfd1..f6be9f5 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/ViewerComparator.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/ViewerComparator.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2006 IBM Corporation and others. + * Copyright (c) 2006, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -13,6 +13,9 @@ import java.util.Arrays; import java.util.Comparator; + +import org.eclipse.core.runtime.IStatus; +import org.eclipse.core.runtime.Status; import org.eclipse.jface.util.Policy; @@ -121,34 +124,32 @@ return cat1 - cat2; } - String name1; - String name2; - - if (viewer == null || !(viewer instanceof ContentViewer)) { - name1 = e1.toString(); - name2 = e2.toString(); - } else { - IBaseLabelProvider prov = ((ContentViewer) viewer) - .getLabelProvider(); - if (prov instanceof ILabelProvider) { - ILabelProvider lprov = (ILabelProvider) prov; - name1 = lprov.getText(e1); - name2 = lprov.getText(e2); - } else { - name1 = e1.toString(); - name2 = e2.toString(); - } - } - if (name1 == null) { - name1 = &quot;&quot;;//$NON-NLS-1$ - } - if (name2 == null) { - name2 = &quot;&quot;;//$NON-NLS-1$ - } + String name1 = getLabel(viewer, e1); + String name2 = getLabel(viewer, e2); // use the comparator to compare the strings return getComparator().compare(name1, name2); } + + private String getLabel(Viewer viewer, Object e1) { + String name1; + if (viewer == null || !(viewer instanceof ContentViewer)) { + name1 = e1.toString(); + } else { + IBaseLabelProvider prov = ((ContentViewer) viewer) + .getLabelProvider(); + if (prov instanceof ILabelProvider) { + ILabelProvider lprov = (ILabelProvider) prov; + name1 = lprov.getText(e1); + } else { + name1 = e1.toString(); + } + } + if (name1 == null) { + name1 = &quot;&quot;;//$NON-NLS-1$ + } + return name1; + } /** * Returns whether this viewer sorter would be affected @@ -181,11 +182,24 @@ * @param viewer the viewer * @param elements the elements to sort */ - public void sort(final Viewer viewer, Object[] elements) { - Arrays.sort(elements, new Comparator() { - public int compare(Object a, Object b) { - return ViewerComparator.this.compare(viewer, a, b); - } - }); - } + public void sort(final Viewer viewer, Object[] elements) { + try { + Arrays.sort(elements, new Comparator() { + public int compare(Object a, Object b) { + return ViewerComparator.this.compare(viewer, a, b); + } + }); + } catch (IllegalArgumentException e) { + String msg = &quot;Workaround for comparator violation:\n\t- set system property java.util.Arrays.useLegacyMergeSort=true\n\t- use a 1.6 JRE &quot; //$NON-NLS-1$ + + &quot;\nmessage: &quot; + e.getLocalizedMessage() //$NON-NLS-1$ + + &quot;\nthis: &quot; + getClass().getName() //$NON-NLS-1$ + + &quot;\ncomparator: &quot; + (comparator != null ? comparator.getClass().getName() : null) //$NON-NLS-1$ + + &quot;\narray:&quot;; //$NON-NLS-1$ + for (int i = 0; i &lt; elements.length; i++) { + msg += &quot;\n\t&quot; + getLabel(viewer, elements[i]); //$NON-NLS-1$ + } + Policy.getLog().log(new Status(IStatus.ERROR, &quot;org.eclipse.jface&quot;, msg)); //$NON-NLS-1$ + throw e; + } + } } diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/wizard/IWizard.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/wizard/IWizard.java index 4a2eeb6..4f9e0d5 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/wizard/IWizard.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/wizard/IWizard.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -10,12 +10,11 @@ *******************************************************************************/ package org.eclipse.jface.wizard; +import org.eclipse.jface.dialogs.IDialogSettings; +import org.eclipse.jface.dialogs.TrayDialog; import org.eclipse.swt.graphics.Image; import org.eclipse.swt.graphics.RGB; import org.eclipse.swt.widgets.Composite; - -import org.eclipse.jface.dialogs.IDialogSettings; -import org.eclipse.jface.dialogs.TrayDialog; /** * Interface for a wizard. A wizard maintains a list of wizard pages, @@ -172,7 +171,11 @@ * * * Note: This wizard&apos;s container might be a {@link TrayDialog} which provides - * its own help support. + * its own help support that is independent of this property. + * + * + * Note 2: In the default {@link WizardDialog} implementation, the &quot;Help&quot; + * button only works when {@link org.eclipse.jface.dialogs.IDialogPage#performHelp()} is implemented. * * * @return true if help is available, false otherwise diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/wizard/Wizard.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/wizard/Wizard.java index 56085eb..da8a8fe 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/wizard/Wizard.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/wizard/Wizard.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -13,17 +13,18 @@ import java.util.ArrayList; import java.util.List; -import org.eclipse.swt.graphics.Image; -import org.eclipse.swt.graphics.RGB; -import org.eclipse.swt.widgets.Composite; -import org.eclipse.swt.widgets.Shell; - import org.eclipse.core.runtime.Assert; - +import org.eclipse.core.runtime.IStatus; +import org.eclipse.core.runtime.Status; import org.eclipse.jface.dialogs.IDialogSettings; import org.eclipse.jface.dialogs.TrayDialog; import org.eclipse.jface.resource.ImageDescriptor; import org.eclipse.jface.resource.JFaceResources; +import org.eclipse.jface.util.Policy; +import org.eclipse.swt.graphics.Image; +import org.eclipse.swt.graphics.RGB; +import org.eclipse.swt.widgets.Composite; +import org.eclipse.swt.widgets.Shell; /** * An abstract base implementation of a wizard. A typical client subclasses @@ -188,7 +189,12 @@ public void dispose() { // notify pages for (int i = 0; i &lt; pages.size(); i++) { - ((IWizardPage) pages.get(i)).dispose(); + try { + ((IWizardPage) pages.get(i)).dispose(); + } catch (Exception e) { + Status status = new Status(IStatus.ERROR, Policy.JFACE, IStatus.ERROR, e.getMessage(), e); + Policy.getLog().log(status); + } } // dispose of image if (defaultImage != null) { @@ -412,7 +418,11 @@ * * * Note: This wizard&apos;s container might be a {@link TrayDialog} which provides - * its own help support. + * its own help support that is independent of this property. + * + * + * Note 2: In the default {@link WizardDialog} implementation, the &quot;Help&quot; + * button only works when {@link org.eclipse.jface.dialogs.IDialogPage#performHelp()} is implemented. * * * @param b true if help is available, false otherwise diff --git a/bundles/org.eclipse.jface/src/org/eclipse/jface/wizard/WizardDialog.java b/bundles/org.eclipse.jface/src/org/eclipse/jface/wizard/WizardDialog.java index a1de24f..7ee8d81 100644 --- a/bundles/org.eclipse.jface/src/org/eclipse/jface/wizard/WizardDialog.java +++ b/bundles/org.eclipse.jface/src/org/eclipse/jface/wizard/WizardDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -18,7 +18,29 @@ import java.util.HashMap; import java.util.Map; +import org.eclipse.core.runtime.Assert; +import org.eclipse.core.runtime.IProgressMonitor; +import org.eclipse.core.runtime.IStatus; +import org.eclipse.core.runtime.ListenerList; +import org.eclipse.core.runtime.Status; +import org.eclipse.jface.dialogs.ControlEnableState; +import org.eclipse.jface.dialogs.IDialogConstants; +import org.eclipse.jface.dialogs.IMessageProvider; +import org.eclipse.jface.dialogs.IPageChangeProvider; +import org.eclipse.jface.dialogs.IPageChangedListener; +import org.eclipse.jface.dialogs.IPageChangingListener; +import org.eclipse.jface.dialogs.MessageDialog; +import org.eclipse.jface.dialogs.PageChangedEvent; +import org.eclipse.jface.dialogs.PageChangingEvent; +import org.eclipse.jface.dialogs.TitleAreaDialog; +import org.eclipse.jface.operation.IRunnableWithProgress; +import org.eclipse.jface.operation.ModalContext; +import org.eclipse.jface.resource.JFaceResources; +import org.eclipse.jface.util.Policy; +import org.eclipse.jface.util.SafeRunnable; import org.eclipse.swt.SWT; +import org.eclipse.swt.accessibility.AccessibleAdapter; +import org.eclipse.swt.accessibility.AccessibleEvent; import org.eclipse.swt.custom.BusyIndicator; import org.eclipse.swt.events.HelpEvent; import org.eclipse.swt.events.HelpListener; @@ -38,26 +60,6 @@ import org.eclipse.swt.widgets.Label; import org.eclipse.swt.widgets.Layout; import org.eclipse.swt.widgets.Shell; - -import org.eclipse.core.runtime.Assert; -import org.eclipse.core.runtime.IProgressMonitor; -import org.eclipse.core.runtime.IStatus; -import org.eclipse.core.runtime.ListenerList; - -import org.eclipse.jface.dialogs.ControlEnableState; -import org.eclipse.jface.dialogs.IDialogConstants; -import org.eclipse.jface.dialogs.IMessageProvider; -import org.eclipse.jface.dialogs.IPageChangeProvider; -import org.eclipse.jface.dialogs.IPageChangedListener; -import org.eclipse.jface.dialogs.IPageChangingListener; -import org.eclipse.jface.dialogs.MessageDialog; -import org.eclipse.jface.dialogs.PageChangedEvent; -import org.eclipse.jface.dialogs.PageChangingEvent; -import org.eclipse.jface.dialogs.TitleAreaDialog; -import org.eclipse.jface.operation.IRunnableWithProgress; -import org.eclipse.jface.operation.ModalContext; -import org.eclipse.jface.resource.JFaceResources; -import org.eclipse.jface.util.SafeRunnable; /** * A dialog to show a wizard to the end user. @@ -774,6 +776,20 @@ IDialogConstants.BACK_LABEL, false); nextButton = createButton(composite, IDialogConstants.NEXT_ID, IDialogConstants.NEXT_LABEL, false); + + // make sure screen readers skip visual &apos;&lt;&apos;, &apos;&gt;&apos; chars on buttons: + final String backReaderText = IDialogConstants.BACK_LABEL.replace(&apos;&lt;&apos;, &apos; &apos;); + backButton.getAccessible().addAccessibleListener(new AccessibleAdapter() { + public void getName(AccessibleEvent e) { + e.result = backReaderText; + } + }); + final String nextReaderText = IDialogConstants.NEXT_LABEL.replace(&apos;&gt;&apos;, &apos; &apos;); + nextButton.getAccessible().addAccessibleListener(new AccessibleAdapter() { + public void getName(AccessibleEvent e) { + e.result = nextReaderText; + } + }); return composite; } @@ -856,7 +872,12 @@ // inform wizards for (int i = 0; i &lt; createdWizards.size(); i++) { IWizard createdWizard = (IWizard) createdWizards.get(i); - createdWizard.dispose(); + try { + createdWizard.dispose(); + } catch (Exception e) { + Status status = new Status(IStatus.ERROR, Policy.JFACE, IStatus.ERROR, e.getMessage(), e); + Policy.getLog().log(status); + } // Remove this dialog as a parent from the managed wizard. // Note that we do this after calling dispose as the wizard or // its pages may need access to the container during diff --git a/bundles/org.eclipse.ui.browser/.classpath b/bundles/org.eclipse.ui.browser/.classpath index ce73933..304e861 100644 --- a/bundles/org.eclipse.ui.browser/.classpath +++ b/bundles/org.eclipse.ui.browser/.classpath @@ -1,7 +1,7 @@ - + diff --git a/bundles/org.eclipse.ui.browser/.cvsignore b/bundles/org.eclipse.ui.browser/.cvsignore deleted file mode 100644 index c5e82d7..0000000 --- a/bundles/org.eclipse.ui.browser/.cvsignore +++ /dev/null @@ -1 +0,0 @@ -bin \ No newline at end of file diff --git a/bundles/org.eclipse.ui.browser/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.browser/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.browser/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.browser/.settings/org.eclipse.jdt.core.prefs b/bundles/org.eclipse.ui.browser/.settings/org.eclipse.jdt.core.prefs index 786358a..5170256 100644 --- a/bundles/org.eclipse.ui.browser/.settings/org.eclipse.jdt.core.prefs +++ b/bundles/org.eclipse.ui.browser/.settings/org.eclipse.jdt.core.prefs @@ -1,4 +1,4 @@ -#Tue May 09 14:44:18 EDT 2006 +#Fri Jun 24 22:27:16 CEST 2011 eclipse.preferences.version=1 org.eclipse.jdt.core.codeComplete.argumentPrefixes= org.eclipse.jdt.core.codeComplete.argumentSuffixes= @@ -8,11 +8,11 @@ org.eclipse.jdt.core.codeComplete.localSuffixes= org.eclipse.jdt.core.codeComplete.staticFieldPrefixes= org.eclipse.jdt.core.codeComplete.staticFieldSuffixes= -org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=disabled -org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.2 -org.eclipse.jdt.core.compiler.compliance=1.4 -org.eclipse.jdt.core.compiler.problem.assertIdentifier=warning -org.eclipse.jdt.core.compiler.problem.enumIdentifier=warning +org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled +org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.5 +org.eclipse.jdt.core.compiler.compliance=1.5 +org.eclipse.jdt.core.compiler.problem.assertIdentifier=error +org.eclipse.jdt.core.compiler.problem.enumIdentifier=error org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=error org.eclipse.jdt.core.compiler.problem.unnecessaryElse=error org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=error @@ -21,4 +21,4 @@ org.eclipse.jdt.core.compiler.problem.unusedImport=error org.eclipse.jdt.core.compiler.problem.unusedLocal=error org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error -org.eclipse.jdt.core.compiler.source=1.3 +org.eclipse.jdt.core.compiler.source=1.5 diff --git a/bundles/org.eclipse.ui.browser/.settings/org.eclipse.pde.prefs b/bundles/org.eclipse.ui.browser/.settings/org.eclipse.pde.prefs new file mode 100644 index 0000000..78a1e14 --- /dev/null +++ b/bundles/org.eclipse.ui.browser/.settings/org.eclipse.pde.prefs @@ -0,0 +1,32 @@ +compilers.f.unresolved-features=1 +compilers.f.unresolved-plugins=1 +compilers.incompatible-environment=0 +compilers.p.build=1 +compilers.p.build.bin.includes=1 +compilers.p.build.encodings=2 +compilers.p.build.java.compiler=2 +compilers.p.build.java.compliance=1 +compilers.p.build.missing.output=2 +compilers.p.build.output.library=1 +compilers.p.build.source.library=1 +compilers.p.build.src.includes=1 +compilers.p.deprecated=1 +compilers.p.discouraged-class=1 +compilers.p.internal=1 +compilers.p.missing-packages=0 +compilers.p.missing-version-export-package=2 +compilers.p.missing-version-import-package=2 +compilers.p.missing-version-require-bundle=2 +compilers.p.no-required-att=0 +compilers.p.not-externalized-att=1 +compilers.p.unknown-attribute=0 +compilers.p.unknown-class=0 +compilers.p.unknown-element=0 +compilers.p.unknown-identifier=1 +compilers.p.unknown-resource=0 +compilers.p.unresolved-ex-points=0 +compilers.p.unresolved-import=0 +compilers.s.create-docs=false +compilers.s.doc-folder=doc +compilers.s.open-tags=1 +eclipse.preferences.version=1 diff --git a/bundles/org.eclipse.ui.browser/META-INF/MANIFEST.MF b/bundles/org.eclipse.ui.browser/META-INF/MANIFEST.MF index 601177e..15bd1f5 100644 --- a/bundles/org.eclipse.ui.browser/META-INF/MANIFEST.MF +++ b/bundles/org.eclipse.ui.browser/META-INF/MANIFEST.MF @@ -2,7 +2,7 @@ Bundle-ManifestVersion: 2 Bundle-Name: %Plugin.name Bundle-SymbolicName: org.eclipse.ui.browser; singleton:=true -Bundle-Version: 3.3.100.qualifier +Bundle-Version: 3.4.0.qualifier Bundle-Activator: org.eclipse.ui.internal.browser.WebBrowserUIPlugin Bundle-Vendor: %Plugin.providerName Bundle-Localization: plugin @@ -14,5 +14,5 @@ org.eclipse.ui;bundle-version=&quot;[3.6.0,4.0.0)&quot; Eclipse-LazyStart: true Import-Package: com.ibm.icu.text -Bundle-RequiredExecutionEnvironment: J2SE-1.4 +Bundle-RequiredExecutionEnvironment: J2SE-1.5 Bundle-ActivationPolicy: lazy diff --git a/bundles/org.eclipse.ui.browser/plugin.properties b/bundles/org.eclipse.ui.browser/plugin.properties index c3bc328..dd6e395 100644 --- a/bundles/org.eclipse.ui.browser/plugin.properties +++ b/bundles/org.eclipse.ui.browser/plugin.properties @@ -1,5 +1,5 @@ ############################################################################### -# Copyright (c) 2005, 2009 IBM Corporation and others. +# Copyright (c) 2005, 2011 IBM Corporation and others. # All rights reserved. This program and the accompanying materials # are made available under the terms of the Eclipse Public License v1.0 # which accompanies this distribution, and is available at @@ -16,7 +16,7 @@ viewWebBrowserTitle=Internal Web Browser viewWebBrowserSupportTitle= Web Browser preferenceWebBrowserTitle=Web Browser -preferenceKeywords=HTML Firefox Mozilla Netscape Internet Opera Safari +preferenceKeywords=HTML Firefox Mozilla Internet Opera Safari Chrome command.openBrowser.name=Open Browser @@ -27,11 +27,8 @@ commandParameter.openBrowser.tooltip.name=Browser Tooltip browserInternetExplorer=Internet Explorer -browserNetscape4=Netscape Communicator v4.x -browserNetscape7=Netscape v7.x -browserNetscape=Netscape -browserMozilla=Mozilla browserOpera=Opera +browserChrome=Chrome browserKonqueror=Konqueror browserGaleon=Galeon browserFirefox=Firefox diff --git a/bundles/org.eclipse.ui.browser/plugin.xml b/bundles/org.eclipse.ui.browser/plugin.xml index 735ee57..7ed3896 100644 --- a/bundles/org.eclipse.ui.browser/plugin.xml +++ b/bundles/org.eclipse.ui.browser/plugin.xml @@ -1,7 +1,7 @@ - usr/bin/mozilla - usr/X11/bin/mozilla - usr/sfw/lib/mozilla/mozilla - - - usr/bin/netscape - usr/X11R6/bin/netscape - usr/dt/bin/netscape - - - Program Files\mozilla.org\Mozilla\mozilla.exe - - - Program Files\Netscape\Netscape\netscp.exe - - - Program Files\Netscape\Communicator\Program\netscape.exe - - - Program Files\mozilla.org\Firefox\firefox.exe - Program Files\Mozilla Firefox\firefox.exe + %%ProgramFiles%\mozilla.org\Firefox\firefox.exe + %%ProgramFiles(x86)%\mozilla.org\Firefox\firefox.exe + %%ProgramW6432%\mozilla.org\Firefox\firefox.exe + + %%ProgramFiles%\Mozilla Firefox\firefox.exe + %%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe + %%ProgramW6432%\Mozilla Firefox\firefox.exe - Program Files\Internet Explorer\iexplore.exe + %%ProgramFiles%\Internet Explorer\iexplore.exe + %%ProgramFiles(x86)%\Internet Explorer\iexplore.exe + %%ProgramW6432%\Internet Explorer\iexplore.exe + + + %%LOCALAPPDATA%\Google\Chrome\Application\chrome.exe - Program Files\Opera7\opera.exe - - Program Files\Opera\opera.exe - + %%ProgramFiles%\Opera\opera.exe + %%ProgramFiles(x86)%\Opera\opera.exe + %%ProgramW6432%\Opera\opera.exe @@ -188,7 +157,7 @@ os=&quot;MacOSX&quot; executable=&quot;firefox-bin&quot; factoryclass=&quot;org.eclipse.ui.internal.browser.browsers.MozillaFactory&quot;&gt; - Applications/Firefox.app/Contents/MacOS/firefox-bin + Applications/Firefox.app Applications/Safari.app/Contents/MacOS/Safari --&gt; - - Applications/Mozilla.app/Contents/MacOS/mozilla-bin - - + - + For providing web browsers capable of displaying html documents at a given URL. @@ -12,9 +12,9 @@ - + - + @@ -39,9 +39,9 @@ - + - + @@ -69,9 +69,9 @@ the implementation class for the browser factory. This class must implement the &lt;samp&gt;org.eclipse.ui.browser.BrowserFactory&lt;/samp&gt; interface. - + - + @@ -79,9 +79,9 @@ the name of the browser (translatable). - + - + @@ -104,24 +104,26 @@ - Default install locations. these locations should not contain the initial path, as it will be substituted with all known drives. (e.g. on Windows, a location of &quot;test.exe&quot; would look for &quot;c:\test.exe&quot;, &quot;d:\test.exe&quot;, etc. for all known drives. + Default install locations. These locations should not contain the initial path, as it will be substituted with all known drives. E.g. on Windows, a location of &quot;test.exe&quot; would look for &quot;c:\test.exe&quot;, &quot;d:\test.exe&quot;, etc. for all known drives. +&lt;p&gt; +On Windows, the path can also start with an environment variable, e.g. &quot;%%ProgramFiles%\folder\test.exe&quot;. Note the double % at the beginning to prevent localization.&lt;/p&gt; - + - + 3.0 (originally added in release 2.0 as org.eclipse.help.ui.browser) - + - + The following is a sample usage of the browsers extension point: @@ -130,13 +132,13 @@ &lt;extension point=&quot;org.eclipse.ui.browser.browsers&quot;&gt; &lt;browser id=&quot;org.eclipse.ui.browser.firefox&quot; - name=Firefox + name=&quot;Firefox&quot; os=&quot;Win32&quot; executable=&quot;firefox.exe&quot; factoryclass=&quot;org.eclipse.ui.internal.browser.browsers.MozillaFactory&quot;&gt; - &lt;location&gt;Program Files\mozilla.org\Firefox\firefox.exe&lt;/location&gt; - &lt;location&gt;Program Files\Mozilla Firefox\firefox.exe&lt;/location&gt; - &lt;/browser&gt; + &lt;location&gt;%%ProgramFiles%\Mozilla Firefox\firefox.exe&lt;/location&gt; + &lt;location&gt;%%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe&lt;/location&gt; + &lt;/browser&gt; &lt;/extension&gt; &lt;/pre&gt; &lt;/p&gt; @@ -144,9 +146,9 @@ - + - + The supplied factory class must implement the &lt;samp&gt;org.eclipse.help.browser.IBrowserFactory&lt;/samp&gt; interface. Methods in that interface determine whether the factory is available on the given system, i.e. is capable @@ -155,9 +157,9 @@ - + - + The &lt;samp&gt;org.eclipse.help.base&lt;/samp&gt; and &lt;samp&gt;org.eclipse.help.ui&lt;/samp&gt; plug-ins contain implementation of browsers on common platforms. Other plug-ins can provide different implementations. In the preferences, the user can select the default @@ -166,9 +168,9 @@ - + - + Copyright (c) 2000, 2005 IBM Corporation and others.&lt;br&gt; All rights reserved. This program and the accompanying materials are made diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserDescriptorDialog.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserDescriptorDialog.java index 0423ad7..d9dd93d 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserDescriptorDialog.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserDescriptorDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2003, 2009 IBM Corporation and others. + * Copyright (c) 2003, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -15,6 +15,7 @@ import org.eclipse.jface.dialogs.Dialog; import org.eclipse.jface.dialogs.IDialogConstants; +import org.eclipse.jface.util.Util; import org.eclipse.osgi.util.NLS; import org.eclipse.swt.SWT; import org.eclipse.swt.events.ModifyEvent; @@ -182,7 +183,7 @@ // do simple field validation to at least ensure target directory entered is valid pathname try { File file = new File(browser.getLocation()); - if(!file.isFile()){ + if(!file.isFile() &amp;&amp; !Util.isMac()){ WebBrowserUtil.openError(Messages.locationInvalid); return; } diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserExt.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserExt.java index 322932e..12627e9 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserExt.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserExt.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2006 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -66,7 +66,7 @@ } public String[] getDefaultLocations() { - List list = new ArrayList(); + List list = new ArrayList(); IConfigurationElement[] children = element.getChildren(&quot;location&quot;); //$NON-NLS-1$ if (children != null) { int size = children.length; diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserLauncher.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserLauncher.java index bf39238..a450dc3 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserLauncher.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserLauncher.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2006 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -30,10 +30,10 @@ try { if (WebBrowserPreference.getBrowserChoice()== WebBrowserPreference.INTERNAL) support.createBrowser(IWorkbenchBrowserSupport.LOCATION_BAR | IWorkbenchBrowserSupport.NAVIGATION_BAR, - file.toPortableString(), null, null).openURL(file.toFile().toURL()); + file.toPortableString(), null, null).openURL(file.toFile().toURI().toURL()); else support.createBrowser(IWorkbenchBrowserSupport.LOCATION_BAR | IWorkbenchBrowserSupport.NAVIGATION_BAR, - DefaultBrowserSupport.SHARED_ID, null, null).openURL(file.toFile().toURL()); + DefaultBrowserSupport.SHARED_ID, null, null).openURL(file.toFile().toURI().toURL()); } catch (MalformedURLException e) { // ignore diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserManager.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserManager.java index bceae80..10113aa 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserManager.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserManager.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2003, 2010 IBM Corporation and others. + * Copyright (c) 2003, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -21,6 +21,7 @@ import org.eclipse.core.runtime.Platform; import org.eclipse.core.runtime.preferences.IEclipsePreferences; +import org.eclipse.core.runtime.preferences.IScopeContext; import org.eclipse.core.runtime.preferences.InstanceScope; import org.eclipse.core.runtime.preferences.IEclipsePreferences.IPreferenceChangeListener; import org.eclipse.core.runtime.preferences.IEclipsePreferences.PreferenceChangeEvent; @@ -30,7 +31,7 @@ * */ public class BrowserManager extends Observable { - protected List browsers; + protected List browsers; protected IBrowserDescriptor currentBrowser; private IPreferenceChangeListener pcl; @@ -60,7 +61,7 @@ }; - InstanceScope instanceScope = new InstanceScope(); + IScopeContext instanceScope = InstanceScope.INSTANCE; IEclipsePreferences prefs = instanceScope.getNode(WebBrowserUIPlugin.PLUGIN_ID); prefs.addPreferenceChangeListener(pcl); } @@ -72,7 +73,7 @@ } protected void dispose() { - InstanceScope instanceScope = new InstanceScope(); + IScopeContext instanceScope = InstanceScope.INSTANCE; IEclipsePreferences prefs = instanceScope.getNode(WebBrowserUIPlugin.PLUGIN_ID); prefs.removePreferenceChangeListener(pcl); } @@ -81,10 +82,10 @@ return new BrowserDescriptorWorkingCopy(); } - public List getWebBrowsers() { + public List getWebBrowsers() { if (browsers == null) loadBrowsers(); - return new ArrayList(browsers); + return new ArrayList(browsers); } public void loadBrowsers() { @@ -93,7 +94,7 @@ String xmlString = Platform.getPreferencesService().getString (WebBrowserUIPlugin.PLUGIN_ID, &quot;browsers&quot;, null, null); //$NON-NLS-1$ if (xmlString != null &amp;&amp; xmlString.length() &gt; 0) { - browsers = new ArrayList(); + browsers = new ArrayList(); try { ByteArrayInputStream in = new ByteArrayInputStream(xmlString.getBytes(&quot;utf-8&quot;)); //$NON-NLS-1$ @@ -114,7 +115,7 @@ Integer current = memento.getInteger(&quot;current&quot;); //$NON-NLS-1$ if (current != null) { - currentBrowser = (IBrowserDescriptor) browsers.get(current.intValue()); + currentBrowser = browsers.get(current.intValue()); } } catch (Exception e) { Trace.trace(Trace.WARNING, &quot;Could not load browsers: &quot; + e.getMessage()); //$NON-NLS-1$ @@ -132,7 +133,7 @@ } if (currentBrowser == null &amp;&amp; browsers.size() &gt; 0) - currentBrowser = (IBrowserDescriptor) browsers.get(0); + currentBrowser = browsers.get(0); setChanged(); notifyObservers(); } @@ -142,7 +143,7 @@ ignorePreferenceChanges = true; XMLMemento memento = XMLMemento.createWriteRoot(&quot;web-browsers&quot;); //$NON-NLS-1$ - Iterator iterator = browsers.iterator(); + Iterator iterator = browsers.iterator(); while (iterator.hasNext()) { Object obj = iterator.next(); if (obj instanceof BrowserDescriptor) { @@ -159,7 +160,7 @@ StringWriter writer = new StringWriter(); memento.save(writer); String xmlString = writer.getBuffer().toString(); - InstanceScope instanceScope = new InstanceScope(); + IScopeContext instanceScope = InstanceScope.INSTANCE; IEclipsePreferences prefs = instanceScope.getNode(WebBrowserUIPlugin.PLUGIN_ID); prefs.put(&quot;browsers&quot;, xmlString); //$NON-NLS-1$ prefs.flush(); @@ -170,7 +171,7 @@ } protected void setupDefaultBrowsers() { - browsers = new ArrayList(); + browsers = new ArrayList(); // add system browser if (WebBrowserUtil.canUseSystemBrowser()) { @@ -183,7 +184,7 @@ // by default, if internal is there, that is current, else set the first external one if (!browsers.isEmpty() &amp;&amp; currentBrowser == null) - currentBrowser = (IBrowserDescriptor) browsers.get(0); + currentBrowser = browsers.get(0); } protected void addBrowser(IBrowserDescriptor browser) { @@ -203,7 +204,7 @@ if (currentBrowser == null || currentBrowser.equals(browser)) { currentBrowser = null; if (browsers.size() &gt; 0) - currentBrowser = (IBrowserDescriptor) browsers.get(0); + currentBrowser = browsers.get(0); } } @@ -212,7 +213,7 @@ loadBrowsers(); if (currentBrowser == null &amp;&amp; browsers.size() &gt; 0) - return (IBrowserDescriptor) browsers.get(0); + return browsers.get(0); return currentBrowser; } diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserViewer.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserViewer.java index d42d041..bb2334f 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserViewer.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/BrowserViewer.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2004, 2010 IBM Corporation and others. + * Copyright (c) 2004, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -110,7 +110,7 @@ protected boolean loading; - protected static java.util.List history; + protected static java.util.List history; protected Browser browser; @@ -124,7 +124,7 @@ protected int progressWorked = 0; - protected List propertyListeners; + protected List propertyListeners; /** * Under development - do not use @@ -289,9 +289,15 @@ } protected void updateBackNextBusy() { - back.setEnabled(isBackEnabled()); - forward.setEnabled(isForwardEnabled()); - busy.setBusy(loading); + if (!back.isDisposed()) { + back.setEnabled(isBackEnabled()); + } + if (!forward.isDisposed()) { + forward.setEnabled(isForwardEnabled()); + } + if (!busy.isDisposed()) { + busy.setBusy(loading); + } if (backNextListener != null) backNextListener.updateBackNextBusy(); @@ -467,7 +473,7 @@ */ public void addPropertyChangeListener(PropertyChangeListener listener) { if (propertyListeners == null) - propertyListeners = new ArrayList(); + propertyListeners = new ArrayList(); propertyListeners.add(listener); } @@ -670,7 +676,7 @@ int found = -1; int size = history.size(); for (int i = 0; i &lt; size; i++) { - String s = (String) history.get(i); + String s = history.get(i); if (s.equals(url)) { found = i; break; @@ -846,7 +852,7 @@ * Update the history list to the global/shared copy. */ protected void updateHistory() { - if (combo == null) + if (combo == null || combo.isDisposed()) return; String temp = combo.getText(); diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/DefaultBrowserSupport.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/DefaultBrowserSupport.java index a1187c1..ed86417 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/DefaultBrowserSupport.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/DefaultBrowserSupport.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2010 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -29,7 +29,7 @@ static final String DEFAULT_ID_BASE = &quot;org.eclipse.ui.defaultBrowser&quot;; //$NON-NLS-1$ private static final String HELP_BROWSER_ID = &quot;org.eclipse.help.ui&quot;; //$NON-NLS-1$ - protected HashMap browserIdMap = new HashMap(); + protected HashMap browserIdMap = new HashMap(); protected static DefaultBrowserSupport instance; @@ -58,6 +58,7 @@ if (obj instanceof IWebBrowser) browser = (IWebBrowser) obj; else if (obj instanceof HashMap) { + @SuppressWarnings(&quot;rawtypes&quot;) HashMap wmap = (HashMap) obj; IWorkbenchWindow window = PlatformUI.getWorkbench() .getActiveWorkbenchWindow(); @@ -139,9 +140,10 @@ IWorkbenchWindow window = PlatformUI.getWorkbench() .getActiveWorkbenchWindow(); Integer key = getWindowKey(window); - HashMap wmap = (HashMap) browserIdMap.get(browserId); + @SuppressWarnings(&quot;unchecked&quot;) + HashMap wmap = (HashMap) browserIdMap.get(browserId); if (wmap == null) { - wmap = new HashMap(); + wmap = new HashMap(); browserIdMap.put(browserId, wmap); } wmap.put(key, webBrowser); @@ -179,6 +181,7 @@ Integer key = ((InternalBrowserInstance) browser).getWindowKey(); Object entry = browserIdMap.get(baseId); if (entry != null &amp;&amp; entry instanceof HashMap) { + @SuppressWarnings(&quot;rawtypes&quot;) HashMap wmap = (HashMap) entry; wmap.remove(key); if (wmap.isEmpty()) diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/ExternalBrowserInstance.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/ExternalBrowserInstance.java index 1ffe330..9a9bb50 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/ExternalBrowserInstance.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/ExternalBrowserInstance.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2010 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -10,10 +10,9 @@ *******************************************************************************/ package org.eclipse.ui.internal.browser; -import java.net.URISyntaxException; import java.net.URL; -import org.eclipse.core.runtime.URIUtil; +import org.eclipse.jface.util.Util; import org.eclipse.osgi.util.NLS; import org.eclipse.ui.PartInitException; import org.eclipse.ui.browser.AbstractWebBrowser; @@ -33,14 +32,7 @@ } public void openURL(URL url) throws PartInitException { - String urlText= null; - if (url != null) { - try { - urlText = URIUtil.toURI(url).toASCIIString(); - } catch (URISyntaxException e) { - urlText = url.toExternalForm(); - } - } + String urlText = url.toExternalForm(); String location = browser.getLocation(); String parameters = browser.getParameters(); @@ -52,6 +44,9 @@ String params = WebBrowserUtil.createParameterString(parameters, urlText); try { + if ( Util.isMac()) { + location = &quot;open -a &quot; + location; //$NON-NLS-1$ + } Trace.trace(Trace.FINEST, &quot;Launching &quot; + location + &quot; &quot; + params); //$NON-NLS-1$//$NON-NLS-2$ if (params == null || params.length() == 0) process = Runtime.getRuntime().exec(location); diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/IBrowserExt.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/IBrowserExt.java index 67d1bc3..6cc12d6 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/IBrowserExt.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/IBrowserExt.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2006 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/ImageResource.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/ImageResource.java index 2346e00..ab2fe2f 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/ImageResource.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/ImageResource.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2003, 2006 IBM Corporation and others. + * Copyright (c) 2003, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -27,7 +27,7 @@ // map of image descriptors since these // will be lost by the image registry - private static Map imageDescriptors; + private static Map imageDescriptors; private static Image[] busyImages; @@ -105,7 +105,7 @@ public static ImageDescriptor getImageDescriptor(String key) { if (imageRegistry == null) initializeImageRegistry(); - return (ImageDescriptor) imageDescriptors.get(key); + return imageDescriptors.get(key); } /** @@ -113,7 +113,7 @@ */ protected static void initializeImageRegistry() { imageRegistry = new ImageRegistry(); - imageDescriptors = new HashMap(); + imageDescriptors = new HashMap(); // load Web browser images registerImage(IMG_ELCL_NAV_BACKWARD, URL_ELCL + &quot;nav_backward.gif&quot;); //$NON-NLS-1$ diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/SystemBrowserInstance.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/SystemBrowserInstance.java index e68e560..8f401f3 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/SystemBrowserInstance.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/SystemBrowserInstance.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2010 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -10,10 +10,8 @@ *******************************************************************************/ package org.eclipse.ui.internal.browser; -import java.net.URISyntaxException; import java.net.URL; -import org.eclipse.core.runtime.URIUtil; import org.eclipse.osgi.util.NLS; import org.eclipse.swt.program.Program; import org.eclipse.ui.PartInitException; @@ -28,14 +26,7 @@ } public void openURL(URL url) throws PartInitException { - String urlText= null; - if (url != null) { - try { - urlText = URIUtil.toURI(url).toASCIIString(); - } catch (URISyntaxException e) { - urlText = url.toExternalForm(); - } - } + String urlText = url.toExternalForm(); Trace.trace(Trace.FINEST, &quot;Launching system Web browser: &quot; + urlText); //$NON-NLS-1$ Program program = Program.findProgram(&quot;html&quot;); //$NON-NLS-1$ if (program != null) { @@ -43,6 +34,6 @@ return; } if (!Program.launch(urlText)) - throw new PartInitException(NLS.bind(Messages.errorCouldNotLaunchWebBrowser, url.toExternalForm())); + throw new PartInitException(NLS.bind(Messages.errorCouldNotLaunchWebBrowser, urlText)); } } \ No newline at end of file diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserEditor.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserEditor.java index dc26129..f1c0a0e 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserEditor.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserEditor.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2003, 2008 IBM Corporation and others. + * Copyright (c) 2003, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -177,7 +177,7 @@ URL url = null; try { if (path != null) - url = path.toFile().toURL(); + url = path.toFile().toURI().toURL(); initialURL = url.toExternalForm(); } catch (Exception e) { Trace.trace(Trace.SEVERE, &quot;Error getting URL to file&quot;); //$NON-NLS-1$ diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserEditorInput.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserEditorInput.java index eb2e3e9..6e6637f 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserEditorInput.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserEditorInput.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2004, 2009 IBM Corporation and others. + * Copyright (c) 2004, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -219,6 +219,7 @@ * @return a object castable to the given class, or null if * this object does not have an adapter for the given class */ + @SuppressWarnings(&quot;rawtypes&quot;) public Object getAdapter(Class adapter) { return null; } diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserPreference.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserPreference.java index e2f575c..7229540 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserPreference.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserPreference.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2003, 2008 IBM Corporation and others. + * Copyright (c) 2003, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -16,6 +16,7 @@ import java.util.StringTokenizer; import org.eclipse.core.runtime.preferences.IEclipsePreferences; +import org.eclipse.core.runtime.preferences.IScopeContext; import org.eclipse.core.runtime.preferences.InstanceScope; import org.eclipse.jface.preference.IPreferenceStore; import org.eclipse.ui.IEditorDescriptor; @@ -62,11 +63,11 @@ * * @return java.util.List */ - public static List getInternalWebBrowserHistory() { + public static List getInternalWebBrowserHistory() { String temp = getPreferenceStore().getString( PREF_INTERNAL_WEB_BROWSER_HISTORY); StringTokenizer st = new StringTokenizer(temp, &quot;|*|&quot;); //$NON-NLS-1$ - List l = new ArrayList(); + List l = new ArrayList(); while (st.hasMoreTokens()) { String s = st.nextToken(); l.add(s); @@ -80,17 +81,17 @@ * @param list * the history */ - public static void setInternalWebBrowserHistory(List list) { + public static void setInternalWebBrowserHistory(List list) { StringBuffer sb = new StringBuffer(); if (list != null) { - Iterator iterator = list.iterator(); + Iterator iterator = list.iterator(); while (iterator.hasNext()) { - String s = (String) iterator.next(); + String s = iterator.next(); sb.append(s); sb.append(&quot;|*|&quot;); //$NON-NLS-1$ } } - InstanceScope instanceScope = new InstanceScope(); + IScopeContext instanceScope = InstanceScope.INSTANCE; IEclipsePreferences prefs = instanceScope.getNode(WebBrowserUIPlugin.PLUGIN_ID); prefs.put(PREF_INTERNAL_WEB_BROWSER_HISTORY, sb.toString()); @@ -140,7 +141,7 @@ * INTERNAL, SYSTEM and EXTERNAL */ public static void setBrowserChoice(int choice) { - InstanceScope instanceScope = new InstanceScope(); + IScopeContext instanceScope = InstanceScope.INSTANCE; IEclipsePreferences prefs = instanceScope.getNode(WebBrowserUIPlugin.PLUGIN_ID); prefs.putInt(PREF_BROWSER_CHOICE, choice); try { diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserPreferencePage.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserPreferencePage.java index 4a80f10..0857fa7 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserPreferencePage.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserPreferencePage.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2003, 2010 IBM Corporation and others. + * Copyright (c) 2003, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,17 +7,20 @@ * * Contributors: * IBM Corporation - Initial API and implementation + * Martin Oberhuber (Wind River) - [293159] cyclic link when searching browser *******************************************************************************/ package org.eclipse.ui.internal.browser; import java.io.File; +import java.io.IOException; import java.lang.reflect.InvocationTargetException; import java.util.ArrayList; +import java.util.HashSet; import java.util.Iterator; import java.util.List; +import java.util.Set; import org.eclipse.core.runtime.IProgressMonitor; - import org.eclipse.jface.dialogs.Dialog; import org.eclipse.jface.dialogs.ProgressMonitorDialog; import org.eclipse.jface.operation.IRunnableWithProgress; @@ -86,11 +89,11 @@ class BrowserContentProvider implements IStructuredContentProvider { public Object[] getElements(Object inputElement) { - List list = new ArrayList(); - Iterator iterator = BrowserManager.getInstance().getWebBrowsers() + List list = new ArrayList(); + Iterator iterator = BrowserManager.getInstance().getWebBrowsers() .iterator(); while (iterator.hasNext()) { - IBrowserDescriptor browser = (IBrowserDescriptor) iterator + IBrowserDescriptor browser = iterator .next(); list.add(browser); } @@ -302,7 +305,7 @@ BrowserManager manager = BrowserManager.getInstance(); if (browser2 == checkedBrowser) { if (manager.browsers.size() &gt; 0) { - checkedBrowser = (IBrowserDescriptor) manager.browsers.get(0); + checkedBrowser = manager.browsers.get(0); tableViewer.setChecked(checkedBrowser, true); } } @@ -383,7 +386,7 @@ BrowserManager manager = BrowserManager.getInstance(); if (browser2 == checkedBrowser) { if (manager.browsers.size() &gt; 0) { - checkedBrowser = (IBrowserDescriptor) manager.browsers.get(0); + checkedBrowser = manager.browsers.get(0); tableViewer.setChecked(checkedBrowser, true); } } @@ -398,8 +401,8 @@ data.verticalIndent = 9; search.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { - final List foundBrowsers = new ArrayList(); - final List existingPaths = WebBrowserUtil + final List foundBrowsers = new ArrayList(); + final List existingPaths = WebBrowserUtil .getExternalBrowserPaths(); // select a target directory for the search @@ -418,7 +421,7 @@ public void run(IProgressMonitor monitor) { monitor.beginTask(Messages.searchingTaskName, IProgressMonitor.UNKNOWN); - search(rootDir, existingPaths, foundBrowsers, monitor); + search(rootDir, existingPaths, foundBrowsers, new HashSet(), monitor); monitor.done(); } }; @@ -439,16 +442,16 @@ if (pm.getProgressMonitor().isCanceled()) return; - List browsersToCreate = foundBrowsers; + List browsersToCreate = foundBrowsers; if (browsersToCreate.isEmpty()) { // no browsers found WebBrowserUtil.openMessage(Messages.searchingNoneFound); return; } - Iterator iterator = browsersToCreate.iterator(); + Iterator iterator = browsersToCreate.iterator(); while (iterator.hasNext()) { - IBrowserDescriptorWorkingCopy browser2 = (IBrowserDescriptorWorkingCopy) iterator + IBrowserDescriptorWorkingCopy browser2 = iterator .next(); browser2.save(); } @@ -529,16 +532,26 @@ } } - protected static void search(File directory, List existingPaths, - List foundBrowsers, IProgressMonitor monitor) { + protected static void search(File directory, List existingPaths, + List foundBrowsers, Set directoriesVisited, IProgressMonitor monitor) { if (monitor.isCanceled()) return; + try { + //bug 293159: protect against recursion due to cyclic symbolic link + String canonicalPath = directory.getCanonicalPath(); + if (!directoriesVisited.add(canonicalPath)) { + //already been here + return; + } + } catch(IOException ioe) { + /*ignore*/ + } monitor.subTask(NLS.bind(Messages.searching, new String[] { Integer.toString(foundBrowsers.size()), directory.getAbsolutePath()})); String[] names = directory.list(); - List subDirs = new ArrayList(); + List subDirs = new ArrayList(); for (int i = 0; i &lt; names.length; i++) { if (monitor.isCanceled()) @@ -561,8 +574,8 @@ } } while (!subDirs.isEmpty()) { - File subDir = (File) subDirs.remove(0); - search(subDir, existingPaths, foundBrowsers, monitor); + File subDir = subDirs.remove(0); + search(subDir, existingPaths, foundBrowsers, directoriesVisited, monitor); if (monitor.isCanceled()) { return; } diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserUIPlugin.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserUIPlugin.java index 79a969b..4631747 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserUIPlugin.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserUIPlugin.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2003, 2005 IBM Corporation and others. + * Copyright (c) 2003, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -31,7 +31,7 @@ private static WebBrowserUIPlugin singleton; // cached copy of all browsers - private static List browsers; + private static List browsers; /** * Create the WebBrowserUIPlugin @@ -112,7 +112,7 @@ IConfigurationElement[] cf = registry.getConfigurationElementsFor(PLUGIN_ID, &quot;browsers&quot;); //$NON-NLS-1$ int size = cf.length; - browsers = new ArrayList(size); + browsers = new ArrayList(size); for (int i = 0; i &lt; size; i++) { try { browsers.add(new BrowserExt(cf[i])); diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserUtil.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserUtil.java index a245af4..cbf57b1 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserUtil.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserUtil.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2003, 2009 IBM Corporation and others. + * Copyright (c) 2003, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -20,6 +20,7 @@ import org.eclipse.core.runtime.Platform; import org.eclipse.core.runtime.Status; import org.eclipse.jface.dialogs.MessageDialog; +import org.eclipse.jface.util.Util; import org.eclipse.swt.SWT; import org.eclipse.swt.browser.Browser; import org.eclipse.swt.program.Program; @@ -174,12 +175,12 @@ return Program.findProgram(&quot;html&quot;) != null; //$NON-NLS-1$ } - public static List getExternalBrowserPaths() { - List paths = new ArrayList(); - Iterator iterator = BrowserManager.getInstance().getWebBrowsers() - .iterator(); + public static List getExternalBrowserPaths() { + List paths = new ArrayList(); + Iterator iterator = BrowserManager.getInstance() + .getWebBrowsers().iterator(); while (iterator.hasNext()) { - IBrowserDescriptor wb = (IBrowserDescriptor) iterator.next(); + IBrowserDescriptor wb = iterator.next(); if (wb != null &amp;&amp; wb.getLocation() != null) paths.add(wb.getLocation().toLowerCase()); } @@ -190,51 +191,90 @@ * Add any supported EXTERNAL web browsers found after an arbitrary check in * specific paths */ - public static void addFoundBrowsers(List list) { - List paths = getExternalBrowserPaths(); + public static void addFoundBrowsers(List browsers2) { + List paths = getExternalBrowserPaths(); String os = Platform.getOS(); File[] roots = getUsableDrives(File.listRoots()); - int rootSize = roots.length; - - // Math.min(roots.length, 2); // just check the first two drives IBrowserExt[] browsers = WebBrowserUIPlugin.getBrowsers(); int size = browsers.length; for (int i = 0; i &lt; size; i++) { - if (browsers[i].getDefaultLocations() != null - &amp;&amp; browsers[i].getOS().toLowerCase().indexOf(os) &gt;= 0) { - for (int k = 0; k &lt; rootSize; k++) { - int size2 = browsers[i].getDefaultLocations().length; - for (int j = 0; j &lt; size2; j++) { - String location = browsers[i].getDefaultLocations()[j]; - try { - File f = new File(roots[k], location); - if (!paths.contains(f.getAbsolutePath() - .toLowerCase())) { - if (f.exists()) { - BrowserDescriptor browser = new BrowserDescriptor(); - browser.name = browsers[i].getName(); - browser.location = f.getAbsolutePath(); - browser.parameters = browsers[i] - .getParameters(); - list.add(browser); - j += size2; - } - } - } catch (Exception e) { - // ignore - } + IBrowserExt browserExt = browsers[i]; + String[] locations = browserExt.getDefaultLocations(); + if (locations != null + &amp;&amp; browserExt.getOS().toLowerCase().indexOf(os) &gt;= 0) { + int size2 = locations.length; + for (int j = 0; j &lt; size2; j++) { + String location = locations[j]; + + String foundBrowserPath = locateBrowser(paths, location, roots); + + if (foundBrowserPath != null) { + BrowserDescriptor descriptor = new BrowserDescriptor(); + descriptor.name = browserExt.getName(); + descriptor.location = foundBrowserPath; + descriptor.parameters = browserExt + .getParameters(); + browsers2.add(descriptor); + j += size2; } + } } } } + /* + * Look for the file on each of the search roots. + * If the location starts with a Windows environment variable, expand it. + */ + private static String locateBrowser(List alreadyFoundPaths, + String location, File[] searchRoots) { + int rootSize = searchRoots.length; + + if (Util.isWindows() &amp;&amp; location.startsWith(&quot;%&quot;)) { //$NON-NLS-1$ + int envVarEnd = location.indexOf(&apos;%&apos;, 1); + if (envVarEnd != -1) { + try { + String expanded = System.getenv(location.substring(1, envVarEnd)); + if (expanded != null) { + File f = new File(expanded + location.substring(envVarEnd + 1)); + String absolutePath = f.getAbsolutePath(); + if (!alreadyFoundPaths.contains(absolutePath.toLowerCase())) { + if (f.exists()) { + return absolutePath; + } + } + return null; + } + } catch (Exception e) { + // ignore + } + } + } + + for (int k = 0; k &lt; rootSize; k++) { + try { + File f = new File(searchRoots[k], location); + String absolutePath = f.getAbsolutePath(); + if (!alreadyFoundPaths.contains(absolutePath + .toLowerCase())) { + if (f.exists()) { + return absolutePath; + } + } + } catch (Exception e) { + // ignore + } + } + return null; + } + private static File[] getUsableDrives(File[] roots) { if (!Platform.getOS().equals(Platform.OS_WIN32)) return roots; - ArrayList list = new ArrayList(); + ArrayList list = new ArrayList(); for (int i = 0; i &lt; roots.length; i++) { String path = roots[i].getAbsolutePath(); if (path != null @@ -242,7 +282,7 @@ continue; list.add(roots[i]); } - return (File[]) list.toArray(new File[list.size()]); + return list.toArray(new File[list.size()]); } /** diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserView.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserView.java index 9d98198..1bfb8f7 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserView.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserView.java @@ -135,7 +135,7 @@ File file = path.toFile(); if (file.exists() &amp;&amp; isWebFile(file.getName())) try { - return file.toURL(); + return file.toURI().toURL(); } catch (MalformedURLException e) { return null; } diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserViewDropAdapter.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserViewDropAdapter.java index 8a535a3..4acedb0 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserViewDropAdapter.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/WebBrowserViewDropAdapter.java @@ -128,7 +128,7 @@ return true; File f = new File(s[0]); try { - view.setURL(f.toURL().toExternalForm()); + view.setURL(f.toURI().toURL().toExternalForm()); } catch (Exception e) { // TODO } diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/browsers/DefaultBrowser.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/browsers/DefaultBrowser.java index 6b220ef..a624374 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/browsers/DefaultBrowser.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/browsers/DefaultBrowser.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2006 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -73,7 +73,7 @@ * @return String[] */ protected String[] prepareCommand(String path, String url) { - ArrayList tokenList = new ArrayList(); + ArrayList tokenList = new ArrayList(); //Divide along quotation marks StringTokenizer qTokenizer = new StringTokenizer(path.trim(), &quot;\&quot;&quot;, true); //$NON-NLS-1$ @@ -109,7 +109,7 @@ // substitute %1 by url boolean substituted = false; for (int i = 0; i &lt; tokenList.size(); i++) { - String token = (String) tokenList.get(i); + String token = tokenList.get(i); String newToken = doSubstitutions(token, url); if (newToken != null) { tokenList.set(i, newToken); diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/browsers/MozillaBrowser.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/browsers/MozillaBrowser.java index 10783d5..426a2b1 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/browsers/MozillaBrowser.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/browsers/MozillaBrowser.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -12,11 +12,9 @@ package org.eclipse.ui.internal.browser.browsers; import java.io.IOException; -import java.net.URISyntaxException; import java.net.URL; import org.eclipse.core.runtime.Platform; -import org.eclipse.core.runtime.URIUtil; import org.eclipse.ui.browser.AbstractWebBrowser; import org.eclipse.ui.internal.browser.WebBrowserUIPlugin; import org.eclipse.ui.internal.browser.WebBrowserUtil; @@ -65,11 +63,7 @@ public void openURL(URL url2) { String url = null; if (url2 != null) { - try { - url = URIUtil.toURI(url2).toASCIIString(); - } catch (URISyntaxException e) { - url = url2.toExternalForm(); - } + url = url2.toExternalForm(); } else { url = &quot;&quot;; //$NON-NLS-1$ diff --git a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/macosx/SafariBrowser.java b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/macosx/SafariBrowser.java index 6d8b876..be8f16a 100644 --- a/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/macosx/SafariBrowser.java +++ b/bundles/org.eclipse.ui.browser/src/org/eclipse/ui/internal/browser/macosx/SafariBrowser.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -35,7 +35,7 @@ url = url.substring(5); } - ArrayList tokenList = new ArrayList(); + ArrayList tokenList = new ArrayList(); //Divide along quotation marks StringTokenizer qTokenizer = new StringTokenizer(path.trim(), &quot;\&quot;&quot;, true); //$NON-NLS-1$ @@ -66,7 +66,7 @@ // substitute %1 by url boolean substituted = false; for (int i = 0; i &lt; tokenList.size(); i++) { - String token = (String) tokenList.get(i); + String token = tokenList.get(i); String newToken = doSubstitutions(token, url); if (newToken != null) { tokenList.set(i, newToken); diff --git a/bundles/org.eclipse.ui.carbon/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.carbon/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.carbon/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.cocoa/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.cocoa/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.cocoa/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.cocoa/src/org/eclipse/ui/internal/cocoa/AbstractWindowHandler.java b/bundles/org.eclipse.ui.cocoa/src/org/eclipse/ui/internal/cocoa/AbstractWindowHandler.java index eed3d10..80dad25 100644 --- a/bundles/org.eclipse.ui.cocoa/src/org/eclipse/ui/internal/cocoa/AbstractWindowHandler.java +++ b/bundles/org.eclipse.ui.cocoa/src/org/eclipse/ui/internal/cocoa/AbstractWindowHandler.java @@ -26,11 +26,11 @@ public boolean isEnabled() { boolean enabled = false; Shell activeShell = Display.getDefault().getActiveShell(); - if(activeShell !=null) { + if (activeShell != null &amp;&amp; activeShell.view != null) { NSWindow window = activeShell.view.window(); if(window!=null) enabled = !window.isMiniaturized(); } return enabled; } -} \ No newline at end of file +} diff --git a/bundles/org.eclipse.ui.forms/.cvsignore b/bundles/org.eclipse.ui.forms/.cvsignore deleted file mode 100644 index c5e82d7..0000000 --- a/bundles/org.eclipse.ui.forms/.cvsignore +++ /dev/null @@ -1 +0,0 @@ -bin \ No newline at end of file diff --git a/bundles/org.eclipse.ui.forms/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.forms/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.forms/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.forms/.settings/org.eclipse.pde.prefs b/bundles/org.eclipse.ui.forms/.settings/org.eclipse.pde.prefs new file mode 100644 index 0000000..78a1e14 --- /dev/null +++ b/bundles/org.eclipse.ui.forms/.settings/org.eclipse.pde.prefs @@ -0,0 +1,32 @@ +compilers.f.unresolved-features=1 +compilers.f.unresolved-plugins=1 +compilers.incompatible-environment=0 +compilers.p.build=1 +compilers.p.build.bin.includes=1 +compilers.p.build.encodings=2 +compilers.p.build.java.compiler=2 +compilers.p.build.java.compliance=1 +compilers.p.build.missing.output=2 +compilers.p.build.output.library=1 +compilers.p.build.source.library=1 +compilers.p.build.src.includes=1 +compilers.p.deprecated=1 +compilers.p.discouraged-class=1 +compilers.p.internal=1 +compilers.p.missing-packages=0 +compilers.p.missing-version-export-package=2 +compilers.p.missing-version-import-package=2 +compilers.p.missing-version-require-bundle=2 +compilers.p.no-required-att=0 +compilers.p.not-externalized-att=1 +compilers.p.unknown-attribute=0 +compilers.p.unknown-class=0 +compilers.p.unknown-element=0 +compilers.p.unknown-identifier=1 +compilers.p.unknown-resource=0 +compilers.p.unresolved-ex-points=0 +compilers.p.unresolved-import=0 +compilers.s.create-docs=false +compilers.s.doc-folder=doc +compilers.s.open-tags=1 +eclipse.preferences.version=1 diff --git a/bundles/org.eclipse.ui.forms/META-INF/MANIFEST.MF b/bundles/org.eclipse.ui.forms/META-INF/MANIFEST.MF index 823bf3e..4c8268b 100644 --- a/bundles/org.eclipse.ui.forms/META-INF/MANIFEST.MF +++ b/bundles/org.eclipse.ui.forms/META-INF/MANIFEST.MF @@ -2,7 +2,7 @@ Bundle-ManifestVersion: 2 Bundle-Name: %name Bundle-SymbolicName: org.eclipse.ui.forms -Bundle-Version: 3.5.100.qualifier +Bundle-Version: 3.5.200.qualifier Bundle-Vendor: %provider-name Bundle-Localization: plugin Export-Package: org.eclipse.ui.forms, diff --git a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/ColumnLayout.java b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/ColumnLayout.java index 21450d6..72e5937 100644 --- a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/ColumnLayout.java +++ b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/ColumnLayout.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -17,6 +17,7 @@ import org.eclipse.swt.widgets.Composite; import org.eclipse.swt.widgets.Control; import org.eclipse.swt.widgets.Layout; +import org.eclipse.ui.internal.forms.widgets.ColumnLayoutUtils; /** * This layout manager arranges children of the composite parent in vertical * columns. All the columns are identical size and children are stretched @@ -112,9 +113,7 @@ ncolumns = Math.max(ncolumns, minNumColumns); ncolumns = Math.min(ncolumns, maxNumColumns); } - int perColHeight = cheight / ncolumns; - if (cheight % ncolumns != 0) - perColHeight++; + int perColHeight = ColumnLayoutUtils.computeColumnHeight(ncolumns, sizes, cheight, verticalSpacing); int colHeight = 0; int[] heights = new int[ncolumns]; int ncol = 0; @@ -196,11 +195,9 @@ // childrenPerColumn++; // int colWidth = 0; - int fillWidth = Math.max(cwidth, realWidth); - - int perColHeight = cheight / ncolumns; - if (cheight % ncolumns != 0) - perColHeight++; + int fillWidth = Math.max(cwidth, realWidth); + int perColHeight = ColumnLayoutUtils.computeColumnHeight(ncolumns, sizes, cheight, verticalSpacing); + int colHeight = 0; int[] heights = new int[ncolumns]; diff --git a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/ExpandableComposite.java b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/ExpandableComposite.java index aa04ad4..c96d79a 100644 --- a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/ExpandableComposite.java +++ b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/ExpandableComposite.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -9,11 +9,13 @@ * IBM Corporation - initial API and implementation * Kai Nacke - Fix for Bug 202382 * Bryan Hunt - Fix for Bug 245457 + * Didier Villevalois - Fix for Bug 178534 *******************************************************************************/ package org.eclipse.ui.forms.widgets; import org.eclipse.core.runtime.Assert; import org.eclipse.core.runtime.ListenerList; +import org.eclipse.osgi.service.environment.Constants; import org.eclipse.swt.SWT; import org.eclipse.swt.events.FocusEvent; import org.eclipse.swt.events.FocusListener; @@ -327,6 +329,10 @@ ty = tcsize.y / 2 - size.y / 2 + marginHeight + tvmargin; } + String os = System.getProperty(&quot;os.name&quot;); //$NON-NLS-1$ + if (Constants.OS_LINUX.equalsIgnoreCase(os)) { + size.x += 1; // See Bug 342610 + } textLabelCache.setBounds(x, ty, size.x, size.y); } if (textClient != null) { @@ -356,13 +362,12 @@ y += VSPACE; } if (expanded) { - int areaWidth = clientArea.width - marginWidth - marginWidth - - thmargin - thmargin; + int areaWidth = clientArea.width - marginWidth - thmargin; int cx = marginWidth + thmargin; if ((expansionStyle &amp; CLIENT_INDENT) != 0) { cx = x; - areaWidth -= x; } + areaWidth -= cx; if (client != null) { Point dsize = null; Control desc = getDescriptionControl(); @@ -813,10 +818,14 @@ * @see #getText() */ public void setText(String title) { - if (textLabel instanceof Label) + if (textLabel instanceof Label) { ((Label) textLabel).setText(title); - else if (textLabel instanceof Hyperlink) + } else if (textLabel instanceof Hyperlink) { ((Hyperlink) textLabel).setText(title); + } else { + return; + } + layout(); } /** diff --git a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/FormText.java b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/FormText.java index b8b19e0..e396e25 100644 --- a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/FormText.java +++ b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/FormText.java @@ -8,7 +8,6 @@ * Contributors: * IBM Corporation - initial API and implementation * Martin Donnelly (m2a3@eircom.net) - patch (see Bugzilla #145997) - * Ling Hao - Fix for Bug 284393 *******************************************************************************/ package org.eclipse.ui.forms.widgets; @@ -18,6 +17,7 @@ import java.util.Hashtable; import org.eclipse.core.runtime.ListenerList; + import org.eclipse.swt.SWT; import org.eclipse.swt.SWTException; import org.eclipse.swt.accessibility.ACC; @@ -61,6 +61,7 @@ import org.eclipse.swt.widgets.Menu; import org.eclipse.swt.widgets.MenuItem; import org.eclipse.swt.widgets.TypedListener; + import org.eclipse.ui.forms.HyperlinkSettings; import org.eclipse.ui.forms.events.HyperlinkEvent; import org.eclipse.ui.forms.events.IHyperlinkListener; @@ -363,7 +364,7 @@ * the widget style */ public FormText(Composite parent, int style) { - super(parent, SWT.DOUBLE_BUFFERED | SWT.WRAP | style); + super(parent, SWT.NO_BACKGROUND | SWT.WRAP | style); setLayout(new FormTextLayout()); model = new FormTextModel(); addDisposeListener(new DisposeListener() { @@ -1574,7 +1575,19 @@ } private void repaint(GC gc, int x, int y, int width, int height) { - Rectangle repaintRegion = new Rectangle(0, 0, getSize().x, getSize().y); + Image textBuffer = new Image(getDisplay(), width, height); + Color bg = getBackground(); + Color fg = getForeground(); + if (!getEnabled()) { + bg = getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND); + fg = getDisplay().getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW); + } + GC textGC = new GC(textBuffer, gc.getStyle()); + textGC.setForeground(fg); + textGC.setBackground(bg); + textGC.setFont(getFont()); + textGC.fillRectangle(0, 0, width, height); + Rectangle repaintRegion = new Rectangle(x, y, width, height); Paragraph[] paragraphs = model.getParagraphs(); IHyperlinkSegment selectedLink = getSelectedLink(); @@ -1583,11 +1596,14 @@ for (int i = 0; i &lt; paragraphs.length; i++) { Paragraph p = paragraphs[i]; p - .paint(gc, repaintRegion, resourceTable, selectedLink, + .paint(textGC, repaintRegion, resourceTable, selectedLink, selData); } if (hasFocus &amp;&amp; !model.hasFocusSegments()) - gc.drawFocus(x, y, width, height); + textGC.drawFocus(x, y, width, height); + textGC.dispose(); + gc.drawImage(textBuffer, x, y); + textBuffer.dispose(); } private int getParagraphSpacing(int lineHeight) { @@ -1596,22 +1612,21 @@ private void paintFocusTransfer(IHyperlinkSegment oldLink, IHyperlinkSegment newLink) { - GC gc = new GC(this); - Color bg = getBackground(); - Color fg = getForeground(); - gc.setFont(getFont()); if (oldLink != null) { - gc.setBackground(bg); - gc.setForeground(fg); - oldLink.paintFocus(gc, bg, fg, false, null); + Rectangle r = oldLink.getBounds(); + redraw(r.x, r.y, r.width, r.height, true); + update(); } if (newLink != null) { - // ensureVisible(newLink); + GC gc = new GC(this); + Color bg = getBackground(); + Color fg = getForeground(); + gc.setFont(getFont()); gc.setBackground(bg); gc.setForeground(fg); newLink.paintFocus(gc, bg, fg, true, null); + gc.dispose(); } - gc.dispose(); } private void ensureVisible(IFocusSelectable segment) { diff --git a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/FormToolkit.java b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/FormToolkit.java index 706cc6a..ddcbeca 100644 --- a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/FormToolkit.java +++ b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/FormToolkit.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -10,6 +10,10 @@ * Michael Williamson (eclipse-bugs@magnaworks.com) - patch (see Bugzilla #92545) *******************************************************************************/ package org.eclipse.ui.forms.widgets; + +import java.util.HashMap; +import java.util.Iterator; +import java.util.Map; import org.eclipse.jface.resource.JFaceResources; import org.eclipse.jface.window.Window; @@ -197,33 +201,42 @@ } private class BoldFontHolder { - private Font normalFont; - - private Font boldFont; + private Map fontMap; public BoldFontHolder() { } public Font getBoldFont(Font font) { - createBoldFont(font); - return boldFont; - } + if (font == null ) { + return null; + } + + if (fontMap == null) { + fontMap = new HashMap(); + } + + if (fontMap.containsKey(font)) { + return (Font) fontMap.get(font); + } - private void createBoldFont(Font font) { - if (normalFont == null || !normalFont.equals(font)) { - normalFont = font; - dispose(); - } - if (boldFont == null) { - boldFont = FormFonts.getInstance().getBoldFont(colors.getDisplay(), - normalFont); - } + Font boldFont = FormFonts.getInstance().getBoldFont(colors.getDisplay(), + font); + fontMap.put(font, boldFont); + return boldFont; + } public void dispose() { - if (boldFont != null &amp;&amp; colors.getDisplay() != null) { - FormFonts.getInstance().markFinished(boldFont, colors.getDisplay()); - boldFont = null; + if (fontMap == null) { + return; + } + for (Iterator iter = fontMap.values().iterator(); iter.hasNext();) { + Font boldFont = (Font) iter.next(); + if (boldFont != null &amp;&amp; colors.getDisplay() != null) { + FormFonts.getInstance().markFinished(boldFont, + colors.getDisplay()); + boldFont = null; + } } } } diff --git a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/ImageHyperlink.java b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/ImageHyperlink.java index 5a4e57b..3259039 100644 --- a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/ImageHyperlink.java +++ b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/ImageHyperlink.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -259,6 +259,9 @@ disabledImage.dispose(); if (image != null &amp;&amp; !image.isDisposed()) disabledImage = new Image(image.getDevice(), image, SWT.IMAGE_DISABLE); + if (image == null) { + disabledImage = null; + } } private Point computeMaxImageSize() { diff --git a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/SharedScrolledComposite.java b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/SharedScrolledComposite.java index ca7b205..6ae9b9b 100644 --- a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/SharedScrolledComposite.java +++ b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/SharedScrolledComposite.java @@ -7,7 +7,7 @@ * * Contributors: * IBM Corporation - initial API and implementation - * Wojciech Galanciak - fix for Bug 294868 � [Forms] Problem with text + * Wojciech Galanciak - fix for Bug 294868 [Forms] Problem with text * wrapping in SharedScrolledComposite: *******************************************************************************/ package org.eclipse.ui.forms.widgets; diff --git a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/TableWrapData.java b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/TableWrapData.java index eb8121e..2d23e95 100644 --- a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/TableWrapData.java +++ b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/TableWrapData.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -173,14 +173,14 @@ public TableWrapData(int align, int valign, int rowspan, int colspan) { if (align != LEFT &amp;&amp; align != CENTER &amp;&amp; align != RIGHT &amp;&amp; align != FILL &amp;&amp; align != FILL_GRAB) - SWT.error(SWT.ERROR_INVALID_ARGUMENT, null, &quot;align&quot;); //$NON-NLS-1$ + SWT.error(SWT.ERROR_INVALID_ARGUMENT, null, &quot; \&quot;align\&quot;&quot;); //$NON-NLS-1$ if (valign != TOP &amp;&amp; valign != MIDDLE &amp;&amp; valign != BOTTOM &amp;&amp; valign != FILL &amp;&amp; valign != FILL_GRAB) - SWT.error(SWT.ERROR_INVALID_ARGUMENT, null, &quot;valign&quot;); //$NON-NLS-1$ + SWT.error(SWT.ERROR_INVALID_ARGUMENT, null, &quot; \&quot;valign\&quot;&quot;); //$NON-NLS-1$ if (rowspan &lt; 1) - SWT.error(SWT.ERROR_INVALID_ARGUMENT, null, &quot;rowspan&quot;); //$NON-NLS-1$ + SWT.error(SWT.ERROR_INVALID_ARGUMENT, null, &quot; \&quot;rowspan\&quot;&quot;); //$NON-NLS-1$ if (colspan &lt; 1) - SWT.error(SWT.ERROR_INVALID_ARGUMENT, null, &quot;colspan&quot;); //$NON-NLS-1$ + SWT.error(SWT.ERROR_INVALID_ARGUMENT, null, &quot; \&quot;colspan\&quot;&quot;); //$NON-NLS-1$ if (align == FILL_GRAB) { this.align = FILL; grabHorizontal = true; diff --git a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/TableWrapLayout.java b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/TableWrapLayout.java index 5551a81..a51922a 100644 --- a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/TableWrapLayout.java +++ b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/forms/widgets/TableWrapLayout.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -369,7 +369,7 @@ int fixedPart = leftMargin + rightMargin + (numColumns - 1) * horizontalSpacing; int D = maxWidth - minWidth; - int W = tableWidth - fixedPart - minWidth; + int W = tableWidth - minWidth; int widths[] = new int[numColumns]; int rem = 0; for (int i = 0; i &lt; numColumns; i++) { @@ -706,7 +706,7 @@ int internalGetMinimumWidth(Composite parent, boolean changed) { if (changed) //calculateMinimumColumnWidths(parent, true); - calculateColumnWidths(parent, minColumnWidths, false, true); + calculateColumnWidths(parent, minColumnWidths, false, true, makeColumnsEqualWidth); int minimumWidth = 0; widestColumnWidth = 0; if (makeColumnsEqualWidth) { @@ -731,7 +731,7 @@ int internalGetMaximumWidth(Composite parent, boolean changed) { if (changed) //calculateMaximumColumnWidths(parent, true); - calculateColumnWidths(parent, maxColumnWidths, true, true); + calculateColumnWidths(parent, maxColumnWidths, true, true, makeColumnsEqualWidth); int maximumWidth = 0; for (int i = 0; i &lt; numColumns; i++) { if (i &gt; 0) @@ -756,8 +756,9 @@ } } - void calculateColumnWidths(Composite parent, int [] columnWidths, boolean max, boolean changed) { + void calculateColumnWidths(Composite parent, int [] columnWidths, boolean max, boolean changed, boolean makeColumnsEqualWidth2) { boolean secondPassNeeded=false; + int widestColumnWidth = 0; for (int i = 0; i &lt; grid.size(); i++) { TableWrapData[] row = (TableWrapData[]) grid.elementAt(i); for (int j = 0; j &lt; numColumns; j++) { @@ -781,6 +782,12 @@ width += td.indent; columnWidths[j] = Math.max(columnWidths[j], width); + widestColumnWidth = Math.max(widestColumnWidth, columnWidths[j]); + } + } + if (makeColumnsEqualWidth) { + for (int i = 0; i &lt; numColumns; i++) { + columnWidths[i] = widestColumnWidth; } } if (!secondPassNeeded) return; diff --git a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/AggregateHyperlinkSegment.java b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/AggregateHyperlinkSegment.java index 839e9a7..e55db95 100644 --- a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/AggregateHyperlinkSegment.java +++ b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/AggregateHyperlinkSegment.java @@ -117,16 +117,15 @@ * @see org.eclipse.ui.internal.forms.widgets.IHyperlinkSegment#getBounds() */ public Rectangle getBounds() { - Rectangle bounds = new Rectangle(Integer.MAX_VALUE, Integer.MAX_VALUE, - 0, 0); - // TODO this is wrong - for (int i = 0; i &lt; segments.size(); i++) { + if (segments.size() == 0) + return new Rectangle(Integer.MAX_VALUE, Integer.MAX_VALUE, 0, 0); + + IHyperlinkSegment segment0 = (IHyperlinkSegment) segments.get(0); + Rectangle bounds = segment0.getBounds(); + for (int i = 1; i &lt; segments.size(); i++) { IHyperlinkSegment segment = (IHyperlinkSegment) segments.get(i); Rectangle sbounds = segment.getBounds(); - bounds.x = Math.min(bounds.x, sbounds.x); - bounds.y = Math.min(bounds.y, sbounds.y); - bounds.width = Math.max(bounds.width, sbounds.width); - bounds.height = Math.max(bounds.height, sbounds.height); + bounds.add(sbounds); } return bounds; } diff --git a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/BulletParagraph.java b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/BulletParagraph.java index bd2d4db..c804e08 100644 --- a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/BulletParagraph.java +++ b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/BulletParagraph.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2005 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,7 +7,6 @@ * * Contributors: * IBM Corporation - initial API and implementation - * Ling Hao - Fix for Bug 284393 *******************************************************************************/ package org.eclipse.ui.internal.forms.widgets; @@ -153,7 +152,7 @@ gc.fillRectangle(x + 1, y, 3, 5); gc.setBackground(bg); } else if (style == TEXT &amp;&amp; text != null) { - gc.drawText(text, x, y, true); + gc.drawText(text, x, y); } else if (style == IMAGE &amp;&amp; text != null) { Image image = (Image) resourceTable.get(text); if (image != null) diff --git a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/ColumnLayoutUtils.java b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/ColumnLayoutUtils.java new file mode 100644 index 0000000..90a8116 --- /dev/null +++ b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/ColumnLayoutUtils.java @@ -0,0 +1,58 @@ +/******************************************************************************* + * Copyright (c) 2011 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + *******************************************************************************/ + +package org.eclipse.ui.internal.forms.widgets; + +import org.eclipse.swt.graphics.Point; + +public class ColumnLayoutUtils { + + /* + * Compute the minimum required height by iteration. The first guess is to + * + * This method is public to allow for JUnit testing + */ + public static int computeColumnHeight(int ncolumns, Point[] sizes, int totalHeight, int verticalMargin) { + int averageHeight = ( totalHeight + sizes.length * verticalMargin ) / ncolumns; + int requiredHeight = computeActualHeight(ncolumns, sizes, averageHeight, verticalMargin); + if (averageHeight == requiredHeight) { + return requiredHeight; + } + // Try making the columns shorter, repeat up to 10 times, usually one or two iterations will be sufficient + for ( int i = 0; i &lt; 10; i++ ) { + int candidateHeight = computeActualHeight(ncolumns, sizes, requiredHeight - 1, verticalMargin); + if ( candidateHeight &gt;= requiredHeight ) { + return requiredHeight; + } + requiredHeight = candidateHeight; + } + return requiredHeight; + } + + private static int computeActualHeight(int ncolumns, Point[] sizes, int candidateHeight, int verticalMargin ) { + int colHeight = 0; + int maxHeight = 0; + int column = 1; + for (int i = 0; i &lt; sizes.length; i++) { + int childHeight = sizes[i].y; + if (i &gt; 0 &amp;&amp; column &lt; ncolumns &amp;&amp; colHeight + childHeight + verticalMargin &gt; candidateHeight) { + maxHeight = Math.max(colHeight, maxHeight); + column++; + colHeight = 0; + } + if (colHeight &gt; 0) + colHeight += verticalMargin; + colHeight += childHeight; + } + maxHeight = Math.max(colHeight, maxHeight); + return maxHeight; + } +} diff --git a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/FormHeading.java b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/FormHeading.java index 0fb14a6..4c34b96 100644 --- a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/FormHeading.java +++ b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/FormHeading.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -416,6 +416,8 @@ // clearing of the message if (oldControl != null &amp;&amp; oldControl.getVisible()) oldControl.setVisible(false); + if (oldType != newType) + updateForeground(); return; } ensureControlExists(); diff --git a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/TextHyperlinkSegment.java b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/TextHyperlinkSegment.java index f61fdc4..697100d 100644 --- a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/TextHyperlinkSegment.java +++ b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/TextHyperlinkSegment.java @@ -7,7 +7,6 @@ * * Contributors: * IBM Corporation - initial API and implementation - * Ling Hao - Fix for Bug 284393 *******************************************************************************/ package org.eclipse.ui.internal.forms.widgets; @@ -68,7 +67,7 @@ } protected void drawText(GC gc, String s, int clipX, int clipY) { - gc.drawText(s, clipX, clipY, true); + gc.drawText(s, clipX, clipY, false); } public String getTooltipText() { diff --git a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/TextSegment.java b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/TextSegment.java index 8b86e87..837ff4a 100644 --- a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/TextSegment.java +++ b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/TextSegment.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -15,6 +15,7 @@ import java.util.Hashtable; import java.util.Vector; +import org.eclipse.jface.util.Geometry; import org.eclipse.swt.SWT; import org.eclipse.swt.graphics.Color; import org.eclipse.swt.graphics.Font; @@ -206,20 +207,16 @@ } public Rectangle getBounds() { - int x = 0, y = 0; - int width = 0, height = 0; - - for (int i = 0; i &lt; areaRectangles.size(); i++) { + if (areaRectangles.size() == 0) + return new Rectangle(0, 0, 0, 0); + + AreaRectangle ar0 = (AreaRectangle) areaRectangles.get(0); + Rectangle bounds = Geometry.copy(ar0.rect); + for (int i = 1; i &lt; areaRectangles.size(); i++) { AreaRectangle ar = (AreaRectangle) areaRectangles.get(i); - if (i == 0) { - x = ar.rect.x; - y = ar.rect.y; - } else - x = Math.min(ar.rect.x, x); - width = Math.max(ar.rect.width, width); - height += ar.rect.height; + bounds.add(ar.rect); } - return new Rectangle(x, y, width, height); + return bounds; } public boolean advanceLocator(GC gc, int wHint, Locator locator, @@ -551,7 +548,7 @@ int sstart = -1; int sstop = -1; - if (firstRow &amp;&amp; bounds.x + swidth &gt; leftOffset) { + if (firstRow &amp;&amp; bounds.x &lt; leftOffset) { sstart = convertOffsetToStringIndex(gc, s, bounds.x, swidth, leftOffset); } @@ -662,12 +659,14 @@ // only wrap on the first fragment if we are not at the start of a line if ((i != 0 || locator.x &gt; locator.getStartX() + (isSelectable() ? 1 : 0)) &amp;&amp; locator.x + lineExtent.x + fragment.length &gt; rightEdge) { // overflow - int ly = locator.getBaseline(lineHeight - fm.getLeading()); - Rectangle br = new Rectangle(isSelectable()? - locator.x - 1:locator.x, ly, - isSelectable()?lineExtent.x + 1:lineExtent.x, lineHeight - descent + 3); - areaRectangles - .add(new AreaRectangle(br, lineStart, lastLoc)); + if ( i != 0 ) { + int ly = locator.getBaseline(lineHeight - fm.getLeading()); + Rectangle br = new Rectangle(isSelectable()? + locator.x - 1:locator.x, ly, + isSelectable()?lineExtent.x + 1:lineExtent.x, lineHeight - descent + 3); + areaRectangles + .add(new AreaRectangle(br, lineStart, lastLoc)); + } locator.rowHeight = Math.max(locator.rowHeight, lineExtent.y); diff --git a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/TitleRegion.java b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/TitleRegion.java index a910810..b75b231 100644 --- a/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/TitleRegion.java +++ b/bundles/org.eclipse.ui.forms/src/org/eclipse/ui/internal/forms/widgets/TitleRegion.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2007 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -12,6 +12,7 @@ import org.eclipse.jface.action.IMenuManager; import org.eclipse.jface.action.MenuManager; +import org.eclipse.osgi.service.environment.Constants; import org.eclipse.swt.SWT; import org.eclipse.swt.dnd.DragSource; import org.eclipse.swt.dnd.DragSourceEffect; @@ -197,6 +198,10 @@ } if (titleLabel.getVisible()) { int tw = width - HMARGIN * 2 - SPACING * 2; + String os = System.getProperty(&quot;os.name&quot;); //$NON-NLS-1$ + if (Constants.OS_LINUX.equalsIgnoreCase(os)) { + tw += 1; // See Bug 342610 + } if (bsize != null) tw -= bsize.x + SPACING; if (msize != null) diff --git a/bundles/org.eclipse.ui.ide.application/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.ide.application/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.ide.application/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.ide.application/.settings/org.eclipse.pde.prefs b/bundles/org.eclipse.ui.ide.application/.settings/org.eclipse.pde.prefs index 498f3ae..b52f7bf 100644 --- a/bundles/org.eclipse.ui.ide.application/.settings/org.eclipse.pde.prefs +++ b/bundles/org.eclipse.ui.ide.application/.settings/org.eclipse.pde.prefs @@ -1,14 +1,35 @@ -#Tue Nov 16 14:11:37 EST 2004 -compilers.p.unused-element-or-attribute=1 -compilers.p.unresolved-ex-points=0 -compilers.p.deprecated=0 -compilers.p.unknown-element=1 -compilers.p.unknown-resource=1 -compilers.p.unknown-class=1 -compilers.p.unknown-attribute=0 -compilers.p.no-required-att=0 -eclipse.preferences.version=1 -compilers.p.unresolved-import=0 -compilers.p.not-externalized-att=0 -compilers.p.illegal-att-value=0 -compilers.use-project=true +compilers.f.unresolved-features=1 +compilers.f.unresolved-plugins=1 +compilers.incompatible-environment=0 +compilers.p.build=1 +compilers.p.build.bin.includes=1 +compilers.p.build.encodings=2 +compilers.p.build.java.compiler=2 +compilers.p.build.java.compliance=1 +compilers.p.build.missing.output=2 +compilers.p.build.output.library=1 +compilers.p.build.source.library=1 +compilers.p.build.src.includes=1 +compilers.p.deprecated=0 +compilers.p.discouraged-class=1 +compilers.p.illegal-att-value=0 +compilers.p.internal=1 +compilers.p.missing-packages=0 +compilers.p.missing-version-export-package=2 +compilers.p.missing-version-import-package=2 +compilers.p.missing-version-require-bundle=2 +compilers.p.no-required-att=0 +compilers.p.not-externalized-att=0 +compilers.p.unknown-attribute=0 +compilers.p.unknown-class=1 +compilers.p.unknown-element=1 +compilers.p.unknown-identifier=1 +compilers.p.unknown-resource=1 +compilers.p.unresolved-ex-points=0 +compilers.p.unresolved-import=0 +compilers.p.unused-element-or-attribute=1 +compilers.s.create-docs=false +compilers.s.doc-folder=doc +compilers.s.open-tags=1 +compilers.use-project=true +eclipse.preferences.version=1 diff --git a/bundles/org.eclipse.ui.ide.application/src/org/eclipse/ui/internal/ide/application/IDEApplication.java b/bundles/org.eclipse.ui.ide.application/src/org/eclipse/ui/internal/ide/application/IDEApplication.java index cf494cf..a3cdf07 100644 --- a/bundles/org.eclipse.ui.ide.application/src/org/eclipse/ui/internal/ide/application/IDEApplication.java +++ b/bundles/org.eclipse.ui.ide.application/src/org/eclipse/ui/internal/ide/application/IDEApplication.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2003, 2010 IBM Corporation and others. + * Copyright (c) 2003, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,6 +7,7 @@ * * Contributors: * IBM Corporation - initial API and implementation + * Helmut J. Haigermoser - Bug 359838 - The &quot;Workspace Unavailable&quot; error *******************************************************************************/ package org.eclipse.ui.internal.ide.application; @@ -17,6 +18,7 @@ import java.io.OutputStream; import java.net.MalformedURLException; import java.net.URL; +import java.util.Map; import java.util.Properties; import org.eclipse.core.runtime.IConfigurationElement; @@ -70,6 +72,12 @@ private static final Integer EXIT_RELAUNCH = new Integer(24); /** + * A special return code that will be recognized by the PDE launcher and used to + * show an error dialog if the workspace is locked. + */ + private static final Integer EXIT_WORKSPACE_LOCKED = new Integer(15); + + /** * The ID of the application plug-in */ public static final String PLUGIN_ID = &quot;org.eclipse.ui.ide.application&quot;; //$NON-NLS-1$ @@ -102,10 +110,11 @@ shell.setImages(Dialog.getDefaultImages()); } - if (!checkInstanceLocation(shell)) { + Object instanceLocationCheck = checkInstanceLocation(shell, appContext.getArguments()); + if (instanceLocationCheck != null) { WorkbenchPlugin.unsetSplashShell(display); Platform.endSplash(); - return EXIT_OK; + return instanceLocationCheck; } // create the workbench with this advisor and run it until it exits @@ -154,13 +163,14 @@ } /** - * Return true if a valid workspace path has been set and false otherwise. + * Return null if a valid workspace path has been set and an exit code otherwise. * Prompt for and set the path if possible and required. * - * @return true if a valid instance location has been set and false + * @param applicationArguments the command line arguments + * @return null if a valid instance location has been set and an exit code * otherwise */ - private boolean checkInstanceLocation(Shell shell) { + private Object checkInstanceLocation(Shell shell, Map applicationArguments) { // -data @none was specified but an ide requires workspace Location instanceLoc = Platform.getInstanceLocation(); if (instanceLoc == null) { @@ -169,7 +179,7 @@ shell, IDEWorkbenchMessages.IDEApplication_workspaceMandatoryTitle, IDEWorkbenchMessages.IDEApplication_workspaceMandatoryMessage); - return false; + return EXIT_OK; } // -data &quot;/valid/path&quot;, workspace already set @@ -177,7 +187,7 @@ // make sure the meta data version is compatible (or the user has // chosen to overwrite it). if (!checkValidWorkspace(shell, instanceLoc.getURL())) { - return false; + return EXIT_OK; } // at this point its valid, so try to lock it and update the @@ -185,7 +195,7 @@ try { if (instanceLoc.lock()) { writeWorkspaceVersion(); - return true; + return null; } // we failed to create the directory. @@ -194,10 +204,13 @@ // 2. directory could not be created File workspaceDirectory = new File(instanceLoc.getURL().getFile()); if (workspaceDirectory.exists()) { + if (isDevLaunchMode(applicationArguments)) { + return EXIT_WORKSPACE_LOCKED; + } MessageDialog.openError( shell, IDEWorkbenchMessages.IDEApplication_workspaceCannotLockTitle, - IDEWorkbenchMessages.IDEApplication_workspaceCannotLockMessage); + NLS.bind(IDEWorkbenchMessages.IDEApplication_workspaceCannotLockMessage, workspaceDirectory.getAbsolutePath())); } else { MessageDialog.openError( shell, @@ -213,7 +226,7 @@ IDEWorkbenchMessages.InternalError, e.getMessage()); } - return false; + return EXIT_OK; } // -data @noDefault or -data not specified, prompt and set @@ -224,7 +237,7 @@ while (true) { URL workspaceUrl = promptForWorkspace(shell, launchData, force); if (workspaceUrl == null) { - return false; + return EXIT_OK; } // if there is an error with the first selection, then force the @@ -237,7 +250,7 @@ if (instanceLoc.setURL(workspaceUrl, true)) { launchData.writePersistedData(); writeWorkspaceVersion(); - return true; + return null; } } catch (IllegalStateException e) { MessageDialog @@ -245,16 +258,23 @@ shell, IDEWorkbenchMessages.IDEApplication_workspaceCannotBeSetTitle, IDEWorkbenchMessages.IDEApplication_workspaceCannotBeSetMessage); - return false; + return EXIT_OK; } // by this point it has been determined that the workspace is // already in use -- force the user to choose again MessageDialog.openError(shell, IDEWorkbenchMessages.IDEApplication_workspaceInUseTitle, - IDEWorkbenchMessages.IDEApplication_workspaceInUseMessage); + NLS.bind(IDEWorkbenchMessages.IDEApplication_workspaceInUseMessage, workspaceUrl.getFile())); } } + private static boolean isDevLaunchMode(Map args) { + // see org.eclipse.pde.internal.core.PluginPathFinder.isDevLaunchMode() + if (Boolean.getBoolean(&quot;eclipse.pde.launch&quot;)) //$NON-NLS-1$ + return true; + return args.containsKey(&quot;-pdelaunch&quot;); //$NON-NLS-1$ + } + /** * Open a workspace selection dialog on the argument shell, populating the * argument data with the user&apos;s selection. Perform first level validation diff --git a/bundles/org.eclipse.ui.ide/.cvsignore b/bundles/org.eclipse.ui.ide/.cvsignore deleted file mode 100644 index c5e82d7..0000000 --- a/bundles/org.eclipse.ui.ide/.cvsignore +++ /dev/null @@ -1 +0,0 @@ -bin \ No newline at end of file diff --git a/bundles/org.eclipse.ui.ide/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.ide/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.ide/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.ide/.settings/org.eclipse.pde.prefs b/bundles/org.eclipse.ui.ide/.settings/org.eclipse.pde.prefs index c084f9c..7186de4 100644 --- a/bundles/org.eclipse.ui.ide/.settings/org.eclipse.pde.prefs +++ b/bundles/org.eclipse.ui.ide/.settings/org.eclipse.pde.prefs @@ -1,7 +1,7 @@ #Fri Mar 06 16:37:55 PST 2009 compilers.f.unresolved-features=1 compilers.f.unresolved-plugins=1 -compilers.incompatible-environment=1 +compilers.incompatible-environment=0 compilers.p.build=1 compilers.p.deprecated=1 compilers.p.discouraged-class=1 diff --git a/bundles/org.eclipse.ui.ide/META-INF/MANIFEST.MF b/bundles/org.eclipse.ui.ide/META-INF/MANIFEST.MF index 106ae8f..cf50509 100644 --- a/bundles/org.eclipse.ui.ide/META-INF/MANIFEST.MF +++ b/bundles/org.eclipse.ui.ide/META-INF/MANIFEST.MF @@ -2,7 +2,7 @@ Bundle-ManifestVersion: 2 Bundle-Name: %Plugin.name Bundle-SymbolicName: org.eclipse.ui.ide; singleton:=true -Bundle-Version: 3.6.100.qualifier +Bundle-Version: 3.8.0.qualifier Bundle-ClassPath: e4-ide.jar, . Bundle-Activator: org.eclipse.ui.internal.ide.IDEWorkbenchPlugin @@ -45,11 +45,12 @@ org.eclipse.ui.views.tasklist, org.eclipse.ui.wizards.datatransfer, org.eclipse.ui.wizards.newresource -Require-Bundle: org.eclipse.core.resources;bundle-version=&quot;[3.6.0,4.0.0)&quot;;resolution:=optional, +Require-Bundle: org.eclipse.core.resources;bundle-version=&quot;[3.7.0,4.0.0)&quot;;resolution:=optional, org.eclipse.core.runtime;bundle-version=&quot;[3.2.0,4.0.0)&quot;, org.eclipse.core.filesystem;bundle-version=&quot;[1.0.0,2.0.0)&quot;, org.eclipse.help;bundle-version=&quot;[3.2.0,4.0.0)&quot;, org.eclipse.ui;bundle-version=&quot;[3.5.0,4.0.0)&quot;, + org.eclipse.ui.workbench;bundle-version=&quot;[3.7.0,4.0.0)&quot;, org.eclipse.ui.views;bundle-version=&quot;[3.2.0,4.0.0)&quot;;resolution:=optional, org.eclipse.jface.text;bundle-version=&quot;[3.2.0,4.0.0)&quot;, org.eclipse.ui.forms;bundle-version=&quot;[3.3.0,4.0.0)&quot;;resolution:=optional, diff --git a/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/BuildAction.java b/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/BuildAction.java index 432e849..34dbd48 100644 --- a/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/BuildAction.java +++ b/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/BuildAction.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -8,24 +8,31 @@ * Contributors: * IBM Corporation - initial API and implementation * Anton Leherbauer (Wind River) - [296800] UI build actions should not lock the workspace + * Broadcom Corporation - [335960] Update BuildAction to use new Workspace Build Configurations API *******************************************************************************/ package org.eclipse.ui.actions; import java.util.ArrayList; -import java.util.Arrays; import java.util.HashSet; import java.util.Iterator; import java.util.List; +import java.util.Set; +import org.eclipse.core.resources.IBuildConfiguration; import org.eclipse.core.resources.ICommand; import org.eclipse.core.resources.IProject; import org.eclipse.core.resources.IResource; -import org.eclipse.core.resources.IWorkspace; -import org.eclipse.core.resources.IWorkspaceRoot; import org.eclipse.core.resources.IncrementalProjectBuilder; import org.eclipse.core.resources.ResourcesPlugin; +import org.eclipse.core.resources.WorkspaceJob; import org.eclipse.core.runtime.CoreException; import org.eclipse.core.runtime.IProgressMonitor; +import org.eclipse.core.runtime.IStatus; +import org.eclipse.core.runtime.OperationCanceledException; +import org.eclipse.core.runtime.Status; +import org.eclipse.core.runtime.SubProgressMonitor; +import org.eclipse.core.runtime.jobs.ISchedulingRule; +import org.eclipse.core.runtime.jobs.Job; import org.eclipse.jface.preference.IPreferenceStore; import org.eclipse.jface.viewers.IStructuredSelection; import org.eclipse.jface.viewers.StructuredSelection; @@ -38,9 +45,11 @@ import org.eclipse.ui.internal.ide.IDEWorkbenchPlugin; import org.eclipse.ui.internal.ide.IIDEHelpContextIds; import org.eclipse.ui.internal.ide.actions.BuildUtilities; +import org.eclipse.ui.progress.IProgressConstants2; /** - * Standard actions for full and incremental builds of the selected project(s). + * Standard actions for full and incremental builds of the selected project(s) + * and their references project build configurations. * * This class may be instantiated; it is not intended to be subclassed. * @@ -62,9 +71,15 @@ private int buildType; /** - * The list of IProjects to build (computed lazily). + * The list of IProjects to build (computed lazily). This is computed from the + * list of project build configurations that are to be built. */ private List projectsToBuild = null; + + /** + * The list of {@link IBuildConfiguration} to build (computed lazily). + */ + private List/**/ projectConfigsToBuild = null; /** * Creates a new action of the appropriate type. The action id is @@ -121,26 +136,6 @@ this.buildType = type; } - /** - * Adds the given project and all of its prerequisities, transitively, - * to the provided set. - */ - private void addAllProjects(IProject project, HashSet projects) { - if (project == null || !project.isAccessible() - || projects.contains(project)) { - return; - } - projects.add(project); - try { - IProject[] preReqs = project.getReferencedProjects(); - for (int i = 0; i &lt; preReqs.length; i++) { - addAllProjects(preReqs[i], projects); - } - } catch (CoreException e) { - //ignore inaccessible projects - } - } - /* (non-Javadoc) * Method declared on WorkspaceAction. */ @@ -169,27 +164,47 @@ return IDEWorkbenchMessages.BuildAction_problemTitle; } - /** - * Returns the projects to build. - * This contains the set of projects which have builders, across all selected resources. - */ - List getProjectsToBuild() { - if (projectsToBuild == null) { - projectsToBuild = new ArrayList(3); - for (Iterator i = getSelectedResources().iterator(); i.hasNext();) { - IResource resource = (IResource) i.next(); - IProject project = resource.getProject(); - if (project != null) { - if (!projectsToBuild.contains(project)) { - if (hasBuilder(project)) { - projectsToBuild.add(project); - } - } - } - } - } - return projectsToBuild; - } + /** + * Returns the projects to build. + * This contains the set of projects which have builders, across all selected resources. + */ + List getProjectsToBuild() { + if (projectsToBuild == null) { + Set projects = new HashSet(3); + List configurations = getBuildConfigurationsToBuild(); + for (Iterator it = configurations.iterator(); it.hasNext();) { + projects.add(((IBuildConfiguration) it.next()).getProject()); + } + projectsToBuild = new ArrayList(projects); + } + return projectsToBuild; + } + + /** + * This collection of project build configs, derived from the selected + * resources, is passed to the workspace for building. The Workspace + * is responsible for resolving references. + * @return List of project build configurations to build. + * @since 3.7 + */ + protected List getBuildConfigurationsToBuild() { + if (projectConfigsToBuild == null) { + Set configs = new HashSet(3); + for (Iterator i = getSelectedResources().iterator(); i.hasNext();) { + IResource resource = (IResource) i.next(); + IProject project = resource.getProject(); + if (project != null &amp;&amp; hasBuilder(project)) { + try { + configs.add(project.getActiveBuildConfig()); + } catch(CoreException e) { + // Ignore project + } + } + } + projectConfigsToBuild = new ArrayList(configs); + } + return projectConfigsToBuild; + } /** * Returns whether there are builders configured on the given project. @@ -215,14 +230,6 @@ } /* (non-Javadoc) - * Method declared on WorkspaceAction. - */ - protected void invokeOperation(IResource resource, IProgressMonitor monitor) - throws CoreException { - ((IProject) resource).build(buildType, monitor); - } - - /* (non-Javadoc) * Method declared on Action */ public boolean isEnabled() { @@ -247,67 +254,68 @@ } /* (non-Javadoc) - * Method declared on WorkspaceAction. - * - * Change the order of the resources so that - * it matches the build order. Closed and - * non existant projects are eliminated. Also, - * any projects in cycles are eliminated. - */ - List pruneResources(List resourceCollection) { - //recursively compute project prerequisites - HashSet toBuild = new HashSet(); - for (Iterator it = resourceCollection.iterator(); it.hasNext();) { - addAllProjects((IProject) it.next(), toBuild); - } - - // Optimize... - if (toBuild.size() &lt; 2) { - return resourceCollection; - } - - // Try the workspace&apos;s description build order if specified - String[] orderedNames = ResourcesPlugin.getWorkspace().getDescription() - .getBuildOrder(); - if (orderedNames != null) { - List orderedProjects = new ArrayList(toBuild.size()); - IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot(); - for (int i = 0; i &lt; orderedNames.length; i++) { - IProject handle = root.getProject(orderedNames[i]); - if (toBuild.contains(handle)) { - orderedProjects.add(handle); - toBuild.remove(handle); - } - } - //Add anything not specified before we return - orderedProjects.addAll(toBuild); - return orderedProjects; - } - - // Try the project prerequisite order then - IProject[] projects = new IProject[toBuild.size()]; - projects = (IProject[]) toBuild.toArray(projects); - IWorkspace.ProjectOrder po = ResourcesPlugin.getWorkspace() - .computeProjectOrder(projects); - ArrayList orderedProjects = new ArrayList(); - orderedProjects.addAll(Arrays.asList(po.projects)); - return orderedProjects; - } - - /* (non-Javadoc) * Method declared on IAction; overrides method on WorkspaceAction. * This override allows the user to save the contents of selected * open editors so that the updated contents will be used for building. + * The build is run as a background job. */ public void run() { - List projects = getProjectsToBuild(); - if (projects == null || projects.isEmpty()) { + final List buildConfigurations = getBuildConfigurationsToBuild(); + if (buildConfigurations == null || buildConfigurations.isEmpty()) return; - } // Save all resources prior to doing build - BuildUtilities.saveEditors(projects); + BuildUtilities.saveEditors(getProjectsToBuild()); runInBackground(null, ResourcesPlugin.FAMILY_MANUAL_BUILD); + } + + /* + * (non-Javadoc) + * @see org.eclipse.ui.actions.WorkspaceAction#runInBackground(org.eclipse.core.runtime.jobs.ISchedulingRule, java.lang.Object[]) + */ + public void runInBackground(ISchedulingRule rule, Object[] jobFamilies) { + // Get immutable copies of the build settings + final int kind = buildType; + List buildConfigurations = getBuildConfigurationsToBuild(); + if (buildConfigurations == null || buildConfigurations.isEmpty()) + return; + final IBuildConfiguration[] configs = (IBuildConfiguration[])buildConfigurations.toArray(new IBuildConfiguration[buildConfigurations.size()]); + + // Schedule a Workspace Job to perform the build + Job job = new WorkspaceJob(removeMnemonics(getText())) { + /* + * (non-Javadoc) + * @see Job#belongsTo(Object) + */ + public boolean belongsTo(Object family) { + return ResourcesPlugin.FAMILY_MANUAL_BUILD.equals(family); + } + + /* + * (non-Javadoc) + * @see WorkspaceJob#runInWorkspace(IProgressMonitor) + */ + public IStatus runInWorkspace(IProgressMonitor monitor) { + IStatus status = null; + monitor.beginTask(&quot;&quot;, 10000); //$NON-NLS-1$ + monitor.setTaskName(getOperationMessage()); + try { + // Backwards compatibility: check shouldPerformResourcePruning(). + // Previously if this returned true, the full reference graph is built, otherwise just build the selected configurations + ResourcesPlugin.getWorkspace().build(configs, kind, shouldPerformResourcePruning(), new SubProgressMonitor(monitor, 10000)); + } catch (CoreException e) { + status = e.getStatus(); + } + if (monitor.isCanceled()) { + throw new OperationCanceledException(); + } + monitor.done(); + return status == null ? Status.OK_STATUS : status; + } + }; + job.setProperty(IProgressConstants2.SHOW_IN_TASKBAR_ICON_PROPERTY, Boolean.TRUE); + job.setUser(true); + job.schedule(); } /* (non-Javadoc) @@ -323,6 +331,7 @@ * enabled only if all of the selected resources have buildable projects. */ protected boolean updateSelection(IStructuredSelection s) { + projectConfigsToBuild = null; projectsToBuild = null; IProject[] projects = (IProject[]) getProjectsToBuild().toArray(new IProject[0]); return BuildUtilities.isEnabled(projects, IncrementalProjectBuilder.INCREMENTAL_BUILD); diff --git a/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/CopyFilesAndFoldersOperation.java b/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/CopyFilesAndFoldersOperation.java index c0eb17f..b2f749e 100644 --- a/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/CopyFilesAndFoldersOperation.java +++ b/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/CopyFilesAndFoldersOperation.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -1513,17 +1513,17 @@ } if (!destination.isVirtual()) { - if (sourceLocation.equals(destinationLocation)) { - return NLS - .bind( - IDEWorkbenchMessages.CopyFilesAndFoldersOperation_sameSourceAndDest, - sourceResource.getName()); - } - // is the source a parent of the destination? - if (new Path(sourceLocation.toString()).isPrefixOf(new Path( - destinationLocation.toString()))) { - return IDEWorkbenchMessages.CopyFilesAndFoldersOperation_destinationDescendentError; - } + if (sourceLocation.equals(destinationLocation)) { + return NLS + .bind( + IDEWorkbenchMessages.CopyFilesAndFoldersOperation_sameSourceAndDest, + sourceResource.getName()); + } + // is the source a parent of the destination? + if (new Path(sourceLocation.toString()).isPrefixOf(new Path( + destinationLocation.toString()))) { + return IDEWorkbenchMessages.CopyFilesAndFoldersOperation_destinationDescendentError; + } } String linkedResourceMessage = validateLinkedResource(destination, @@ -1620,35 +1620,34 @@ return IDEWorkbenchMessages.CopyFilesAndFoldersOperation_destinationAccessError; if (!destination.isVirtual()) { - IFileStore destinationStore; - try { - destinationStore = EFS.getStore(destination.getLocationURI()); - } catch (CoreException exception) { - IDEWorkbenchPlugin.log(exception.getLocalizedMessage(), exception); - return NLS - .bind( - IDEWorkbenchMessages.CopyFilesAndFoldersOperation_internalError, - exception.getLocalizedMessage()); - } - for (int i = 0; i &lt; sourceStores.length; i++) { - IFileStore sourceStore = sourceStores[i]; - IFileStore sourceParentStore = sourceStore.getParent(); + IFileStore destinationStore; + try { + destinationStore = EFS.getStore(destination.getLocationURI()); + } catch (CoreException exception) { + IDEWorkbenchPlugin.log(exception.getLocalizedMessage(), exception); + return NLS + .bind( + IDEWorkbenchMessages.CopyFilesAndFoldersOperation_internalError, + exception.getLocalizedMessage()); + } + for (int i = 0; i &lt; sourceStores.length; i++) { + IFileStore sourceStore = sourceStores[i]; + IFileStore sourceParentStore = sourceStore.getParent(); - if (sourceStore != null) { - if (destinationStore.equals(sourceStore) - || (sourceParentStore != null &amp;&amp; destinationStore - .equals(sourceParentStore))) { - return NLS - .bind( - IDEWorkbenchMessages.CopyFilesAndFoldersOperation_importSameSourceAndDest, - sourceStore.getName()); - } - // work around bug 16202. replacement for - // sourcePath.isPrefixOf(destinationPath) - IFileStore destinationParent = destinationStore.getParent(); - if (sourceStore.isParentOf(destinationParent)) { - return IDEWorkbenchMessages.CopyFilesAndFoldersOperation_destinationDescendentError; - } + if (sourceStore != null) { + if (destinationStore.equals(sourceStore) + || (sourceParentStore != null &amp;&amp; destinationStore + .equals(sourceParentStore))) { + return NLS + .bind( + IDEWorkbenchMessages.CopyFilesAndFoldersOperation_importSameSourceAndDest, + sourceStore.getName()); + } + // work around bug 16202. replacement for + // sourcePath.isPrefixOf(destinationPath) + if (sourceStore.isParentOf(destinationStore)) { + return IDEWorkbenchMessages.CopyFilesAndFoldersOperation_destinationDescendentError; + } } } } diff --git a/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/DeleteResourceAction.java b/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/DeleteResourceAction.java index d98d674..67fb8de 100644 --- a/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/DeleteResourceAction.java +++ b/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/DeleteResourceAction.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -23,7 +23,6 @@ import org.eclipse.core.runtime.IStatus; import org.eclipse.core.runtime.Status; import org.eclipse.core.runtime.jobs.Job; -import org.eclipse.jface.dialogs.Dialog; import org.eclipse.jface.dialogs.IDialogConstants; import org.eclipse.jface.dialogs.MessageDialog; import org.eclipse.jface.viewers.IStructuredSelection; @@ -36,8 +35,6 @@ import org.eclipse.swt.events.SelectionAdapter; import org.eclipse.swt.events.SelectionEvent; import org.eclipse.swt.events.SelectionListener; -import org.eclipse.swt.graphics.FontMetrics; -import org.eclipse.swt.graphics.GC; import org.eclipse.swt.layout.GridData; import org.eclipse.swt.layout.GridLayout; import org.eclipse.swt.widgets.Button; @@ -149,12 +146,8 @@ detailsLabel.setText(IDEWorkbenchMessages.DeleteResourceAction_deleteContentsDetails); detailsLabel.setFont(parent.getFont()); // indent the explanatory label - GC gc = new GC(detailsLabel); - gc.setFont(detailsLabel.getParent().getFont()); - FontMetrics fontMetrics = gc.getFontMetrics(); - gc.dispose(); GridData data = new GridData(); - data.horizontalIndent = Dialog.convertHorizontalDLUsToPixels(fontMetrics, IDialogConstants.INDENT); + data.horizontalIndent = IDialogConstants.INDENT; detailsLabel.setLayoutData(data); // add a listener so that clicking on the label selects the // corresponding radio button. diff --git a/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/NewWizardMenu.java b/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/NewWizardMenu.java index 60e56a1..d437396 100644 --- a/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/NewWizardMenu.java +++ b/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/actions/NewWizardMenu.java @@ -21,9 +21,12 @@ import org.eclipse.jface.action.IMenuManager; import org.eclipse.jface.action.Separator; import org.eclipse.ui.IWorkbenchWindow; +import org.eclipse.ui.activities.WorkbenchActivityHelper; +import org.eclipse.ui.internal.WorkbenchPlugin; import org.eclipse.ui.internal.actions.NewWizardShortcutAction; import org.eclipse.ui.internal.dialogs.WorkbenchWizardElement; import org.eclipse.ui.internal.registry.WizardsRegistryReader; +import org.eclipse.ui.wizards.IWizardCategory; import org.eclipse.ui.wizards.IWizardDescriptor; /** @@ -117,9 +120,36 @@ * * @return boolean */ - private boolean hasExamples() { - return registryHasCategory(WizardsRegistryReader.FULL_EXAMPLES_WIZARD_CATEGORY); - } + private boolean hasExamples() { + boolean hasCategory = registryHasCategory(WizardsRegistryReader.FULL_EXAMPLES_WIZARD_CATEGORY); + if (hasCategory) { + IWizardCategory exampleCategory = WorkbenchPlugin + .getDefault() + .getNewWizardRegistry() + .findCategory( + WizardsRegistryReader.FULL_EXAMPLES_WIZARD_CATEGORY); + return hasWizards(exampleCategory); + } + return false; + } + + private boolean hasWizards(IWizardCategory category) { + IWizardDescriptor[] wizards = category.getWizards(); + if (wizards.length&gt;0) { + for (int i = 0; i &lt; wizards.length; i++) { + if (!WorkbenchActivityHelper.filterItem(wizards[i])) { + return true; + } + } + } + IWizardCategory[] categories = category.getCategories(); + for (int i = 0; i &lt; categories.length; i++) { + if (hasWizards(categories[i])) { + return true; + } + } + return false; + } /* (non-Javadoc) * @see org.eclipse.ui.actions.BaseNewWizardMenu#addItems(org.eclipse.jface.action.IContributionManager) diff --git a/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/dialogs/FilteredResourcesSelectionDialog.java b/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/dialogs/FilteredResourcesSelectionDialog.java index ab07aea..ea78f7a 100644 --- a/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/dialogs/FilteredResourcesSelectionDialog.java +++ b/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/dialogs/FilteredResourcesSelectionDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -141,8 +141,6 @@ setSelectionHistory(new ResourceSelectionHistory()); setTitle(IDEWorkbenchMessages.OpenResourceDialog_title); - PlatformUI.getWorkbench().getHelpSystem().setHelp(shell, - IIDEHelpContextIds.OPEN_RESOURCE_DIALOG); /* * Allow location of paths relative to a searchContainer, which is @@ -186,6 +184,16 @@ setDetailsLabelProvider(resourceItemDetailsLabelProvider); } + /* + * (non-Javadoc) + * + * @see org.eclipse.ui.dialogs.SelectionStatusDialog#configureShell(org.eclipse.swt.widgets.Shell) + */ + protected void configureShell(Shell shell) { + super.configureShell(shell); + PlatformUI.getWorkbench().getHelpSystem().setHelp(shell, IIDEHelpContextIds.OPEN_RESOURCE_DIALOG); + } + /* * (non-Javadoc) * @@ -968,7 +976,7 @@ int lastPatternDot = filenamePattern.lastIndexOf(&apos;.&apos;); if (lastPatternDot != -1) { char last = filenamePattern.charAt(filenamePattern.length() - 1); - if (last != &apos; &apos; &amp;&amp; last != &apos;&lt;&apos;) { + if (last != &apos; &apos; &amp;&amp; last != &apos;&lt;&apos; &amp;&amp; getMatchRule() != SearchPattern.RULE_EXACT_MATCH) { namePattern = new SearchPattern(); namePattern.setPattern(filenamePattern.substring(0, lastPatternDot)); extensionPattern = new SearchPattern(); diff --git a/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/dialogs/WizardNewProjectReferencePage.java b/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/dialogs/WizardNewProjectReferencePage.java index 6dac88e..f129dfe 100644 --- a/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/dialogs/WizardNewProjectReferencePage.java +++ b/bundles/org.eclipse.ui.ide/extensions/org/eclipse/ui/dialogs/WizardNewProjectReferencePage.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2006 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -86,9 +86,7 @@ referenceProjectsViewer = CheckboxTableViewer.newCheckList(composite, SWT.BORDER); referenceProjectsViewer.getTable().setFont(composite.getFont()); - GridData data = new GridData(); - data.horizontalAlignment = GridData.FILL; - data.grabExcessHorizontalSpace = true; + GridData data = new GridData(SWT.FILL, SWT.FILL, true, true); data.heightHint = getDefaultFontHeight(referenceProjectsViewer .getTable(), PROJECT_LIST_MULTIPLIER); diff --git a/bundles/org.eclipse.ui.ide/icons/full/dtool16/newprj_wiz.gif b/bundles/org.eclipse.ui.ide/icons/full/dtool16/newprj_wiz.gif index 5b4b24c..e05f3bd 100644 --- a/bundles/org.eclipse.ui.ide/icons/full/dtool16/newprj_wiz.gif +++ b/bundles/org.eclipse.ui.ide/icons/full/dtool16/newprj_wiz.gif Binary files differ diff --git a/bundles/org.eclipse.ui.ide/icons/full/etool16/newprj_wiz.gif b/bundles/org.eclipse.ui.ide/icons/full/etool16/newprj_wiz.gif index fbbac0f..97d4cb0 100644 --- a/bundles/org.eclipse.ui.ide/icons/full/etool16/newprj_wiz.gif +++ b/bundles/org.eclipse.ui.ide/icons/full/etool16/newprj_wiz.gif Binary files differ diff --git a/bundles/org.eclipse.ui.ide/plugin.properties b/bundles/org.eclipse.ui.ide/plugin.properties index e020966..bf9beb0 100644 --- a/bundles/org.eclipse.ui.ide/plugin.properties +++ b/bundles/org.eclipse.ui.ide/plugin.properties @@ -1,5 +1,5 @@ ############################################################################### -# Copyright (c) 2000, 2010 IBM Corporation and others. +# Copyright (c) 2000, 2011 IBM Corporation and others. # All rights reserved. This program and the accompanying materials # are made available under the terms of the Eclipse Public License v1.0 # which accompanies this distribution, and is available at @@ -101,7 +101,7 @@ DecoratorSpecificResourceFilterType.description = Displays an icon based on the presence of resource filters on a container. OpenWorkspaceFileAction.label = Open Reso&amp;urce... SelectWorkingSetsAction.label = &amp;Working Sets -SelectWorkingSetsAction.tooltip = Modify workbench working sets +SelectWorkingSetsAction.tooltip = Modify window working set AddToWorkingSetAction.label = Add To Working Se&amp;t AddToWorkingSetAction.tooltip = Add the selected elements to a working set @@ -134,7 +134,7 @@ command.configureFilters.name = Configure Contents... command.configureFilters.mnemonic=C command.configureColumns.description = Configure the columns in the markers view -command.configureColumns.name = Columns... +command.configureColumns.name = Configure Columns... command.configureColumns.mnemonic=l command.correctionAssistProposals.description = Suggest possible fixes for a problem command.correctionAssistProposals.name = Quick Fix @@ -187,13 +187,6 @@ command.newQuickMenu.name= New menu command.newQuickMenu.description= Open the New menu -category.update.name= Update -category.update.description= Commands for Software Updates -command.manageConfiguration.name= Manage Configuration -command.manageConfiguration.description= Open the product configuration dialog -command.findAndInstallUpdates.name= Find and Install Updates -command.findAndInstallUpdates.description= Open the feature install and update dialog - commandParameter.openFileByPath.filePath.name= File Path command.showResourceByPath.name= Show Resource in Navigator command.showResourceByPath.description= Show a resource in the Navigator given its path @@ -216,7 +209,7 @@ PreferenceKeywords.Pin = pin PreferenceKeywords.Close = close PreferenceKeywords.Dirty = dirty -PreferenceKeywords.Keys = binding command scheme emacs +PreferenceKeywords.Keys = binding command scheme emacs shortcut PreferenceKeywords.Perspectives = open view switch PreferenceKeywords.StartupAndShutdown = workbench plug-in plugin refresh PreferenceKeywords.Workspace = build refresh save automatically open project line delimiter diff --git a/bundles/org.eclipse.ui.ide/plugin.xml b/bundles/org.eclipse.ui.ide/plugin.xml index e43e9aa..ff6b24a 100644 --- a/bundles/org.eclipse.ui.ide/plugin.xml +++ b/bundles/org.eclipse.ui.ide/plugin.xml @@ -702,6 +702,10 @@ id=&quot;org.eclipse.ui.propertypages.project.reference&quot; name=&quot;%PropertyPages.project.reference&quot; &gt; + + @@ -712,9 +716,27 @@ id=&quot;org.eclipse.ui.propertypages.resource.filters&quot; name=&quot;%PropertyPages.resource.filters&quot;&gt; - - - + + + + + + + + + + + + + + + + + + @@ -895,20 +921,6 @@ categoryId=&quot;org.eclipse.ui.category.edit&quot; id=&quot;org.eclipse.ui.navigate.removeFromWorkingSet&quot;&gt; - - - - + + + + @@ -2229,7 +2244,7 @@ id=&quot;org.eclipse.ui.ide.editable&quot; namespace=&quot;org.eclipse.ui.ide&quot; properties=&quot;editable&quot; - type=&quot;org.eclipse.ui.internal.views.markers.MarkerEntry&quot;&gt; + type=&quot;org.eclipse.ui.internal.views.markers.MarkerSupportItem&quot;&gt; - - - - - - - - filesystemSupport supplies IDE contributions to support filesystems contributed using the org.eclipse.core.filesystem.filesystems extension point. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - The label is the human readable label for this file system. - - - - - - - - - - class is the org.eclipse.ui.ide.fileSystem.FileSystemContributor used to handle browsing and validation of an org.eclipse.core.filesystem.IFileSystem. - - - - - - - - - - The scheme is the scheme of a org.eclipse.core.filesystems.filesystem this contribution corresponds to. - - - - - - - - - - - - - - - 3.2 - - - - - - - - - &lt;p&gt; -&lt;pre&gt; - &lt;extension - point=&quot;org.eclipse.ui.ide.filesystemSupport&quot;&gt; - &lt;filesystemContributor - class=&quot;myFileSystemContributor&quot; - label=&quot;My file system&quot; - scheme=&quot;myFilesystem &quot;/&gt; - &lt;/extension&gt; - - &lt;/pre&gt; -&lt;/p&gt; - -The example above has a FileSystemContributor that maps to a org.eclipse.core.filesystems.filesystem that it is provding a user interface for. - - - - - - - - - The should be a one to one mapping of a org.eclipse.core.filesystems.filesystem scheme to filesystemContributor. - - - - - - - - - - There are no filesystemSupports contributed by default. There is an internal implementation that supports the IResource that is backed by the file system. - - - - - - - - - Copyright (c) 2006 IBM Corporation and others.&lt;br&gt; -All rights reserved. This program and the accompanying materials are made -available under the terms of the Eclipse Public License v1.0 which accompanies -this distribution, and is available at &lt;a -href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt; - - - - + + + + + + + + + filesystemSupport supplies IDE contributions to support filesystems contributed using the org.eclipse.core.filesystem.filesystems extension point. + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + The label is the human readable label for this file system. + + + + + + + + + + class is the org.eclipse.ui.ide.fileSystem.FileSystemContributor used to handle browsing and validation of an org.eclipse.core.filesystem.IFileSystem. + + + + + + + + + + The scheme is the scheme of a org.eclipse.core.filesystems.filesystem this contribution corresponds to. + + + + + + + + + + + + + + + 3.2 + + + + + + + + + &lt;p&gt; +&lt;pre&gt; + &lt;extension + point=&quot;org.eclipse.ui.ide.filesystemSupport&quot;&gt; + &lt;filesystemContributor + class=&quot;myFileSystemContributor&quot; + label=&quot;My file system&quot; + scheme=&quot;myFilesystem &quot;/&gt; + &lt;/extension&gt; + + &lt;/pre&gt; +&lt;/p&gt; + +The example above has a FileSystemContributor that maps to a org.eclipse.core.filesystems.filesystem that it is provding a user interface for. + + + + + + + + + The should be a one to one mapping of a org.eclipse.core.filesystems.filesystem scheme to filesystemContributor. + + + + + + + + + There are no filesystemSupports contributed by default. There is an internal implementation that supports the IResource that is backed by the file system. + + + + + + + + + Copyright (c) 2006, 2011 IBM Corporation and others.&lt;br&gt; +All rights reserved. This program and the accompanying materials are made +available under the terms of the Eclipse Public License v1.0 which accompanies +this distribution, and is available at &lt;a +href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt; + + + + diff --git a/bundles/org.eclipse.ui.ide/schema/markerSupport.exsd b/bundles/org.eclipse.ui.ide/schema/markerSupport.exsd index 14d2be4..909774e 100644 --- a/bundles/org.eclipse.ui.ide/schema/markerSupport.exsd +++ b/bundles/org.eclipse.ui.ide/schema/markerSupport.exsd @@ -73,7 +73,7 @@ The scope of the filter. One of ON_ANY: any item in the workbench ON_SELECTED_ONLY: on the currently selected item -ON_SELECTED_AND_CHILDREN: on the currently selected item and it&apos;s children +ON_SELECTED_AND_CHILDREN: on the currently selected item and its children ON_ANY_IN_SAME_CONTAINER: on any item with the same top level container as the selection @@ -89,6 +89,7 @@ + @@ -242,7 +243,7 @@ Top level markerGroupings are assumed to belong to the problems content generator. -A markerGrouping is usually specified as the child of a markerContentGenerator. It is recommended that a markerContentGenerator defines it&apos;s own markerGroupings if possible. +A markerGrouping is usually specified as the child of a markerContentGenerator. It is recommended that a markerContentGenerator defines its own markerGroupings if possible. Note that only the problems view supported markerGroupings pre 3.4. @@ -517,7 +518,7 @@ One of ON_ANY: any item in the workbench ON_SELECTED_ONLY: on the currently selected item -ON_SELECTED_AND_CHILDREN: on the currently selected item and it&apos;s children +ON_SELECTED_AND_CHILDREN: on the currently selected item and its children ON_ANY_IN_SAME_CONTAINER: on any item with the same top level container as the selection. If this value is not set the value is ON_ANY @@ -590,7 +591,7 @@ - The following is an example of a problem filter definition in the marker support. This example only shows java warnings on the selected element and it&apos;s children and filters out those with the String NON-NLS + The following is an example of a problem filter definition in the marker support. This example only shows java warnings on the selected element and its children and filters out those with the String NON-NLS &lt;p&gt; &lt;pre&gt; &lt;extension point=&quot;org.eclipse.ui.ide.markerSupport&quot;&gt; @@ -626,7 +627,7 @@ - Copyright (c) 2005, 2007 IBM Corporation and others.&lt;br&gt; + Copyright (c) 2005, 2011 IBM Corporation and others.&lt;br&gt; All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at &lt;a diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/ide/dialogs/ResourceEncodingFieldEditor.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/ide/dialogs/ResourceEncodingFieldEditor.java index 2261782..295f8ec 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/ide/dialogs/ResourceEncodingFieldEditor.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/ide/dialogs/ResourceEncodingFieldEditor.java @@ -12,12 +12,16 @@ import org.eclipse.core.resources.IContainer; import org.eclipse.core.resources.IFile; +import org.eclipse.core.resources.IProject; import org.eclipse.core.resources.IResource; import org.eclipse.core.resources.IWorkspaceRoot; +import org.eclipse.core.resources.ProjectScope; +import org.eclipse.core.resources.ResourcesPlugin; import org.eclipse.core.runtime.Assert; import org.eclipse.core.runtime.CoreException; import org.eclipse.core.runtime.IProgressMonitor; import org.eclipse.core.runtime.IStatus; +import org.eclipse.core.runtime.Platform; import org.eclipse.core.runtime.Status; import org.eclipse.core.runtime.content.IContentDescription; import org.eclipse.core.runtime.content.IContentType; @@ -28,6 +32,7 @@ import org.eclipse.osgi.util.NLS; import org.eclipse.swt.SWT; import org.eclipse.swt.layout.GridData; +import org.eclipse.swt.widgets.Button; import org.eclipse.swt.widgets.Composite; import org.eclipse.swt.widgets.Control; import org.eclipse.swt.widgets.Group; @@ -37,6 +42,8 @@ import org.eclipse.ui.ide.IDEEncoding; import org.eclipse.ui.internal.ide.IDEWorkbenchMessages; import org.eclipse.ui.internal.ide.IDEWorkbenchPlugin; +import org.osgi.service.prefs.BackingStoreException; +import org.osgi.service.prefs.Preferences; /** * The ResourceEncodingFieldEditor is a field editor for editing the encoding of @@ -56,6 +63,8 @@ private IResource resource; private Composite group; + + private Button separateDerivedEncodingsButton = null; /** * Creates a new encoding field editor for setting the encoding on the given @@ -141,6 +150,36 @@ } + private boolean getStoredSeparateDerivedEncodingsValue() { + // be careful looking up for our node so not to create any nodes as side effect + Preferences node = Platform.getPreferencesService().getRootNode() + .node(ProjectScope.SCOPE); + String projectName = ((IProject) resource).getName(); + try { + //TODO once bug 90500 is fixed, should be as simple as this: + // String path = projectName + IPath.SEPARATOR + ResourcesPlugin.PI_RESOURCES; + // return node.nodeExists(path) ? node.node(path).getBoolean(ResourcesPlugin.PREF_SEPARATE_DERIVED_ENCODINGS, false) : false; + // for now, take the long way + if (!node.nodeExists(projectName)) + return false; + node = node.node(projectName); + if (!node.nodeExists(ResourcesPlugin.PI_RESOURCES)) + return false; + node = node.node(ResourcesPlugin.PI_RESOURCES); + return node.getBoolean( + ResourcesPlugin.PREF_SEPARATE_DERIVED_ENCODINGS, false); + } catch (BackingStoreException e) { + // default value + return false; + } + } + + private boolean hasSameSeparateDerivedEncodings() { + return (separateDerivedEncodingsButton == null) + || ((separateDerivedEncodingsButton != null) &amp;&amp; (separateDerivedEncodingsButton + .getSelection() == getStoredSeparateDerivedEncodingsValue())); + } + /* * (non-Javadoc) * @@ -155,7 +194,9 @@ encoding = null; } // Don&apos;t update if the same thing is selected - if (hasSameEncoding(encoding)) { + final boolean hasSameEncoding = hasSameEncoding(encoding); + final boolean hasSameSeparateDerivedEncodings = hasSameSeparateDerivedEncodings(); + if (hasSameEncoding &amp;&amp; hasSameSeparateDerivedEncodings) { return; } @@ -201,11 +242,22 @@ */ protected IStatus run(IProgressMonitor monitor) { try { - if (resource instanceof IContainer) { - ((IContainer) resource).setDefaultCharset( - finalEncoding, monitor); - } else { - ((IFile) resource).setCharset(finalEncoding, monitor); + if (!hasSameEncoding) { + if (resource instanceof IContainer) { + ((IContainer) resource).setDefaultCharset( + finalEncoding, monitor); + } else { + ((IFile) resource).setCharset(finalEncoding, + monitor); + } + } + if (!hasSameSeparateDerivedEncodings) { + Preferences prefs = new ProjectScope((IProject) resource).getNode(ResourcesPlugin.PI_RESOURCES); + if (getStoredSeparateDerivedEncodingsValue()) + prefs.remove(ResourcesPlugin.PREF_SEPARATE_DERIVED_ENCODINGS); + else + prefs.putBoolean(ResourcesPlugin.PREF_SEPARATE_DERIVED_ENCODINGS, true); + prefs.flush(); } return Status.OK_STATUS; } catch (CoreException e) {// If there is an error return the @@ -215,6 +267,9 @@ IDEWorkbenchMessages.ResourceEncodingFieldEditor_ErrorStoringMessage, e.getStatus()); return e.getStatus(); + } catch (BackingStoreException e) { + IDEWorkbenchPlugin.log(IDEWorkbenchMessages.ResourceEncodingFieldEditor_ErrorStoringMessage, e); + return new Status(IStatus.ERROR, IDEWorkbenchPlugin.IDE_WORKBENCH, e.getMessage(), e); } } }; @@ -228,8 +283,8 @@ * * @see org.eclipse.jface.preference.FieldEditor#store() */ - public void store() {// Override the store method as we are not using a - // preference store + public void store() { + // Override the store method as we are not using a preference store doStore(); } @@ -238,8 +293,8 @@ * * @see org.eclipse.jface.preference.FieldEditor#load() */ - public void load() {// Override the load method as we are not using a - // preference store + public void load() { + // Override the load method as we are not using a preference store setPresentsDefaultValue(false); doLoad(); } @@ -250,9 +305,20 @@ * @see org.eclipse.jface.preference.FieldEditor#loadDefault() */ public void loadDefault() { + // Override the loadDefault method as we are not using a preference store setPresentsDefaultValue(true); doLoadDefault(); refreshValidState(); + } + + /* (non-Javadoc) + * @see org.eclipse.jface.preference.FieldEditor#doLoadDefault() + */ + protected void doLoadDefault() { + super.doLoadDefault(); + if (separateDerivedEncodingsButton != null) + separateDerivedEncodingsButton + .setSelection(getStoredSeparateDerivedEncodingsValue()); } /* @@ -369,6 +435,17 @@ label.setLayoutData(layoutData); } + + if (resource.getType() == IResource.PROJECT) { + separateDerivedEncodingsButton = new Button(group, SWT.CHECK); + GridData data = new GridData(); + data.horizontalSpan = 2; + separateDerivedEncodingsButton.setLayoutData(data); + separateDerivedEncodingsButton + .setText(IDEWorkbenchMessages.ResourceEncodingFieldEditor_SeparateDerivedEncodingsLabel); + separateDerivedEncodingsButton + .setSelection(getStoredSeparateDerivedEncodingsValue()); + } return group; } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/ide/undo/AbstractMarkersOperation.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/ide/undo/AbstractMarkersOperation.java index 6f74d45..18d862a 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/ide/undo/AbstractMarkersOperation.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/ide/undo/AbstractMarkersOperation.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2006, 2007 IBM Corporation and others. + * Copyright (c) 2006, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -25,6 +25,8 @@ import org.eclipse.core.runtime.jobs.MultiRule; import org.eclipse.ui.internal.ide.undo.MarkerDescription; import org.eclipse.ui.internal.ide.undo.UndoMessages; +import org.eclipse.ui.views.markers.internal.MarkerType; +import org.eclipse.ui.views.markers.internal.MarkerTypesModel; /** * An AbstractMarkersOperation represents an undoable operation that affects @@ -253,17 +255,28 @@ } } + if (types != null) { + MarkerType bookmarkType= MarkerTypesModel.getInstance().getType(IMarker.BOOKMARK); + MarkerType taskType= MarkerTypesModel.getInstance().getType(IMarker.TASK); + MarkerType problemType= MarkerTypesModel.getInstance().getType(IMarker.PROBLEM); + for (int i = 0; i &lt; types.length; i++) { // Marker type could be null if marker did not exist. // This shouldn&apos;t happen, but can. // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=158129 if (types[i] != null) { - if (types[i].equals(IMarker.BOOKMARK)) { + MarkerType type= MarkerTypesModel.getInstance().getType(types[i]); + if (type == null) { + // type is not known, use the workspace undo context + addContext(WorkspaceUndoUtil.getWorkspaceUndoContext()); + } else if (type.isSubtypeOf(bookmarkType)) { addContext(WorkspaceUndoUtil.getBookmarksUndoContext()); - } else if (types[i].equals(IMarker.TASK)) { + } else if (type.isSubtypeOf(taskType)) { addContext(WorkspaceUndoUtil.getTasksUndoContext()); - } else if (types[i] != null) { + } else if (type.isSubtypeOf(problemType)) { + addContext(WorkspaceUndoUtil.getProblemsUndoContext()); + } else { // type is not known, use the workspace undo context addContext(WorkspaceUndoUtil.getWorkspaceUndoContext()); } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/ide/undo/WorkspaceUndoUtil.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/ide/undo/WorkspaceUndoUtil.java index 04e83e8..b9c5fa2 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/ide/undo/WorkspaceUndoUtil.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/ide/undo/WorkspaceUndoUtil.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2006, 2010 IBM Corporation and others. + * Copyright (c) 2006, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -8,7 +8,6 @@ * Contributors: * IBM Corporation - initial API and implementation *******************************************************************************/ - package org.eclipse.ui.ide.undo; import java.net.URI; @@ -50,18 +49,19 @@ import org.eclipse.ui.internal.ide.undo.FileDescription; import org.eclipse.ui.internal.ide.undo.UndoMessages; + /** * WorkspaceUndoUtil defines common utility methods and constants used by * clients who create undoable workspace operations. * * @since 3.3 - * */ public class WorkspaceUndoUtil { private static ObjectUndoContext tasksUndoContext; - private static ObjectUndoContext bookmarksUndoContext; + private static ObjectUndoContext problemsUndoContext; + /** * Return the undo context that should be used for workspace-wide operations @@ -101,6 +101,22 @@ bookmarksUndoContext.addMatch(getWorkspaceUndoContext()); } return bookmarksUndoContext; + } + + /** + * Return the undo context that should be used for operations involving + * problems. + * + * @return the problems undo context + * @since 3.7 + */ + public static IUndoContext getProblemsUndoContext() { + if (problemsUndoContext == null) { + problemsUndoContext = new ObjectUndoContext(new Object(), + &quot;Problems Context&quot;); //$NON-NLS-1$ + problemsUndoContext.addMatch(getWorkspaceUndoContext()); + } + return problemsUndoContext; } /** @@ -516,7 +532,6 @@ * is &quot;VAR&quot; and points to &quot;C:\foo\bar\&quot;). * * @param locationURI - * @param pvm the IPathVariableManager to use for resolving variables * @param resource * @return an URI that was made relative to a variable */ diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/IDEWorkbenchMessages.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/IDEWorkbenchMessages.java index 51163fe..ac7ddb4 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/IDEWorkbenchMessages.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/IDEWorkbenchMessages.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2010 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -13,6 +13,7 @@ * Dina Sayed, dsayed@eg.ibm.com, IBM - bug 269844 * Serge Beauchamp (Freescale Semiconductor) - [252996] Resource filters * Markus Schorn (Wind River Systems) - bug 284447 + * James Blackburn (Broadcom Corp.) - bug 340978 *******************************************************************************/ package org.eclipse.ui.internal.ide; @@ -502,6 +503,8 @@ public static String IDEWorkspacePreference_savePriorToBuildingToolTip; public static String IDEWorkspacePreference_RefreshButtonText; public static String IDEWorkspacePreference_RefreshButtonToolTip; + public static String IDEWorkspacePreference_RefreshLightweightButtonText; + public static String IDEWorkspacePreference_RefreshLightweightButtonToolTip; public static String IDEWorkspacePreference_fileLineDelimiter; public static String IDEWorkspacePreference_defaultLineDelim; public static String IDEWorkspacePreference_defaultLineDelimProj; @@ -603,6 +606,7 @@ public static String ResourceInfo_locked; public static String ResourceInfo_archive; public static String ResourceInfo_derived; + public static String ResourceInfo_derivedHasDerivedAncestor; public static String ResourceInfo_type; public static String ResourceInfo_location; public static String ResourceInfo_resolvedLocation; @@ -638,6 +642,14 @@ public static String ResourceInfo_read; public static String ResourceInfo_write; public static String ResourceInfo_execute; + public static String ResourceInfo_recursiveChangesTitle; + public static String ResourceInfo_recursiveChangesSummary; + public static String ResourceInfo_recursiveChangesSet; + public static String ResourceInfo_recursiveChangesUnset; + public static String ResourceInfo_recursiveChangesQuestion; + public static String ResourceInfo_recursiveChangesJobName; + public static String ResourceInfo_recursiveChangesSubTaskName; + public static String ResourceInfo_recursiveChangesError; // --- Project References --- public static String ProjectReferencesPage_label; @@ -898,6 +910,7 @@ public static String ResourceEncodingFieldEditor_ErrorStoringMessage; public static String ResourceEncodingFieldEditor_EncodingConflictTitle; public static String ResourceEncodingFieldEditor_EncodingConflictMessage; + public static String ResourceEncodingFieldEditor_SeparateDerivedEncodingsLabel; public static String ChooseWorkspaceDialog_dialogName; public static String ChooseWorkspaceDialog_dialogTitle; diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/IDEWorkbenchPlugin.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/IDEWorkbenchPlugin.java index 62cfc17..1449266 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/IDEWorkbenchPlugin.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/IDEWorkbenchPlugin.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -363,7 +363,7 @@ return; if (workbench == null || workbench.isStarting()) { - Display.getDefault().timerExec(PROBLEMS_VIEW_CREATION_DELAY, this); + Display.getCurrent().timerExec(PROBLEMS_VIEW_CREATION_DELAY, this); return; } @@ -387,6 +387,10 @@ } } }; - Display.getDefault().timerExec(PROBLEMS_VIEW_CREATION_DELAY, r); + Display display = Display.getCurrent(); + if (display != null) + display.timerExec(PROBLEMS_VIEW_CREATION_DELAY, r); + else + Display.getDefault().asyncExec(r); } } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/LineDelimiterEditor.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/LineDelimiterEditor.java index 1fb45cd..ae2e996 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/LineDelimiterEditor.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/LineDelimiterEditor.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2007 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -17,9 +17,8 @@ import org.eclipse.core.resources.IProject; import org.eclipse.core.resources.ProjectScope; import org.eclipse.core.runtime.Platform; -import org.eclipse.core.runtime.preferences.IEclipsePreferences; -import org.eclipse.core.runtime.preferences.IScopeContext; import org.eclipse.core.runtime.preferences.InstanceScope; +import org.eclipse.osgi.util.NLS; import org.eclipse.swt.SWT; import org.eclipse.swt.events.SelectionAdapter; import org.eclipse.swt.events.SelectionEvent; @@ -32,9 +31,10 @@ import org.eclipse.swt.widgets.Control; import org.eclipse.swt.widgets.Group; import org.osgi.service.prefs.BackingStoreException; +import org.osgi.service.prefs.Preferences; /** - * A class to handle editing of the Line delimiter preferences in core. + * A class to handle editing of the line delimiter preferences in core. * * @since 3.1 */ @@ -46,17 +46,17 @@ private Combo choiceCombo; - /* + /** * The project whose preferences should be set. In some cases this class - * will be used to edit project preferences. + * will be used to edit project preferences. If project is null, then we + * are editing workspace preferences. */ private IProject project; private Group group; /** - * Creates a new encoding field editor with the given preference name, label - * and parent. + * Creates a new line delimiter editor for workspace. * * @param composite * the parent of the field editor&apos;s control @@ -66,14 +66,12 @@ } /** - * Creates a new encoding field editor with the given preference name, label - * and parent. + * Creates a new line delimiter editor for the given project. * * @param composite * the parent of the field editor&apos;s control * @param project * the project to set preferences on - * */ public LineDelimiterEditor(Composite composite, IProject project) { this.project = project; @@ -87,7 +85,7 @@ * @param parent * the parent control */ - protected void createControl(Composite parent) { + private void createControl(Composite parent) { Font font = parent.getFont(); group = new Group(parent, SWT.NONE); GridData data = new GridData(GridData.FILL_HORIZONTAL); @@ -109,12 +107,13 @@ }; defaultButton = new Button(group, SWT.RADIO); + String key = getKeyForValue(getDefaultValue()); if (project == null) { - defaultButton.setText(IDEWorkbenchMessages.IDEWorkspacePreference_defaultLineDelim); + defaultButton.setText(NLS.bind(IDEWorkbenchMessages.IDEWorkspacePreference_defaultLineDelim, key)); } else { - defaultButton.setText(IDEWorkbenchMessages.IDEWorkspacePreference_defaultLineDelimProj); + defaultButton.setText(NLS.bind(IDEWorkbenchMessages.IDEWorkspacePreference_defaultLineDelimProj, key)); } - + data = new GridData(); data.horizontalSpan = 2; defaultButton.setLayoutData(data); @@ -122,8 +121,7 @@ defaultButton.setFont(font); otherButton = new Button(group, SWT.RADIO); - otherButton - .setText(IDEWorkbenchMessages.IDEWorkspacePreference_otherLineDelim); + otherButton.setText(IDEWorkbenchMessages.IDEWorkspacePreference_otherLineDelim); otherButton.addSelectionListener(buttonListener); otherButton.setFont(font); @@ -131,7 +129,6 @@ data = new GridData(); choiceCombo.setFont(font); choiceCombo.setLayoutData(data); - populateChoiceCombo(getChoices()); } /** @@ -140,46 +137,75 @@ */ public void doLoad() { if (choiceCombo != null) { - populateChoiceCombo(getChoices()); - String resourcePreference = getStoredValue(); + choiceCombo.setItems(getChoices()); + String resourcePreference = getStoredValue(getPreferences(project)); + selectChoice(getKeyForValue(resourcePreference)); updateState(resourcePreference == null); } } /** - * Initializes this field editor with the preference value from the - * preference store. + * Initializes this field editor with the preference default value. */ public void loadDefault() { - if(choiceCombo != null) { + if (choiceCombo != null) { updateState(true); } } - /** - * Returns the value that is currently stored for the encoding. - * - * @return the currently stored encoding - */ - public String getStoredValue() { - IScopeContext[] scopeContext = new IScopeContext[] { getScopeContext() }; - IEclipsePreferences node = scopeContext[0].getNode(Platform.PI_RUNTIME); - return node.get(Platform.PREF_LINE_SEPARATOR, null); + private String getDefaultValue() { + String value = null; + if (project != null) { + value = getStoredValue(getPreferences(null)); + } + return value != null ? value : System.getProperty(Platform.PREF_LINE_SEPARATOR); + } + + private String getKeyForValue(String value) { + Map knownValues = Platform.knownPlatformLineSeparators(); + Set keys = knownValues.keySet(); + for (Iterator iter = keys.iterator(); iter.hasNext();) { + String key = (String) iter.next(); + if (knownValues.get(key).equals(value)) { + return key; + } + } + return null; } /** - * Answer the IScopeContext for the receiver, this will be a - * project scope if the receiver is editing project preferences, otherwise - * instance scope. + * Returns the value that is currently stored for the line delimiter. * - * @return the scope context + * @param node + * preferences node from which the value should be read + * @return the currently stored line delimiter */ - private IScopeContext getScopeContext() { + private String getStoredValue(Preferences node) { + try { + // be careful looking up for our node so not to create any nodes as side effect + if (node.nodeExists(Platform.PI_RUNTIME)) + return node.node(Platform.PI_RUNTIME).get(Platform.PREF_LINE_SEPARATOR, null); + } catch (BackingStoreException e) { + // ignore + } + return null; + } + + /** + * Answer the Preferences for the receiver, this will be a + * project preferences if the receiver is editing project preferences, + * otherwise instance preferences. + * + * @param project + * the project for which the line editor will be modified + * @return the preferences + */ + private Preferences getPreferences(IProject project) { if (project != null) { - return new ProjectScope(project); + return Platform.getPreferencesService().getRootNode().node(ProjectScope.SCOPE).node(project.getName()); } - return new InstanceScope(); + return Platform.getPreferencesService().getRootNode().node(InstanceScope.SCOPE); } /** @@ -187,24 +213,11 @@ * * @return the default setting for the object being shown */ - protected String[] getChoices() { + private String[] getChoices() { Set keys = Platform.knownPlatformLineSeparators().keySet(); String[] keyArray = new String[keys.size()]; keys.toArray(keyArray); return keyArray; - } - - /** - * Populates the list of choices combo. - */ - private void populateChoiceCombo(String[] items) { - choiceCombo.setItems(items); - - if (getStoredValue() == null) { - choiceCombo.setText(&quot;&quot;); //$NON-NLS-1$ - } else { - selectChoice(); - } } private void updateState(boolean useDefault) { @@ -212,11 +225,11 @@ defaultButton.setSelection(true); otherButton.setSelection(false); choiceCombo.setEnabled(false); + selectChoice(getKeyForValue(getDefaultValue())); } else { defaultButton.setSelection(false); otherButton.setSelection(true); choiceCombo.setEnabled(true); - selectChoice(); } } @@ -227,20 +240,7 @@ * the key will be modified to represent that. E.g. a key might be Mac OS * 10/Linux if the same value is required for two platforms. */ - private void selectChoice() { - String selection = null; - Map knownValues = Platform.knownPlatformLineSeparators(); - Set keys = knownValues.keySet(); - String current = getStoredValue(); - if (current != null) { - for (Iterator iter = keys.iterator(); iter.hasNext();) { - String element = (String) iter.next(); - if (knownValues.get(element).equals(current)) { - selection = element; - break; - } - } - } + private void selectChoice(String selection) { String[] items = choiceCombo.getItems(); for (int i = 0; i &lt; items.length; i++) { String item = items[i]; @@ -264,8 +264,7 @@ val = (String) lineSeparators.get(choiceCombo.getText()); } - IEclipsePreferences node = getScopeContext().getNode( - Platform.PI_RUNTIME); + Preferences node = getPreferences(project).node(Platform.PI_RUNTIME); if (val == null) { node.remove(Platform.PREF_LINE_SEPARATOR); } else { @@ -276,21 +275,19 @@ } catch (BackingStoreException e) { IDEWorkbenchPlugin.log(e.getMessage(), e); } - } - /** - * Set whether or not the controls in the field editor - * are enabled. - * @param enabled The enabled state. - */ - public void setEnabled(boolean enabled) { - group.setEnabled(enabled); - Control [] children = group.getChildren(); - for (int i = 0; i &lt; children.length; i++) { + /** + * Set whether or not the controls in the field editor are enabled. + * + * @param enabled + * The enabled state. + */ + public void setEnabled(boolean enabled) { + group.setEnabled(enabled); + Control[] children = group.getChildren(); + for (int i = 0; i &lt; children.length; i++) { children[i].setEnabled(enabled); - } - } - + } } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/ResourceWorkingSetUpdater.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/ResourceWorkingSetUpdater.java index 2d8261d..b2c2c45 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/ResourceWorkingSetUpdater.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/ResourceWorkingSetUpdater.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2006 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -206,7 +206,10 @@ for (Iterator iter = elements.iterator(); iter.hasNext();) { IAdaptable element = (IAdaptable) iter.next(); boolean remove = false; - if (element instanceof IResource) { + if (element instanceof IProject) { + IProject project = (IProject) element; + remove = !project.exists(); + } else if (element instanceof IResource) { IResource resource = (IResource) element; IProject project = resource.getProject(); remove = (project != null ? project.isOpen() : true) diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/WorkbenchActionBuilder.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/WorkbenchActionBuilder.java index 9dc1414..ba7072a 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/WorkbenchActionBuilder.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/WorkbenchActionBuilder.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -105,10 +105,6 @@ private IWorkbenchAction saveAsAction; private IWorkbenchAction hideShowEditorAction; - - private IWorkbenchAction savePerspectiveAction; - - private IWorkbenchAction resetPerspectiveAction; private IWorkbenchAction editActionSetAction; @@ -677,8 +673,8 @@ } menu.add(new Separator()); menu.add(editActionSetAction); - menu.add(savePerspectiveAction); - menu.add(resetPerspectiveAction); + menu.add(getSavePerspectiveItem()); + menu.add(getResetPerspectiveItem()); menu.add(closePerspAction); menu.add(closeAllPerspsAction); } @@ -835,8 +831,6 @@ openPreferencesAction = null; saveAsAction = null; hideShowEditorAction = null; - savePerspectiveAction = null; - resetPerspectiveAction = null; editActionSetAction = null; closePerspAction = null; lockToolBarAction = null; @@ -1077,17 +1071,11 @@ hideShowEditorAction = ActionFactory.SHOW_EDITOR.create(window); register(hideShowEditorAction); - savePerspectiveAction = ActionFactory.SAVE_PERSPECTIVE - .create(window); - register(savePerspectiveAction); editActionSetAction = ActionFactory.EDIT_ACTION_SETS .create(window); register(editActionSetAction); lockToolBarAction = ActionFactory.LOCK_TOOL_BAR.create(window); register(lockToolBarAction); - resetPerspectiveAction = ActionFactory.RESET_PERSPECTIVE - .create(window); - register(resetPerspectiveAction); closePerspAction = ActionFactory.CLOSE_PERSPECTIVE.create(window); register(closePerspAction); closeAllPerspsAction = ActionFactory.CLOSE_ALL_PERSPECTIVES @@ -1409,6 +1397,28 @@ WorkbenchMessages.Workbench_copyToolTip, null); } + private IContributionItem getResetPerspectiveItem() { + return getItem( + ActionFactory.RESET_PERSPECTIVE.getId(), + ActionFactory.RESET_PERSPECTIVE.getCommandId(), + null, + null, + WorkbenchMessages.ResetPerspective_text, + WorkbenchMessages.ResetPerspective_toolTip, + IWorkbenchHelpContextIds.RESET_PERSPECTIVE_ACTION); + } + + private IContributionItem getSavePerspectiveItem() { + return getItem( + ActionFactory.SAVE_PERSPECTIVE.getId(), + ActionFactory.SAVE_PERSPECTIVE.getCommandId(), + null, + null, + WorkbenchMessages.SavePerspective_text, + WorkbenchMessages.SavePerspective_toolTip, + IWorkbenchHelpContextIds.SAVE_PERSPECTIVE_ACTION); + } + private IContributionItem getPasteItem() { return getItem( ActionFactory.PASTE.getId(), diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/actions/OpenWorkspaceAction.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/actions/OpenWorkspaceAction.java index 413ed0f..cc158fc 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/actions/OpenWorkspaceAction.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/actions/OpenWorkspaceAction.java @@ -10,18 +10,27 @@ *******************************************************************************/ package org.eclipse.ui.internal.ide.actions; +import java.util.ArrayList; +import java.util.Iterator; + import org.eclipse.core.runtime.Platform; import org.eclipse.jface.action.Action; import org.eclipse.jface.action.ActionContributionItem; import org.eclipse.jface.action.IAction; import org.eclipse.jface.action.IContributionItem; import org.eclipse.jface.action.IMenuCreator; +import org.eclipse.jface.action.IMenuListener; +import org.eclipse.jface.action.IMenuManager; import org.eclipse.jface.action.MenuManager; import org.eclipse.jface.action.Separator; import org.eclipse.jface.dialogs.MessageDialog; import org.eclipse.osgi.util.NLS; +import org.eclipse.swt.SWT; import org.eclipse.swt.widgets.Control; +import org.eclipse.swt.widgets.Event; +import org.eclipse.swt.widgets.Listener; import org.eclipse.swt.widgets.Menu; +import org.eclipse.swt.widgets.MenuItem; import org.eclipse.ui.IWorkbenchWindow; import org.eclipse.ui.actions.ActionFactory; import org.eclipse.ui.internal.ide.ChooseWorkspaceData; @@ -112,6 +121,111 @@ private static final String NEW_LINE = &quot;\n&quot;; //$NON-NLS-1$ private IWorkbenchWindow window; + + + private IContributionItem[] getContributionItems() { + ArrayList list = new ArrayList(); + final ChooseWorkspaceData data = new ChooseWorkspaceData(Platform + .getInstanceLocation().getURL()); + data.readPersistedData(); + String current = data.getInitialDefault(); + String[] workspaces = data.getRecentWorkspaces(); + for (int i = 0; i &lt; workspaces.length; i++) { + if (workspaces[i] != null &amp;&amp; !workspaces[i].equals(current)) { + list.add(new ActionContributionItem(new WorkspaceMRUAction( + workspaces[i], data))); + } + } + if (list.size()&gt;0) { + list.add(new Separator()); + } + return (IContributionItem[]) list + .toArray(new IContributionItem[list.size()]); + } + + class MenuCreator implements IMenuCreator { + ArrayList menus = new ArrayList(); + + private MenuManager dropDownMenuMgr; + + /** + * Creates the menu manager for the drop-down. + */ + private void createDropDownMenuMgr() { + if (dropDownMenuMgr == null) { + dropDownMenuMgr = new MenuManager(); + dropDownMenuMgr.setRemoveAllWhenShown(true); + } + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.jface.action.IMenuCreator#getMenu(org.eclipse.swt.widgets.Control) + */ + public Menu getMenu(Control parent) { + createDropDownMenuMgr(); + dropDownMenuMgr.addMenuListener(new IMenuListener() { + public void menuAboutToShow(IMenuManager manager) { + IContributionItem[] items = getContributionItems(); + for (int i = 0; i &lt; items.length; i++) { + manager.add(items[i]); + } + manager.add(new OpenDialogAction()); + } + }); + return dropDownMenuMgr.createContextMenu(parent); + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.jface.action.IMenuCreator#getMenu(org.eclipse.swt.widgets.Menu) + */ + public Menu getMenu(Menu parent) { + createDropDownMenuMgr(); + final Menu menu = new Menu(parent); + menu.addListener(SWT.Show, new Listener() { + public void handleEvent(Event event) { + if (menu.isDisposed()) { + return; + } + MenuItem[] items = menu.getItems(); + for (int i = 0; i &lt; items.length; i++) { + items[i].dispose(); + } + IContributionItem[] contributions = getContributionItems(); + for (int i = 0; i &lt; contributions.length; i++) { + contributions[i].fill(menu, -1); + } + new ActionContributionItem(new OpenDialogAction()).fill( + menu, -1); + } + }); + return menu; + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.jface.action.IMenuCreator#dispose() + */ + public void dispose() { + if (dropDownMenuMgr != null) { + dropDownMenuMgr.dispose(); + dropDownMenuMgr = null; + } + if (menus.size()&gt;0) { + for (Iterator i = menus.iterator(); i.hasNext();) { + Menu m = (Menu) i.next(); + if (!m.isDisposed()) { + m.dispose(); + } + } + menus.clear(); + } + } + } /** * Set definition for this action and text so that it will be used for File @@ -133,76 +247,7 @@ this.window = window; setToolTipText(IDEWorkbenchMessages.OpenWorkspaceAction_toolTip); setActionDefinitionId(&quot;org.eclipse.ui.file.openWorkspace&quot;); //$NON-NLS-1$ - setMenuCreator(new IMenuCreator() { - private MenuManager dropDownMenuMgr; - - /** - * Creates the menu manager for the drop-down. - */ - private void createDropDownMenuMgr() { - if (dropDownMenuMgr == null) { - dropDownMenuMgr = new MenuManager(); - final ChooseWorkspaceData data = new ChooseWorkspaceData( - Platform.getInstanceLocation().getURL()); - data.readPersistedData(); - String current = data.getInitialDefault(); - String[] workspaces = data.getRecentWorkspaces(); - for (int i = 0; i &lt; workspaces.length; i++) { - if (workspaces[i] != null - &amp;&amp; !workspaces[i].equals(current)) { - dropDownMenuMgr.add(new WorkspaceMRUAction( - workspaces[i], data)); - } - } - if (!dropDownMenuMgr.isEmpty()) - dropDownMenuMgr.add(new Separator()); - dropDownMenuMgr.add(new OpenDialogAction()); - } - } - - /* - * (non-Javadoc) - * - * @see org.eclipse.jface.action.IMenuCreator#getMenu(org.eclipse.swt.widgets.Control) - */ - public Menu getMenu(Control parent) { - createDropDownMenuMgr(); - return dropDownMenuMgr.createContextMenu(parent); - } - - /* - * (non-Javadoc) - * - * @see org.eclipse.jface.action.IMenuCreator#getMenu(org.eclipse.swt.widgets.Menu) - */ - public Menu getMenu(Menu parent) { - createDropDownMenuMgr(); - Menu menu = new Menu(parent); - IContributionItem[] items = dropDownMenuMgr.getItems(); - for (int i = 0; i &lt; items.length; i++) { - IContributionItem item = items[i]; - IContributionItem newItem = item; - if (item instanceof ActionContributionItem) { - newItem = new ActionContributionItem( - ((ActionContributionItem) item).getAction()); - } - newItem.fill(menu, -1); - } - return menu; - } - - /* - * (non-Javadoc) - * - * @see org.eclipse.jface.action.IMenuCreator#dispose() - */ - public void dispose() { - if (dropDownMenuMgr != null) { - dropDownMenuMgr.dispose(); - dropDownMenuMgr = null; - } - } - }); + setMenuCreator(new MenuCreator()); } /* diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/FileStatesPage.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/FileStatesPage.java index 7b898d9..c581732 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/FileStatesPage.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/FileStatesPage.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -66,6 +66,8 @@ private long STATE_SIZE_MAXIMUM = 100; + private static final int INDENT = 20; + /** * This method takes the string for the title of a text field and the value for the * text of the field. @@ -99,6 +101,7 @@ button.addListener(SWT.Selection, this); GridData data = new GridData(); data.horizontalSpan = 2; + data.horizontalIndent= -INDENT; button.setLayoutData(data); button.setText(label); button.setSelection(selected); @@ -122,7 +125,7 @@ while (iter.hasNext()) ((Control)iter.next()).setEnabled(newState); - if (validateLongTextEntry(longevityText) == FAILED_VALUE) { + if (validateLongTextEntry(longevityText, DAY_LENGTH) == FAILED_VALUE) { setValid(false); return; } @@ -164,20 +167,16 @@ megabytes = 1; } - this.applyPolicyButton = addCheckBox(IDEWorkbenchMessages.FileHistory_applyPolicy, description - .isApplyFileStatePolicy(), parent); - // button group Composite composite= new Composite(parent, SWT.NONE); GridLayout layout= new GridLayout(); layout.numColumns= 2; - layout.marginLeft= 10; + layout.marginLeft= INDENT; layout.marginWidth= 0; composite.setLayout(layout); - GridData gd= new GridData(); - gd.horizontalIndent= 200; - composite.setLayoutData(gd); + this.applyPolicyButton = addCheckBox(IDEWorkbenchMessages.FileHistory_applyPolicy, description + .isApplyFileStatePolicy(), composite); this.longevityText= addDependentLabelAndText(IDEWorkbenchMessages.FileHistory_longevity, String .valueOf(days), composite); @@ -237,7 +236,7 @@ /** * Performs special processing when this page&apos;s Defaults button has been pressed. - * Reset the entries to thier default values. + * Reset the entries to their default values. */ protected void performDefaults() { super.performDefaults(); @@ -264,7 +263,7 @@ */ public boolean performOk() { - long longevityValue = validateLongTextEntry(longevityText); + long longevityValue = validateLongTextEntry(longevityText, DAY_LENGTH); int maxFileStates = validateMaxFileStates(); long maxStateSize = validateMaxFileStateSize(); boolean applyPolicy = applyPolicyButton.getSelection(); @@ -322,14 +321,18 @@ /** * Validate a text entry for a long field. Return the result if there are * no errors, otherwise return -1 and set the entry field error. + * @param scale the scale (factor by which the value is multiplied when it is persisted) * @return long */ - private long validateLongTextEntry(Text text) { + private long validateLongTextEntry(Text text, long scale) { long value; try { - value = Long.parseLong(text.getText()); + String string = text.getText(); + value = Long.parseLong(string); + if (value * scale / scale != value) + throw new NumberFormatException(string); } catch (NumberFormatException exception) { setErrorMessage(MessageFormat.format(IDEWorkbenchMessages.FileHistory_invalid, @@ -375,7 +378,7 @@ * @return long */ private long validateMaxFileStateSize() { - long maxFileStateSize = validateLongTextEntry(this.maxStateSizeText); + long maxFileStateSize = validateLongTextEntry(this.maxStateSizeText, MEGABYTES); if (maxFileStateSize == FAILED_VALUE) { return maxFileStateSize; } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/IDEWorkspacePreferencePage.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/IDEWorkspacePreferencePage.java index 5f477ad..45f370d 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/IDEWorkspacePreferencePage.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/IDEWorkspacePreferencePage.java @@ -1,5 +1,5 @@ /**************************************************************************** - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -9,6 +9,7 @@ * IBM Corporation - initial API and implementation * Dina Sayed, dsayed@eg.ibm.com, IBM - bug 269844 * Markus Schorn (Wind River Systems) - bug 284447 + * James Blackburn (Broadcom Corp.) - bug 340978 *******************************************************************************/ package org.eclipse.ui.internal.ide.dialogs; @@ -66,11 +67,13 @@ private FieldEditor workspaceName; - private Button autoRefreshButton; - - private Button closeUnrelatedProjectButton; - - private ResourceEncodingFieldEditor encodingEditor; + private Button autoRefreshButton; + + private Button lightweightRefreshButton; + + private Button closeUnrelatedProjectButton; + + private ResourceEncodingFieldEditor encodingEditor; private LineDelimiterEditor lineSeparatorEditor; @@ -78,7 +81,6 @@ private boolean clearUserSettings = false; private RadioGroupFieldEditor openReferencesEditor; - /* * (non-Javadoc) @@ -259,10 +261,19 @@ this.autoRefreshButton.setText(IDEWorkbenchMessages.IDEWorkspacePreference_RefreshButtonText); this.autoRefreshButton.setToolTipText(IDEWorkbenchMessages.IDEWorkspacePreference_RefreshButtonToolTip); - boolean autoRefresh = ResourcesPlugin.getPlugin() + this.lightweightRefreshButton = new Button(parent, SWT.CHECK); + this.lightweightRefreshButton.setText(IDEWorkbenchMessages.IDEWorkspacePreference_RefreshLightweightButtonText); + this.lightweightRefreshButton.setToolTipText(IDEWorkbenchMessages.IDEWorkspacePreference_RefreshLightweightButtonToolTip); + + boolean lightweightRefresh = ResourcesPlugin.getPlugin() .getPluginPreferences().getBoolean( - ResourcesPlugin.PREF_AUTO_REFRESH); + ResourcesPlugin.PREF_LIGHTWEIGHT_AUTO_REFRESH); + boolean autoRefresh = ResourcesPlugin.getPlugin() + .getPluginPreferences().getBoolean( + ResourcesPlugin.PREF_AUTO_REFRESH); + this.autoRefreshButton.setSelection(autoRefresh); + this.lightweightRefreshButton.setSelection(lightweightRefresh); } /** @@ -380,12 +391,15 @@ boolean closeUnrelatedProj = store.getDefaultBoolean(IDEInternalPreferences.CLOSE_UNRELATED_PROJECTS); closeUnrelatedProjectButton.setSelection(closeUnrelatedProj); - - boolean autoRefresh = ResourcesPlugin.getPlugin() + boolean lightweightRefresh = ResourcesPlugin.getPlugin() .getPluginPreferences().getDefaultBoolean( - ResourcesPlugin.PREF_AUTO_REFRESH); + ResourcesPlugin.PREF_LIGHTWEIGHT_AUTO_REFRESH); + boolean autoRefresh = ResourcesPlugin.getPlugin() + .getPluginPreferences().getDefaultBoolean( + ResourcesPlugin.PREF_AUTO_REFRESH); autoRefreshButton.setSelection(autoRefresh); - + lightweightRefreshButton.setSelection(lightweightRefresh); + clearUserSettings = true; List encodings = WorkbenchEncoding.getDefinedEncodings(); @@ -451,7 +465,9 @@ boolean autoRefresh = autoRefreshButton.getSelection(); preferences.setValue(ResourcesPlugin.PREF_AUTO_REFRESH, autoRefresh); - + boolean lightweightRefresh = lightweightRefreshButton.getSelection(); + preferences.setValue(ResourcesPlugin.PREF_LIGHTWEIGHT_AUTO_REFRESH, lightweightRefresh); + boolean closeUnrelatedProj = closeUnrelatedProjectButton.getSelection(); getIDEPreferenceStore().setValue(IDEInternalPreferences.CLOSE_UNRELATED_PROJECTS, closeUnrelatedProj); diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/OpenResourceDialog.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/OpenResourceDialog.java index 97c30eb..a763554 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/OpenResourceDialog.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/OpenResourceDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -12,11 +12,15 @@ import java.util.Collections; +import org.eclipse.core.resources.IContainer; import org.eclipse.core.runtime.IAdaptable; import org.eclipse.core.runtime.IStatus; - -import org.eclipse.core.resources.IContainer; - +import org.eclipse.jface.action.IMenuManager; +import org.eclipse.jface.action.MenuManager; +import org.eclipse.jface.action.Separator; +import org.eclipse.jface.dialogs.IDialogConstants; +import org.eclipse.jface.util.Util; +import org.eclipse.jface.viewers.IStructuredSelection; import org.eclipse.swt.SWT; import org.eclipse.swt.events.MouseAdapter; import org.eclipse.swt.events.MouseEvent; @@ -30,14 +34,6 @@ import org.eclipse.swt.widgets.Control; import org.eclipse.swt.widgets.Menu; import org.eclipse.swt.widgets.Shell; - -import org.eclipse.jface.action.IMenuManager; -import org.eclipse.jface.action.MenuManager; -import org.eclipse.jface.action.Separator; -import org.eclipse.jface.dialogs.IDialogConstants; -import org.eclipse.jface.util.Util; -import org.eclipse.jface.viewers.IStructuredSelection; - import org.eclipse.ui.IEditorDescriptor; import org.eclipse.ui.IWorkbenchPage; import org.eclipse.ui.IWorkbenchWindow; @@ -48,7 +44,6 @@ import org.eclipse.ui.internal.IWorkbenchGraphicConstants; import org.eclipse.ui.internal.WorkbenchImages; import org.eclipse.ui.internal.ide.IDEWorkbenchMessages; -import org.eclipse.ui.internal.ide.IIDEHelpContextIds; /** @@ -75,8 +70,6 @@ int typesMask) { super(parentShell, true, container, typesMask); setTitle(IDEWorkbenchMessages.OpenResourceDialog_title); - PlatformUI.getWorkbench().getHelpSystem().setHelp(parentShell, - IIDEHelpContextIds.OPEN_RESOURCE_DIALOG); } /* (non-Javadoc) diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/ProjectContentsLocationArea.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/ProjectContentsLocationArea.java index 1c2cef5..35cd387 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/ProjectContentsLocationArea.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/ProjectContentsLocationArea.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2009 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -381,7 +381,7 @@ /** * Return the path on the location field. * - * @return String + * @return the path or the field&apos;s text if the path is invalid */ private String getPathFromLocationField() { URI fieldURI; @@ -390,7 +390,8 @@ } catch (URISyntaxException e) { return locationPathField.getText(); } - return fieldURI.getPath(); + String path= fieldURI.getPath(); + return path != null ? path : locationPathField.getText(); } /** diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/ResourceInfoPage.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/ResourceInfoPage.java index 5931721..18f3839 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/ResourceInfoPage.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/dialogs/ResourceInfoPage.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -13,6 +13,11 @@ package org.eclipse.ui.internal.ide.dialogs; import java.net.URI; +import java.util.ArrayList; +import java.util.HashSet; +import java.util.Iterator; +import java.util.List; +import java.util.Set; import org.eclipse.core.filesystem.EFS; import org.eclipse.core.filesystem.IFileInfo; @@ -22,17 +27,25 @@ import org.eclipse.core.resources.IContainer; import org.eclipse.core.resources.IFile; import org.eclipse.core.resources.IFolder; -import org.eclipse.core.resources.IProject; import org.eclipse.core.resources.IResource; +import org.eclipse.core.resources.IResourceProxy; +import org.eclipse.core.resources.IResourceProxyVisitor; import org.eclipse.core.resources.ResourceAttributes; import org.eclipse.core.runtime.CoreException; import org.eclipse.core.runtime.IPath; +import org.eclipse.core.runtime.IProgressMonitor; +import org.eclipse.core.runtime.IStatus; import org.eclipse.core.runtime.NullProgressMonitor; +import org.eclipse.core.runtime.OperationCanceledException; import org.eclipse.core.runtime.Path; import org.eclipse.core.runtime.Platform; +import org.eclipse.core.runtime.Status; import org.eclipse.core.runtime.content.IContentDescription; +import org.eclipse.core.runtime.jobs.Job; import org.eclipse.jface.dialogs.Dialog; import org.eclipse.jface.dialogs.ErrorDialog; +import org.eclipse.jface.dialogs.IDialogConstants; +import org.eclipse.jface.dialogs.MessageDialog; import org.eclipse.jface.preference.FieldEditor; import org.eclipse.jface.util.IPropertyChangeListener; import org.eclipse.jface.util.PropertyChangeEvent; @@ -58,6 +71,7 @@ import org.eclipse.ui.dialogs.PropertyPage; import org.eclipse.ui.ide.dialogs.ResourceEncodingFieldEditor; import org.eclipse.ui.internal.ide.IDEWorkbenchMessages; +import org.eclipse.ui.internal.ide.IDEWorkbenchPlugin; import org.eclipse.ui.internal.ide.IIDEHelpContextIds; import org.eclipse.ui.internal.ide.LineDelimiterEditor; @@ -66,6 +80,11 @@ * resource. */ public class ResourceInfoPage extends PropertyPage { + private interface IResourceChange { + public String getMessage(); + + public void performChange(IResource resource) throws CoreException; + } private Button editableBox; @@ -104,6 +123,8 @@ private static String ARCHIVE = IDEWorkbenchMessages.ResourceInfo_archive; private static String DERIVED = IDEWorkbenchMessages.ResourceInfo_derived; + + private static String DERIVED_HAS_DERIVED_ANCESTOR = IDEWorkbenchMessages.ResourceInfo_derivedHasDerivedAncestor; private static String TYPE_TITLE = IDEWorkbenchMessages.ResourceInfo_type; @@ -416,36 +437,31 @@ setPermissionsSelection(previousPermissionsValue); } } - encodingEditor = new ResourceEncodingFieldEditor( - getFieldEditorLabel(resource), composite, resource); - encodingEditor.setPage(this); - encodingEditor.load(); + //We can&apos;t save and load the preferences for closed project + if (resource.getProject().isOpen()) { + encodingEditor = new ResourceEncodingFieldEditor( + getFieldEditorLabel(resource), composite, resource); + encodingEditor.setPage(this); + encodingEditor.load(); - encodingEditor.setPropertyChangeListener(new IPropertyChangeListener() { - /* - * (non-Javadoc) - * - * @see org.eclipse.jface.util.IPropertyChangeListener#propertyChange(org.eclipse.jface.util.PropertyChangeEvent) - */ - public void propertyChange(PropertyChangeEvent event) { - if (event.getProperty().equals(FieldEditor.IS_VALID)) { - setValid(encodingEditor.isValid()); + encodingEditor.setPropertyChangeListener(new IPropertyChangeListener() { + /* + * (non-Javadoc) + * + * @see org.eclipse.jface.util.IPropertyChangeListener#propertyChange(org.eclipse.jface.util.PropertyChangeEvent) + */ + public void propertyChange(PropertyChangeEvent event) { + if (event.getProperty().equals(FieldEditor.IS_VALID)) { + setValid(encodingEditor.isValid()); + } } + }); + if (resource.getType() == IResource.PROJECT) { + lineDelimiterEditor = new LineDelimiterEditor(composite, resource + .getProject()); + lineDelimiterEditor.doLoad(); } - }); - - - if (resource.getType() == IResource.PROJECT) { - lineDelimiterEditor = new LineDelimiterEditor(composite, resource - .getProject()); - lineDelimiterEditor.doLoad(); - } - - //We can&apos;t save the preferences for close - if (resource.getType() == IResource.PROJECT &amp;&amp; !((IProject)resource).isOpen()){ - encodingEditor.setEnabled(false, composite); - lineDelimiterEditor.setEnabled(false); } Dialog.applyDialogFont(composite); @@ -639,12 +655,17 @@ * * @param composite * the parent of the button + * @param resource + * the resource the information is being taken from */ - private void createDerivedButton(Composite composite) { + private void createDerivedButton(Composite composite, IResource resource) { this.derivedBox = new Button(composite, SWT.CHECK | SWT.RIGHT); this.derivedBox.setAlignment(SWT.LEFT); - this.derivedBox.setText(DERIVED); + if (resource.getParent().isDerived(IResource.CHECK_ANCESTORS)) + this.derivedBox.setText(DERIVED_HAS_DERIVED_ANCESTOR); + else + this.derivedBox.setText(DERIVED); this.derivedBox.setSelection(this.previousDerivedValue); } @@ -699,7 +720,7 @@ if ((fsAttributes &amp; EFS.ATTRIBUTE_IMMUTABLE) != 0) createImmutableButton(composite); } - createDerivedButton(composite); + createDerivedButton(composite, resource); // create warning for executable flag if (executableBox != null &amp;&amp; resource.getType() == IResource.FOLDER) createExecutableWarning(composite, font); @@ -904,12 +925,185 @@ setPermissionsSelection(defaultPermissionValues); } - encodingEditor.loadDefault(); + if (encodingEditor != null) { + encodingEditor.loadDefault(); + } if (lineDelimiterEditor != null) { lineDelimiterEditor.loadDefault(); } + } + + private String getSimpleChangeName(boolean isSet, String name) { + String message = &quot;\t&quot;; //$NON-NLS-1$ + message += isSet ? IDEWorkbenchMessages.ResourceInfo_recursiveChangesSet + : IDEWorkbenchMessages.ResourceInfo_recursiveChangesUnset; + message += &quot; &quot; + name + &quot;\n&quot;; //$NON-NLS-1$ //$NON-NLS-2$ + return message; + } + + private IResourceChange getAttributesChange(final boolean changedAttrs[], + final boolean finalAttrs[]) { + return new IResourceChange() { + public String getMessage() { + String message = &quot;&quot;; //$NON-NLS-1$ + if (changedAttrs[0]) + message += getSimpleChangeName(finalAttrs[0], + IDEWorkbenchMessages.ResourceInfo_readOnly); + if (changedAttrs[1]) + message += getSimpleChangeName(finalAttrs[1], + IDEWorkbenchMessages.ResourceInfo_executable); + if (changedAttrs[2]) + message += getSimpleChangeName(finalAttrs[2], + IDEWorkbenchMessages.ResourceInfo_archive); + return message; + } + + public void performChange(IResource resource) throws CoreException { + ResourceAttributes attrs = resource.getResourceAttributes(); + if (attrs != null) { + if (changedAttrs[0]) + attrs.setReadOnly(finalAttrs[0]); + if (changedAttrs[1]) + attrs.setExecutable(finalAttrs[1]); + if (changedAttrs[2]) + attrs.setArchive(finalAttrs[2]); + resource.setResourceAttributes(attrs); + } + } + }; + } + + private IResourceChange getPermissionsChange(final int changedPermissions, + final int finalPermissions) { + return new IResourceChange() { + public String getMessage() { + // iterated with [j][i] + int permissionMasks[][] = new int[][] { + { EFS.ATTRIBUTE_OWNER_READ, EFS.ATTRIBUTE_OWNER_WRITE, + EFS.ATTRIBUTE_OWNER_EXECUTE }, + { EFS.ATTRIBUTE_GROUP_READ, EFS.ATTRIBUTE_GROUP_WRITE, + EFS.ATTRIBUTE_GROUP_EXECUTE }, + { EFS.ATTRIBUTE_OTHER_READ, EFS.ATTRIBUTE_OTHER_WRITE, + EFS.ATTRIBUTE_OTHER_EXECUTE } }; + // iterated with [j] + String groupNames[] = new String[] { + IDEWorkbenchMessages.ResourceInfo_owner, + IDEWorkbenchMessages.ResourceInfo_group, + IDEWorkbenchMessages.ResourceInfo_other }; + // iterated with [i] + String permissionNames[] = new String[] { + IDEWorkbenchMessages.ResourceInfo_read, + IDEWorkbenchMessages.ResourceInfo_write, + IDEWorkbenchMessages.ResourceInfo_execute }; + + String message = &quot;&quot;; //$NON-NLS-1$ + if ((changedPermissions &amp; EFS.ATTRIBUTE_IMMUTABLE) != 0) + message += getSimpleChangeName( + (finalPermissions &amp; EFS.ATTRIBUTE_IMMUTABLE) != 0, + IDEWorkbenchMessages.ResourceInfo_locked); + + for (int j = 0; j &lt; 3; j++) { + for (int i = 0; i &lt; 3; i++) { + if ((changedPermissions &amp; permissionMasks[j][i]) != 0) + message += getSimpleChangeName( + (finalPermissions &amp; permissionMasks[j][i]) != 0, + groupNames[j] + &quot; &quot; + permissionNames[i]); //$NON-NLS-1$ + } + } + return message; + } + + public void performChange(IResource resource) { + int permissions = fetchPermissions(resource); + // add permissions + permissions |= changedPermissions &amp; finalPermissions; + // remove permissions + permissions &amp;= ~changedPermissions | finalPermissions; + putPermissions(resource, permissions); + } + }; + } + + private List/**/ getResourcesToVisit(IResource resource) throws CoreException { + // use set for fast lookup + final Set/**/ visited = new HashSet/**/(); + // use list to preserve the order of visited resources + final List/**/ toVisit = new ArrayList/**/(); + visited.add(resource.getLocationURI()); + resource.accept(new IResourceProxyVisitor() { + public boolean visit(IResourceProxy proxy) { + IResource childResource = proxy.requestResource(); + URI uri = childResource.getLocationURI(); + if (!visited.contains(uri)) { + visited.add(uri); + toVisit.add(childResource); + } + return true; + } + }, IResource.NONE); + return toVisit; + } + + private boolean shouldPerformRecursiveChanges(List/**/ changes) { + if (!changes.isEmpty()) { + String message = IDEWorkbenchMessages.ResourceInfo_recursiveChangesSummary + + &quot;\n&quot;; //$NON-NLS-1$ + for (int i = 0; i &lt; changes.size(); i++) { + message += ((IResourceChange) changes.get(i)).getMessage(); + } + message += IDEWorkbenchMessages.ResourceInfo_recursiveChangesQuestion; + + MessageDialog dialog = new MessageDialog(getShell(), + IDEWorkbenchMessages.ResourceInfo_recursiveChangesTitle, + null, message, MessageDialog.QUESTION, new String[] { + IDialogConstants.YES_LABEL, + IDialogConstants.NO_LABEL }, 1); + + return dialog.open() == 0; + } + return false; + } + + private void scheduleRecursiveChangesJob(final IResource resource, final List/**/ changes) { + new Job(IDEWorkbenchMessages.ResourceInfo_recursiveChangesJobName) { + protected IStatus run(final IProgressMonitor monitor) { + try { + List/**/ toVisit = getResourcesToVisit(resource); + + // Prepare the monitor for the given amount of work + monitor.beginTask( + IDEWorkbenchMessages.ResourceInfo_recursiveChangesJobName, + toVisit.size()); + + // Apply changes recursively + for (Iterator/**/ it = toVisit.iterator(); it.hasNext();) { + if (monitor.isCanceled()) + throw new OperationCanceledException(); + IResource childResource = (IResource) it.next(); + monitor.subTask(NLS + .bind(IDEWorkbenchMessages.ResourceInfo_recursiveChangesSubTaskName, + childResource.getFullPath())); + for (int i = 0; i &lt; changes.size(); i++) { + ((IResourceChange) changes.get(i)) + .performChange(childResource); + } + monitor.worked(1); + } + } catch (CoreException e) { + IDEWorkbenchPlugin + .log(IDEWorkbenchMessages.ResourceInfo_recursiveChangesError, + e.getStatus()); + return e.getStatus(); + } catch (OperationCanceledException e) { + return Status.CANCEL_STATUS; + } finally { + monitor.done(); + } + return Status.OK_STATUS; + } + }.schedule(); } /** @@ -922,8 +1116,6 @@ if (resource == null) return true; - - encodingEditor.store(); if (lineDelimiterEditor != null) { lineDelimiterEditor.store(); @@ -939,26 +1131,32 @@ new NullProgressMonitor()); } + List/**/ changes = new ArrayList/**/(); + ResourceAttributes attrs = resource.getResourceAttributes(); if (attrs != null) { - boolean hasChange = false; + boolean finalValues[] = new boolean[] { false, false, false }; + boolean changedAttrs[] = new boolean[] { false, false, false }; // Nothing to update if we never made the box if (editableBox != null &amp;&amp; editableBox.getSelection() != previousReadOnlyValue) { attrs.setReadOnly(editableBox.getSelection()); - hasChange = true; + finalValues[0] = editableBox.getSelection(); + changedAttrs[0] = true; } if (executableBox != null &amp;&amp; executableBox.getSelection() != previousExecutableValue) { attrs.setExecutable(executableBox.getSelection()); - hasChange = true; + finalValues[1] = executableBox.getSelection(); + changedAttrs[1] = true; } if (archiveBox != null &amp;&amp; archiveBox.getSelection() != previousArchiveValue) { attrs.setArchive(archiveBox.getSelection()); - hasChange = true; + finalValues[2] = archiveBox.getSelection(); + changedAttrs[2] = true; } - if (hasChange) { + if (changedAttrs[0] || changedAttrs[1] || changedAttrs[2]) { resource.setResourceAttributes(attrs); attrs = resource.getResourceAttributes(); if (attrs != null) { @@ -974,6 +1172,10 @@ if (archiveBox != null) { archiveBox.setSelection(attrs.isArchive()); } + if (resource.getType() == IResource.FOLDER) { + changes.add(getAttributesChange(changedAttrs, + finalValues)); + } } } } @@ -981,14 +1183,22 @@ if (permissionBoxes != null) { int permissionValues = getPermissionsSelection(); if (previousPermissionsValue != permissionValues) { + int changedPermissions = previousPermissionsValue ^ permissionValues; putPermissions(resource, permissionValues); previousPermissionsValue = fetchPermissions(resource); if (previousPermissionsValue != permissionValues) { // We failed to set some of the permissions setPermissionsSelection(previousPermissionsValue); } + if (resource.getType() == IResource.FOLDER) { + changes.add(getPermissionsChange(changedPermissions, + permissionValues)); + } } } + + if (shouldPerformRecursiveChanges(changes)) + scheduleRecursiveChangesJob(resource, changes); // Nothing to update if we never made the box if (this.derivedBox != null) { @@ -1005,6 +1215,12 @@ IDEWorkbenchMessages.InternalError, exception .getLocalizedMessage(), exception.getStatus()); return false; + } finally { + // This must be invoked after the &apos;derived&apos; property has been set, + // because it may influence the place where encoding is stored. + if (encodingEditor != null) { + encodingEditor.store(); + } } return true; } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/filesystem/messages.properties b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/filesystem/messages.properties index e6feaa0..a733c55 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/filesystem/messages.properties +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/filesystem/messages.properties @@ -1,5 +1,5 @@ ############################################################################### -# Copyright (c) 2006 IBM Corporation and others. +# Copyright (c) 2006, 2011 IBM Corporation and others. # All rights reserved. This program and the accompanying materials # are made available under the terms of the Eclipse Public License v1.0 # which accompanies this distribution, and is available at @@ -10,4 +10,4 @@ ############################################################################### DefaultFileSystem_name = default -FileSystemSelection_title = Choose file system: \ No newline at end of file +FileSystemSelection_title = Choose file s&amp;ystem: \ No newline at end of file diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/messages.properties b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/messages.properties index f0a7275..b1aec37 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/messages.properties +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/messages.properties @@ -1,5 +1,5 @@ ############################################################################### -# Copyright (c) 2000, 2010 IBM Corporation and others. +# Copyright (c) 2000, 2011 IBM Corporation and others. # All rights reserved. This program and the accompanying materials # are made available under the terms of the Eclipse Public License v1.0 # which accompanies this distribution, and is available at @@ -16,6 +16,8 @@ # Serge Beauchamp (Freescale Semiconductor) - [252996] Resource filters # Serge Beauchamp (Freescale Semiconductor) - [229633] Group Support # Markus Schorn (Wind River Systems) - bug 284447 +# James Blackburn (Broadcom Corp.) - bug 340978 +# Helmut J. Haigermoser (Wind River Systems) - bug 359838 ############################################################################### # package: org.eclipse.ui.ide @@ -474,11 +476,13 @@ IDEWorkspacePreference_autobuildToolTip = Build automatically on resource modification IDEWorkspacePreference_savePriorToBuilding= Save auto&amp;matically before build IDEWorkspacePreference_savePriorToBuildingToolTip= Save modified resources automatically before manual build -IDEWorkspacePreference_RefreshButtonText=&amp;Refresh automatically -IDEWorkspacePreference_RefreshButtonToolTip=Automatically refresh external workspace changes +IDEWorkspacePreference_RefreshButtonText=&amp;Refresh using native hooks or polling +IDEWorkspacePreference_RefreshButtonToolTip=Automatically refresh external workspace changes using native hooks or polling +IDEWorkspacePreference_RefreshLightweightButtonText=Refresh on acce&amp;ss +IDEWorkspacePreference_RefreshLightweightButtonToolTip=Automatically refresh external workspace changes on access via the workspace IDEWorkspacePreference_fileLineDelimiter=New text &amp;file line delimiter -IDEWorkspacePreference_defaultLineDelim=D&amp;efault -IDEWorkspacePreference_defaultLineDelimProj=Inh&amp;erited from container +IDEWorkspacePreference_defaultLineDelim=D&amp;efault ({0}) +IDEWorkspacePreference_defaultLineDelimProj=Inh&amp;erited from container ({0}) IDEWorkspacePreference_otherLineDelim= Ot&amp;her: IDEWorkspacePreference_relatedLink = See &apos;&apos;{0}&apos;&apos; for workspace startup and shutdown preferences. IDEWorkspacePreference_openReferencedProjects = Open referenced projects when a project is opened @@ -570,6 +574,7 @@ ResourceInfo_locked = L&amp;ocked ResourceInfo_archive = Ar&amp;chive ResourceInfo_derived = Deri&amp;ved +ResourceInfo_derivedHasDerivedAncestor = Deri&amp;ved (has derived ancestor) ResourceInfo_type = &amp;Type: ResourceInfo_location = &amp;Location: ResourceInfo_resolvedLocation = Resolved locatio&amp;n: @@ -657,6 +662,14 @@ ResourceInfo_read=Read ResourceInfo_write=Write ResourceInfo_execute=Execute +ResourceInfo_recursiveChangesTitle = Confirm recursive changes +ResourceInfo_recursiveChangesSummary = The following changes have been made: +ResourceInfo_recursiveChangesSet = set +ResourceInfo_recursiveChangesUnset = unset +ResourceInfo_recursiveChangesQuestion = Do you want to apply these changes to subfolders and files? +ResourceInfo_recursiveChangesJobName = Applying recursive changes +ResourceInfo_recursiveChangesSubTaskName = Applying changes for: &apos;&apos;{0}&apos;&apos; +ResourceInfo_recursiveChangesError = Error applying recursive changes # --- Project References --- ProjectReferencesPage_label = Projects may refer to other projects in the workspace.\nUse this page to specify what other projects are referenced by the project.\n\n&amp;Project references for &apos;&apos;{0}&apos;&apos;: @@ -919,6 +932,7 @@ ResourceEncodingFieldEditor_ErrorStoringMessage=Error storing encoding ResourceEncodingFieldEditor_EncodingConflictTitle=Conflict in Encoding ResourceEncodingFieldEditor_EncodingConflictMessage= {0} conflicts with the encoding defined in the content type ({1}). Do you wish to set it anyways? +ResourceEncodingFieldEditor_SeparateDerivedEncodingsLabel=&amp;Store the encoding of derived resources separately ChooseWorkspaceDialog_dialogName=Workspace Launcher ChooseWorkspaceDialog_dialogTitle=Select a workspace @@ -942,7 +956,7 @@ IDEApplication_workspaceMandatoryTitle=Workspace is Mandatory IDEApplication_workspaceMandatoryMessage=IDEs need a valid workspace. Restart without the @none option. IDEApplication_workspaceInUseTitle=Workspace Unavailable -IDEApplication_workspaceInUseMessage=Workspace in use or cannot be created, choose a different one. +IDEApplication_workspaceInUseMessage=Workspace at &apos;&apos;{0}&apos;&apos; in use or cannot be created, choose a different one. IDEApplication_workspaceEmptyTitle=Workspace Required IDEApplication_workspaceEmptyMessage=Workspace field must not be empty; enter a path to continue. IDEApplication_workspaceInvalidTitle=Invalid Workspace @@ -950,7 +964,7 @@ IDEApplication_workspaceCannotBeSetTitle=Workspace Cannot Be Created IDEApplication_workspaceCannotBeSetMessage=Could not launch the product because the specified workspace cannot be created. The specified workspace directory is either invalid or read-only. IDEApplication_workspaceCannotLockTitle=Workspace Cannot Be Locked -IDEApplication_workspaceCannotLockMessage=Could not launch the product because the associated workspace is currently in use by another Eclipse application. +IDEApplication_workspaceCannotLockMessage=Could not launch the product because the associated workspace at &apos;&apos;{0}&apos;&apos; is currently in use by another Eclipse application. IDEApplication_versionTitle = Different Workspace Version IDEApplication_versionMessage = \ This workspace was written with a different version of the product and needs to be updated.\n\n\ diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/model/WorkbenchAdapterFactory.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/model/WorkbenchAdapterFactory.java index 1a3b6bb..a252fbe 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/model/WorkbenchAdapterFactory.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/ide/model/WorkbenchAdapterFactory.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,6 +7,7 @@ * * Contributors: * IBM Corporation - initial API and implementation + * Fair Isaac Corporation - http://bugs.eclipse.org/333590 *******************************************************************************/ package org.eclipse.ui.internal.ide.model; @@ -21,6 +22,8 @@ import org.eclipse.ui.IPersistableElement; import org.eclipse.ui.PlatformUI; import org.eclipse.ui.model.IWorkbenchAdapter; +import org.eclipse.ui.model.IWorkbenchAdapter2; +import org.eclipse.ui.model.IWorkbenchAdapter3; /** * Dispenses adapters for various core objects. @@ -81,7 +84,9 @@ if (adapterType.isInstance(o)) { return o; } - if (adapterType == IWorkbenchAdapter.class) { + if (adapterType == IWorkbenchAdapter.class + || adapterType == IWorkbenchAdapter2.class + || adapterType == IWorkbenchAdapter3.class) { return getWorkbenchElement(o); } if (adapterType == IPersistableElement.class) { @@ -111,8 +116,10 @@ * @return the collection of adapter types */ public Class[] getAdapterList() { - return new Class[] { IWorkbenchAdapter.class, IElementFactory.class, - IPersistableElement.class, IActionFilter.class, IUndoContext.class }; + return new Class[] { IWorkbenchAdapter.class, IWorkbenchAdapter2.class, + IWorkbenchAdapter3.class, IElementFactory.class, + IPersistableElement.class, IActionFilter.class, + IUndoContext.class }; } /** diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/AllMarkersView.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/AllMarkersView.java index d6cbbba..a5d24a3 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/AllMarkersView.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/AllMarkersView.java @@ -1,6 +1,6 @@ package org.eclipse.ui.internal.views.markers; /******************************************************************************* - * Copyright (c) 2008 IBM Corporation and others. + * Copyright (c) 2008, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -9,9 +9,12 @@ * Contributors: * IBM Corporation - initial API and implementation *******************************************************************************/ - +import org.eclipse.core.commands.operations.IUndoContext; +import org.eclipse.core.commands.operations.ObjectUndoContext; +import org.eclipse.ui.ide.undo.WorkspaceUndoUtil; import org.eclipse.ui.views.markers.MarkerSupportView; import org.eclipse.ui.views.markers.internal.MarkerSupportRegistry; + /** * AllMarkersView is the view that shows all markers. @@ -27,4 +30,17 @@ super(MarkerSupportRegistry.ALL_MARKERS_GENERATOR); } + /* + * (non-Javadoc) + * @see org.eclipse.ui.internal.views.markers.ExtendedMarkersView#getUndoContext() + * @since 3.7 + */ + protected IUndoContext getUndoContext() { + ObjectUndoContext context= new ObjectUndoContext(new Object(), &quot;All Markers Context&quot;); //$NON-NLS-1$ + context.addMatch(WorkspaceUndoUtil.getBookmarksUndoContext()); + context.addMatch(WorkspaceUndoUtil.getTasksUndoContext()); + context.addMatch(WorkspaceUndoUtil.getProblemsUndoContext()); + return context; + } + } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/BookmarksView.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/BookmarksView.java index d746c61..b7c8a5f 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/BookmarksView.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/BookmarksView.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2008 IBM Corporation and others. + * Copyright (c) 2008, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -8,11 +8,16 @@ * Contributors: * IBM Corporation - initial API and implementation ******************************************************************************/ - package org.eclipse.ui.internal.views.markers; +import org.eclipse.core.commands.operations.IUndoContext; +import org.eclipse.core.resources.IMarker; +import org.eclipse.core.runtime.Assert; +import org.eclipse.ui.ide.undo.WorkspaceUndoUtil; import org.eclipse.ui.views.markers.MarkerSupportView; +import org.eclipse.ui.views.markers.internal.MarkerMessages; import org.eclipse.ui.views.markers.internal.MarkerSupportRegistry; + /** * The BookmarksView is the ide view for bookmarks. @@ -28,4 +33,23 @@ super(MarkerSupportRegistry.BOOKMARKS_GENERATOR); } + + /* + * (non-Javadoc) + * @see org.eclipse.ui.views.markers.internal.MarkerView#getUndoContext() + * @since 3.7 + */ + protected IUndoContext getUndoContext() { + return WorkspaceUndoUtil.getBookmarksUndoContext(); + } + + /* (non-Javadoc) + * @see org.eclipse.ui.internal.views.markers.ExtendedMarkersView#getDeleteOperationName(org.eclipse.core.resources.IMarker[]) + * @since 3.7 + */ + protected String getDeleteOperationName(IMarker[] markers) { + Assert.isLegal(markers.length &gt; 0); + return markers.length == 1 ? MarkerMessages.deleteBookmarkMarker_operationName : MarkerMessages.deleteBookmarkMarkers_operationName; + } + } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/DeleteHandler.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/DeleteHandler.java index 29e6dfe..96c20ff 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/DeleteHandler.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/DeleteHandler.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007, 2009 IBM Corporation and others. + * Copyright (c) 2007, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -11,17 +11,17 @@ package org.eclipse.ui.internal.views.markers; import org.eclipse.core.commands.ExecutionEvent; -import org.eclipse.core.commands.ExecutionException; +import org.eclipse.core.commands.operations.IUndoableOperation; import org.eclipse.core.resources.IMarker; import org.eclipse.core.resources.WorkspaceJob; -import org.eclipse.core.runtime.CoreException; import org.eclipse.core.runtime.IProgressMonitor; import org.eclipse.core.runtime.IStatus; import org.eclipse.core.runtime.Status; import org.eclipse.jface.dialogs.IDialogConstants; import org.eclipse.jface.dialogs.MessageDialog; +import org.eclipse.ui.ide.undo.DeleteMarkersOperation; +import org.eclipse.ui.ide.undo.WorkspaceUndoUtil; import org.eclipse.ui.internal.ide.IDEWorkbenchMessages; -import org.eclipse.ui.internal.ide.Policy; import org.eclipse.ui.views.markers.MarkerSupportView; import org.eclipse.ui.views.markers.MarkerViewHandler; import org.eclipse.ui.views.markers.internal.MarkerMessages; @@ -39,9 +39,9 @@ * * @see org.eclipse.core.commands.IHandler#execute(org.eclipse.core.commands.ExecutionEvent) */ - public Object execute(ExecutionEvent event) throws ExecutionException { + public Object execute(ExecutionEvent event) { - MarkerSupportView view = getView(event); + final MarkerSupportView view = getView(event); if (view == null) return this; @@ -61,25 +61,19 @@ return view; } - WorkspaceJob deleteJob = new WorkspaceJob(IDEWorkbenchMessages.MarkerDeleteHandler_JobTitle){ //See Bug#250807 - public IStatus runInWorkspace(IProgressMonitor monitor) - throws CoreException { - monitor.beginTask(IDEWorkbenchMessages.MarkerDeleteHandler_JobMessageLabel, 10*selected.length); - try { - for (int i = 0; i &lt; selected.length; i++) { - if(monitor.isCanceled())return Status.CANCEL_STATUS; - selected[i].delete(); - monitor.worked(10); - } - } catch (CoreException e) { - Policy.handle(e); - throw e; - }finally{ - monitor.done(); - } - return Status.OK_STATUS; - } - }; + WorkspaceJob deleteJob= new WorkspaceJob(IDEWorkbenchMessages.MarkerDeleteHandler_JobTitle) { //See Bug#250807 + public IStatus runInWorkspace(IProgressMonitor monitor) { + monitor.beginTask(IDEWorkbenchMessages.MarkerDeleteHandler_JobMessageLabel, 10 * selected.length); + try { + IUndoableOperation op= new DeleteMarkersOperation(selected, view.getDeleteOperationName(selected)); + op.addContext(view.getUndoContext()); + execute(op, MarkerMessages.deleteMarkers_errorMessage, monitor, WorkspaceUndoUtil.getUIInfoAdapter(view.getSite().getShell())); + } finally { + monitor.done(); + } + return Status.OK_STATUS; + } + }; deleteJob.setUser(true); deleteJob.schedule(); diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/EditablePropertyTester.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/EditablePropertyTester.java index 33d7e1d..1143322 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/EditablePropertyTester.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/EditablePropertyTester.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2008 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,8 +7,13 @@ * * Contributors: * IBM Corporation - initial API and implementation + * Andrew Gvozdev - Bug 364039 - Add &quot;Delete All Markers&quot; *******************************************************************************/ package org.eclipse.ui.internal.views.markers; + +import java.util.HashSet; +import java.util.Iterator; +import java.util.Set; import org.eclipse.core.expressions.PropertyTester; import org.eclipse.core.resources.IMarker; @@ -37,9 +42,27 @@ public boolean test(Object receiver, String property, Object[] args, Object expectedValue) { if (property.equals(EDITABLE)) { - IMarker marker = ((MarkerEntry) receiver).getMarker(); - if (marker != null) - return marker.getAttribute(IMarker.USER_EDITABLE, true); + MarkerSupportItem item = (MarkerSupportItem) receiver; + Set/**/ markers = new HashSet(); + if (item.isConcrete()) { + markers.add(((MarkerEntry) receiver).getMarker()); + } else { + MarkerSupportItem[] children = item.getChildren(); + for (int i = 0; i &lt; children.length; i++) { + if (children[i].isConcrete()) + markers.add(((MarkerEntry) children[i]).getMarker()); + } + } + + if (!markers.isEmpty()) { + Iterator elements = markers.iterator(); + while (elements.hasNext()) { + IMarker marker = (IMarker) elements.next(); + if (!marker.getAttribute(IMarker.USER_EDITABLE, true)) + return false; + } + return true; + } } return false; } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/ExtendedMarkersView.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/ExtendedMarkersView.java index e515137..2bafef8 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/ExtendedMarkersView.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/ExtendedMarkersView.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007, 2010 IBM Corporation and others. + * Copyright (c) 2007, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,8 +7,8 @@ * * Contributors: * IBM Corporation - initial API and implementation + * Andrew Gvozdev - Bug 364039 - Add &quot;Delete All Markers&quot; *******************************************************************************/ - package org.eclipse.ui.internal.views.markers; import java.util.ArrayList; @@ -17,8 +17,11 @@ import java.util.Iterator; import java.util.List; +import org.eclipse.core.commands.operations.IUndoContext; import org.eclipse.core.resources.IFile; import org.eclipse.core.resources.IMarker; +import org.eclipse.core.resources.ResourcesPlugin; +import org.eclipse.core.runtime.Assert; import org.eclipse.core.runtime.IStatus; import org.eclipse.core.runtime.Status; import org.eclipse.help.IContext; @@ -50,6 +53,8 @@ import org.eclipse.swt.dnd.Transfer; import org.eclipse.swt.events.HelpEvent; import org.eclipse.swt.events.HelpListener; +import org.eclipse.swt.events.PaintEvent; +import org.eclipse.swt.events.PaintListener; import org.eclipse.swt.events.SelectionAdapter; import org.eclipse.swt.events.SelectionEvent; import org.eclipse.swt.events.SelectionListener; @@ -70,17 +75,21 @@ import org.eclipse.ui.ISelectionListener; import org.eclipse.ui.IViewPart; import org.eclipse.ui.IViewSite; +import org.eclipse.ui.IWorkbenchCommandConstants; import org.eclipse.ui.IWorkbenchPage; import org.eclipse.ui.IWorkbenchPart; import org.eclipse.ui.IWorkbenchPartReference; import org.eclipse.ui.OpenAndLinkWithEditorHelper; import org.eclipse.ui.PartInitException; import org.eclipse.ui.PlatformUI; +import org.eclipse.ui.actions.ActionFactory; import org.eclipse.ui.ide.IDE; import org.eclipse.ui.ide.ResourceUtil; import org.eclipse.ui.internal.ide.IDEWorkbenchPlugin; import org.eclipse.ui.internal.ide.StatusUtil; import org.eclipse.ui.menus.IMenuService; +import org.eclipse.ui.operations.RedoActionHandler; +import org.eclipse.ui.operations.UndoActionHandler; import org.eclipse.ui.part.MarkerTransfer; import org.eclipse.ui.part.ViewPart; import org.eclipse.ui.progress.IWorkbenchSiteProgressService; @@ -93,6 +102,7 @@ import org.eclipse.ui.views.markers.internal.MarkerSupportRegistry; import com.ibm.icu.text.MessageFormat; + /** * The ExtendedMarkersView is the internal implementation of the view that shows @@ -137,6 +147,13 @@ private UIUpdateJob uiUpdateJob; private MarkersTreeViewer viewer; + + /** + * Tells whether the tree has been painted. + * @since 3.7 + */ + private boolean treePainted= false; + private ISelectionListener pageSelectionListener; private IPartListener2 partListener; private Clipboard clipboard; @@ -145,6 +162,11 @@ private IMemento memento; private String[] defaultGeneratorIds = new String[0]; + + private UndoActionHandler undoAction; + + private RedoActionHandler redoAction; + /** * Return a new instance of the receiver. @@ -242,6 +264,17 @@ viewer.setUseHashlookup(true); createColumns(new TreeColumn[0], new int[0]); viewer.setContentProvider(getContentProvider()); + + /* + * Workaround for TeeColumn.getWidth() returning 0 in some cases, see + * https://bugs.eclipse.org/341865 for details. + */ + viewer.getTree().addPaintListener(new PaintListener() { + public void paintControl(PaintEvent e) { + treePainted= true; + viewer.getTree().removePaintListener(this); + } + }); } /** @@ -329,9 +362,17 @@ * @param considerUIWidths * @return desired width for the column representing markerField */ - int getFieldWidth(MarkerField markerField, int preferredWidth, - boolean considerUIWidths) { + int getFieldWidth(MarkerField markerField, int preferredWidth, boolean considerUIWidths) { Tree tree = getViewer().getTree(); + + if (considerUIWidths) { + TreeColumn[] columns= tree.getColumns(); + for (int i= 0; i &lt; columns.length; i++) { + if (markerField.equals(columns[i].getData(MARKER_FIELD))) { + return columns[i].getWidth(); + } + } + } if (preferredWidth &lt; 0 &amp;&amp; memento != null) { IMemento columnWidths = memento.getChild(TAG_COLUMN_WIDTHS); @@ -340,7 +381,7 @@ .getConfigurationElement().getAttribute( MarkerSupportInternalUtilities.ATTRIBUTE_ID)); // Make sure we get a useful value - if (value != null &amp;&amp; value.intValue() &gt; 0) + if (value != null &amp;&amp; value.intValue() &gt;= 0) preferredWidth = value.intValue(); } } @@ -352,16 +393,6 @@ gc.dispose(); preferredWidth = Math.max(markerField.getDefaultColumnWidth(tree), fontMetrics.getAverageCharWidth() * 5); - } - if (considerUIWidths) { - TreeColumn[] columns = tree.getColumns(); - for (int i = 0; i &lt; columns.length; i++) { - if (markerField.equals(columns[i].getData(MARKER_FIELD))) { - preferredWidth = Math.max(preferredWidth, - columns[i].getWidth()); - return preferredWidth; - } - } } return preferredWidth; } @@ -392,6 +423,14 @@ initDragAndDrop(); getSite().setSelectionProvider(viewer); + + IUndoContext undoContext= getUndoContext(); + undoAction= new UndoActionHandler(getSite(), undoContext); + undoAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_UNDO); + redoAction= new RedoActionHandler(getSite(), undoContext); + redoAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_REDO); + getViewSite().getActionBars().setGlobalActionHandler(ActionFactory.UNDO.getId(), undoAction); + getViewSite().getActionBars().setGlobalActionHandler(ActionFactory.REDO.getId(), redoAction); startView(); @@ -572,6 +611,10 @@ getSite().getPage().removePostSelectionListener(pageSelectionListener); getSite().getPage().removePartListener(partListener); + + undoAction.dispose(); + redoAction.dispose(); + super.dispose(); } @@ -687,7 +730,7 @@ * */ private IContentProvider getContentProvider() { - return new MarkerViewerContentProvider(); + return new MarkerViewerContentProvider(this); } /** @@ -849,11 +892,18 @@ if (selection instanceof IStructuredSelection) { IStructuredSelection structured = (IStructuredSelection) selection; Iterator elements = structured.iterator(); - Collection result = new ArrayList(); + Collection result = new HashSet(); while (elements.hasNext()) { MarkerSupportItem next = (MarkerSupportItem) elements.next(); - if (next.isConcrete()) + if (next.isConcrete()) { result.add(((MarkerEntry) next).getMarker()); + } else { + MarkerSupportItem[] children = next.getChildren(); + for (int i = 0; i &lt; children.length; i++) { + if (children[i].isConcrete()) + result.add(((MarkerEntry) children[i]).getMarker()); + } + } } if (result.isEmpty()) return MarkerSupportInternalUtilities.EMPTY_MARKER_ARRAY; @@ -886,18 +936,26 @@ String status = MarkerSupportInternalUtilities.EMPTY_STRING; int totalCount = builder.getTotalMarkerCount(markers); int filteredCount = 0; + boolean markerLimitsEnabled = generator.isMarkerLimitsEnabled(); + int markerLimit = generator.getMarkerLimits(); MarkerSupportItem[] categories = markers.getCategories(); // Categories might be null if building is still happening if (categories != null &amp;&amp; builder.isShowingHierarchy()) { - int markerLimit = MarkerSupportInternalUtilities.getMarkerLimit(); for (int i = 0; i &lt; categories.length; i++) { - filteredCount += markerLimit &lt; 0 ? categories[i] - .getChildrenCount() : Math.min(categories[i] - .getChildrenCount(), markerLimit); + + int childCount = categories[i].getChildrenCount(); + if (markerLimitsEnabled) + childCount = Math.min(childCount, markerLimit); + + filteredCount += childCount; + } } else { - filteredCount = MarkerSupportInternalUtilities.getMarkerLimit(); + if(markerLimitsEnabled) + filteredCount = markerLimit; + else + filteredCount = -1; } // Any errors or warnings? If not then send the filtering message @@ -1217,11 +1275,19 @@ int[] positions = viewer.getTree().getColumnOrder(); for (int i = 0; i &lt; fields.length; i++) { TreeColumn column = viewer.getTree().getColumn(i); - columnEntry.putInteger(getFieldId(column), column.getWidth()); - fields[positions[i]] = (MarkerField) column.getData(MARKER_FIELD); + MarkerField markerField= (MarkerField)column.getData(MARKER_FIELD); + + /* + * Workaround for TeeColumn.getWidth() returning 0 in some cases, see + * https://bugs.eclipse.org/341865 for details. + */ + int width= getFieldWidth(markerField, -1, treePainted); + + columnEntry.putInteger(getFieldId(column), width); + fields[positions[i]]= markerField; } if (generator != null) { - generator.saveSate(memento, fields); + generator.saveState(memento, fields); } builder.saveState(memento); } @@ -1714,4 +1780,27 @@ } } + + /** + * Return the undo context associated with operations performed in this view. By default, return + * the workspace undo context. Subclasses should override if a more specific undo context should + * be used. + * + * @since 3.7 + */ + protected IUndoContext getUndoContext() { + return (IUndoContext)ResourcesPlugin.getWorkspace().getAdapter(IUndoContext.class); + } + + /** + * Returns the name of the delete operation. + * + * @param markers the markers to be deleted, must have at least one element + * @since 3.7 + */ + protected String getDeleteOperationName(IMarker[] markers) { + Assert.isLegal(markers.length &gt; 0); + return markers.length == 1 ? MarkerMessages.deleteMarker_operationName : MarkerMessages.deleteMarkers_operationName; + } + } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/FiltersConfigurationDialog.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/FiltersConfigurationDialog.java index 7c2b91c..52fecf2 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/FiltersConfigurationDialog.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/FiltersConfigurationDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007, 2009 IBM Corporation and others. + * Copyright (c) 2007, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -16,48 +16,52 @@ import java.util.ArrayList; import java.util.Collection; import java.util.Iterator; +import java.util.List; -import org.eclipse.core.runtime.IStatus; -import org.eclipse.jface.dialogs.IDialogConstants; import org.eclipse.jface.dialogs.IDialogSettings; import org.eclipse.jface.dialogs.IInputValidator; import org.eclipse.jface.dialogs.InputDialog; +import org.eclipse.jface.preference.IPreferenceStore; +import org.eclipse.jface.util.Util; +import org.eclipse.jface.viewers.ArrayContentProvider; import org.eclipse.jface.viewers.CheckStateChangedEvent; import org.eclipse.jface.viewers.CheckboxTableViewer; import org.eclipse.jface.viewers.ICheckStateListener; import org.eclipse.jface.viewers.ISelection; import org.eclipse.jface.viewers.ISelectionChangedListener; -import org.eclipse.jface.viewers.IStructuredContentProvider; import org.eclipse.jface.viewers.IStructuredSelection; import org.eclipse.jface.viewers.LabelProvider; import org.eclipse.jface.viewers.SelectionChangedEvent; import org.eclipse.jface.viewers.StructuredSelection; -import org.eclipse.jface.viewers.Viewer; import org.eclipse.jface.window.Window; import org.eclipse.osgi.util.NLS; import org.eclipse.swt.SWT; import org.eclipse.swt.events.DisposeEvent; import org.eclipse.swt.events.DisposeListener; +import org.eclipse.swt.events.ModifyEvent; +import org.eclipse.swt.events.ModifyListener; import org.eclipse.swt.events.SelectionAdapter; import org.eclipse.swt.events.SelectionEvent; +import org.eclipse.swt.events.VerifyEvent; +import org.eclipse.swt.events.VerifyListener; +import org.eclipse.swt.layout.FillLayout; import org.eclipse.swt.layout.GridData; import org.eclipse.swt.layout.GridLayout; import org.eclipse.swt.widgets.Button; import org.eclipse.swt.widgets.Composite; import org.eclipse.swt.widgets.Control; -import org.eclipse.swt.widgets.Event; import org.eclipse.swt.widgets.Group; import org.eclipse.swt.widgets.Label; -import org.eclipse.swt.widgets.Listener; import org.eclipse.swt.widgets.Shell; import org.eclipse.swt.widgets.Text; +import org.eclipse.ui.forms.events.ExpansionAdapter; import org.eclipse.ui.forms.events.ExpansionEvent; -import org.eclipse.ui.forms.events.IExpansionListener; import org.eclipse.ui.forms.widgets.ExpandableComposite; import org.eclipse.ui.forms.widgets.FormToolkit; import org.eclipse.ui.forms.widgets.ScrolledForm; import org.eclipse.ui.internal.ide.IDEInternalPreferences; import org.eclipse.ui.internal.ide.IDEWorkbenchPlugin; +import org.eclipse.ui.preferences.ViewSettingsDialog; import org.eclipse.ui.views.markers.FilterConfigurationArea; import org.eclipse.ui.views.markers.internal.MarkerMessages; @@ -67,37 +71,38 @@ * @since 3.3 * */ -public class FiltersConfigurationDialog extends ViewerSettingsAndStatusDialog { +public class FiltersConfigurationDialog extends ViewSettingsDialog { private static final String SELECTED_FILTER_GROUP = &quot;SELECTED_FILTER_GROUP&quot;; //$NON-NLS-1$ + private static final String PREV_SELECTED_ELEMENTS = &quot;PREV_SELECTED_ELEMENTS&quot;; //$NON-NLS-1$ private Collection filterGroups; - private CheckboxTableViewer filtersList; - - private GroupFilterConfigurationArea scopeArea = new ScopeArea(); + private CheckboxTableViewer configsTable; private MarkerFieldFilterGroup selectedFilterGroup; - private ScrolledForm form; - private MarkerContentGenerator generator; - private int limitValue = -1; - private boolean limitEnabled = false; private boolean andFilters = false; - - private Collection filterAreas; private Button removeButton; private Button renameButton; - private Button cloneButton; + + private Button allButton; private Button andButton; private Button orButton; - private Label andOrLabel; - private Text limitEditor; - private Button limitBttn; + private Button limitButton; + private Text limitText; + + private GroupFilterConfigurationArea scopeArea = new ScopeArea(); + private ScrolledForm form; + + private Collection configAreas; + private Label limitsLabel; + + private Object[] previouslyChecked = new Object[0]; /** * Create a new instance of the receiver on builder. @@ -125,16 +130,6 @@ /* * (non-Javadoc) * - * @see org.eclipse.jface.dialogs.Dialog#close() - */ - public boolean close() { - saveDialogSettings(); - return super.close(); - } - - /* - * (non-Javadoc) - * * @see org.eclipse.ui.internal.views.markers.ViewerSettingsAndStatusDialog# * configureShell(org.eclipse.swt.widgets.Shell) */ @@ -156,351 +151,290 @@ * (non-Javadoc) * * @see org.eclipse.ui.internal.views.markers.ViewerSettingsAndStatusDialog# - * initializeDialog() - */ - protected void initializeDialog() { - super.initializeDialog(); - validateState(); - } - - /* - * (non-Javadoc) - * - * @see org.eclipse.ui.internal.views.markers.ViewerSettingsAndStatusDialog# * createDialogContentArea(org.eclipse.swt.widgets.Composite) */ - protected Control createDialogContentArea(Composite parent) { + protected Control createDialogArea(Composite parent) { - createViewCommonUI(parent).setLayoutData( - new GridData(SWT.FILL, SWT.NONE, true, false)); + Composite container = new Composite(parent, SWT.NONE); + container.setLayout(new GridLayout()); + container.setLayoutData(new GridData(GridData.FILL_BOTH)); + container.setFont(parent.getFont()); + + Composite composite = new Composite(container, SWT.NONE); + GridLayout layout = new GridLayout(); + layout.marginHeight = 0; + composite.setLayout(layout); + composite.setLayoutData(new GridData(GridData.FILL_BOTH)); + composite.setBackground(container.getBackground()); - Group top = new Group(parent, SWT.NONE); - top.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true)); - GridLayout layout = new GridLayout(3, false); - top.setLayout(layout); - top.setBackground(parent.getBackground()); - initializeDialogUnits(top); + createAndOrButtons(composite); - createFilterSelectionArea(top); - createVerticalSeperator(top).setLayoutData( - new GridData(SWT.NONE, SWT.FILL, false, true)); - createFilterAreas(top).setLayoutData( - new GridData(SWT.FILL, SWT.FILL, true, true)); + Group configComposite = new Group(composite, SWT.NONE); + configComposite.setText(MarkerMessages.MarkerConfigurationsLabel); - if (filterGroups.isEmpty()) + configComposite.setLayout(new GridLayout(3, false)); + GridData configData = new GridData(GridData.FILL_BOTH); + configData.horizontalIndent = 20; + configComposite.setLayoutData(configData); + configComposite.setBackground(composite.getBackground()); + + createConfigs(configComposite); + + createConfigDesc(configComposite); + + createMarkerLimits(composite); + + Label separator = new Label(parent, SWT.HORIZONTAL | SWT.SEPARATOR); + separator.setLayoutData(new GridData(GridData.FILL_HORIZONTAL)); + + applyDialogFont(container); + + initUI(); + + return container; + } + + private void initUI() { + + configsTable.setInput(filterGroups); + IStructuredSelection selection = getInitialSelection(); + configsTable.setSelection(selection); + if (selection.isEmpty()) { setFieldsEnabled(false); - else - loadDialogSettings(); - applyDialogFont(top); - return top; + } + + Iterator iterator = filterGroups.iterator(); + while (iterator.hasNext()) { + MarkerFieldFilterGroup group = (MarkerFieldFilterGroup) iterator + .next(); + boolean enabled = group.isEnabled(); + configsTable.setChecked(group, enabled); + } + + andButton.setSelection(andFilters); + orButton.setSelection(!andFilters); + updateRadioButtonsFromTable(); + int limits = generator.getMarkerLimits(); + boolean limitsEnabled = generator.isMarkerLimitsEnabled(); + limitButton.setSelection(limitsEnabled); + limitsLabel.setEnabled(limitsEnabled); + limitText.setEnabled(limitsEnabled); + limitText.setText(Integer.toString(limits)); + configsTable.getTable().setFocus(); + } - /** - * @param parent - * parent - * @return {@link Control} - */ - private Control createViewCommonUI(Composite parent) { - Group group = new Group(parent, SWT.NONE); - group.setLayout(new GridLayout(1, true)); - createLimitArea(group); - return group; + private void updateRadioButtonsFromTable() { + + boolean showAll = isShowAll(); + allButton.setSelection(showAll); + andButton.setEnabled(!showAll); + orButton.setEnabled(!showAll); } - /** - * Create element limit area. - * - * @param parent - */ - private Control createLimitArea(Composite parent) { - Composite composite = new Composite(parent, SWT.NONE); - composite.setLayout(new GridLayout(2, false)); - composite.setLayoutData(new GridData(GridData.FILL_HORIZONTAL)); - limitBttn = new Button(composite, SWT.CHECK); - limitBttn.setText(MarkerMessages.MarkerPreferences_VisibleItems); - limitBttn.setLayoutData(new GridData()); + private void updateShowAll(boolean showAll) { - limitEditor = new Text(composite, SWT.BORDER); - limitEditor.setLayoutData(new GridData(GridData.FILL_HORIZONTAL)); - Listener listener = new Listener() { - public void handleEvent(Event event) { - switch (event.type) { - case SWT.Selection: - boolean limited = limitBttn.getSelection(); - setLimitEnabled(limited); - limitEditor.setEditable(limited); - limitEditor.setText(Integer.toString(getLimitValue())); - break; - case SWT.Modify: - try { - int limit = Integer.parseInt(limitEditor.getText()); - if (limit &gt; 0) { - setLimitValue(limit); - } else { - limitEditor.setFocus(); - } - } catch (Exception e) { - limitEditor.setFocus(); - } - break; + allButton.setSelection(showAll); + andButton.setEnabled(!showAll); + orButton.setEnabled(!showAll); + if (showAll) { + previouslyChecked = configsTable.getCheckedElements(); + configsTable.setAllChecked(false); + } else { + if (previouslyChecked != null &amp;&amp; previouslyChecked.length &gt; 0) { + configsTable.setCheckedElements(previouslyChecked); + } else { + // make the first entry checked + if (filterGroups.size() &gt; 0) { + Object group = filterGroups.iterator().next(); + configsTable.setChecked(group, true); } - validateState(); } - }; - limitEditor.addListener(SWT.Modify, listener); - limitBttn.addListener(SWT.Selection, listener); - setLimitEnabled(IDEWorkbenchPlugin.getDefault().getPreferenceStore() - .getBoolean(IDEInternalPreferences.USE_MARKER_LIMITS)); - setLimitValue(IDEWorkbenchPlugin.getDefault().getPreferenceStore() - .getInt(IDEInternalPreferences.MARKER_LIMITS_VALUE)); + } + } - limitBttn.setSelection(isLimitEnabled()); - limitEditor.setText(Integer.toString(getLimitValue())); - limitEditor.setEditable(isLimitEnabled()); - return composite; + private boolean isShowAll() { + return configsTable.getCheckedElements().length == 0; } /** - * Create the area for selecting the filters and enabling/disabling them. - * - * @param main - * @return {@link Control} + * @param parent */ - private Control createFilterSelectionArea(Composite main) { + private void createMarkerLimits(Composite parent) { - Composite filtersComposite = new Composite(main, SWT.NONE); - filtersComposite.setLayout(new GridLayout(2, false)); - filtersComposite.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, - true)); + limitButton = new Button(parent, SWT.CHECK); + limitButton.setText(MarkerMessages.MarkerPreferences_MarkerLimits); + limitButton.addSelectionListener(new SelectionAdapter() { - Label title = new Label(filtersComposite, SWT.NONE); - title.setText(MarkerMessages.filtersDialog_entriesTitle); - GridData titleData = new GridData(); - titleData.horizontalSpan = 2; - title.setLayoutData(titleData); - - filtersList = CheckboxTableViewer.newCheckList(filtersComposite, - SWT.BORDER); - - filtersList.setContentProvider(new IStructuredContentProvider() { - /* - * (non-Javadoc) - * - * @see org.eclipse.jface.viewers.IContentProvider#dispose() - */ - public void dispose() { - // Do nothing + public void widgetSelected(SelectionEvent e) { + limitsLabel.setEnabled(limitButton.getSelection()); + limitText.setEnabled(limitButton.getSelection()); } + }); + + GridData limitData = new GridData(); + limitData.verticalIndent = 5; + limitButton.setLayoutData(limitData); - /* - * (non-Javadoc) - * - * @see - * org.eclipse.jface.viewers.IStructuredContentProvider#getElements - * (java.lang.Object) - */ - public Object[] getElements(Object inputElement) { - return filterGroups.toArray(); - } + Composite composite = new Composite(parent, SWT.NONE); + GridLayout layout = new GridLayout(2, false); + layout.marginWidth = 0; + layout.marginHeight = 0; + composite.setLayout(layout); + GridData compositeData = new GridData(GridData.FILL_HORIZONTAL); + compositeData.horizontalIndent = 20; + composite.setLayoutData(compositeData); - /* - * (non-Javadoc) - * - * @see - * org.eclipse.jface.viewers.IContentProvider#inputChanged(org.eclipse - * .jface.viewers.Viewer, java.lang.Object, java.lang.Object) - */ - public void inputChanged(Viewer viewer, Object oldInput, - Object newInput) { - // Do nothing + limitsLabel = new Label(composite, SWT.NONE); + limitsLabel.setText(MarkerMessages.MarkerPreferences_VisibleItems); + + limitText = new Text(composite, SWT.BORDER); + GridData textData = new GridData(); + textData.widthHint = convertWidthInCharsToPixels(10); + limitText.setLayoutData(textData); + limitText.addVerifyListener(new VerifyListener() { + + public void verifyText(VerifyEvent e) { + if (e.character != 0 &amp;&amp; e.keyCode != SWT.BS + &amp;&amp; e.keyCode != SWT.DEL + &amp;&amp; !Character.isDigit(e.character)) { + e.doit = false; + } } }); - filtersList.setLabelProvider(new LabelProvider() { - /* - * (non-Javadoc) - * - * @see - * org.eclipse.jface.viewers.ILabelProvider#getText(java.lang.Object - * ) - */ + limitText.addModifyListener(new ModifyListener() { + + public void modifyText(ModifyEvent e) { + try { + Integer.parseInt(limitText.getText()); + } catch (NumberFormatException ex) { + limitText.setText(Integer.toString(generator.getMarkerLimits())); + } + } + }); + + } + + /** + * @param parent + */ + private void createConfigs(Composite parent) { + + Composite composite = new Composite(parent, SWT.NONE); + composite.setLayout(new GridLayout(2, false)); + composite.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true)); + composite.setBackground(parent.getBackground()); + + configsTable = CheckboxTableViewer.newCheckList(composite, SWT.BORDER); + GridData tableData = new GridData(SWT.FILL, SWT.FILL, true, true); + tableData.widthHint = convertHorizontalDLUsToPixels(120); + configsTable.getControl().setLayoutData(tableData); + + configsTable.setContentProvider(ArrayContentProvider.getInstance()); + configsTable.setLabelProvider(new LabelProvider() { public String getText(Object element) { return ((MarkerFieldFilterGroup) element).getName(); } }); - if (selectedFilterGroup != null) - filtersList.setSelection(new StructuredSelection( - selectedFilterGroup)); + configsTable.addCheckStateListener(new ICheckStateListener() { + public void checkStateChanged(CheckStateChangedEvent event) { + configsTable.setSelection(new StructuredSelection(event + .getElement())); + updateRadioButtonsFromTable(); + } + }); - filtersList + configsTable .addSelectionChangedListener(new ISelectionChangedListener() { - - /* - * (non-Javadoc) - * - * @see org.eclipse.jface.viewers.ISelectionChangedListener# - * selectionChanged - * (org.eclipse.jface.viewers.SelectionChangedEvent) - */ public void selectionChanged(SelectionChangedEvent event) { - setSelectedFilter((MarkerFieldFilterGroup) ((IStructuredSelection) event - .getSelection()).getFirstElement()); + storeConfiguration(); + MarkerFieldFilterGroup group = getSelectionFromTable(); + if (group == null) { + setFieldsEnabled(false); + } else + setFieldsEnabled(true); + updateButtonEnablement(group); + updateConfigDesc(group); + selectedFilterGroup = group; } }); - filtersList.setInput(this); + createButtons(composite); - Iterator filterIterator = filterGroups.iterator(); - while (filterIterator.hasNext()) { - MarkerFieldFilterGroup group = (MarkerFieldFilterGroup) filterIterator + } + + private void storeConfiguration() { + + if (selectedFilterGroup == null) + return; + + scopeArea.applyToGroup(selectedFilterGroup); + Iterator areas = configAreas.iterator(); + while (areas.hasNext()) { + FilterConfigurationArea area = (FilterConfigurationArea) areas .next(); - filtersList.setChecked(group, group.isEnabled()); + + // Handle the internal special cases + if (area instanceof GroupFilterConfigurationArea) + ((GroupFilterConfigurationArea) area) + .applyToGroup(selectedFilterGroup); + area.apply(selectedFilterGroup.getFilter(area.getField())); + } + configsTable.refresh(selectedFilterGroup); + } + + private void updateConfigDesc(MarkerFieldFilterGroup configuration) { + + if (configuration == null) { + return; } - GridData listData = new GridData(SWT.FILL, SWT.FILL, true, true); - listData.widthHint = convertHorizontalDLUsToPixels(100); - filtersList.getControl().setLayoutData(listData); + scopeArea.initializeFromGroup(configuration); + Iterator areas = configAreas.iterator(); + while (areas.hasNext()) { + FilterConfigurationArea area = (FilterConfigurationArea) areas + .next(); + if (area instanceof GroupFilterConfigurationArea) + ((GroupFilterConfigurationArea) area) + .initializeFromGroup(configuration); + area.initialize(configuration.getFilter(area.getField())); + } - Composite buttons = new Composite(filtersComposite, SWT.NONE); - GridLayout buttonLayout = new GridLayout(); - buttonLayout.marginWidth = 0; - buttons.setLayout(buttonLayout); - GridData buttonsData = new GridData(); - buttonsData.verticalAlignment = GridData.BEGINNING; - buttons.setLayoutData(buttonsData); - - Button addNew = new Button(buttons, SWT.PUSH); - addNew.setText(MarkerMessages.MarkerFilter_addFilterName); - addNew.addSelectionListener(new SelectionAdapter() { - public void widgetSelected(SelectionEvent e) { - addNewFilter(false); - } - }); - setButtonLayoutData(addNew); - - cloneButton = new Button(buttons, SWT.PUSH); - cloneButton.setText(MarkerMessages.MarkerFilter_cloneFilterName); - cloneButton.addSelectionListener(new SelectionAdapter() { - public void widgetSelected(SelectionEvent e) { - addNewFilter(true); - } - }); - setButtonLayoutData(cloneButton); - - removeButton = new Button(buttons, SWT.PUSH); - removeButton.setText(MarkerMessages.MarkerFilter_deleteSelectedName); - removeButton.addSelectionListener(new SelectionAdapter() { - public void widgetSelected(SelectionEvent e) { - removeFilters(filtersList.getSelection()); - } - }); - setButtonLayoutData(removeButton); - - renameButton = new Button(buttons, SWT.PUSH); - renameButton.setText(MarkerMessages.MarkerFilter_renameName); - renameButton.addSelectionListener(new SelectionAdapter() { - public void widgetSelected(SelectionEvent e) { - MarkerFieldFilterGroup filterGroup = (MarkerFieldFilterGroup) ((IStructuredSelection) filtersList - .getSelection()).getFirstElement(); - renameFilter(filterGroup); - } - }); - setButtonLayoutData(renameButton); - - andOrLabel = new Label(filtersComposite, SWT.NONE); - GridData labelData = new GridData(); - labelData.horizontalSpan = 2; - andOrLabel.setLayoutData(labelData); - andOrLabel.setText(MarkerMessages.AND_OR_Label); - - andButton = new Button(filtersComposite, SWT.RADIO); - GridData data = new GridData(GridData.FILL_HORIZONTAL, SWT.NONE, true, - false); - data.horizontalSpan = 2; - data.horizontalIndent = IDialogConstants.INDENT; - andButton.setLayoutData(data); - andButton.setText(MarkerMessages.AND_Title); - andButton.setSelection(andFilters); - andButton.addSelectionListener(new SelectionAdapter() { - - /* - * (non-Javadoc) - * - * @see - * org.eclipse.swt.events.SelectionAdapter#widgetSelected(org.eclipse - * .swt.events.SelectionEvent) - */ - public void widgetSelected(SelectionEvent e) { - andFilters = true; - } - }); - - orButton = new Button(filtersComposite, SWT.RADIO); - data = new GridData(GridData.FILL_HORIZONTAL, SWT.NONE, true, false); - data.horizontalSpan = 2; - data.horizontalIndent = IDialogConstants.INDENT; - orButton.setLayoutData(data); - orButton.setText(MarkerMessages.OR_Title); - orButton.setSelection(!andFilters); - orButton.addSelectionListener(new SelectionAdapter() { - - /* - * (non-Javadoc) - * - * @see - * org.eclipse.swt.events.SelectionAdapter#widgetSelected(org.eclipse - * .swt.events.SelectionEvent) - */ - public void widgetSelected(SelectionEvent e) { - andFilters = false; - } - }); - filtersList.addCheckStateListener(new ICheckStateListener() { - public void checkStateChanged(CheckStateChangedEvent event) { - updateAndOrEnblement(); - validateState(); - } - }); - return filtersComposite; } - /** - * - * @param parent - * @return {@link Control} - */ - private Control createVerticalSeperator(Composite parent) { - Label seprator = new Label(parent, SWT.SEPARATOR | SWT.VERTICAL); - return seprator; - } + private void createConfigDesc(Composite parent) { - /** - * - * @param parent - * @return {@link Control} - */ - private Control createFilterAreas(Composite parent) { + Label separator = new Label(parent, SWT.SEPARATOR | SWT.VERTICAL); + separator.setLayoutData(new GridData(GridData.FILL_VERTICAL)); + + Composite descComposite = new Composite(parent, SWT.NONE); + descComposite.setLayout(new FillLayout()); + descComposite.setLayoutData(new GridData(GridData.FILL_BOTH)); + descComposite.setBackground(parent.getBackground()); + final FormToolkit toolkit = new FormToolkit(parent.getDisplay()); parent.addDisposeListener(new DisposeListener() { public void widgetDisposed(DisposeEvent e) { toolkit.dispose(); } }); - form = toolkit.createScrolledForm(parent); + + form = toolkit.createScrolledForm(descComposite); form.setBackground(parent.getBackground()); form.getBody().setLayout(new GridLayout()); - filterAreas = generator.createFilterConfigurationFields(); + configAreas = generator.createFilterConfigurationFields(); createFieldArea(toolkit, form, scopeArea, true); - Iterator areas = filterAreas.iterator(); + Iterator areas = configAreas.iterator(); while (areas.hasNext()) { createFieldArea(toolkit, form, (FilterConfigurationArea) areas.next(), true); } - return form; + } /** @@ -523,39 +457,134 @@ expandable.setLayout(new GridLayout()); expandable.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, area .grabExcessVerticalSpace())); - expandable.addExpansionListener(new IExpansionListener() { - /* - * (non-Javadoc) - * - * @see - * org.eclipse.ui.forms.events.IExpansionListener#expansionStateChanged - * (org.eclipse.ui.forms.events.ExpansionEvent) - */ + expandable.addExpansionListener(new ExpansionAdapter() { public void expansionStateChanged(ExpansionEvent e) { - expandable.getParent().layout(true); - - } - - /* - * (non-Javadoc) - * - * @see - * org.eclipse.ui.forms.events.IExpansionListener#expansionStateChanging - * (org.eclipse.ui.forms.events.ExpansionEvent) - */ - public void expansionStateChanging(ExpansionEvent e) { - + form.reflow(true); } }); Composite sectionClient = toolkit.createComposite(expandable); - sectionClient.setLayout(new GridLayout()); + GridLayout gridLayout = new GridLayout(); + gridLayout.verticalSpacing = 3; + sectionClient.setLayout(gridLayout); sectionClient.setLayoutData(new GridData(SWT.FILL, SWT.NONE, true, false)); sectionClient.setBackground(form.getBackground()); + area.createContents(sectionClient); expandable.setClient(sectionClient); expandable.setExpanded(expand); + + } + + /** + * @param composite + */ + private void createButtons(Composite composite) { + Composite buttons = new Composite(composite, SWT.NONE); + GridLayout buttonLayout = new GridLayout(); + buttonLayout.marginWidth = 0; + buttons.setLayout(buttonLayout); + GridData buttonsData = new GridData(); + buttonsData.verticalAlignment = GridData.BEGINNING; + buttons.setLayoutData(buttonsData); + + Button addNew = new Button(buttons, SWT.PUSH); + addNew.setText(MarkerMessages.MarkerFilter_addFilterName); + addNew.addSelectionListener(new SelectionAdapter() { + public void widgetSelected(SelectionEvent e) { + addConfiguration(); + } + }); + setButtonLayoutData(addNew); + + removeButton = new Button(buttons, SWT.PUSH); + removeButton.setText(MarkerMessages.MarkerFilter_deleteSelectedName); + removeButton.addSelectionListener(new SelectionAdapter() { + public void widgetSelected(SelectionEvent e) { + removeFilters(configsTable.getSelection()); + } + }); + removeButton.setEnabled(false); + setButtonLayoutData(removeButton); + + renameButton = new Button(buttons, SWT.PUSH); + renameButton.setText(MarkerMessages.MarkerFilter_renameName); + renameButton.addSelectionListener(new SelectionAdapter() { + public void widgetSelected(SelectionEvent e) { + renameFilter(); + } + }); + renameButton.setEnabled(false); + setButtonLayoutData(renameButton); + + } + + private void renameFilter() { + + MarkerFieldFilterGroup filterGroup = getSelectionFromTable(); + + IInputValidator nameValidator = getNameValidator(filterGroup.getName(), getCurrentConfigurationNames()); + + InputDialog inputDialog = new InputDialog(getShell(), + MarkerMessages.MarkerFilterDialog_title, + MarkerMessages.MarkerFilterDialog_message, + filterGroup.getName(), nameValidator); + + if(inputDialog.open() == Window.OK) { + filterGroup.setName(inputDialog.getValue()); + configsTable.refresh(filterGroup); + } + + } + + private IInputValidator getNameValidator(final String currentName, final Collection existingNames) { + return new IInputValidator() { + + public String isValid(String newText) { + newText = newText.trim(); + if (newText.length() == 0) + return MarkerMessages.MarkerFilterDialog_emptyMessage; + if(existingNames.contains(newText) &amp;&amp; !currentName.equals(newText)) { + return NLS.bind(MarkerMessages.filtersDialog_conflictingName, newText); + } + return null; + } + }; + } + + private void createAndOrButtons(Composite parent) { + + allButton = new Button(parent, SWT.CHECK); + allButton.setText(MarkerMessages.ALL_Title); + allButton.addSelectionListener(new SelectionAdapter() { + public void widgetSelected(SelectionEvent e) { + updateShowAll(allButton.getSelection()); + } + }); + + andButton = new Button(parent, SWT.RADIO); + andButton.setText(MarkerMessages.AND_Title); + andButton.addSelectionListener(new SelectionAdapter() { + public void widgetSelected(SelectionEvent e) { + andFilters = true; + } + }); + GridData andData = new GridData(); + andData.horizontalIndent = 20; + andButton.setLayoutData(andData); + + orButton = new Button(parent, SWT.RADIO); + orButton.setText(MarkerMessages.OR_Title); + orButton.addSelectionListener(new SelectionAdapter() { + public void widgetSelected(SelectionEvent e) { + andFilters = false; + } + }); + GridData orData = new GridData(); + orData.horizontalIndent = 20; + orButton.setLayoutData(orData); + } /** @@ -563,7 +592,7 @@ * * @return Collection */ - private Collection getCurrentFilterNames() { + private Collection getCurrentConfigurationNames() { Collection names = new ArrayList(); Iterator filterIterator = filterGroups.iterator(); while (filterIterator.hasNext()) { @@ -573,120 +602,34 @@ return names; } - /** - * Opens Input Dialog for name,creates a new filterGroup, and adds it to the - * filterGroups - * - * @param cloneSelected - * true clones the selected filterGroup - * - */ - private void addNewFilter(boolean cloneSelected) { - String newName = getNewFilterName(getCurrentFilterNames(), null); - if (newName != null) { - createNewFilter(newName, cloneSelected); - } + private void addConfiguration() { + String newName = getNewConfigurationName( + getCurrentConfigurationNames(), + MarkerMessages.MarkerFilter_newFilterName); + MarkerFieldFilterGroup configuration = createConfiguration(newName); + filterGroups.add(configuration); + configsTable.refresh(); + configsTable.setSelection(new StructuredSelection(configuration)); + configsTable.setChecked(configuration, true); + updateRadioButtonsFromTable(); } - /** - * Opens Input Dialog for a new filter name - * - * @param avoidNames - * filter names to avoid - * @param initialName - * initial name of the filter - * @return new filter name or null if canceled - * - */ - private String getNewFilterName(final Collection avoidNames, + private String getNewConfigurationName(final Collection avoidNames, String initialName) { - InputDialog newDialog = new InputDialog(getShell(), - MarkerMessages.MarkerFilterDialog_title, - MarkerMessages.MarkerFilterDialog_message, - initialName != null ? initialName - : MarkerMessages.MarkerFilter_newFilterName, - getNameValidator(avoidNames)); - if (Window.OK == newDialog.open()) { - return newDialog.getValue(); + + String configName = initialName; + for (int i = 1; avoidNames.contains(configName); i++) { + configName = initialName + &apos; &apos; + i; } - return null; + return configName; } - /** - * Get IInputValidator for checking if the new name is valid - * - * @param avoidNames - * @return IInputValidator - */ - private IInputValidator getNameValidator(final Collection avoidNames) { - return new IInputValidator() { - public String isValid(String value) { - String newText = value.trim(); - if (newText.length() == 0) - return MarkerMessages.MarkerFilterDialog_emptyMessage; - if (avoidNames.contains(newText)) - return NLS.bind( - MarkerMessages.filtersDialog_conflictingName, - newText); - return null; - } - }; - } + private MarkerFieldFilterGroup createConfiguration(String newName) { - /** - * Create a new filterGroup, and adds it to the filterGroups - * - * @param cloneSelected - * true clones the selected filterGroup - * @param newName - * name of new filterGroup - */ - private void createNewFilter(String newName, boolean cloneSelected) { - MarkerFieldFilterGroup group = new MarkerFieldFilterGroup(null, + MarkerFieldFilterGroup config = new MarkerFieldFilterGroup(null, generator); - if (cloneSelected &amp;&amp; selectedFilterGroup != null) { - captureStateInto(group); // copy current values from UI - } - group.setName(newName); - filterGroups.add(group); - filtersList.refresh(); - filtersList.setSelection(new StructuredSelection(group)); - filtersList.setChecked(group, true); - updateAndOrEnblement(); - } - - /** - * Renames the supplied MarkerFieldFilterGroup - * - * @param filterGroup - */ - private void renameFilter(MarkerFieldFilterGroup filterGroup) { - if (filterGroup != null) { - Collection names = getCurrentFilterNames(); - String initial = null; - initial = filterGroup.getName(); - names.remove(initial); - String newName = getNewFilterName(names, initial); - if (newName != null) { - filterGroup.setName(newName); - filtersList.update(filterGroup, null); - } - } - } - - /** - * Enable/disable &apos;and&apos;, &apos;or&apos; buttons - */ - private void updateAndOrEnblement() { - if (filtersList.getCheckedElements().length == 0) { - andOrLabel.setEnabled(false); - andButton.setEnabled(false); - orButton.setEnabled(false); - } else { - andOrLabel.setEnabled(true); - andButton.setEnabled(true); - orButton.setEnabled(true); - } + config.setName(newName); + return config; } /** @@ -715,29 +658,51 @@ return filterGroups; } - /** - * Load the dialog settings. - */ - private void loadDialogSettings() { + private IStructuredSelection getInitialSelection() { IDialogSettings settings = getDialogSettings(); - String selection = settings.get(SELECTED_FILTER_GROUP); + String selectedGroupName = settings.get(SELECTED_FILTER_GROUP); - if (selection != null) { + MarkerFieldFilterGroup selectedGroup = null; + if (selectedGroupName == null &amp;&amp; filterGroups.size() &gt; 0) { + selectedGroup = (MarkerFieldFilterGroup) filterGroups.iterator() + .next(); + } else { + Iterator groups = filterGroups.iterator(); while (groups.hasNext()) { MarkerFieldFilterGroup group = (MarkerFieldFilterGroup) groups .next(); - if (group.getName().equals(selection)) { - filtersList.setSelection(new StructuredSelection(group)); - return; + if (group.getName().equals(selectedGroupName)) { + selectedGroup = group; + break; } } } - // If there is no initial selection make one - filtersList.setSelection(new StructuredSelection(filterGroups - .iterator().next())); + String[] selectedElementNames = settings + .getArray(PREV_SELECTED_ELEMENTS); + List selectedElements = new ArrayList(); + + if (selectedElementNames != null) { + for (int i = 0; i &lt; selectedElementNames.length; i++) { + Iterator filterGroupIterator = filterGroups.iterator(); + while (filterGroupIterator.hasNext()) { + MarkerFieldFilterGroup group = (MarkerFieldFilterGroup) filterGroupIterator + .next(); + if (Util.equals(group.getName(), selectedElementNames[i])) { + selectedElements.add(group); + break; + } + } + } + previouslyChecked = selectedElements.toArray(); + } + + if (selectedGroup != null) { + return new StructuredSelection(selectedGroup); + } + return StructuredSelection.EMPTY; } /** @@ -759,68 +724,6 @@ return returnFilters; } - private void validateState() { - if (limitBttn == null || limitBttn.isDisposed()) { - handleStatusUdpate(IStatus.INFO, null); - } else { - boolean limitLess = !limitBttn.getSelection(); - if (limitLess) { - if (filtersList == null - || filtersList.getControl().isDisposed()) { - handleStatusUdpate(IStatus.INFO, null); - } else { - boolean warnning = filtersList.getCheckedElements() == null - || filtersList.getCheckedElements().length == 0; - if (warnning) { - handleStatusUdpate( - IStatus.WARNING, - MarkerMessages.filtersDialogDeselectedFiltersMessage - + MarkerMessages.MarkerFilterDialog_YouHaveDisabledMarkerLimit); - - } else { - handleStatusUdpate( - IStatus.WARNING, - MarkerMessages.MarkerFilterDialog_YouHaveDisabledMarkerLimit); - } - } - } else { - if (limitEditor == null || limitEditor.isDisposed()) { - handleStatusUdpate(IStatus.INFO, null); - } else { - String value = limitEditor.getText().trim(); - boolean validLimit = value.length() != 0; - if (validLimit) { - try { - int limit = Integer.parseInt(value); - if (limit &lt;= 0) { - validLimit = false; - } - } catch (Exception e) { - validLimit = false; - } - } - if (filtersList == null - || filtersList.getControl().isDisposed()) { - handleStatusUdpate(IStatus.INFO, null); - } else { - boolean warnning = filtersList.getCheckedElements().length == 0; - if (validLimit) { - if (warnning) { - handleStatusUdpate( - IStatus.WARNING, - MarkerMessages.filtersDialogDeselectedFiltersMessage); - } else { - handleStatusUdpate(IStatus.INFO, null); - } - } else { - handleStatusUdpate(IStatus.ERROR, null); - } - } - } - } - } - } - /* * (non-Javadoc) * @@ -828,78 +731,49 @@ */ protected void okPressed() { - IDEWorkbenchPlugin - .getDefault() - .getPreferenceStore() - .setValue(IDEInternalPreferences.MARKER_LIMITS_VALUE, - getLimitValue()); - IDEWorkbenchPlugin - .getDefault() - .getPreferenceStore() - .setValue(IDEInternalPreferences.USE_MARKER_LIMITS, - isLimitEnabled()); - IDEWorkbenchPlugin.getDefault().savePluginPreferences(); + generator.setMarkerLimitsEnabled(limitButton.getSelection()); + generator.setMarkerLimits(Integer.parseInt(limitText.getText().trim())); Iterator filterGroupIterator = filterGroups.iterator(); while (filterGroupIterator.hasNext()) { MarkerFieldFilterGroup group = (MarkerFieldFilterGroup) filterGroupIterator .next(); - group.setEnabled(filtersList.getChecked(group)); + group.setEnabled(configsTable.getChecked(group)); } - captureStateInto(selectedFilterGroup); + + storeConfiguration(); + saveDialogSettings(); super.okPressed(); } - /** - * - * Updates the filterGroup with the values showing in the dialog&apos;s GUI. - * - * @param filterGroup - * - */ - private void captureStateInto(MarkerFieldFilterGroup filterGroup) { - if (filterGroup != null) { - - scopeArea.applyToGroup(filterGroup); - Iterator areas = filterAreas.iterator(); - while (areas.hasNext()) { - FilterConfigurationArea area = (FilterConfigurationArea) areas - .next(); - - // Handle the internal special cases - if (area instanceof GroupFilterConfigurationArea) - ((GroupFilterConfigurationArea) area) - .applyToGroup(filterGroup); - area.apply(filterGroup.getFilter(area.getField())); - } - } - } - - /* - * (non-Javadoc) - * - * @see org.eclipse.ui.preferences.ViewSettingsDialog#performDefaults() - */ protected void performDefaults() { - setLimitEnabled(IDEWorkbenchPlugin.getDefault().getPreferenceStore() - .getDefaultBoolean(IDEInternalPreferences.USE_MARKER_LIMITS)); - limitBttn.setSelection(isLimitEnabled()); - setLimitValue(IDEWorkbenchPlugin.getDefault().getPreferenceStore() - .getDefaultInt(IDEInternalPreferences.MARKER_LIMITS_VALUE)); - limitEditor.setText(Integer.toString(getLimitValue())); - - filterGroups.clear(); - filterGroups.addAll(generator.getDeclaredFilters()); - filtersList.refresh(); - filtersList.setSelection(new StructuredSelection( - filterGroups.size() &gt; 1 ? filterGroups.iterator().next() - : new Object[0])); andFilters = false; andButton.setSelection(andFilters); orButton.setSelection(!andFilters); + + filterGroups.clear(); + filterGroups.addAll(generator.getDeclaredFilters()); + configsTable.refresh(); + configsTable.setSelection(new StructuredSelection( + filterGroups.size() &gt; 1 ? filterGroups.iterator().next() + : new Object[0])); + + IPreferenceStore preferenceStore = IDEWorkbenchPlugin.getDefault() + .getPreferenceStore(); + boolean useMarkerLimits = preferenceStore + .getBoolean(IDEInternalPreferences.USE_MARKER_LIMITS); + int markerLimits = useMarkerLimits ? preferenceStore + .getInt(IDEInternalPreferences.MARKER_LIMITS_VALUE) : 100; + + limitButton.setSelection(useMarkerLimits); + limitsLabel.setEnabled(useMarkerLimits); + limitText.setEnabled(useMarkerLimits); + limitText.setText(Integer.toString(markerLimits)); + + updateRadioButtonsFromTable(); } /** @@ -910,63 +784,52 @@ private void removeFilters(ISelection selection) { filterGroups.remove(((IStructuredSelection) selection) .getFirstElement()); - filtersList.refresh(); - updateAndOrEnblement(); + configsTable.refresh(); + updateRadioButtonsFromTable(); } /** * Save the dialog settings for the receiver. */ private void saveDialogSettings() { + IDialogSettings settings = getDialogSettings(); if (selectedFilterGroup != null) settings.put(SELECTED_FILTER_GROUP, selectedFilterGroup.getName()); + String[] selectedNames = new String[previouslyChecked.length]; + for (int i = 0; i &lt; selectedNames.length; i++) { + selectedNames[i] = ((MarkerFieldFilterGroup)previouslyChecked[i]).getName(); + } + settings.put(PREV_SELECTED_ELEMENTS, selectedNames); + } - /** - * @return Returns the limitValue. - */ - private int getLimitValue() { - return limitValue; + private void updateButtonEnablement(MarkerFieldFilterGroup group) { + boolean enabled = group != null &amp;&amp; !group.isSystem(); + removeButton.setEnabled(enabled); + renameButton.setEnabled(enabled); } - /** - * @param limitValue - * The limitValue to set. - */ - private void setLimitValue(int limitValue) { - this.limitValue = limitValue; - } - - /** - * @return Returns true if limit is enabled. - */ - private boolean isLimitEnabled() { - return limitEnabled; - } - - /** - * @param limitEnabled - * The limitEnabled to set. - */ - private void setLimitEnabled(boolean limitEnabled) { - this.limitEnabled = limitEnabled; + private MarkerFieldFilterGroup getSelectionFromTable() { + IStructuredSelection selection = (IStructuredSelection) configsTable + .getSelection(); + return (MarkerFieldFilterGroup) selection.getFirstElement(); } /** * Set the control and all of it&apos;s visibility state to visible. * - * @param visible + * @param enabled * @param control */ - private void setEnabled(boolean visible, Control control) { - control.setEnabled(visible); + private void setEnabled(boolean enabled, Control control) { + control.setEnabled(enabled); if (control instanceof Composite) { Control[] children = ((Composite) control).getChildren(); for (int i = 0; i &lt; children.length; i++) { - setEnabled(visible, children[i]); + setEnabled(enabled, children[i]); } } } @@ -974,52 +837,8 @@ /** * Set the enablement state of the fields to enabled. */ - private void setFieldsEnabled(boolean visible) { - setEnabled(visible, form); + private void setFieldsEnabled(boolean enabled) { + setEnabled(enabled, form); } - /** - * Set the filter that is being worked on. - * - * @param markerFieldFilterGroup - */ - private void setSelectedFilter(MarkerFieldFilterGroup markerFieldFilterGroup) { - if (selectedFilterGroup == markerFieldFilterGroup) { - return; - } - removeButton - .setEnabled(!(markerFieldFilterGroup == null || markerFieldFilterGroup - .isSystem())); - renameButton - .setEnabled(!(markerFieldFilterGroup == null || markerFieldFilterGroup - .isSystem())); - cloneButton.setEnabled(markerFieldFilterGroup != null); - - MarkerFieldFilterGroup old = selectedFilterGroup; - selectedFilterGroup = markerFieldFilterGroup; - if (old != null) - scopeArea.applyToGroup(old); - - if (selectedFilterGroup == null) { - setFieldsEnabled(false); - return; - } - - setFieldsEnabled(true); - scopeArea.initializeFromGroup(selectedFilterGroup); - Iterator areas = filterAreas.iterator(); - while (areas.hasNext()) { - FilterConfigurationArea area = (FilterConfigurationArea) areas - .next(); - if (old != null) { - if (area instanceof GroupFilterConfigurationArea) - ((GroupFilterConfigurationArea) area).applyToGroup(old); - area.apply(old.getFilter(area.getField())); - } - if (area instanceof GroupFilterConfigurationArea) - ((GroupFilterConfigurationArea) area) - .initializeFromGroup(selectedFilterGroup); - area.initialize(selectedFilterGroup.getFilter(area.getField())); - } - } } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/FiltersContribution.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/FiltersContribution.java index 1a8a44c..7787272 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/FiltersContribution.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/FiltersContribution.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007, 2008 IBM Corporation and others. + * Copyright (c) 2007, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -38,8 +38,11 @@ * @see org.eclipse.ui.actions.CompoundContributionItem#getContributionItems() */ protected IContributionItem[] getContributionItems() { + final ExtendedMarkersView view = getView(); + if (view == null) + return new IContributionItem[0]; - Collection groups = getView().getAllFilters(); + Collection groups = view.getAllFilters(); if (groups.size() == 0) return new IContributionItem[0]; @@ -60,7 +63,6 @@ public void fill(Menu menu, int index) { MenuItem item = new MenuItem(menu, SWT.CHECK); item.setText(group.getName()); - ExtendedMarkersView view = getView(); item.addListener(SWT.Selection, getMenuItemListener(group, view)); @@ -126,7 +128,9 @@ * @see org.eclipse.swt.widgets.Listener#handleEvent(org.eclipse.swt.widgets.Event) */ public void handleEvent(Event event) { - getView().disableAllFilters(); + ExtendedMarkersView view = getView(); + if (view != null) + view.disableAllFilters(); } }); } @@ -138,7 +142,11 @@ * filters are selected. */ private boolean noFiltersSelected() { - Iterator groupsIterator = getView().getAllFilters().iterator(); + ExtendedMarkersView view = getView(); + if (view == null) + return true; + + Iterator groupsIterator= view.getAllFilters().iterator(); while (groupsIterator.hasNext()) { MarkerFieldFilterGroup group = (MarkerFieldFilterGroup) groupsIterator .next(); diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/GroupsContribution.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/GroupsContribution.java index 93d23dd..1001840 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/GroupsContribution.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/GroupsContribution.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007, 2009 IBM Corporation and others. + * Copyright (c) 2007, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -44,8 +44,11 @@ * @see org.eclipse.ui.actions.CompoundContributionItem#getContributionItems() */ protected IContributionItem[] getContributionItems() { + ExtendedMarkersView view = getView(); + if (view == null) + return new IContributionItem[0]; - Collection groups = getView().getBuilder().getGenerator().getMarkerGroups(); + Collection groups = view.getBuilder().getGenerator().getMarkerGroups(); if (groups.isEmpty()) return new IContributionItem[0]; diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerCategory.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerCategory.java index d63005c..baa339b 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerCategory.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerCategory.java @@ -94,13 +94,14 @@ // new Object[] { getName() }); //} int size = getChildrenCount(); - int limit = MarkerSupportInternalUtilities.getMarkerLimit(); + MarkerContentGenerator generator = markers.getBuilder().getGenerator(); + boolean limitsEnabled = generator.isMarkerLimitsEnabled(); + int limit = generator.getMarkerLimits(); - if (limit &gt; 0 &amp;&amp; size &gt; limit) { + if (limitsEnabled &amp;&amp; size &gt; limit) { return NLS.bind(MarkerMessages.Category_Limit_Label, new Object[] { name, - String.valueOf(MarkerSupportInternalUtilities - .getMarkerLimit()), + String.valueOf(limit), String.valueOf(getChildrenCount()) }); } if (size == 1) diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerContentGenerator.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerContentGenerator.java index 4de4cd6..bb99427 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerContentGenerator.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerContentGenerator.java @@ -67,6 +67,8 @@ private static final String TAG_GROUP_ENTRY = &quot;filterGroup&quot;; //$NON-NLS-1$ private static final String TAG_AND = &quot;andFilters&quot;; //$NON-NLS-1$ private static final String TAG_LEGACY_FILTER_ENTRY = &quot;filter&quot;; //$NON-NLS-1$ + private static final String TAG_MARKER_LIMIT = &quot;markerLimit&quot;; //$NON-NLS-1$ + private static final String TAG_MARKER_LIMIT_ENABLED = &quot;markerLimitEnabled&quot;; //$NON-NLS-1$ /*Use this to indicate filter change rather than a null*/ private final Collection FILTERS_CHANGED = Collections.EMPTY_SET; @@ -81,6 +83,8 @@ private Collection enabledFilters; private Collection filters; private boolean andFilters = false; + private int markerLimits = 100; + private boolean markerLimitsEnabled = true; /** * focusResources @@ -199,11 +203,8 @@ return hidden.toArray(); } - void initialise(IMemento memento) { - initialiseVisibleFields(memento); - } + void saveState(IMemento memento, MarkerField[] displayedFields) { - void saveSate(IMemento memento, MarkerField[] displayedFields) { for (int i = 0; i &lt; displayedFields.length; i++) { memento.createChild(TAG_COLUMN_VISIBILITY, displayedFields[i] .getConfigurationElement().getAttribute( @@ -212,48 +213,62 @@ } void restoreState(IMemento memento) { - initialiseVisibleFields(memento); - } - /** - * Initialize the visible fields based on the initial settings or the - * contents of the {@link IMemento} - * - * @param memento - * IMemento - */ - private void initialiseVisibleFields(IMemento memento) { + initDefaults(); - if (memento == null - || memento.getChildren(TAG_COLUMN_VISIBILITY).length == 0) { - MarkerField[] initialFields = getInitialVisible(); - - visibleFields = new MarkerField[initialFields.length]; - System.arraycopy(initialFields, 0, visibleFields, 0, - initialFields.length); + if (memento == null) { return; } - - IMemento[] visible = memento.getChildren(TAG_COLUMN_VISIBILITY); - Collection newVisible = new ArrayList(); - - MarkerField[] all = getAllFields(); - Hashtable allTable = new Hashtable(); - - for (int i = 0; i &lt; all.length; i++) { - allTable.put(all[i].getConfigurationElement().getAttribute( - MarkerSupportInternalUtilities.ATTRIBUTE_ID), all[i]); + + Integer limits = memento.getInteger(TAG_MARKER_LIMIT); + if (limits != null) { + markerLimits = limits.intValue(); } - for (int i = 0; i &lt; visible.length; i++) { - String key = visible[i].getID(); - if (allTable.containsKey(key)) { - newVisible.add(allTable.get(key)); + Boolean limitsEnabled = memento.getBoolean(TAG_MARKER_LIMIT_ENABLED); + if (limitsEnabled != null) { + markerLimitsEnabled = limitsEnabled.booleanValue(); + } + + if (memento.getChildren(TAG_COLUMN_VISIBILITY).length != 0) { + + IMemento[] visible = memento.getChildren(TAG_COLUMN_VISIBILITY); + Collection newVisible = new ArrayList(); + + MarkerField[] all = getAllFields(); + Hashtable allTable = new Hashtable(); + + for (int i = 0; i &lt; all.length; i++) { + allTable.put(all[i].getConfigurationElement().getAttribute( + MarkerSupportInternalUtilities.ATTRIBUTE_ID), all[i]); } + + for (int i = 0; i &lt; visible.length; i++) { + String key = visible[i].getID(); + if (allTable.containsKey(key)) { + newVisible.add(allTable.get(key)); + } + } + + visibleFields = new MarkerField[newVisible.size()]; + newVisible.toArray(visibleFields); } + } - visibleFields = new MarkerField[newVisible.size()]; - newVisible.toArray(visibleFields); + private void initDefaults() { + + IPreferenceStore store = IDEWorkbenchPlugin.getDefault() + .getPreferenceStore(); + markerLimitsEnabled = store + .getBoolean(IDEInternalPreferences.USE_MARKER_LIMITS); + markerLimits = store.getInt(IDEInternalPreferences.MARKER_LIMITS_VALUE); + + MarkerField[] initialFields = getInitialVisible(); + + visibleFields = new MarkerField[initialFields.length]; + System.arraycopy(initialFields, 0, visibleFields, 0, + initialFields.length); + } /** @@ -390,6 +405,34 @@ boolean andFilters() { return andFilters; } + + /** + * @return Returns the markerLimits. + */ + public int getMarkerLimits() { + return markerLimits; + } + + /** + * @param markerLimits The markerLimits to set. + */ + public void setMarkerLimits(int markerLimits) { + this.markerLimits = markerLimits; + } + + /** + * @return Returns the markerLimitsEnabled. + */ + public boolean isMarkerLimitsEnabled() { + return markerLimitsEnabled; + } + + /** + * @param markerLimitsEnabled The markerLimitsEnabled to set. + */ + public void setMarkerLimitsEnabled(boolean markerLimitsEnabled) { + this.markerLimitsEnabled = markerLimitsEnabled; + } /** * @return Collection of declared MarkerFieldFilterGroup(s) @@ -426,6 +469,23 @@ } + private void loadLimitSettings(IMemento memento) { + + if (memento == null) + return; + + Integer limits = memento.getInteger(TAG_MARKER_LIMIT); + if (limits != null) { + markerLimits = limits.intValue(); + } + + Boolean limitsEnabled = memento.getBoolean(TAG_MARKER_LIMIT_ENABLED); + if (limitsEnabled != null) { + markerLimitsEnabled = limitsEnabled.booleanValue(); + } + + } + /** * Load the settings from the memento. * @@ -464,8 +524,10 @@ return; try { - loadFilterSettings(XMLMemento.createReadRoot(new StringReader( - mementoString))); + XMLMemento root = XMLMemento.createReadRoot(new StringReader( + mementoString)); + loadLimitSettings(root); + loadFilterSettings(root); } catch (WorkbenchException e) { StatusManager.getManager().handle(e.getStatus()); } @@ -596,6 +658,7 @@ private void writeFiltersPreference() { XMLMemento memento = XMLMemento.createWriteRoot(TAG_FILTERS_SECTION); + writeLimitSettings(memento); writeFiltersSettings(memento); StringWriter writer = new StringWriter(); @@ -630,6 +693,13 @@ } } + private void writeLimitSettings(XMLMemento memento) { + + memento.putInteger(TAG_MARKER_LIMIT, markerLimits); + memento.putBoolean(TAG_MARKER_LIMIT_ENABLED, markerLimitsEnabled); + + } + /** * Write the settings for the filters to the memento. * diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerLocationField.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerLocationField.java index 6063488..7bfe426 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerLocationField.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerLocationField.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007, 2008 IBM Corporation and others. + * Copyright (c) 2007, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -41,7 +41,7 @@ * @return int */ public int getDefaultColumnWidth(Control control) { - return 10 * MarkerSupportInternalUtilities.getFontWidth(control); + return 15 * MarkerSupportInternalUtilities.getFontWidth(control); } /* diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerSupportInternalUtilities.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerSupportInternalUtilities.java index 3e582f5..09d20d2 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerSupportInternalUtilities.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerSupportInternalUtilities.java @@ -310,23 +310,6 @@ } - /** - * Get the marker limit for the receiver. - * - * @return int - */ - static int getMarkerLimit() { - - // If limits are enabled return it. Otherwise return -1 - if (IDEWorkbenchPlugin.getDefault().getPreferenceStore().getBoolean( - IDEInternalPreferences.USE_MARKER_LIMITS)) { - return IDEWorkbenchPlugin.getDefault().getPreferenceStore().getInt( - IDEInternalPreferences.MARKER_LIMITS_VALUE); - - } - return -1; - - } /** * Return the severity value for item. A value of -1 indicates diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerViewerContentProvider.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerViewerContentProvider.java index f4d9852..386c89d 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerViewerContentProvider.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkerViewerContentProvider.java @@ -24,6 +24,14 @@ // private MarkersTreeViewer viewer; private Object input; + private final ExtendedMarkersView markersView; + + /** + * @param extendedMarkersView + */ + public MarkerViewerContentProvider(ExtendedMarkersView extendedMarkersView) { + this.markersView = extendedMarkersView; + } /* * (non-Javadoc) @@ -76,13 +84,16 @@ * @return Object[] */ private Object[] getLimitedChildren(Object[] children) { - int newLength = MarkerSupportInternalUtilities.getMarkerLimit(); - if (newLength &gt; 0 &amp;&amp; newLength &lt; children.length) { - Object[] newChildren = new Object[newLength]; - System.arraycopy(children, 0, newChildren, 0, newLength); - return newChildren; - } - return children; + + boolean limitsEnabled = markersView.getGenerator().isMarkerLimitsEnabled(); + int limits = markersView.getGenerator().getMarkerLimits(); + + if (!limitsEnabled || limits &lt;= 0 || limits &gt; children.length) + return children; + + Object[] newChildren = new Object[limits]; + System.arraycopy(children, 0, newChildren, 0, limits); + return newChildren; } /* diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/Markers.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/Markers.java index 978c0c3..377d0cf 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/Markers.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/Markers.java @@ -183,13 +183,18 @@ /** * get marker limit to show, if any. * - * @param avaliable + * @param available */ - private int getShowingLimit(int avaliable) { - int limit = MarkerSupportInternalUtilities.getMarkerLimit(); + private int getShowingLimit(int available) { + + boolean limitsEnabled = builder.getGenerator().isMarkerLimitsEnabled(); + if(!limitsEnabled) + return available; + + int limit = builder.getGenerator().getMarkerLimits(); int effLimit = limit; - if (avaliable &lt; effLimit || limit &lt;= 0) { - effLimit = avaliable; + if (available &lt; effLimit || limit &lt;= 0) { + effLimit = available; } return effLimit; } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkersContribution.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkersContribution.java index 990c326..84c0b25 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkersContribution.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkersContribution.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007, 2008 IBM Corporation and others. + * Copyright (c) 2007, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -45,7 +45,7 @@ /** * Get the view this contribution is working on. * - * @return ExtendedMarkersView + * @return ExtendedMarkersView or null if the active view isn&apos;t a marker view */ ExtendedMarkersView getView() { IWorkbenchWindow active = PlatformUI.getWorkbench() @@ -56,7 +56,7 @@ if (page == null) return null; IWorkbenchPart part = page.getActivePart(); - if (part == null) + if (!(part instanceof ExtendedMarkersView)) return null; return (ExtendedMarkersView) part; diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkersPropertyPage.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkersPropertyPage.java index f124dfc..a3bec66 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkersPropertyPage.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkersPropertyPage.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007, 2010 IBM Corporation and others. + * Copyright (c) 2007, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -122,7 +122,7 @@ Label label = new Label(parent, SWT.NONE); label.setText(MarkerMessages.propertiesDialog_creationTime_text); - Label creationTime = new Label(parent, SWT.NONE); + Text creationTime = new Text(parent, SWT.SINGLE | SWT.READ_ONLY); creationTime.setText(Util.getCreationTime(marker)); } @@ -236,8 +236,7 @@ severityImage.setImage(Util.getImage(marker.getAttribute( IMarker.SEVERITY, -1))); - Label severityLabel = new Label(composite, SWT.NONE); - + Text severityLabel = new Text(composite, SWT.SINGLE | SWT.READ_ONLY); int severity = marker.getAttribute(IMarker.SEVERITY, -1); if (severity == IMarker.SEVERITY_ERROR) { severityLabel.setText(MarkerMessages.propertiesDialog_errorLabel); diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkersViewColumnsDialog.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkersViewColumnsDialog.java index a613b1f..5b8b075 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkersViewColumnsDialog.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/MarkersViewColumnsDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2008, 2009 IBM Corporation and others. + * Copyright (c) 2008, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -268,5 +268,29 @@ this.width = width; visible = false; } + + public int hashCode() { + final int prime = 31; + int result = 1; + result = prime * result + ((field == null) ? 0 : field.hashCode()); + return result; + } + + public boolean equals(Object obj) { + if (this == obj) + return true; + if (obj == null) + return false; + if (getClass() != obj.getClass()) + return false; + FieldEntry other = (FieldEntry) obj; + if (field == null) { + if (other.field != null) + return false; + } else if (!field.equals(other.field)) + return false; + return true; + } + } } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/ProblemsView.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/ProblemsView.java index 44c6072..2f049da 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/ProblemsView.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/ProblemsView.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2008, 2010 IBM Corporation and others. + * Copyright (c) 2008, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -10,10 +10,15 @@ ******************************************************************************/ package org.eclipse.ui.internal.views.markers; +import org.eclipse.core.commands.operations.IUndoContext; +import org.eclipse.core.resources.IMarker; +import org.eclipse.core.runtime.Assert; import org.eclipse.swt.graphics.Image; +import org.eclipse.ui.ide.undo.WorkspaceUndoUtil; import org.eclipse.ui.internal.WorkbenchPlugin; import org.eclipse.ui.internal.ide.IDEInternalWorkbenchImages; import org.eclipse.ui.views.markers.MarkerSupportView; +import org.eclipse.ui.views.markers.internal.MarkerMessages; import org.eclipse.ui.views.markers.internal.MarkerSupportRegistry; @@ -44,4 +49,22 @@ setTitleImage(image); } + /* + * (non-Javadoc) + * @see org.eclipse.ui.views.markers.internal.MarkerView#getUndoContext() + * @since 3.7 + */ + protected IUndoContext getUndoContext() { + return WorkspaceUndoUtil.getProblemsUndoContext(); + } + + /* (non-Javadoc) + * @see org.eclipse.ui.internal.views.markers.ExtendedMarkersView#getDeleteOperationName(org.eclipse.core.resources.IMarker[]) + * @since 3.7 + */ + protected String getDeleteOperationName(IMarker[] markers) { + Assert.isLegal(markers.length &gt; 0); + return markers.length == 1 ? MarkerMessages.deleteProblemMarker_operationName : MarkerMessages.deleteProblemMarkers_operationName; + } + } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/QuickFixPage.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/QuickFixPage.java index 23955fd..05899da 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/QuickFixPage.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/QuickFixPage.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007, 2010 IBM Corporation and others. + * Copyright (c) 2007, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -292,7 +292,7 @@ */ public int compare(Viewer viewer, Object e1, Object e2) { return ((IMarkerResolution) e1).getLabel().compareTo( - ((IMarkerResolution) e1).getLabel()); + ((IMarkerResolution)e2).getLabel()); } }); diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/SortFieldContribution.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/SortFieldContribution.java index cff6aa8..2879a0c 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/SortFieldContribution.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/SortFieldContribution.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007, 2009 IBM Corporation and others. + * Copyright (c) 2007, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -51,8 +51,11 @@ * @see org.eclipse.ui.actions.CompoundContributionItem#getContributionItems() */ protected IContributionItem[] getContributionItems() { + ExtendedMarkersView view = getView(); + if (view == null) + return new IContributionItem[0]; - MarkerField[] fields = getView().getVisibleFields(); + MarkerField[] fields = view.getVisibleFields(); if (fields.length == 0) return new IContributionItem[0]; diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/TasksView.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/TasksView.java index 9e47707..770aaf2 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/TasksView.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/TasksView.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2008 IBM Corporation and others. + * Copyright (c) 2008, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -8,11 +8,16 @@ * Contributors: * IBM Corporation - initial API and implementation ******************************************************************************/ - package org.eclipse.ui.internal.views.markers; +import org.eclipse.core.commands.operations.IUndoContext; +import org.eclipse.core.resources.IMarker; +import org.eclipse.core.runtime.Assert; +import org.eclipse.ui.ide.undo.WorkspaceUndoUtil; import org.eclipse.ui.views.markers.MarkerSupportView; +import org.eclipse.ui.views.markers.internal.MarkerMessages; import org.eclipse.ui.views.markers.internal.MarkerSupportRegistry; + /** * TasksView is the ide view for showing tasks. @@ -28,4 +33,23 @@ super(MarkerSupportRegistry.TASKS_GENERATOR); } + + /* + * (non-Javadoc) + * @see org.eclipse.ui.views.markers.internal.MarkerView#getUndoContext() + * @since 3.7 + */ + protected IUndoContext getUndoContext() { + return WorkspaceUndoUtil.getTasksUndoContext(); + } + + /* (non-Javadoc) + * @see org.eclipse.ui.internal.views.markers.ExtendedMarkersView#getDeleteOperationName(org.eclipse.core.resources.IMarker[]) + * @since 3.7 + */ + protected String getDeleteOperationName(IMarker[] markers) { + Assert.isLegal(markers.length &gt; 0); + return markers.length == 1 ? MarkerMessages.deleteTaskMarker_operationName : MarkerMessages.deleteTaskMarkers_operationName; + } + } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/TypesConfigurationArea.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/TypesConfigurationArea.java index 3a6bd52..9833332 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/TypesConfigurationArea.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/TypesConfigurationArea.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007, 2010 IBM Corporation and others. + * Copyright (c) 2007, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -315,7 +315,7 @@ gridData.widthHint = Dialog.convertVerticalDLUsToPixels( getFontMetrics(), 100); gridData.heightHint = Dialog.convertVerticalDLUsToPixels( - getFontMetrics(), 75); + getFontMetrics(), 50); final ITreeContentProvider typesContentProvider = getTypesContentProvider(); typesViewer.getControl().setLayoutData(gridData); diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/ViewerColumnsDialog.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/ViewerColumnsDialog.java index 3c3ba09..fe195a4 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/ViewerColumnsDialog.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/views/markers/ViewerColumnsDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2010 IBM Corporation and others. + * Copyright (c) 2010, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -20,17 +20,22 @@ import org.eclipse.core.runtime.IStatus; import org.eclipse.jface.resource.JFaceResources; +import org.eclipse.jface.viewers.ArrayContentProvider; import org.eclipse.jface.viewers.ISelection; import org.eclipse.jface.viewers.ISelectionChangedListener; -import org.eclipse.jface.viewers.IStructuredContentProvider; import org.eclipse.jface.viewers.IStructuredSelection; import org.eclipse.jface.viewers.ITableLabelProvider; import org.eclipse.jface.viewers.LabelProvider; import org.eclipse.jface.viewers.SelectionChangedEvent; +import org.eclipse.jface.viewers.StructuredSelection; import org.eclipse.jface.viewers.TableViewer; -import org.eclipse.jface.viewers.Viewer; import org.eclipse.swt.SWT; +import org.eclipse.swt.events.ModifyEvent; +import org.eclipse.swt.events.ModifyListener; +import org.eclipse.swt.events.VerifyEvent; +import org.eclipse.swt.events.VerifyListener; import org.eclipse.swt.graphics.Image; +import org.eclipse.swt.graphics.Point; import org.eclipse.swt.layout.FillLayout; import org.eclipse.swt.layout.GridData; import org.eclipse.swt.layout.GridLayout; @@ -39,7 +44,6 @@ import org.eclipse.swt.widgets.Control; import org.eclipse.swt.widgets.Display; import org.eclipse.swt.widgets.Event; -import org.eclipse.swt.widgets.Group; import org.eclipse.swt.widgets.Label; import org.eclipse.swt.widgets.Listener; import org.eclipse.swt.widgets.Shell; @@ -75,20 +79,10 @@ private Button toVisibleBtt, toNonVisibleBtt; + private Label widthLabel; private Text widthText; - /** - * A listener to validate positive integer numbers only - */ - Listener postiveIntTextListener = new Listener() { - private String intialValue; - - public void handleEvent(Event event) { - intialValue = intialValue != null ? intialValue : Integer - .toString(0); - intialValue = handleIntegerFieldChange(event, intialValue); - } - }; + private Point tableLabelSize; /** * Create a new instance of the receiver. @@ -126,33 +120,29 @@ } } - /* (non-Javadoc) - * @see org.eclipse.ui.internal.views.markers.ViewerSettingsAndStatusDialog#createDialogContentArea(org.eclipse.swt.widgets.Composite) + /* + * (non-Javadoc) + * + * @see org.eclipse.ui.internal.views.markers.ViewerSettingsAndStatusDialog# + * createDialogContentArea(org.eclipse.swt.widgets.Composite) */ protected Control createDialogContentArea(Composite dialogArea) { - return createColumnsArea(dialogArea); - } - - /** - * Create the controls to configure columns. - * - * @param dialogArea - * @return {@link Control} - */ - Control createColumnsArea(Composite dialogArea) { - Group columnArea = new Group(dialogArea, SWT.NONE); - columnArea.setLayout(new GridLayout(4, false)); - GridData gData = new GridData(GridData.FILL_BOTH - | GridData.GRAB_HORIZONTAL | GridData.GRAB_VERTICAL); - columnArea.setLayoutData(gData); - columnArea.setText(MarkerMessages.MarkerPreferences_ColumnGroupTitle); + Composite composite = new Composite(dialogArea, SWT.NONE); + GridLayout gridLayout = new GridLayout(4, false); + gridLayout.marginHeight = 0; + composite.setLayout(gridLayout); + composite.setLayoutData(new GridData(GridData.FILL_BOTH)); - createInvisibleTable(columnArea); - createMoveButtons(columnArea); - createVisibleTable(columnArea); - createUpDownBtt(columnArea); - createWidthArea(columnArea); - return columnArea; + createInvisibleTable(composite); + createMoveButtons(composite); + createVisibleTable(composite); + createUpDownBtt(composite); + createWidthArea(composite); + Object element = visibleViewer.getElementAt(0); + if (element != null) + visibleViewer.setSelection(new StructuredSelection(element)); + visibleViewer.getTable().setFocus(); + return composite; } /** @@ -162,25 +152,29 @@ */ Control createUpDownBtt(Composite parent) { Composite composite = new Composite(parent, SWT.NONE); - GridLayout layout = new GridLayout(1, true); - layout.horizontalSpacing = 0; - layout.marginRight = -1; - layout.marginLeft = -1; - layout.marginWidth = 0; - composite.setLayout(layout); - composite.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL - | GridData.VERTICAL_ALIGN_END)); - upButton = new Button(composite, SWT.PUSH); + GridLayout compositeLayout = new GridLayout(); + compositeLayout.marginHeight = 0; + compositeLayout.marginWidth = 0; + composite.setLayout(compositeLayout); + composite.setLayoutData(new GridData(SWT.NONE, SWT.FILL, false, true)); + + Composite bttArea = new Composite(composite, SWT.NONE); + GridLayout layout = new GridLayout(); + layout.marginHeight = 0; + bttArea.setLayout(layout); + bttArea.setLayoutData(new GridData(SWT.NONE, SWT.CENTER, false, true)); + upButton = new Button(bttArea, SWT.PUSH); upButton.setText(JFaceResources.getString(&quot;ConfigureColumnsDialog_up&quot;)); //$NON-NLS-1$ upButton.addListener(SWT.Selection, new Listener() { public void handleEvent(Event event) { handleUpButton(event); } }); - upButton.setLayoutData(new GridData(GridData.FILL_HORIZONTAL)); + setButtonLayoutData(upButton); + ((GridData)upButton.getLayoutData()).verticalIndent = tableLabelSize.y; upButton.setEnabled(false); - downButton = new Button(composite, SWT.PUSH); + downButton = new Button(bttArea, SWT.PUSH); downButton.setText(JFaceResources .getString(&quot;ConfigureColumnsDialog_down&quot;)); //$NON-NLS-1$ downButton.addListener(SWT.Selection, new Listener() { @@ -188,9 +182,9 @@ handleDownButton(event); } }); - downButton.setLayoutData(new GridData(GridData.FILL_HORIZONTAL)); + setButtonLayoutData(downButton); downButton.setEnabled(false); - return composite; + return bttArea; } /** @@ -200,54 +194,49 @@ * @return {@link Control} */ Control createWidthArea(Composite parent) { - Label widthLabel = new Label(parent, SWT.NONE); - widthLabel.setText(JFaceResources - .getString(&quot;ConfigureColumnsDialog_WidthOfSelectedColumn&quot;)); //$NON-NLS-1$ - GridData gridData = new GridData(GridData.FILL_HORIZONTAL - | GridData.HORIZONTAL_ALIGN_END); - gridData.horizontalSpan = 3; + + Label dummy = new Label(parent, SWT.NONE); + dummy.setLayoutData(new GridData(SWT.NONE, SWT.NONE, false, false, 2, 1)); + + Composite widthComposite = new Composite(parent, SWT.NONE); + GridLayout gridLayout = new GridLayout(2, false); + gridLayout.marginHeight = 0; + widthComposite.setLayout(gridLayout); + widthComposite.setLayoutData(new GridData(SWT.FILL, SWT.NONE, true, false, 2, 1)); + + widthLabel = new Label(widthComposite, SWT.NONE); + widthLabel.setText(MarkerMessages.MarkerPreferences_WidthOfShownColumn); + GridData gridData = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING); widthLabel.setLayoutData(gridData); - widthText = new Text(parent, SWT.SINGLE | SWT.BORDER); - widthText.setText(Integer.toString(0)); - gridData = new GridData(GridData.FILL_HORIZONTAL - | GridData.HORIZONTAL_ALIGN_CENTER); - gridData.widthHint = convertWidthInCharsToPixels(5); - widthText.setLayoutData(gridData); - widthText.addListener(SWT.Modify, postiveIntTextListener); - widthText.addListener(SWT.Modify, new Listener() { - public void handleEvent(Event event) { - if (widthText.isEnabled()) { - try { - int width = Integer - .parseInt(widthText.getText().trim()); - Object data = ((IStructuredSelection) visibleViewer - .getSelection()).getFirstElement(); - if (data != null) { - IColumnUpdater updater = getColumnUpdater(); - updater.setColumnWidth(data, width); - } - } catch (Exception e) { - return;// ignore - } + widthText = new Text(widthComposite, SWT.BORDER); + widthText.addVerifyListener(new VerifyListener() { + + public void verifyText(VerifyEvent e) { + if (e.character != 0 &amp;&amp; e.keyCode != SWT.BS + &amp;&amp; e.keyCode != SWT.DEL + &amp;&amp; !Character.isDigit(e.character)) { + e.doit = false; } } }); - widthText.setText(MarkerSupportInternalUtilities.EMPTY_STRING); - widthText.setEditable(false); + + gridData = new GridData(); + gridData.widthHint = convertWidthInCharsToPixels(5); + widthText.setLayoutData(gridData); + widthText.addModifyListener(new ModifyListener() { + + public void modifyText(ModifyEvent e) { + updateWidth(); + } + }); + setWidthEnabled(false); return widthText; } - /** - * Adapter to {@link IStructuredContentProvider} - */ - abstract class ContentProviderAdapter implements IStructuredContentProvider { - - public void dispose() { - } - - public void inputChanged(Viewer viewer, Object oldInput, Object newInput) { - } + private void setWidthEnabled(boolean enabled) { + widthLabel.setEnabled(enabled); + widthText.setEnabled(enabled); } /** @@ -257,12 +246,21 @@ * @return {@link Control} */ Control createVisibleTable(Composite parent) { - final Table table = new Table(parent, SWT.BORDER | SWT.MULTI); + + Composite composite = new Composite(parent, SWT.NONE); + GridLayout gridLayout = new GridLayout(1, false); + gridLayout.marginHeight =0; + composite.setLayout(gridLayout); + composite.setLayoutData(new GridData(GridData.FILL_BOTH)); + + Label label = new Label(composite, SWT.NONE); + label.setText(MarkerMessages.MarkerPreferences_VisibleColumnsTitle); + + final Table table = new Table(composite, SWT.BORDER | SWT.MULTI); GridData data = new GridData(SWT.FILL, SWT.FILL, true, true); - data.widthHint = convertWidthInCharsToPixels(30); + data.widthHint = convertWidthInCharsToPixels(20); data.heightHint = table.getItemHeight() * 15; table.setLayoutData(data); - table.setHeaderVisible(true); final TableColumn column = new TableColumn(table, SWT.NONE); column.setText(MarkerMessages.MarkerPreferences_VisibleColumnsTitle); @@ -275,11 +273,7 @@ visibleViewer = new TableViewer(table); visibleViewer.setLabelProvider(doGetLabelProvider()); - visibleViewer.setContentProvider(new ContentProviderAdapter() { - public Object[] getElements(Object inputElement) { - return getVisible().toArray(); - } - }); + visibleViewer.setContentProvider(ArrayContentProvider.getInstance()); visibleViewer .addSelectionChangedListener(new ISelectionChangedListener() { public void selectionChanged(SelectionChangedEvent event) { @@ -291,7 +285,7 @@ handleToNonVisibleButton(event); } }); - visibleViewer.setInput(this); + visibleViewer.setInput(getVisible()); return table; } @@ -302,12 +296,24 @@ * @return {@link Control} */ Control createInvisibleTable(Composite parent) { - final Table table = new Table(parent, SWT.BORDER | SWT.MULTI); + + Composite composite = new Composite(parent, SWT.NONE); + GridLayout gridLayout = new GridLayout(1, false); + gridLayout.marginHeight = 0; + composite.setLayout(gridLayout); + + composite.setLayoutData(new GridData(GridData.FILL_BOTH)); + + Label label = new Label(composite, SWT.NONE); + label.setText(MarkerMessages.MarkerPreferences_HiddenColumnsTitle); + applyDialogFont(label); + tableLabelSize = label.computeSize(SWT.DEFAULT, SWT.DEFAULT); + + final Table table = new Table(composite, SWT.BORDER | SWT.MULTI); GridData data = new GridData(SWT.FILL, SWT.FILL, true, true); - data.widthHint = convertWidthInCharsToPixels(30); + data.widthHint = convertWidthInCharsToPixels(20); data.heightHint = table.getItemHeight() * 15; table.setLayoutData(data); - table.setHeaderVisible(true); final TableColumn column = new TableColumn(table, SWT.NONE); column.setText(MarkerMessages.MarkerPreferences_HiddenColumnsTitle); @@ -320,11 +326,7 @@ nonVisibleViewer = new TableViewer(table); nonVisibleViewer.setLabelProvider(doGetLabelProvider()); - nonVisibleViewer.setContentProvider(new ContentProviderAdapter() { - public Object[] getElements(Object inputElement) { - return getNonVisible().toArray(); - } - }); + nonVisibleViewer.setContentProvider(ArrayContentProvider.getInstance()); nonVisibleViewer .addSelectionChangedListener(new ISelectionChangedListener() { public void selectionChanged(SelectionChangedEvent event) { @@ -336,7 +338,7 @@ handleToVisibleButton(event); } }); - nonVisibleViewer.setInput(this); + nonVisibleViewer.setInput(getNonVisible()); return table; } @@ -348,15 +350,33 @@ * @return {@link Control} */ Control createMoveButtons(Composite parent) { - Composite bttArea = new Composite(parent, SWT.NONE); - bttArea.setLayout(new GridLayout(1, true)); - bttArea.setLayoutData(new GridData(GridData.FILL_VERTICAL)); + Composite composite = new Composite(parent, SWT.NONE); + GridLayout compositeLayout = new GridLayout(); + compositeLayout.marginHeight = 0; + compositeLayout.marginWidth = 0; + composite.setLayout(compositeLayout); + composite.setLayoutData(new GridData(SWT.NONE, SWT.FILL, false, true)); + + Composite bttArea = new Composite(composite, SWT.NONE); + GridLayout layout = new GridLayout(); + layout.marginHeight = 0; + bttArea.setLayout(layout); + bttArea.setLayoutData(new GridData(SWT.NONE, SWT.CENTER, false, true)); + + toVisibleBtt = new Button(bttArea, SWT.PUSH); + toVisibleBtt.setText(MarkerMessages.MarkerPreferences_MoveRight); + setButtonLayoutData(toVisibleBtt); + ((GridData)toVisibleBtt.getLayoutData()).verticalIndent = tableLabelSize.y; + toVisibleBtt.addListener(SWT.Selection, new Listener() { + public void handleEvent(Event event) { + handleToVisibleButton(event); + } + }); + toVisibleBtt.setEnabled(false); toNonVisibleBtt = new Button(bttArea, SWT.PUSH); - toNonVisibleBtt - .setText(getDefaultOrientation() == SWT.RIGHT_TO_LEFT ? MarkerMessages.MarkerPreferences_MoveRight - : MarkerMessages.MarkerPreferences_MoveLeft); - toNonVisibleBtt.setLayoutData(new GridData()); + toNonVisibleBtt.setText(MarkerMessages.MarkerPreferences_MoveLeft); + setButtonLayoutData(toNonVisibleBtt); toNonVisibleBtt.addListener(SWT.Selection, new Listener() { public void handleEvent(Event event) { @@ -365,57 +385,7 @@ }); toNonVisibleBtt.setEnabled(false); - toVisibleBtt = new Button(bttArea, SWT.PUSH); - toVisibleBtt - .setText(getDefaultOrientation() == SWT.RIGHT_TO_LEFT ? MarkerMessages.MarkerPreferences_MoveLeft - : MarkerMessages.MarkerPreferences_MoveRight); - toVisibleBtt.setLayoutData(new GridData()); - toVisibleBtt.addListener(SWT.Selection, new Listener() { - public void handleEvent(Event event) { - handleToVisibleButton(event); - } - }); - toVisibleBtt.setEnabled(false); return bttArea; - } - - /** - * - * @param event - * @param intialvalue - * @return new value in String - */ - String handleIntegerFieldChange(Event event, String intialvalue) { - String value = ((Text) event.widget).getText().trim(); - boolean editable = ((Text) event.widget).getEditable(); - switch (event.type) { - case SWT.KeyDown: - case SWT.Modify: - case SWT.FocusOut: - if (!editable) { - handleStatusUdpate(IStatus.INFO, null); - break; - } - if (value.length() == 0) { - handleStatusUdpate(IStatus.ERROR, null); - } else { - try { - int number = Integer.parseInt(value); - if (number &gt; 0) { - handleStatusUdpate(IStatus.INFO, null); - } else { - value = intialvalue; - ((Text) event.widget).selectAll(); - handleStatusUdpate(IStatus.ERROR, getErrorMessage()); - } - } catch (Exception e) { - value = intialvalue; - ((Text) event.widget).selectAll(); - handleStatusUdpate(IStatus.ERROR, getErrorMessage()); - } - } - } - return value; } /** @@ -427,7 +397,6 @@ void handleNonVisibleSelection(ISelection selection) { Object[] nvKeys = ((IStructuredSelection) selection).toArray(); toVisibleBtt.setEnabled(nvKeys.length &gt; 0); - if (visibleViewer.getControl().isFocusControl() &amp;&amp; getVisible().size() &lt;= 1) { handleStatusUdpate(IStatus.INFO, @@ -478,12 +447,12 @@ boolean edit = selVCols.size() == 1 ? infoProvider .isColumnResizable(selVCols.get(0)) : false; - widthText.setEditable(edit); + setWidthEnabled(edit); if (edit) { - widthText.setText(Integer.toString(infoProvider - .getColumnWidth(selVCols.get(0)))); + int width = infoProvider.getColumnWidth(selVCols.get(0)); + widthText.setText(Integer.toString(width)); } else { - widthText.setText(MarkerSupportInternalUtilities.EMPTY_STRING); + widthText.setText(&quot;&quot;); //$NON-NLS-1$ } } @@ -701,6 +670,23 @@ * {@link IColumnUpdater} */ protected abstract IColumnUpdater getColumnUpdater(); + + /** + * + */ + private void updateWidth() { + try { + int width = Integer.parseInt(widthText.getText()); + Object data = ((IStructuredSelection) visibleViewer.getSelection()) + .getFirstElement(); + if (data != null) { + IColumnUpdater updater = getColumnUpdater(); + updater.setColumnWidth(data, width); + } + } catch (NumberFormatException ex) { + // ignore + } + } /** * Update various aspects of a columns from a viewer such @@ -1005,5 +991,4 @@ } - // ////////////////////////////////////////////////////////////////////////////////// } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/wizards/datatransfer/ArchiveFileExportOperation.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/wizards/datatransfer/ArchiveFileExportOperation.java index 53710ec..9504059 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/wizards/datatransfer/ArchiveFileExportOperation.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/wizards/datatransfer/ArchiveFileExportOperation.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -162,6 +162,20 @@ throws InterruptedException { exportResource(exportResource, 1); } + + /** + * Creates and returns the string that should be used as the name of the entry in the archive. + * @param exportResource the resource to export + * @param leadupDepth the number of resource levels to be included in the path including the resourse itself. + */ + private String createDestinationName(int leadupDepth, IResource exportResource) { + IPath fullPath = exportResource.getFullPath(); + if (createLeadupStructure) { + return fullPath.makeRelative().toString(); + } + return fullPath.removeFirstSegments( + fullPath.segmentCount() - leadupDepth).toString(); + } /** * Export the passed resource to the destination .zip @@ -177,14 +191,7 @@ } if (exportResource.getType() == IResource.FILE) { - String destinationName; - IPath fullPath = exportResource.getFullPath(); - if (createLeadupStructure) { - destinationName = fullPath.makeRelative().toString(); - } else { - destinationName = fullPath.removeFirstSegments( - fullPath.segmentCount() - leadupDepth).toString(); - } + String destinationName = createDestinationName(leadupDepth, exportResource); monitor.subTask(destinationName); try { @@ -206,6 +213,15 @@ // this should never happen because an #isAccessible check is done before #members is invoked addError(NLS.bind(DataTransferMessages.DataTransfer_errorExporting, exportResource.getFullPath()), e); } + + if (children.length == 0) { // create an entry for empty containers, see bug 278402 + String destinationName = createDestinationName(leadupDepth, exportResource); + try { + exporter.write((IContainer) exportResource, destinationName + IPath.SEPARATOR); + } catch (IOException e) { + addError(NLS.bind(DataTransferMessages.DataTransfer_errorExporting, exportResource.getFullPath().makeRelative(), e.getMessage()), e); + } + } for (int i = 0; i &lt; children.length; i++) { exportResource(children[i], leadupDepth + 1); diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/wizards/datatransfer/WizardProjectsImportPage.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/wizards/datatransfer/WizardProjectsImportPage.java index 56e48e9..77f861e 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/wizards/datatransfer/WizardProjectsImportPage.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/wizards/datatransfer/WizardProjectsImportPage.java @@ -426,7 +426,6 @@ copyCheckbox.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { copyFiles = copyCheckbox.getSelection(); - updateProjectsList(directoryPathField.getText().trim()); } }); } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/wizards/datatransfer/ZipLeveledStructureProvider.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/wizards/datatransfer/ZipLeveledStructureProvider.java index de1430b..f96ccce 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/wizards/datatransfer/ZipLeveledStructureProvider.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/internal/wizards/datatransfer/ZipLeveledStructureProvider.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2006 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -72,7 +72,9 @@ } ZipEntry parent; - if (pathname.segmentCount() == 1) { + if (pathname.segmentCount() == 0) { + return null; + } else if (pathname.segmentCount() == 1) { parent = root; } else { parent = createContainer(pathname.removeLastSegments(1)); @@ -134,13 +136,13 @@ String pathOrig = new String(path); for (int i = 0; i &lt; stripLevel; i++) { int firstSep = path.indexOf(&apos;/&apos;); - // If the first character was a seperator we must strip to the next - // seperator as well + // If the first character was a separator we must strip to the next + // separator as well if (firstSep == 0) { path = path.substring(1); firstSep = path.indexOf(&apos;/&apos;); } - // No seperator wasw present so we&apos;re in a higher directory right + // No separator was present so we&apos;re in a higher directory right // now if (firstSep == -1) { return pathOrig; diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/MarkerViewHandler.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/MarkerViewHandler.java index 7b27455..1b502d1 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/MarkerViewHandler.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/MarkerViewHandler.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007,2008 IBM Corporation and others. + * Copyright (c) 2007, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -46,7 +46,7 @@ */ public MarkerSupportView getView(ExecutionEvent event) { IWorkbenchPart part = HandlerUtil.getActivePart(event); - if (part == null) + if (!(part instanceof MarkerSupportView)) return null; return (MarkerSupportView) part; } diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/DialogMarkerProperties.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/DialogMarkerProperties.java index 7b13317..5d327bd 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/DialogMarkerProperties.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/DialogMarkerProperties.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2007 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -85,7 +85,7 @@ /** * The control for the Creation Time field. */ - private Label creationTime; + private Text creationTime; /** * The text control for the Resource field. @@ -339,7 +339,7 @@ label.setText(MarkerMessages .propertiesDialog_creationTime_text); - creationTime = new Label(parent, SWT.NONE); + creationTime = new Text(parent, SWT.SINGLE | SWT.READ_ONLY); } /** diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/DialogProblemProperties.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/DialogProblemProperties.java index d9a1751..ddc39a5 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/DialogProblemProperties.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/DialogProblemProperties.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2007 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -18,10 +18,11 @@ import org.eclipse.swt.widgets.Composite; import org.eclipse.swt.widgets.Label; import org.eclipse.swt.widgets.Shell; +import org.eclipse.swt.widgets.Text; public class DialogProblemProperties extends DialogMarkerProperties { - private Label severityLabel; + private Text severityLabel; private Label severityImage; @@ -50,7 +51,7 @@ composite.setLayout(layout); severityImage = new Label(composite, SWT.NONE); - severityLabel = new Label(composite, SWT.NONE); + severityLabel = new Text(composite, SWT.SINGLE | SWT.READ_ONLY); } /* diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/MarkerMessages.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/MarkerMessages.java index 5f1ce23..486b7f1 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/MarkerMessages.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/MarkerMessages.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -76,6 +76,8 @@ public static String filtersDialog_title; public static String configureFiltersCommand_title; public static String configureFiltersDialog_title; + + public static String configEditDialog_name; public static String filtersDialog_showItemsOfType; public static String filtersDialog_anyResource; @@ -145,6 +147,17 @@ public static String marker_statusSelectedCount; public static String errorsAndWarningsSummaryBreakdown; + public static String deleteMarkers_errorMessage; + public static String deleteMarker_operationName; + public static String deleteMarkers_operationName; + public static String deleteBookmarkMarker_operationName; + public static String deleteBookmarkMarkers_operationName; + public static String deleteTaskMarker_operationName; + public static String deleteTaskMarkers_operationName; + public static String deleteProblemMarker_operationName; + public static String deleteProblemMarkers_operationName; + + public static String deleteCompletedAction_title; public static String markCompletedAction_title; @@ -198,11 +211,12 @@ public static String MarkerFilter_filtersTitle; public static String MarkerFilter_addFilterName; public static String MarkerFilter_cloneFilterName; + public static String MarkerFilter_editFilterName; public static String MarkerFilter_deleteSelectedName; public static String MarkerFilter_renameName; public static String MarkerFilter_showAllCommand_title; public static String MarkerFilter_ConfigureContentsCommand_title; - + public static String MarkerFilterDialog_title; public static String MarkerFilterDialog_message; public static String MarkerFilterDialog_emptyMessage; @@ -219,6 +233,7 @@ public static String MarkerPreferences_VisibleColumnsTitle; public static String MarkerPreferences_HiddenColumnsTitle; public static String MarkerPreferences_AtLeastOneVisibleColumn; + public static String MarkerPreferences_WidthOfShownColumn; public static String ProblemFilterDialog_System_Filters_Title; public static String ProblemFilterDialog_All_Problems; @@ -239,6 +254,8 @@ public static String FieldMessage_NullMessage; public static String FieldCategory_Uncategorized; public static String FieldMessage_WrongType; + public static String FiltersConfigurationDialog_title; + public static String FiltersConfigurationDialog_message; public static String Category_Label; public static String Category_Limit_Label; public static String Category_One_Item_Label; @@ -286,9 +303,10 @@ public static String PasteHandler_title; - public static String AND_OR_Label; + public static String ALL_Title; public static String AND_Title; public static String OR_Title; + public static String MarkerConfigurationsLabel; public static String ContentGenerator_NoGrouping; public static String newViewTitle; diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/messages.properties b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/messages.properties index 60b7e16..7abc9fa 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/messages.properties +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/markers/internal/messages.properties @@ -1,5 +1,5 @@ ############################################################################### -# Copyright (c) 2000, 2010 IBM Corporation and others. +# Copyright (c) 2000, 2011 IBM Corporation and others. # All rights reserved. This program and the accompanying materials # are made available under the terms of the Eclipse Public License v1.0 # which accompanies this distribution, and is available at @@ -59,6 +59,8 @@ deleteActionConfirmTitle = Delete Selected Entries deleteActionConfirmMessage = Do you want to delete the selected entries? Deleted markers may be recreated by a build or may not be recoverable. + +configEditDialog_name = N&amp;ame: filtersDialog_title = Filters filtersDialog_entriesTitle = &amp;Configurations: @@ -133,6 +135,16 @@ marker_statusSelectedCount={0,choice,0#0 items |1#{0,number,integer} item |1&lt;{0,number,integer} items} selected errorsAndWarningsSummaryBreakdown = {0,choice,0#0 errors|1#{0,number,integer} error|1&lt;{0,number,integer} errors}, {1,choice,0#0 warnings|1#{1,number,integer} warning|1&lt;{1,number,integer} warnings}, {2,choice,0#0 others|1#{2,number,integer} other|1&lt;{2,number,integer} others} +deleteMarkers_errorMessage= Error deleting markers +deleteMarker_operationName= Delete Marker +deleteMarkers_operationName= Delete Markers +deleteBookmarkMarker_operationName= Delete Bookmark +deleteBookmarkMarkers_operationName= Delete Bookmarks +deleteTaskMarker_operationName= Delete Task +deleteTaskMarkers_operationName= Delete Tasks +deleteProblemMarker_operationName= Delete Problem +deleteProblemMarkers_operationName= Delete Problems + deleteCompletedAction_title = Delete Completed &amp;Tasks markCompletedAction_title = &amp;Mark Completed markCompletedHandler_task = Marking selected tasks completed @@ -175,35 +187,38 @@ RemoveMarker_errorTitle=Error MarkerFilter_defaultFilterName=Default -MarkerFilter_newFilterName=New Filter +MarkerFilter_newFilterName=New Configuration MarkerFilter_filtersTitle=User f&amp;ilters: -MarkerFilter_addFilterName=&amp;New... +MarkerFilter_addFilterName=&amp;New MarkerFilter_cloneFilterName=D&amp;uplicate... +MarkerFilter_editFilterName=&amp;Edit... MarkerFilter_deleteSelectedName = Remo&amp;ve MarkerFilter_renameName = &amp;Rename MarkerFilter_showAllCommand_title = &amp;Show All MarkerFilter_ConfigureContentsCommand_title = &amp;Configure Contents... -MarkerFilterDialog_title=Filter Name -MarkerFilterDialog_message=Select a filter name +MarkerFilterDialog_title=Configuration Name +MarkerFilterDialog_message=Enter a name for the configuration: MarkerFilterDialog_emptyMessage=Name must not be empty -AND_OR_Label=Show results matching: -AND_Title = A&amp;ll enabled filters -OR_Title = &amp;Any enabled filter +ALL_Title = Sho&amp;w all items +AND_Title = Show items that match a&amp;ll the configurations checked below +OR_Title = Show items that match a&amp;ny configuration checked below +MarkerConfigurationsLabel = &amp;Configurations: MarkerFilterDialog_errorTitle = An error has occurred MarkerFilterDialog_failedFilterMessage = Could not create filter {0}. MarkerPreferences_DialogTitle = Preferences -MarkerPreferences_MarkerLimits = Use marker &amp;limits -MarkerPreferences_VisibleItems = Limit visible &amp;items per group to: -MarkerPreferences_MoveLeft = &amp;&lt;&lt; -MarkerPreferences_MoveRight = &amp;&gt;&gt; +MarkerPreferences_MarkerLimits = &amp;Use item limits +MarkerPreferences_MoveLeft = &lt;- &amp;Hide +MarkerPreferences_MoveRight = &amp;Show -&gt; MarkerPreferences_ColumnGroupTitle = Hide/Show Columns -MarkerPreferences_VisibleColumnsTitle = &amp;Show -MarkerPreferences_HiddenColumnsTitle = &amp;Hide +MarkerPreferences_VisibleColumnsTitle = Sh&amp;own: +MarkerPreferences_HiddenColumnsTitle = H&amp;idden: MarkerPreferences_AtLeastOneVisibleColumn = There must be at least one visible column. +MarkerPreferences_VisibleItems = Number of items visible per &amp;group: MarkerFilterDialog_YouHaveDisabledMarkerLimit= You have selected to disable limiting items per group. +MarkerPreferences_WidthOfShownColumn= &amp;Width of the selected shown column: ProblemFilterDialog_System_Filters_Title = System filte&amp;rs: ProblemFilterDialog_All_Problems = Enabled for all problems @@ -215,7 +230,7 @@ ProblemFilterDialog_Does_Not_Contain_Description = On any description not containing {0} ProblemFilterDialog_any = Filter on any element ProblemFilterDialog_sameContainer = Filter on any in the same container -ProblemFilterDialog_selectedAndChildren = Filter on selected element and it&apos;s children +ProblemFilterDialog_selectedAndChildren = Filter on selected element and its children ProblemFilterDialog_selected = Filter on selected element only ProblemFilterDialog_workingSet = Filter on working set {0} @@ -225,6 +240,8 @@ FieldMessage_WrongType = {0} is not of a displayable type FieldCategory_Uncategorized = Other +FiltersConfigurationDialog_title=Configure Contents +FiltersConfigurationDialog_message=Configure the items to be shown in the view Category_Label = {0} ({1} items) Category_One_Item_Label = {0} (1 item) Category_Limit_Label = {0} ({1} of {2} items) diff --git a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/navigator/NavigatorDropAdapter.java b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/navigator/NavigatorDropAdapter.java index 7c0cd95..a845689 100644 --- a/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/navigator/NavigatorDropAdapter.java +++ b/bundles/org.eclipse.ui.ide/src/org/eclipse/ui/views/navigator/NavigatorDropAdapter.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -22,6 +22,7 @@ import org.eclipse.jface.dialogs.ErrorDialog; import org.eclipse.jface.dialogs.IDialogConstants; import org.eclipse.jface.dialogs.MessageDialog; +import org.eclipse.jface.preference.IPreferenceStore; import org.eclipse.jface.viewers.ISelection; import org.eclipse.jface.viewers.IStructuredSelection; import org.eclipse.jface.viewers.StructuredViewer; @@ -39,6 +40,8 @@ import org.eclipse.ui.actions.ReadOnlyStateChecker; import org.eclipse.ui.dialogs.IOverwriteQuery; import org.eclipse.ui.ide.dialogs.ImportTypeDialog; +import org.eclipse.ui.internal.ide.IDEInternalPreferences; +import org.eclipse.ui.internal.ide.IDEWorkbenchPlugin; import org.eclipse.ui.internal.views.navigator.ResourceNavigatorMessages; import org.eclipse.ui.part.PluginDropAdapter; import org.eclipse.ui.part.ResourceTransfer; @@ -328,19 +331,26 @@ } // if all sources are either links or groups, copy then normally, don&apos;t show the dialog if (!allSourceAreLinksOrGroups) { - ImportTypeDialog dialog = new ImportTypeDialog(getShell(), getCurrentOperation(), sources, target); - dialog.setResource(target); - if (dialog.open() == Window.OK) { - if (dialog.getSelection() == ImportTypeDialog.IMPORT_VIRTUAL_FOLDERS_AND_LINKS) - operation.setVirtualFolders(true); - if (dialog.getSelection() == ImportTypeDialog.IMPORT_LINK) - operation.setCreateLinks(true); - if (dialog.getVariable() != null) - operation.setRelativeVariable(dialog.getVariable()); - operation.copyResources(sources, target); + IPreferenceStore store= IDEWorkbenchPlugin.getDefault().getPreferenceStore(); + String dndPreference= store.getString(target.isVirtual() ? IDEInternalPreferences.IMPORT_FILES_AND_FOLDERS_VIRTUAL_FOLDER_MODE : IDEInternalPreferences.IMPORT_FILES_AND_FOLDERS_MODE); + + if (dndPreference.equals(IDEInternalPreferences.IMPORT_FILES_AND_FOLDERS_MODE_PROMPT)) { + ImportTypeDialog dialog = new ImportTypeDialog(getShell(), getCurrentOperation(), sources, target); + dialog.setResource(target); + if (dialog.open() == Window.OK) { + if (dialog.getSelection() == ImportTypeDialog.IMPORT_VIRTUAL_FOLDERS_AND_LINKS) + operation.setVirtualFolders(true); + if (dialog.getSelection() == ImportTypeDialog.IMPORT_LINK) + operation.setCreateLinks(true); + if (dialog.getVariable() != null) + operation.setRelativeVariable(dialog.getVariable()); + operation.copyResources(sources, target); + } + else + return problems; } else - return problems; + operation.copyResources(sources, target); } else operation.copyResources(sources, target); diff --git a/bundles/org.eclipse.ui.navigator.resources/.cvsignore b/bundles/org.eclipse.ui.navigator.resources/.cvsignore deleted file mode 100644 index 66fef7b..0000000 --- a/bundles/org.eclipse.ui.navigator.resources/.cvsignore +++ /dev/null @@ -1,5 +0,0 @@ -bin -doc -temp.folder -wbnavigator.jar -build.xml diff --git a/bundles/org.eclipse.ui.navigator.resources/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.navigator.resources/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.navigator.resources/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.navigator.resources/.settings/org.eclipse.pde.prefs b/bundles/org.eclipse.ui.navigator.resources/.settings/org.eclipse.pde.prefs index d8d62f0..c520cfa 100644 --- a/bundles/org.eclipse.ui.navigator.resources/.settings/org.eclipse.pde.prefs +++ b/bundles/org.eclipse.ui.navigator.resources/.settings/org.eclipse.pde.prefs @@ -1,7 +1,7 @@ #Thu Aug 14 02:41:03 PDT 2008 compilers.f.unresolved-features=1 compilers.f.unresolved-plugins=1 -compilers.incompatible-environment=1 +compilers.incompatible-environment=0 compilers.p.build=1 compilers.p.deprecated=0 compilers.p.discouraged-class=1 diff --git a/bundles/org.eclipse.ui.navigator.resources/plugin.xml b/bundles/org.eclipse.ui.navigator.resources/plugin.xml index f7789cb..71daa83 100644 --- a/bundles/org.eclipse.ui.navigator.resources/plugin.xml +++ b/bundles/org.eclipse.ui.navigator.resources/plugin.xml @@ -333,7 +333,7 @@ diff --git a/bundles/org.eclipse.ui.navigator.resources/src/org/eclipse/ui/navigator/resources/ResourceDropAdapterAssistant.java b/bundles/org.eclipse.ui.navigator.resources/src/org/eclipse/ui/navigator/resources/ResourceDropAdapterAssistant.java index b6dda8d..472bb84 100644 --- a/bundles/org.eclipse.ui.navigator.resources/src/org/eclipse/ui/navigator/resources/ResourceDropAdapterAssistant.java +++ b/bundles/org.eclipse.ui.navigator.resources/src/org/eclipse/ui/navigator/resources/ResourceDropAdapterAssistant.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2006, 2010 IBM Corporation and others. + * Copyright (c) 2006, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -39,6 +39,7 @@ import org.eclipse.jface.dialogs.Dialog; import org.eclipse.jface.dialogs.ErrorDialog; import org.eclipse.jface.operation.IRunnableWithProgress; +import org.eclipse.jface.preference.IPreferenceStore; import org.eclipse.jface.util.LocalSelectionTransfer; import org.eclipse.jface.viewers.ISelection; import org.eclipse.jface.viewers.IStructuredSelection; @@ -49,6 +50,8 @@ import org.eclipse.ui.actions.MoveFilesAndFoldersOperation; import org.eclipse.ui.actions.ReadOnlyStateChecker; import org.eclipse.ui.ide.dialogs.ImportTypeDialog; +import org.eclipse.ui.internal.ide.IDEInternalPreferences; +import org.eclipse.ui.internal.ide.IDEWorkbenchPlugin; import org.eclipse.ui.internal.navigator.Policy; import org.eclipse.ui.internal.navigator.resources.plugin.WorkbenchNavigatorMessages; import org.eclipse.ui.internal.navigator.resources.plugin.WorkbenchNavigatorPlugin; @@ -215,7 +218,6 @@ if (LocalSelectionTransfer.getTransfer().isSupportedType( currentTransfer)) { resources = getSelectedResources(); - aDropTargetEvent.detail = DND.DROP_NONE; } else if (ResourceTransfer.getInstance().isSupportedType( currentTransfer)) { resources = (IResource[]) aDropTargetEvent.data; @@ -422,18 +424,25 @@ // if all sources are either links or groups, copy then normally, // don&apos;t show the dialog if (!allSourceAreLinksOrVirtualFolders) { - ImportTypeDialog dialog = new ImportTypeDialog(getShell(), dropAdapter.getCurrentOperation(), sources, target); - dialog.setResource(target); - if (dialog.open() == Window.OK) { - if (dialog.getSelection() == ImportTypeDialog.IMPORT_VIRTUAL_FOLDERS_AND_LINKS) - operation.setVirtualFolders(true); - if (dialog.getSelection() == ImportTypeDialog.IMPORT_LINK) - operation.setCreateLinks(true); - if (dialog.getVariable() != null) - operation.setRelativeVariable(dialog.getVariable()); + IPreferenceStore store= IDEWorkbenchPlugin.getDefault().getPreferenceStore(); + String dndPreference= store.getString(target.isVirtual() ? IDEInternalPreferences.IMPORT_FILES_AND_FOLDERS_VIRTUAL_FOLDER_MODE : IDEInternalPreferences.IMPORT_FILES_AND_FOLDERS_MODE); + + if (dndPreference.equals(IDEInternalPreferences.IMPORT_FILES_AND_FOLDERS_MODE_PROMPT)) { + ImportTypeDialog dialog = new ImportTypeDialog(getShell(), dropAdapter.getCurrentOperation(), sources, target); + dialog.setResource(target); + if (dialog.open() == Window.OK) { + if (dialog.getSelection() == ImportTypeDialog.IMPORT_VIRTUAL_FOLDERS_AND_LINKS) + operation.setVirtualFolders(true); + if (dialog.getSelection() == ImportTypeDialog.IMPORT_LINK) + operation.setCreateLinks(true); + if (dialog.getVariable() != null) + operation.setRelativeVariable(dialog.getVariable()); + operation.copyResources(sources, target); + } else + return problems; + } + else operation.copyResources(sources, target); - } else - return problems; } else operation.copyResources(sources, target); } diff --git a/bundles/org.eclipse.ui.navigator/.cvsignore b/bundles/org.eclipse.ui.navigator/.cvsignore deleted file mode 100644 index 9e03f0a..0000000 --- a/bundles/org.eclipse.ui.navigator/.cvsignore +++ /dev/null @@ -1,5 +0,0 @@ -bin -temp.folder -navigator.jar -build.xml -doc diff --git a/bundles/org.eclipse.ui.navigator/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.navigator/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.navigator/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.navigator/.settings/org.eclipse.pde.prefs b/bundles/org.eclipse.ui.navigator/.settings/org.eclipse.pde.prefs index d8e8469..b52f7bf 100644 --- a/bundles/org.eclipse.ui.navigator/.settings/org.eclipse.pde.prefs +++ b/bundles/org.eclipse.ui.navigator/.settings/org.eclipse.pde.prefs @@ -1,14 +1,35 @@ -#Tue Nov 16 14:12:29 EST 2004 -compilers.p.unused-element-or-attribute=1 -compilers.p.unresolved-ex-points=0 -compilers.p.deprecated=0 -compilers.p.unknown-element=1 -compilers.p.unknown-resource=1 -compilers.p.unknown-class=1 -compilers.p.unknown-attribute=0 -compilers.p.no-required-att=0 -eclipse.preferences.version=1 -compilers.p.unresolved-import=0 -compilers.p.not-externalized-att=0 -compilers.p.illegal-att-value=0 -compilers.use-project=true +compilers.f.unresolved-features=1 +compilers.f.unresolved-plugins=1 +compilers.incompatible-environment=0 +compilers.p.build=1 +compilers.p.build.bin.includes=1 +compilers.p.build.encodings=2 +compilers.p.build.java.compiler=2 +compilers.p.build.java.compliance=1 +compilers.p.build.missing.output=2 +compilers.p.build.output.library=1 +compilers.p.build.source.library=1 +compilers.p.build.src.includes=1 +compilers.p.deprecated=0 +compilers.p.discouraged-class=1 +compilers.p.illegal-att-value=0 +compilers.p.internal=1 +compilers.p.missing-packages=0 +compilers.p.missing-version-export-package=2 +compilers.p.missing-version-import-package=2 +compilers.p.missing-version-require-bundle=2 +compilers.p.no-required-att=0 +compilers.p.not-externalized-att=0 +compilers.p.unknown-attribute=0 +compilers.p.unknown-class=1 +compilers.p.unknown-element=1 +compilers.p.unknown-identifier=1 +compilers.p.unknown-resource=1 +compilers.p.unresolved-ex-points=0 +compilers.p.unresolved-import=0 +compilers.p.unused-element-or-attribute=1 +compilers.s.create-docs=false +compilers.s.doc-folder=doc +compilers.s.open-tags=1 +compilers.use-project=true +eclipse.preferences.version=1 diff --git a/bundles/org.eclipse.ui.navigator/META-INF/MANIFEST.MF b/bundles/org.eclipse.ui.navigator/META-INF/MANIFEST.MF index 28a210a..c40495f 100644 --- a/bundles/org.eclipse.ui.navigator/META-INF/MANIFEST.MF +++ b/bundles/org.eclipse.ui.navigator/META-INF/MANIFEST.MF @@ -2,7 +2,7 @@ Bundle-ManifestVersion: 2 Bundle-Name: %Plugin.name Bundle-SymbolicName: org.eclipse.ui.navigator; singleton:=true -Bundle-Version: 3.5.0.qualifier +Bundle-Version: 3.5.101.qualifier Bundle-Activator: org.eclipse.ui.internal.navigator.NavigatorPlugin Bundle-Vendor: %Plugin.providerName Bundle-Localization: plugin diff --git a/bundles/org.eclipse.ui.navigator/schema/navigatorContent.exsd b/bundles/org.eclipse.ui.navigator/schema/navigatorContent.exsd index 7d7a26d..e29a843 100644 --- a/bundles/org.eclipse.ui.navigator/schema/navigatorContent.exsd +++ b/bundles/org.eclipse.ui.navigator/schema/navigatorContent.exsd @@ -3,7 +3,7 @@ - + A content extension provides a content and label provider @@ -963,7 +963,7 @@ - Copyright (c) 2002, 2010 IBM Corporation and others.&lt;br&gt; + Copyright (c) 2002, 2011 IBM Corporation and others.&lt;br&gt; All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at &lt;a diff --git a/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/internal/navigator/NavigatorContentServiceContentProvider.java b/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/internal/navigator/NavigatorContentServiceContentProvider.java index b25b1d2..47de131 100644 --- a/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/internal/navigator/NavigatorContentServiceContentProvider.java +++ b/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/internal/navigator/NavigatorContentServiceContentProvider.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2003, 2010 IBM Corporation and others. + * Copyright (c) 2003, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -9,6 +9,8 @@ * IBM Corporation - initial API and implementation * Anton Leherbauer, Wind River * bug 261031 [CommonNavigator] IPipelinedContentProvider getParent() returning the suggested parent is not ignored + * William Chen, chenwmw@gmail.com + * bug 343721 getParent of NavigatorContentServiceContentProvider does not return expected node. *******************************************************************************/ package org.eclipse.ui.internal.navigator; @@ -295,10 +297,6 @@ if (overridingExtensions.length &gt; 0) { parent[0] = pipelineParent(anElement, overridingExtensions, parent); } - - if (parent[0] != null) { - return; - } } } @@ -308,6 +306,10 @@ foundExtension.getDescriptor().getId(), anElement }), e); } }); + + if (parent[0] != null) { + return parent[0]; + } } return parent[0]; } diff --git a/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/internal/navigator/extensions/NavigatorContentDescriptorManager.java b/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/internal/navigator/extensions/NavigatorContentDescriptorManager.java index c226021..abec983 100644 --- a/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/internal/navigator/extensions/NavigatorContentDescriptorManager.java +++ b/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/internal/navigator/extensions/NavigatorContentDescriptorManager.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2003, 2010 IBM Corporation and others. + * Copyright (c) 2003, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,6 +7,7 @@ * * Contributors: * IBM Corporation - initial API and implementation + * Bug 349224 Navigator content provider &quot;appearsBefore&quot; creates hard reference to named id - paul.fullbright@oracle.com *******************************************************************************/ package org.eclipse.ui.internal.navigator.extensions; @@ -23,6 +24,7 @@ import java.util.WeakHashMap; import org.eclipse.core.runtime.IConfigurationElement; +import org.eclipse.core.runtime.IStatus; import org.eclipse.core.runtime.SafeRunner; import org.eclipse.jface.resource.ImageDescriptor; import org.eclipse.jface.resource.ImageRegistry; @@ -456,9 +458,12 @@ if (desc.getId().equals(id)) return i; } - throw new RuntimeException(&quot;Can&apos;t find id: &quot; + id); //$NON-NLS-1$ + // Do not require content descriptor to exist in workspace + NavigatorPlugin.log(IStatus.WARNING, 0, + &quot;Can&apos;t find Navigator Content Descriptor with id: &quot; + id, null); //$NON-NLS-1$ + return -1; } - + private void computeSequenceNumbers() { NavigatorContentDescriptor[] descs = getAllContentDescriptors(); @@ -474,7 +479,7 @@ NavigatorContentDescriptor desc = (NavigatorContentDescriptor) list.get(i); if (desc.getAppearsBeforeId() != null) { int beforeInd = findId(list, desc.getAppearsBeforeId()); - if (beforeInd &lt; i) { + if (beforeInd &gt;= 0 &amp;&amp; beforeInd &lt; i) { list.add(beforeInd, desc); list.remove(i + 1); changed = true; diff --git a/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/navigator/CommonViewerSorter.java b/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/navigator/CommonViewerSorter.java index 7c7071d..ef97800 100644 --- a/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/navigator/CommonViewerSorter.java +++ b/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/navigator/CommonViewerSorter.java @@ -123,7 +123,7 @@ switch (whoknows) { case BOTH_UNDERSTAND: - sorter = sourceOfLvalue.getSequenceNumber() &gt; sourceOfRvalue.getSequenceNumber() ? sorterService + sorter = sourceOfLvalue.getSequenceNumber() &lt; sourceOfRvalue.getSequenceNumber() ? sorterService .findSorter(sourceOfLvalue, parent, e1, e2) : sorterService.findSorter(sourceOfRvalue, parent, e1, e2); break; diff --git a/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/navigator/INavigatorContentService.java b/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/navigator/INavigatorContentService.java index 4833258..46a5546 100644 --- a/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/navigator/INavigatorContentService.java +++ b/bundles/org.eclipse.ui.navigator/src/org/eclipse/ui/navigator/INavigatorContentService.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2003, 2009 IBM Corporation and others. + * Copyright (c) 2003, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -17,6 +17,7 @@ import org.eclipse.jface.viewers.IStructuredContentProvider; import org.eclipse.jface.viewers.ITreeContentProvider; import org.eclipse.jface.viewers.ViewerSorter; + import org.eclipse.ui.IMemento; import org.eclipse.ui.ISaveablesSource; @@ -201,7 +202,8 @@ INavigatorViewerDescriptor getViewerDescriptor(); /** - * See above for the definition of active. + * See above for the + * definition of active. * * @param anExtensionId * The unqiue identifier from a content extension. @@ -214,8 +216,9 @@ boolean isActive(String anExtensionId); /** - * See above for the definition of visible. - * + * See above for the + * definition of visible. + * * @param anExtensionId * The unqiue identifier from a content extension. * @return True if and only if the given extension id is visible to diff --git a/bundles/org.eclipse.ui.presentations.r21/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.presentations.r21/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.presentations.r21/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.tutorials.rcp.part1/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.tutorials.rcp.part1/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.tutorials.rcp.part1/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.tutorials.rcp.part2/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.tutorials.rcp.part2/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.tutorials.rcp.part2/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.tutorials.rcp.part3/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.tutorials.rcp.part3/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.tutorials.rcp.part3/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.views.properties.tabbed/.cvsignore b/bundles/org.eclipse.ui.views.properties.tabbed/.cvsignore deleted file mode 100644 index f0a691e..0000000 --- a/bundles/org.eclipse.ui.views.properties.tabbed/.cvsignore +++ /dev/null @@ -1,2 +0,0 @@ -bin -doc \ No newline at end of file diff --git a/bundles/org.eclipse.ui.views.properties.tabbed/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.views.properties.tabbed/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.views.properties.tabbed/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.views.properties.tabbed/.settings/org.eclipse.pde.prefs b/bundles/org.eclipse.ui.views.properties.tabbed/.settings/org.eclipse.pde.prefs index d8e8469..b52f7bf 100644 --- a/bundles/org.eclipse.ui.views.properties.tabbed/.settings/org.eclipse.pde.prefs +++ b/bundles/org.eclipse.ui.views.properties.tabbed/.settings/org.eclipse.pde.prefs @@ -1,14 +1,35 @@ -#Tue Nov 16 14:12:29 EST 2004 -compilers.p.unused-element-or-attribute=1 -compilers.p.unresolved-ex-points=0 -compilers.p.deprecated=0 -compilers.p.unknown-element=1 -compilers.p.unknown-resource=1 -compilers.p.unknown-class=1 -compilers.p.unknown-attribute=0 -compilers.p.no-required-att=0 -eclipse.preferences.version=1 -compilers.p.unresolved-import=0 -compilers.p.not-externalized-att=0 -compilers.p.illegal-att-value=0 -compilers.use-project=true +compilers.f.unresolved-features=1 +compilers.f.unresolved-plugins=1 +compilers.incompatible-environment=0 +compilers.p.build=1 +compilers.p.build.bin.includes=1 +compilers.p.build.encodings=2 +compilers.p.build.java.compiler=2 +compilers.p.build.java.compliance=1 +compilers.p.build.missing.output=2 +compilers.p.build.output.library=1 +compilers.p.build.source.library=1 +compilers.p.build.src.includes=1 +compilers.p.deprecated=0 +compilers.p.discouraged-class=1 +compilers.p.illegal-att-value=0 +compilers.p.internal=1 +compilers.p.missing-packages=0 +compilers.p.missing-version-export-package=2 +compilers.p.missing-version-import-package=2 +compilers.p.missing-version-require-bundle=2 +compilers.p.no-required-att=0 +compilers.p.not-externalized-att=0 +compilers.p.unknown-attribute=0 +compilers.p.unknown-class=1 +compilers.p.unknown-element=1 +compilers.p.unknown-identifier=1 +compilers.p.unknown-resource=1 +compilers.p.unresolved-ex-points=0 +compilers.p.unresolved-import=0 +compilers.p.unused-element-or-attribute=1 +compilers.s.create-docs=false +compilers.s.doc-folder=doc +compilers.s.open-tags=1 +compilers.use-project=true +eclipse.preferences.version=1 diff --git a/bundles/org.eclipse.ui.views.properties.tabbed/src/org/eclipse/ui/internal/views/properties/tabbed/view/TabbedPropertyRegistryFactory.java b/bundles/org.eclipse.ui.views.properties.tabbed/src/org/eclipse/ui/internal/views/properties/tabbed/view/TabbedPropertyRegistryFactory.java index c81e6cf..60cf094 100755 --- a/bundles/org.eclipse.ui.views.properties.tabbed/src/org/eclipse/ui/internal/views/properties/tabbed/view/TabbedPropertyRegistryFactory.java +++ b/bundles/org.eclipse.ui.views.properties.tabbed/src/org/eclipse/ui/internal/views/properties/tabbed/view/TabbedPropertyRegistryFactory.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2001, 2010 IBM Corporation and others. + * Copyright (c) 2001, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -96,9 +96,9 @@ String key = target.getContributorId(); CacheData data = (CacheData) idToCacheData.get(key); if (data != null) { - data.registry.dispose(); data.references.remove(target); if (data.references.isEmpty()) { + data.registry.dispose(); idToCacheData.remove(key); } } diff --git a/bundles/org.eclipse.ui.views/.cvsignore b/bundles/org.eclipse.ui.views/.cvsignore deleted file mode 100644 index ba077a4..0000000 --- a/bundles/org.eclipse.ui.views/.cvsignore +++ /dev/null @@ -1 +0,0 @@ -bin diff --git a/bundles/org.eclipse.ui.views/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.views/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.views/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.views/.settings/org.eclipse.pde.prefs b/bundles/org.eclipse.ui.views/.settings/org.eclipse.pde.prefs index 0f029be..fcde2ab 100644 --- a/bundles/org.eclipse.ui.views/.settings/org.eclipse.pde.prefs +++ b/bundles/org.eclipse.ui.views/.settings/org.eclipse.pde.prefs @@ -1,7 +1,7 @@ #Wed Apr 30 16:16:06 EDT 2008 compilers.f.unresolved-features=1 compilers.f.unresolved-plugins=1 -compilers.incompatible-environment=1 +compilers.incompatible-environment=0 compilers.p.build=1 compilers.p.deprecated=0 compilers.p.discouraged-class=1 diff --git a/bundles/org.eclipse.ui.views/META-INF/MANIFEST.MF b/bundles/org.eclipse.ui.views/META-INF/MANIFEST.MF index f1d3b4a..35343ea 100644 --- a/bundles/org.eclipse.ui.views/META-INF/MANIFEST.MF +++ b/bundles/org.eclipse.ui.views/META-INF/MANIFEST.MF @@ -2,7 +2,7 @@ Bundle-ManifestVersion: 2 Bundle-Name: %pluginName Bundle-SymbolicName: org.eclipse.ui.views; singleton:=true -Bundle-Version: 3.5.0.qualifier +Bundle-Version: 3.6.100.qualifier Bundle-ClassPath: . Bundle-Activator: org.eclipse.ui.internal.views.ViewsPlugin Bundle-ActivationPolicy: lazy diff --git a/bundles/org.eclipse.ui.views/src/org/eclipse/ui/internal/views/properties/messages.properties b/bundles/org.eclipse.ui.views/src/org/eclipse/ui/internal/views/properties/messages.properties index 97ba2b4..598fa6e 100644 --- a/bundles/org.eclipse.ui.views/src/org/eclipse/ui/internal/views/properties/messages.properties +++ b/bundles/org.eclipse.ui.views/src/org/eclipse/ui/internal/views/properties/messages.properties @@ -1,5 +1,5 @@ ############################################################################### -# Copyright (c) 2000, 2009 IBM Corporation and others. +# Copyright (c) 2000, 2011 IBM Corporation and others. # All rights reserved. This program and the accompanying materials # are made available under the terms of the Eclipse Public License v1.0 # which accompanies this distribution, and is available at @@ -18,7 +18,7 @@ Categories_text = Show &amp;Categories Categories_toolTip = Show Categories -Columns_text = Co&amp;lumns... +Columns_text = Configure Co&amp;lumns... Columns_toolTip = Configure Columns CopyProperty_text = &amp;Copy diff --git a/bundles/org.eclipse.ui.views/src/org/eclipse/ui/views/contentoutline/ContentOutlinePage.java b/bundles/org.eclipse.ui.views/src/org/eclipse/ui/views/contentoutline/ContentOutlinePage.java index 5bf036c..34718eb 100644 --- a/bundles/org.eclipse.ui.views/src/org/eclipse/ui/views/contentoutline/ContentOutlinePage.java +++ b/bundles/org.eclipse.ui.views/src/org/eclipse/ui/views/contentoutline/ContentOutlinePage.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2008 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -41,6 +41,8 @@ * createControl to configure the tree viewer with a proper content * provider, label provider, and input element. * + * Subclasses may provide a hint for constructing the tree viewer + * using {@link #getTreeStyle()}. * * Note that those wanting to use a control other than internally created * TreeViewer will need to implement @@ -75,10 +77,21 @@ * @param parent */ public void createControl(Composite parent) { - treeViewer = new TreeViewer(parent, SWT.MULTI | SWT.H_SCROLL - | SWT.V_SCROLL); + treeViewer = new TreeViewer(parent, getTreeStyle()); treeViewer.addSelectionChangedListener(this); } + + /** + * A hint for the styles to use while constructing the TreeViewer. + * Subclasses may override. + * + * @return the tree styles to use. By default, SWT.MULTI | SWT.H_SCROLL | + * SWT.V_SCROLL + * @since 3.6 + */ + protected int getTreeStyle() { + return SWT.MULTI | SWT.H_SCROLL | SWT.V_SCROLL; + } /** * Fires a selection changed event. diff --git a/bundles/org.eclipse.ui.views/src/org/eclipse/ui/views/properties/PropertySheet.java b/bundles/org.eclipse.ui.views/src/org/eclipse/ui/views/properties/PropertySheet.java index ce5393c..eabe906 100644 --- a/bundles/org.eclipse.ui.views/src/org/eclipse/ui/views/properties/PropertySheet.java +++ b/bundles/org.eclipse.ui.views/src/org/eclipse/ui/views/properties/PropertySheet.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -9,6 +9,7 @@ * IBM Corporation - initial API and implementation * Markus Alexander Kuppe (Versant Corp.) - https://bugs.eclipse.org/248103 * Semion Chichelnitsky (semion@il.ibm.com) - bug 272564 + * Craig Foote (Footeware.ca) - https://bugs.eclipse.org/325743 *******************************************************************************/ package org.eclipse.ui.views.properties; @@ -278,8 +279,10 @@ * since 3.4 */ public void partClosed(IWorkbenchPart part) { - if (isPinned() &amp;&amp; part.equals(currentPart)) { - pinPropertySheetAction.setChecked(false); + if (part.equals(currentPart)) { + if (isPinned()) + pinPropertySheetAction.setChecked(false); + currentPart = null; } super.partClosed(part); } @@ -297,12 +300,9 @@ * since 3.4 */ protected void partHidden(IWorkbenchPart part) { - // if we are pinned, then we are not interested if parts are hidden, if - // our target part is hidden, we should still show whatever content we - // have been pinned on - if (!isPinned()) { - super.partHidden(part); - } + // Explicitly ignore parts becoming hidden as this + // can cause issues when the Property View is maximized + // See bug 325743 for more details } /** diff --git a/bundles/org.eclipse.ui.win32/.cvsignore b/bundles/org.eclipse.ui.win32/.cvsignore deleted file mode 100644 index ba077a4..0000000 --- a/bundles/org.eclipse.ui.win32/.cvsignore +++ /dev/null @@ -1 +0,0 @@ -bin diff --git a/bundles/org.eclipse.ui.win32/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.win32/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.win32/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.win32/.settings/org.eclipse.pde.prefs b/bundles/org.eclipse.ui.win32/.settings/org.eclipse.pde.prefs new file mode 100644 index 0000000..78a1e14 --- /dev/null +++ b/bundles/org.eclipse.ui.win32/.settings/org.eclipse.pde.prefs @@ -0,0 +1,32 @@ +compilers.f.unresolved-features=1 +compilers.f.unresolved-plugins=1 +compilers.incompatible-environment=0 +compilers.p.build=1 +compilers.p.build.bin.includes=1 +compilers.p.build.encodings=2 +compilers.p.build.java.compiler=2 +compilers.p.build.java.compliance=1 +compilers.p.build.missing.output=2 +compilers.p.build.output.library=1 +compilers.p.build.source.library=1 +compilers.p.build.src.includes=1 +compilers.p.deprecated=1 +compilers.p.discouraged-class=1 +compilers.p.internal=1 +compilers.p.missing-packages=0 +compilers.p.missing-version-export-package=2 +compilers.p.missing-version-import-package=2 +compilers.p.missing-version-require-bundle=2 +compilers.p.no-required-att=0 +compilers.p.not-externalized-att=1 +compilers.p.unknown-attribute=0 +compilers.p.unknown-class=0 +compilers.p.unknown-element=0 +compilers.p.unknown-identifier=1 +compilers.p.unknown-resource=0 +compilers.p.unresolved-ex-points=0 +compilers.p.unresolved-import=0 +compilers.s.create-docs=false +compilers.s.doc-folder=doc +compilers.s.open-tags=1 +eclipse.preferences.version=1 diff --git a/bundles/org.eclipse.ui.workbench.compatibility/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.workbench.compatibility/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.workbench.compatibility/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.workbench/.cvsignore b/bundles/org.eclipse.ui.workbench/.cvsignore deleted file mode 100644 index c5e82d7..0000000 --- a/bundles/org.eclipse.ui.workbench/.cvsignore +++ /dev/null @@ -1 +0,0 @@ -bin \ No newline at end of file diff --git a/bundles/org.eclipse.ui.workbench/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui.workbench/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui.workbench/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui.workbench/.settings/org.eclipse.pde.prefs b/bundles/org.eclipse.ui.workbench/.settings/org.eclipse.pde.prefs index d8e8469..b52f7bf 100644 --- a/bundles/org.eclipse.ui.workbench/.settings/org.eclipse.pde.prefs +++ b/bundles/org.eclipse.ui.workbench/.settings/org.eclipse.pde.prefs @@ -1,14 +1,35 @@ -#Tue Nov 16 14:12:29 EST 2004 -compilers.p.unused-element-or-attribute=1 -compilers.p.unresolved-ex-points=0 -compilers.p.deprecated=0 -compilers.p.unknown-element=1 -compilers.p.unknown-resource=1 -compilers.p.unknown-class=1 -compilers.p.unknown-attribute=0 -compilers.p.no-required-att=0 -eclipse.preferences.version=1 -compilers.p.unresolved-import=0 -compilers.p.not-externalized-att=0 -compilers.p.illegal-att-value=0 -compilers.use-project=true +compilers.f.unresolved-features=1 +compilers.f.unresolved-plugins=1 +compilers.incompatible-environment=0 +compilers.p.build=1 +compilers.p.build.bin.includes=1 +compilers.p.build.encodings=2 +compilers.p.build.java.compiler=2 +compilers.p.build.java.compliance=1 +compilers.p.build.missing.output=2 +compilers.p.build.output.library=1 +compilers.p.build.source.library=1 +compilers.p.build.src.includes=1 +compilers.p.deprecated=0 +compilers.p.discouraged-class=1 +compilers.p.illegal-att-value=0 +compilers.p.internal=1 +compilers.p.missing-packages=0 +compilers.p.missing-version-export-package=2 +compilers.p.missing-version-import-package=2 +compilers.p.missing-version-require-bundle=2 +compilers.p.no-required-att=0 +compilers.p.not-externalized-att=0 +compilers.p.unknown-attribute=0 +compilers.p.unknown-class=1 +compilers.p.unknown-element=1 +compilers.p.unknown-identifier=1 +compilers.p.unknown-resource=1 +compilers.p.unresolved-ex-points=0 +compilers.p.unresolved-import=0 +compilers.p.unused-element-or-attribute=1 +compilers.s.create-docs=false +compilers.s.doc-folder=doc +compilers.s.open-tags=1 +compilers.use-project=true +eclipse.preferences.version=1 diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IMemento.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IMemento.java index 7ea81fa..af88f9c 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IMemento.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IMemento.java @@ -99,6 +99,15 @@ */ public IMemento getChild(String type); + /** + * Returns all children of this node. + * + * @return an array of children of this node. This will not be + * null. If there are no children, an array of length + * zero will be returned. + */ + public IMemento[] getChildren(); + /** * Returns all children with the given type id. * diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IPartListener2.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IPartListener2.java index b4da216..2226bbf 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IPartListener2.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IPartListener2.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2006 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -8,17 +8,27 @@ * Contributors: * IBM Corporation - initial API and implementation *******************************************************************************/ - package org.eclipse.ui; + +import org.eclipse.jface.dialogs.IPageChangeProvider; +import org.eclipse.jface.dialogs.IPageChangedListener; +import org.eclipse.jface.dialogs.PageChangedEvent; + /** * Interface for listening to part lifecycle events. * * This is a replacement for IPartListener. - * + * + * As of 3.5, if the implementation of this listener also implements + * {@link IPageChangedListener} then it will also be notified about + * {@link PageChangedEvent}s from parts that implement + * {@link IPageChangeProvider}. + * + * * This interface may be implemented by clients. * - * + * * @see IPartService#addPartListener(IPartListener2) */ public interface IPartListener2 { diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/ISaveablePart2.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/ISaveablePart2.java index d4ee727..96d2b62 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/ISaveablePart2.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/ISaveablePart2.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2005 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -48,7 +48,7 @@ /** * Standard return code constant (value 3) indicating that the default - * behavior for prompting the user to save will be use. + * behavior for prompting the user to save will be used. */ public static final int DEFAULT = 3; diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IWorkbenchCommandConstants.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IWorkbenchCommandConstants.java index 44a0624..aa2f6e8 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IWorkbenchCommandConstants.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IWorkbenchCommandConstants.java @@ -566,6 +566,14 @@ public static final String VIEWS_SHOW_VIEW_PARM_ID = &quot;org.eclipse.ui.views.showView.viewId&quot;; //$NON-NLS-1$ /** + * Id for parameter &quot;Secondary Id&quot; in command &quot;Show View&quot; in category &quot;Views&quot; + * (value is &quot;org.eclipse.ui.views.showView.secondaryId&quot;). + * + * @since 3.7 + */ + public static final String VIEWS_SHOW_VIEW_SECONDARY_ID = &quot;org.eclipse.ui.views.showView.secondaryId&quot;; //$NON-NLS-1$ + + /** * Id for parameter &quot;As Fastview&quot; in command &quot;Show View&quot; in category &quot;Views&quot; * (value is &quot;org.eclipse.ui.views.showView.makeFast&quot;). * Optional. @@ -574,7 +582,7 @@ */ public static final String VIEWS_SHOW_VIEW_PARM_FASTVIEW = &quot;org.eclipse.ui.views.showView.makeFast&quot;; //$NON-NLS-1$ - // Perspectives Category: + // Perspectives Category: /** * Id for command &quot;Show Perspective&quot; in category &quot;Perspectives&quot; diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IWorkbenchPreferenceConstants.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IWorkbenchPreferenceConstants.java index e0779b8..ccafc70 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IWorkbenchPreferenceConstants.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IWorkbenchPreferenceConstants.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -596,5 +596,16 @@ * * @since 3.4 */ - public static final String DISABLE_OPEN_EDITOR_IN_PLACE = &quot;DISABLE_OPEN_EDITOR_IN_PLACE&quot;; //$NON-NLS-1$ + public static final String DISABLE_OPEN_EDITOR_IN_PLACE = &quot;DISABLE_OPEN_EDITOR_IN_PLACE&quot;; //$NON-NLS-1$ + + /** + * Workbench preference id for indicating the size of the list of most + * recently used working sets. + * + * Integer-valued. The default value for this preference is: 5. + * + * + * @since 3.7 + */ + public static final String RECENTLY_USED_WORKINGSETS_SIZE = &quot;RECENTLY_USED_WORKINGSETS_SIZE&quot;; //$NON-NLS-1$ } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IWorkingSetManager.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IWorkingSetManager.java index 222dc2a..79a2d92 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IWorkingSetManager.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/IWorkingSetManager.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2008 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -350,4 +350,21 @@ * @since 3.4 */ public void addToWorkingSets(IAdaptable element, IWorkingSet[] workingSets); + + /** + * Sets maximum length of the recent working sets list. + * + * @param length + * maximum number of recent working sets to be kept in the list + * @since 3.7 + */ + public void setRecentWorkingSetsLength(int length); + + /** + * Returns the maximum length of the recent working sets list. + * + * @return the maximum length of the recent working sets list. + * @since 3.7 + */ + public int getRecentWorkingSetsLength(); } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/XMLMemento.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/XMLMemento.java index 25292d5..d0484c9 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/XMLMemento.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/XMLMemento.java @@ -33,63 +33,65 @@ import org.xml.sax.SAXException; import org.xml.sax.SAXParseException; - /** - * This class represents the default implementation of the - * IMemento interface. + * This class represents the default implementation of the IMemento + * interface. * * This class is not intended to be extended by clients. * - * + * * @see IMemento */ public final class XMLMemento implements IMemento { - private Document factory; + private Document factory; - private Element element; + private Element element; - /** - * Creates a Document from the Reader - * and returns a memento on the first Element for reading - * the document. - * - * Same as calling createReadRoot(reader, null) - * - * - * @param reader the Reader used to create the memento&apos;s document - * @return a memento on the first Element for reading the document - * @throws WorkbenchException if IO problems, invalid format, or no element. - */ - public static XMLMemento createReadRoot(Reader reader) - throws WorkbenchException { - return createReadRoot(reader, null); - } + /** + * Creates a Document from the Reader and returns + * a memento on the first Element for reading the document. + * + * Same as calling createReadRoot(reader, null) + * + * + * @param reader + * the Reader used to create the memento&apos;s document + * @return a memento on the first Element for reading the + * document + * @throws WorkbenchException + * if IO problems, invalid format, or no element. + */ + public static XMLMemento createReadRoot(Reader reader) throws WorkbenchException { + return createReadRoot(reader, null); + } - /** - * Creates a Document from the Reader - * and returns a memento on the first Element for reading - * the document. - * - * @param reader the Reader used to create the memento&apos;s document - * @param baseDir the directory used to resolve relative file names - * in the XML document. This directory must exist and include the - * trailing separator. The directory format, including the separators, - * must be valid for the platform. Can be null if not - * needed. - * @return a memento on the first Element for reading the document - * @throws WorkbenchException if IO problems, invalid format, or no element. - */ - public static XMLMemento createReadRoot(Reader reader, String baseDir) - throws WorkbenchException { - String errorMessage = null; - Exception exception = null; + /** + * Creates a Document from the Reader and returns + * a memento on the first Element for reading the document. + * + * @param reader + * the Reader used to create the memento&apos;s document + * @param baseDir + * the directory used to resolve relative file names in the XML + * document. This directory must exist and include the trailing + * separator. The directory format, including the separators, + * must be valid for the platform. Can be null if + * not needed. + * @return a memento on the first Element for reading the + * document + * @throws WorkbenchException + * if IO problems, invalid format, or no element. + */ + public static XMLMemento createReadRoot(Reader reader, String baseDir) + throws WorkbenchException { + String errorMessage = null; + Exception exception = null; - try { - DocumentBuilderFactory factory = DocumentBuilderFactory - .newInstance(); - DocumentBuilder parser = factory.newDocumentBuilder(); - InputSource source = new InputSource(reader); - if (baseDir != null) { + try { + DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance(); + DocumentBuilder parser = factory.newDocumentBuilder(); + InputSource source = new InputSource(reader); + if (baseDir != null) { source.setSystemId(baseDir); } @@ -113,37 +115,37 @@ } }); - Document document = parser.parse(source); - NodeList list = document.getChildNodes(); - for (int i = 0; i &lt; list.getLength(); i++) { - Node node = list.item(i); - if (node instanceof Element) { + Document document = parser.parse(source); + NodeList list = document.getChildNodes(); + for (int i = 0; i &lt; list.getLength(); i++) { + Node node = list.item(i); + if (node instanceof Element) { return new XMLMemento(document, (Element) node); } - } - } catch (ParserConfigurationException e) { - exception = e; - errorMessage = WorkbenchMessages.XMLMemento_parserConfigError; - } catch (IOException e) { - exception = e; - errorMessage = WorkbenchMessages.XMLMemento_ioError; - } catch (SAXException e) { - exception = e; - errorMessage = WorkbenchMessages.XMLMemento_formatError; - } + } + } catch (ParserConfigurationException e) { + exception = e; + errorMessage = WorkbenchMessages.XMLMemento_parserConfigError; + } catch (IOException e) { + exception = e; + errorMessage = WorkbenchMessages.XMLMemento_ioError; + } catch (SAXException e) { + exception = e; + errorMessage = WorkbenchMessages.XMLMemento_formatError; + } - String problemText = null; - if (exception != null) { + String problemText = null; + if (exception != null) { problemText = exception.getMessage(); } - if (problemText == null || problemText.length() == 0) { + if (problemText == null || problemText.length() == 0) { problemText = errorMessage != null ? errorMessage - : WorkbenchMessages.XMLMemento_noElement; - } - throw new WorkbenchException(problemText, exception); - } + : WorkbenchMessages.XMLMemento_noElement; + } + throw new WorkbenchException(problemText, exception); + } - /** + /** * Returns a root memento for writing a document. * * @param type @@ -152,35 +154,35 @@ * @throws DOMException */ public static XMLMemento createWriteRoot(String type) throws DOMException { - Document document; - try { - document = DocumentBuilderFactory.newInstance() - .newDocumentBuilder().newDocument(); - Element element = document.createElement(type); - document.appendChild(element); - return new XMLMemento(document, element); - } catch (ParserConfigurationException e) { -// throw new Error(e); - throw new Error(e.getMessage()); - } - } + Document document; + try { + document = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument(); + Element element = document.createElement(type); + document.appendChild(element); + return new XMLMemento(document, element); + } catch (ParserConfigurationException e) { + // throw new Error(e); + throw new Error(e.getMessage()); + } + } - /** - * Creates a memento for the specified document and element. - * - * Clients should use createReadRoot and - * createWriteRoot to create the initial - * memento on a document. - * - * - * @param document the document for the memento - * @param element the element node for the memento - */ - public XMLMemento(Document document, Element element) { - super(); - this.factory = document; - this.element = element; - } + /** + * Creates a memento for the specified document and element. + * + * Clients should use createReadRoot and + * createWriteRoot to create the initial memento on a document. + * + * + * @param document + * the document for the memento + * @param element + * the element node for the memento + */ + public XMLMemento(Document document, Element element) { + super(); + this.factory = document; + this.element = element; + } /** * Creates a new child of this memento with the given type. @@ -198,10 +200,10 @@ * if the child cannot be created */ public IMemento createChild(String type) throws DOMException { - Element child = factory.createElement(type); - element.appendChild(child); - return new XMLMemento(factory, child); - } + Element child = factory.createElement(type); + element.appendChild(child); + return new XMLMemento(factory, child); + } /** * Creates a new child of this memento with the given type and id. The id is @@ -222,11 +224,11 @@ * if the child cannot be created */ public IMemento createChild(String type, String id) throws DOMException { - Element child = factory.createElement(type); - child.setAttribute(TAG_ID, id == null ? &quot;&quot; : id); //$NON-NLS-1$ - element.appendChild(child); - return new XMLMemento(factory, child); - } + Element child = factory.createElement(type); + child.setAttribute(TAG_ID, id == null ? &quot;&quot; : id); //$NON-NLS-1$ + element.appendChild(child); + return new XMLMemento(factory, child); + } /** * Create a copy of the child node and append it to this node. @@ -237,89 +239,118 @@ * if the child cannot be created */ public IMemento copyChild(IMemento child) throws DOMException { - Element childElement = ((XMLMemento) child).element; - Element newElement = (Element) factory.importNode(childElement, true); - element.appendChild(newElement); - return new XMLMemento(factory, newElement); - } + Element childElement = ((XMLMemento) child).element; + Element newElement = (Element) factory.importNode(childElement, true); + element.appendChild(newElement); + return new XMLMemento(factory, newElement); + } - /* (non-Javadoc) - * Method declared in IMemento. - */ - public IMemento getChild(String type) { + /* + * (non-Javadoc) Method declared in IMemento. + */ + public IMemento getChild(String type) { - // Get the nodes. - NodeList nodes = element.getChildNodes(); - int size = nodes.getLength(); - if (size == 0) { + // Get the nodes. + NodeList nodes = element.getChildNodes(); + int size = nodes.getLength(); + if (size == 0) { return null; } - // Find the first node which is a child of this node. - for (int nX = 0; nX &lt; size; nX++) { - Node node = nodes.item(nX); - if (node instanceof Element) { - Element element = (Element) node; - if (element.getNodeName().equals(type)) { + // Find the first node which is a child of this node. + for (int nX = 0; nX &lt; size; nX++) { + Node node = nodes.item(nX); + if (node instanceof Element) { + Element element = (Element) node; + if (element.getNodeName().equals(type)) { return new XMLMemento(factory, element); } - } - } + } + } - // A child was not found. - return null; - } + // A child was not found. + return null; + } - /* (non-Javadoc) - * Method declared in IMemento. - */ - public IMemento[] getChildren(String type) { + /* + * (non-Javadoc) Method declared in IMemento. + */ + public IMemento[] getChildren() { - // Get the nodes. - NodeList nodes = element.getChildNodes(); - int size = nodes.getLength(); - if (size == 0) { + // Get the nodes. + final NodeList nodes = element.getChildNodes(); + int size = nodes.getLength(); + if (size == 0) { return new IMemento[0]; } - // Extract each node with given type. - ArrayList list = new ArrayList(size); - for (int nX = 0; nX &lt; size; nX++) { - Node node = nodes.item(nX); - if (node instanceof Element) { - Element element = (Element) node; - if (element.getNodeName().equals(type)) { + // Extract each node with given type. + ArrayList list = new ArrayList(size); + for (int nX = 0; nX &lt; size; nX++) { + final Node node = nodes.item(nX); + if (node instanceof Element) + list.add(node); + } + + // Create a memento for each node. + size = list.size(); + IMemento[] results = new IMemento[size]; + for (int x = 0; x &lt; size; x++) { + results[x] = new XMLMemento(factory, (Element) list.get(x)); + } + return results; + } + + /* + * (non-Javadoc) Method declared in IMemento. + */ + public IMemento[] getChildren(String type) { + + // Get the nodes. + NodeList nodes = element.getChildNodes(); + int size = nodes.getLength(); + if (size == 0) { + return new IMemento[0]; + } + + // Extract each node with given type. + ArrayList list = new ArrayList(size); + for (int nX = 0; nX &lt; size; nX++) { + Node node = nodes.item(nX); + if (node instanceof Element) { + Element element = (Element) node; + if (element.getNodeName().equals(type)) { list.add(element); } - } - } + } + } - // Create a memento for each node. - size = list.size(); - IMemento[] results = new IMemento[size]; - for (int x = 0; x &lt; size; x++) { - results[x] = new XMLMemento(factory, (Element) list.get(x)); - } - return results; - } + // Create a memento for each node. + size = list.size(); + IMemento[] results = new IMemento[size]; + for (int x = 0; x &lt; size; x++) { + results[x] = new XMLMemento(factory, (Element) list.get(x)); + } + return results; + } - /* (non-Javadoc) - * Method declared in IMemento. - */ - public Float getFloat(String key) { - Attr attr = element.getAttributeNode(key); - if (attr == null) { + /* + * (non-Javadoc) Method declared in IMemento. + */ + public Float getFloat(String key) { + Attr attr = element.getAttributeNode(key); + if (attr == null) { return null; } - String strValue = attr.getValue(); - try { - return new Float(strValue); - } catch (NumberFormatException e) { - WorkbenchPlugin.log(&quot;Memento problem - Invalid float for key: &quot; //$NON-NLS-1$ - + key + &quot; value: &quot; + strValue, e); //$NON-NLS-1$ - return null; - } - } + String strValue = attr.getValue(); + try { + return new Float(strValue); + } catch (NumberFormatException e) { + WorkbenchPlugin.log(&quot;Memento problem - Invalid float for key: &quot; //$NON-NLS-1$ + + key + &quot; value: &quot; + strValue, e); //$NON-NLS-1$ + return null; + } + } /** * @since 3.4 @@ -328,52 +359,51 @@ return element.getNodeName(); } - /* (non-Javadoc) - * Method declared in IMemento. - */ - public String getID() { - return element.getAttribute(TAG_ID); - } + /* + * (non-Javadoc) Method declared in IMemento. + */ + public String getID() { + return element.getAttribute(TAG_ID); + } - /* (non-Javadoc) - * Method declared in IMemento. - */ - public Integer getInteger(String key) { - Attr attr = element.getAttributeNode(key); - if (attr == null) { + /* + * (non-Javadoc) Method declared in IMemento. + */ + public Integer getInteger(String key) { + Attr attr = element.getAttributeNode(key); + if (attr == null) { return null; } - String strValue = attr.getValue(); - try { - return new Integer(strValue); - } catch (NumberFormatException e) { - WorkbenchPlugin - .log(&quot;Memento problem - invalid integer for key: &quot; + key //$NON-NLS-1$ - + &quot; value: &quot; + strValue, e); //$NON-NLS-1$ - return null; - } - } - - /* (non-Javadoc) - * Method declared in IMemento. - */ - public String getString(String key) { - Attr attr = element.getAttributeNode(key); - if (attr == null) { + String strValue = attr.getValue(); + try { + return new Integer(strValue); + } catch (NumberFormatException e) { + WorkbenchPlugin.log(&quot;Memento problem - invalid integer for key: &quot; + key //$NON-NLS-1$ + + &quot; value: &quot; + strValue, e); //$NON-NLS-1$ return null; } - return attr.getValue(); - } + } + + /* + * (non-Javadoc) Method declared in IMemento. + */ + public String getString(String key) { + Attr attr = element.getAttributeNode(key); + if (attr == null) { + return null; + } + return attr.getValue(); + } /** * @since 3.4 */ public Boolean getBoolean(String key) { - Attr attr = element.getAttributeNode(key); - if (attr == null) { + Attr attr = element.getAttributeNode(key); + if (attr == null) { return null; } - return Boolean.valueOf(attr.getValue()); + return Boolean.valueOf(attr.getValue()); } /** @@ -387,12 +417,12 @@ * if the text node is too big */ public String getTextData() throws DOMException { - Text textNode = getTextNode(); - if (textNode != null) { - return textNode.getData(); - } - return null; - } + Text textNode = getTextNode(); + if (textNode != null) { + return textNode.getData(); + } + return null; + } /** * @since 3.4 @@ -408,31 +438,31 @@ return attributes; } - /** - * Returns the Text node of the memento. Each memento is allowed only - * one Text node. - * - * @return the Text node of the memento, or null if - * the memento has no Text node. - */ - private Text getTextNode() { - // Get the nodes. - NodeList nodes = element.getChildNodes(); - int size = nodes.getLength(); - if (size == 0) { + /** + * Returns the Text node of the memento. Each memento is allowed only one + * Text node. + * + * @return the Text node of the memento, or null if the memento + * has no Text node. + */ + private Text getTextNode() { + // Get the nodes. + NodeList nodes = element.getChildNodes(); + int size = nodes.getLength(); + if (size == 0) { return null; } - for (int nX = 0; nX &lt; size; nX++) { - Node node = nodes.item(nX); - if (node instanceof Text) { - return (Text) node; - } - } - // a Text node was not found - return null; - } + for (int nX = 0; nX &lt; size; nX++) { + Node node = nodes.item(nX); + if (node instanceof Text) { + return (Text) node; + } + } + // a Text node was not found + return null; + } - /** + /** * Places the element&apos;s attributes into the document. * * @param copyText @@ -441,29 +471,30 @@ * if the attributes or children cannot be copied to this node. */ private void putElement(Element element, boolean copyText) throws DOMException { - NamedNodeMap nodeMap = element.getAttributes(); - int size = nodeMap.getLength(); - for (int i = 0; i &lt; size; i++) { - Attr attr = (Attr) nodeMap.item(i); - putString(attr.getName(), attr.getValue()); - } + NamedNodeMap nodeMap = element.getAttributes(); + int size = nodeMap.getLength(); + for (int i = 0; i &lt; size; i++) { + Attr attr = (Attr) nodeMap.item(i); + putString(attr.getName(), attr.getValue()); + } - NodeList nodes = element.getChildNodes(); - size = nodes.getLength(); - // Copy first text node (fixes bug 113659). - // Note that text data will be added as the first child (see putTextData) - boolean needToCopyText = copyText; - for (int i = 0; i &lt; size; i++) { - Node node = nodes.item(i); - if (node instanceof Element) { - XMLMemento child = (XMLMemento) createChild(node.getNodeName()); - child.putElement((Element) node, true); - } else if (node instanceof Text &amp;&amp; needToCopyText) { - putTextData(((Text) node).getData()); - needToCopyText = false; - } - } - } + NodeList nodes = element.getChildNodes(); + size = nodes.getLength(); + // Copy first text node (fixes bug 113659). + // Note that text data will be added as the first child (see + // putTextData) + boolean needToCopyText = copyText; + for (int i = 0; i &lt; size; i++) { + Node node = nodes.item(i); + if (node instanceof Element) { + XMLMemento child = (XMLMemento) createChild(node.getNodeName()); + child.putElement((Element) node, true); + } else if (node instanceof Text &amp;&amp; needToCopyText) { + putTextData(((Text) node).getData()); + needToCopyText = false; + } + } + } /** * Sets the value of the given key to the given floating point number. @@ -476,8 +507,8 @@ * if the attribute cannot be set */ public void putFloat(String key, float f) throws DOMException { - element.setAttribute(key, String.valueOf(f)); - } + element.setAttribute(key, String.valueOf(f)); + } /** * Sets the value of the given key to the given integer. @@ -490,8 +521,8 @@ * if the attribute cannot be set */ public void putInteger(String key, int n) throws DOMException { - element.setAttribute(key, String.valueOf(n)); - } + element.setAttribute(key, String.valueOf(n)); + } /** * Copy the attributes and children from memento to the @@ -503,10 +534,11 @@ * if the attributes or children cannot be copied to this node. */ public void putMemento(IMemento memento) throws DOMException { - // Do not copy the element&apos;s top level text node (this would overwrite the existing text). - // Text nodes of children are copied. - putElement(((XMLMemento) memento).element, false); - } + // Do not copy the element&apos;s top level text node (this would overwrite + // the existing text). + // Text nodes of children are copied. + putElement(((XMLMemento) memento).element, false); + } /** * Sets the value of the given key to the given string. @@ -519,11 +551,11 @@ * if the attribute cannot be set */ public void putString(String key, String value) throws DOMException { - if (value == null) { + if (value == null) { return; } - element.setAttribute(key, value); - } + element.setAttribute(key, value); + } /** * Sets the value of the given key to the given boolean value. @@ -552,155 +584,159 @@ * if the text node cannot be created under this node. */ public void putTextData(String data) throws DOMException { - Text textNode = getTextNode(); - if (textNode == null) { - textNode = factory.createTextNode(data); - // Always add the text node as the first child (fixes bug 93718) + Text textNode = getTextNode(); + if (textNode == null) { + textNode = factory.createTextNode(data); + // Always add the text node as the first child (fixes bug 93718) element.insertBefore(textNode, element.getFirstChild()); - } else { - textNode.setData(data); - } - } - - /** - * Saves this memento&apos;s document current values to the - * specified writer. - * - * @param writer the writer used to save the memento&apos;s document - * @throws IOException if there is a problem serializing the document to the stream. - */ - public void save(Writer writer) throws IOException { - DOMWriter out = new DOMWriter(writer); - try { - out.print(element); - } finally { - out.close(); - } + } else { + textNode.setData(data); + } } /** - * A simple XML writer. Using this instead of the javax.xml.transform classes allows - * compilation against JCL Foundation (bug 80053). - */ - private static final class DOMWriter extends PrintWriter { - - /* constants */ - private static final String XML_VERSION = &quot;&quot;; //$NON-NLS-1$ + * Saves this memento&apos;s document current values to the specified writer. + * + * @param writer + * the writer used to save the memento&apos;s document + * @throws IOException + * if there is a problem serializing the document to the stream. + */ + public void save(Writer writer) throws IOException { + DOMWriter out = new DOMWriter(writer); + try { + out.print(element); + } finally { + out.close(); + } + } - /** - * Creates a new DOM writer on the given output writer. - * - * @param output the output writer - */ - public DOMWriter(Writer output) { - super(output); - println(XML_VERSION); - } + /** + * A simple XML writer. Using this instead of the javax.xml.transform + * classes allows compilation against JCL Foundation (bug 80053). + */ + private static final class DOMWriter extends PrintWriter { - /** - * Prints the given element. - * - * @param element the element to print - */ - public void print(Element element) { - // Ensure extra whitespace is not emitted next to a Text node, - // as that will result in a situation where the restored text data is not the - // same as the saved text data. - boolean hasChildren = element.hasChildNodes(); - startTag(element, hasChildren); - if (hasChildren) { - boolean prevWasText = false; - NodeList children = element.getChildNodes(); - for (int i = 0; i &lt; children.getLength(); i++) { - Node node = children.item(i); - if (node instanceof Element) { - if (!prevWasText) { - println(); - } - print((Element) children.item(i)); - prevWasText = false; - } - else if (node instanceof Text) { - print(getEscaped(node.getNodeValue())); - prevWasText = true; - } - } - if (!prevWasText) { - println(); - } - endTag(element); - } - } + /* constants */ + private static final String XML_VERSION = &quot;&quot;; //$NON-NLS-1$ - private void startTag(Element element, boolean hasChildren) { - StringBuffer sb = new StringBuffer(); - sb.append(&quot;&lt;&quot;); //$NON-NLS-1$ - sb.append(element.getTagName()); - NamedNodeMap attributes = element.getAttributes(); - for (int i = 0; i &lt; attributes.getLength(); i++) { - Attr attribute = (Attr)attributes.item(i); + /** + * Creates a new DOM writer on the given output writer. + * + * @param output + * the output writer + */ + public DOMWriter(Writer output) { + super(output); + println(XML_VERSION); + } + + /** + * Prints the given element. + * + * @param element + * the element to print + */ + public void print(Element element) { + // Ensure extra whitespace is not emitted next to a Text node, + // as that will result in a situation where the restored text data + // is not the + // same as the saved text data. + boolean hasChildren = element.hasChildNodes(); + startTag(element, hasChildren); + if (hasChildren) { + boolean prevWasText = false; + NodeList children = element.getChildNodes(); + for (int i = 0; i &lt; children.getLength(); i++) { + Node node = children.item(i); + if (node instanceof Element) { + if (!prevWasText) { + println(); + } + print((Element) children.item(i)); + prevWasText = false; + } else if (node instanceof Text) { + print(getEscaped(node.getNodeValue())); + prevWasText = true; + } + } + if (!prevWasText) { + println(); + } + endTag(element); + } + } + + private void startTag(Element element, boolean hasChildren) { + StringBuffer sb = new StringBuffer(); + sb.append(&quot;&lt;&quot;); //$NON-NLS-1$ + sb.append(element.getTagName()); + NamedNodeMap attributes = element.getAttributes(); + for (int i = 0; i &lt; attributes.getLength(); i++) { + Attr attribute = (Attr) attributes.item(i); sb.append(&quot; &quot;); //$NON-NLS-1$ sb.append(attribute.getName()); sb.append(&quot;=\&quot;&quot;); //$NON-NLS-1$ sb.append(getEscaped(String.valueOf(attribute.getValue()))); sb.append(&quot;\&quot;&quot;); //$NON-NLS-1$ - } - sb.append(hasChildren ? &quot;&gt;&quot; : &quot;/&gt;&quot;); //$NON-NLS-1$ //$NON-NLS-2$ - print(sb.toString()); - } + } + sb.append(hasChildren ? &quot;&gt;&quot; : &quot;/&gt;&quot;); //$NON-NLS-1$ //$NON-NLS-2$ + print(sb.toString()); + } - private void endTag(Element element) { - StringBuffer sb = new StringBuffer(); - sb.append(&quot;&quot;); //$NON-NLS-1$ - print(sb.toString()); - } - - private static void appendEscapedChar(StringBuffer buffer, char c) { - String replacement = getReplacement(c); - if (replacement != null) { - buffer.append(&apos;&amp;&apos;); - buffer.append(replacement); - buffer.append(&apos;;&apos;); - } else if (c==9 || c==10 || c==13 || c&gt;=32){ - buffer.append(c); - } - } + private void endTag(Element element) { + StringBuffer sb = new StringBuffer(); + sb.append(&quot;&quot;); //$NON-NLS-1$ + print(sb.toString()); + } - private static String getEscaped(String s) { - StringBuffer result = new StringBuffer(s.length() + 10); - for (int i = 0; i &lt; s.length(); ++i) { + private static void appendEscapedChar(StringBuffer buffer, char c) { + String replacement = getReplacement(c); + if (replacement != null) { + buffer.append(&apos;&amp;&apos;); + buffer.append(replacement); + buffer.append(&apos;;&apos;); + } else if (c == 9 || c == 10 || c == 13 || c &gt;= 32) { + buffer.append(c); + } + } + + private static String getEscaped(String s) { + StringBuffer result = new StringBuffer(s.length() + 10); + for (int i = 0; i &lt; s.length(); ++i) { appendEscapedChar(result, s.charAt(i)); } - return result.toString(); - } + return result.toString(); + } - private static String getReplacement(char c) { - // Encode special XML characters into the equivalent character references. + private static String getReplacement(char c) { + // Encode special XML characters into the equivalent character + // references. // The first five are defined by default for all XML documents. // The next three (#xD, #xA, #x9) are encoded to avoid them // being converted to spaces on deserialization // (fixes bug 93720) - switch (c) { - case &apos;&lt;&apos; : - return &quot;lt&quot;; //$NON-NLS-1$ - case &apos;&gt;&apos; : - return &quot;gt&quot;; //$NON-NLS-1$ - case &apos;&quot;&apos; : - return &quot;quot&quot;; //$NON-NLS-1$ - case &apos;\&apos;&apos; : - return &quot;apos&quot;; //$NON-NLS-1$ - case &apos;&amp;&apos; : - return &quot;amp&quot;; //$NON-NLS-1$ - case &apos;\r&apos;: - return &quot;#x0D&quot;; //$NON-NLS-1$ - case &apos;\n&apos;: - return &quot;#x0A&quot;; //$NON-NLS-1$ - case &apos;\u0009&apos;: - return &quot;#x09&quot;; //$NON-NLS-1$ - } - return null; - } - } + switch (c) { + case &apos;&lt;&apos;: + return &quot;lt&quot;; //$NON-NLS-1$ + case &apos;&gt;&apos;: + return &quot;gt&quot;; //$NON-NLS-1$ + case &apos;&quot;&apos;: + return &quot;quot&quot;; //$NON-NLS-1$ + case &apos;\&apos;&apos;: + return &quot;apos&quot;; //$NON-NLS-1$ + case &apos;&amp;&apos;: + return &quot;amp&quot;; //$NON-NLS-1$ + case &apos;\r&apos;: + return &quot;#x0D&quot;; //$NON-NLS-1$ + case &apos;\n&apos;: + return &quot;#x0A&quot;; //$NON-NLS-1$ + case &apos;\u0009&apos;: + return &quot;#x09&quot;; //$NON-NLS-1$ + } + return null; + } + } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/actions/ActionFactory.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/actions/ActionFactory.java index 34f978a..83185dd 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/actions/ActionFactory.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/actions/ActionFactory.java @@ -23,10 +23,6 @@ import org.eclipse.ui.internal.IWorkbenchGraphicConstants; import org.eclipse.ui.internal.IWorkbenchHelpContextIds; import org.eclipse.ui.internal.NavigationHistoryAction; -import org.eclipse.ui.internal.OpenPreferencesAction; -import org.eclipse.ui.internal.SaveAction; -import org.eclipse.ui.internal.SaveAllAction; -import org.eclipse.ui.internal.SaveAsAction; import org.eclipse.ui.internal.ToggleEditorsVisibilityAction; import org.eclipse.ui.internal.Workbench; import org.eclipse.ui.internal.WorkbenchImages; @@ -966,7 +962,8 @@ throw new IllegalArgumentException(); } - IWorkbenchAction action = new OpenPreferencesAction(window); + WorkbenchCommandAction action = new WorkbenchCommandAction( + getCommandId(), window); action.setId(getId()); action.setText(WorkbenchMessages.OpenPreferences_text); action.setToolTipText(WorkbenchMessages.OpenPreferences_toolTip); @@ -1303,8 +1300,12 @@ if (window == null) { throw new IllegalArgumentException(); } - IWorkbenchAction action = new SaveAction(window); + WorkbenchCommandAction action = new WorkbenchCommandAction(getCommandId(), window); + action.setText(WorkbenchMessages.SaveAction_text); + action.setToolTipText(WorkbenchMessages.SaveAction_toolTip); action.setId(getId()); + window.getWorkbench().getHelpSystem() + .setHelp(action, IWorkbenchHelpContextIds.SAVE_ACTION); return action; } }; @@ -1323,7 +1324,11 @@ if (window == null) { throw new IllegalArgumentException(); } - IWorkbenchAction action = new SaveAllAction(window); + IWorkbenchAction action = new WorkbenchCommandAction(getCommandId(), window); + action.setText(WorkbenchMessages.SaveAll_text); + action.setToolTipText(WorkbenchMessages.SaveAll_toolTip); + window.getWorkbench().getHelpSystem() + .setHelp(action, IWorkbenchHelpContextIds.SAVE_ALL_ACTION); action.setId(getId()); return action; } @@ -1343,7 +1348,11 @@ if (window == null) { throw new IllegalArgumentException(); } - IWorkbenchAction action = new SaveAsAction(window); + IWorkbenchAction action = new WorkbenchCommandAction(getCommandId(), window); + action.setText(WorkbenchMessages.SaveAs_text); + action.setToolTipText(WorkbenchMessages.SaveAs_toolTip); + window.getWorkbench().getHelpSystem() + .setHelp(action, IWorkbenchHelpContextIds.SAVE_AS_ACTION); action.setId(getId()); return action; } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/contexts/IContextService.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/contexts/IContextService.java index d56034e..84105ba 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/contexts/IContextService.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/contexts/IContextService.java @@ -11,7 +11,6 @@ package org.eclipse.ui.contexts; import java.util.Collection; - import org.eclipse.core.commands.contexts.Context; import org.eclipse.core.commands.contexts.IContextManagerListener; import org.eclipse.core.expressions.Expression; @@ -40,6 +39,14 @@ public interface IContextService extends IServiceWithSources { /** + * The identifier for the context that is active when a workbench is active. + * + * @since 3.7 + * + */ + public static final String CONTEXT_ID_WORKBENCH_MENU = &quot;org.eclipse.ui.contexts.workbenchMenu&quot;; //$NON-NLS-1$ + + /** * The identifier for the context that is active when a shell registered as * a dialog. */ diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/databinding/WorkbenchProperties.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/databinding/WorkbenchProperties.java index e6dde88..f5798c6 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/databinding/WorkbenchProperties.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/databinding/WorkbenchProperties.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2009 IBM Corporation and others. + * Copyright (c) 2009, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -14,7 +14,6 @@ import java.util.ArrayList; import java.util.Collections; import java.util.List; - import org.eclipse.core.databinding.observable.list.ListDiff; import org.eclipse.core.databinding.property.INativePropertyListener; import org.eclipse.core.databinding.property.IProperty; @@ -287,7 +286,7 @@ } public void selectionChanged(IWorkbenchPart part, ISelection selection) { - fireChange(null, null); + fireChange(part, null); } } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/dialogs/EditorSelectionDialog.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/dialogs/EditorSelectionDialog.java index f799f46..d47eba5 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/dialogs/EditorSelectionDialog.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/dialogs/EditorSelectionDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -56,9 +56,10 @@ * internal and external editors. * * @since 3.3 + * @noextend This class is not intended to be subclassed by clients. */ -public final class EditorSelectionDialog extends Dialog { +public class EditorSelectionDialog extends Dialog { private EditorDescriptor selectedEditor; private EditorDescriptor hiddenSelectedEditor; @@ -75,7 +76,13 @@ private Button okButton; - private static final String STORE_ID_INTERNAL_EXTERNAL = &quot;EditorSelectionDialog.STORE_ID_INTERNAL_EXTERNAL&quot;;//$NON-NLS-1$ + /** + * For internal use only. + * + * @noreference This field is not intended to be referenced by clients. + * @since 3.7 + */ + protected static final String STORE_ID_INTERNAL_EXTERNAL = &quot;EditorSelectionDialog.STORE_ID_INTERNAL_EXTERNAL&quot;;//$NON-NLS-1$ private String message = WorkbenchMessages.EditorSelection_chooseAnEditor; @@ -162,10 +169,13 @@ ((GridLayout) contents.getLayout()).numColumns = 2; // begin the layout - Label textLabel = new Label(contents, SWT.NONE); + Label textLabel = new Label(contents, SWT.WRAP); + textLabel.setText(message); GridData data = new GridData(); data.horizontalSpan = 2; + data.horizontalAlignment = SWT.FILL; + data.widthHint = TABLE_WIDTH; textLabel.setLayoutData(data); textLabel.setFont(font); @@ -373,7 +383,7 @@ TableItem ti = new TableItem(editorTable, SWT.NULL); ti.setData(editor); ti.setText(editor.getLabel()); - Image image = editor.getImageDescriptor().createImage(); + Image image = (Image) resourceManager.get(editor.getImageDescriptor()); ti.setImage(image); // need to pass an array to setSelection -- 1FSKYVO: SWT:ALL - diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/dialogs/FilteredItemsSelectionDialog.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/dialogs/FilteredItemsSelectionDialog.java index 3671307..4abbd44 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/dialogs/FilteredItemsSelectionDialog.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/dialogs/FilteredItemsSelectionDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -3157,6 +3157,7 @@ * if the content viewer should be visible. */ public void setVisible(boolean visible) { + viewForm.setVisible(visible); GridData gd = (GridData) viewForm.getLayoutData(); gd.exclude = !visible; viewForm.getParent().layout(); diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/dialogs/PatternFilter.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/dialogs/PatternFilter.java index dc7fe26..2c43b5c 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/dialogs/PatternFilter.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/dialogs/PatternFilter.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2004, 2009 IBM Corporation and others. + * Copyright (c) 2004, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,6 +7,7 @@ * * Contributors: * IBM Corporation - initial API and implementation + * Sascha Becher - Bug 186404 - Update PatternFilter API to allow extensions *******************************************************************************/ package org.eclipse.ui.dialogs; @@ -41,12 +42,19 @@ */ private Map cache = new HashMap(); - /* - * Maps parent elements to TRUE or FALSE - */ - private Map foundAnyCache = new HashMap(); + /** + * Maps parent elements to TRUE or FALSE + * + * @since 3.8 + */ + protected Map foundAnyCache = new HashMap(); - private boolean useCache = false; + /** + * Specifies if caching of filter results should be used. + * + * @since 3.8 + */ + protected boolean useCache = false; /** * Whether to include a leading wildcard for all provided patterns. A @@ -66,7 +74,7 @@ /* (non-Javadoc) * @see org.eclipse.jface.viewers.ViewerFilter#filter(org.eclipse.jface.viewers.Viewer, java.lang.Object, java.lang.Object[]) */ - public final Object[] filter(Viewer viewer, Object parent, Object[] elements) { + public Object[] filter(Viewer viewer, Object parent, Object[] elements) { // we don&apos;t want to optimize if we&apos;ve extended the filter ... this // needs to be addressed in 3.4 // https://bugs.eclipse.org/bugs/show_bug.cgi?id=186404 @@ -77,7 +85,22 @@ if (!useCache) { return super.filter(viewer, parent, elements); } - + return doFilter(viewer, parent, elements); + } + + /** + * Filters the given elements for the given viewer using local cache. + * + * @param viewer + * the viewer + * @param parent + * the parent element + * @param elements + * the elements to filter + * @return the filtered elements + * @since 3.8 + */ + protected Object[] doFilter(Viewer viewer, Object parent, Object[] elements) { Object[] filtered = (Object[]) cache.get(parent); if (filtered == null) { Boolean foundAny = (Boolean) foundAnyCache.get(parent); @@ -141,7 +164,7 @@ /* (non-Javadoc) * @see org.eclipse.jface.viewers.ViewerFilter#select(org.eclipse.jface.viewers.Viewer, java.lang.Object, java.lang.Object) */ - public final boolean select(Viewer viewer, Object parentElement, + public boolean select(Viewer viewer, Object parentElement, Object element) { return isElementVisible(viewer, element); } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/handlers/ShowViewHandler.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/handlers/ShowViewHandler.java index d1fa612..bf42b84 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/handlers/ShowViewHandler.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/handlers/ShowViewHandler.java @@ -11,7 +11,6 @@ package org.eclipse.ui.handlers; import java.util.Map; - import org.eclipse.core.commands.AbstractHandler; import org.eclipse.core.commands.ExecutionEvent; import org.eclipse.core.commands.ExecutionException; @@ -66,15 +65,15 @@ .getActiveWorkbenchWindowChecked(event); // Get the view identifier, if any. final Map parameters = event.getParameters(); - final Object value = parameters - .get(IWorkbenchCommandConstants.VIEWS_SHOW_VIEW_PARM_ID); + final Object viewId = parameters.get(IWorkbenchCommandConstants.VIEWS_SHOW_VIEW_PARM_ID); + final Object secondary = parameters.get(IWorkbenchCommandConstants.VIEWS_SHOW_VIEW_SECONDARY_ID); makeFast = &quot;true&quot;.equals(parameters.get(IWorkbenchCommandConstants.VIEWS_SHOW_VIEW_PARM_FASTVIEW)); //$NON-NLS-1$ - if (value == null) { + if (viewId == null) { openOther(window); } else { try { - openView((String) value, window); + openView((String) viewId, (String) secondary, window); } catch (PartInitException e) { throw new ExecutionException(&quot;Part could not be initialized&quot;, e); //$NON-NLS-1$ } @@ -103,7 +102,7 @@ final IViewDescriptor[] descriptors = dialog.getSelection(); for (int i = 0; i &lt; descriptors.length; ++i) { try { - openView(descriptors[i].getId(), window); + openView(descriptors[i].getId(), null, window); } catch (PartInitException e) { StatusUtil.handleStatus(e.getStatus(), WorkbenchMessages.ShowView_errorTitle @@ -118,12 +117,13 @@ * * @param viewId * The view to open; must not be null + * @param secondaryId + * an optional secondary id; may be null * @throws PartInitException * If the part could not be initialized. */ - private final void openView(final String viewId, - final IWorkbenchWindow activeWorkbenchWindow) - throws PartInitException { + private final void openView(final String viewId, final String secondaryId, + final IWorkbenchWindow activeWorkbenchWindow) throws PartInitException { final IWorkbenchPage activePage = activeWorkbenchWindow.getActivePage(); if (activePage == null) { @@ -137,7 +137,7 @@ // If we&apos;re making a fast view then use the new mechanism directly boolean useNewMinMax = Perspective.useNewMinMax(persp); if (useNewMinMax) { - IViewReference ref = persp.getViewReference(viewId, null); + IViewReference ref = persp.getViewReference(viewId, secondaryId); if (ref == null) return; @@ -147,10 +147,10 @@ return; } - IViewReference ref = wp.findViewReference(viewId); + IViewReference ref = wp.findViewReference(viewId, secondaryId); if (ref == null) { - IViewPart part = wp.showView(viewId, null, IWorkbenchPage.VIEW_CREATE); + IViewPart part = wp.showView(viewId, secondaryId, IWorkbenchPage.VIEW_CREATE); ref = (IViewReference)wp.getReference(part); } @@ -159,7 +159,7 @@ } wp.activate(ref.getPart(true)); } else { - activePage.showView(viewId); + activePage.showView(viewId, secondaryId, IWorkbenchPage.VIEW_ACTIVATE); } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/AbstractWorkingSetManager.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/AbstractWorkingSetManager.java index 92f2500..d5c31dc 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/AbstractWorkingSetManager.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/AbstractWorkingSetManager.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -38,6 +38,7 @@ import org.eclipse.core.runtime.dynamichelpers.IExtensionChangeHandler; import org.eclipse.core.runtime.dynamichelpers.IExtensionTracker; import org.eclipse.core.runtime.jobs.Job; +import org.eclipse.jface.preference.IPreferenceStore; import org.eclipse.jface.util.IPropertyChangeListener; import org.eclipse.jface.util.PropertyChangeEvent; import org.eclipse.osgi.util.NLS; @@ -46,6 +47,7 @@ import org.eclipse.ui.IElementFactory; import org.eclipse.ui.IMemento; import org.eclipse.ui.IPersistableElement; +import org.eclipse.ui.IWorkbenchPreferenceConstants; import org.eclipse.ui.IWorkingSet; import org.eclipse.ui.IWorkingSetElementAdapter; import org.eclipse.ui.IWorkingSetManager; @@ -63,6 +65,7 @@ import org.eclipse.ui.internal.registry.IWorkbenchRegistryConstants; import org.eclipse.ui.internal.registry.WorkingSetDescriptor; import org.eclipse.ui.internal.registry.WorkingSetRegistry; +import org.eclipse.ui.internal.util.PrefUtil; import org.eclipse.ui.progress.WorkbenchJob; import org.eclipse.ui.statushandlers.StatusManager; import org.osgi.framework.Bundle; @@ -95,12 +98,8 @@ ((AbstractWorkingSet) o2).getUniqueId()); } }); - - /** - * Size of the list of most recently used working sets. - */ - private static final int MRU_SIZE = 5; - private List recentWorkingSets = new ArrayList(); + + private List recentWorkingSets = new ArrayList(); private BundleContext bundleContext; private Map/**/ updaters= new HashMap(); @@ -319,9 +318,7 @@ } recentWorkingSets.remove(workingSet); recentWorkingSets.add(0, workingSet); - if (recentWorkingSets.size() &gt; MRU_SIZE) { - recentWorkingSets.remove(MRU_SIZE); - } + sizeRecentWorkingSets(); } //---- equals and hash code ----------------------------------------------- @@ -917,4 +914,27 @@ }}); } } + + public void setRecentWorkingSetsLength(int length) { + if (length &lt; 1 || length &gt; 99) + throw new IllegalArgumentException(&quot;Invalid recent working sets length: &quot; + length); //$NON-NLS-1$ + IPreferenceStore store = PrefUtil.getAPIPreferenceStore(); + store.setValue(IWorkbenchPreferenceConstants.RECENTLY_USED_WORKINGSETS_SIZE, length); + // adjust length + sizeRecentWorkingSets(); + } + + private void sizeRecentWorkingSets() { + int maxLength = getRecentWorkingSetsLength(); + while (recentWorkingSets.size() &gt; maxLength) { + int lastPosition = recentWorkingSets.size() - 1; + recentWorkingSets.remove(lastPosition); + } + } + + public int getRecentWorkingSetsLength() { + IPreferenceStore store = PrefUtil.getAPIPreferenceStore(); + return store.getInt(IWorkbenchPreferenceConstants.RECENTLY_USED_WORKINGSETS_SIZE); + } + } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ActiveEditorAction.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ActiveEditorAction.java deleted file mode 100644 index 64e138e..0000000 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ActiveEditorAction.java +++ /dev/null @@ -1,206 +0,0 @@ -/******************************************************************************* - * Copyright (c) 2000, 2006 IBM Corporation and others. - * All rights reserved. This program and the accompanying materials - * are made available under the terms of the Eclipse Public License v1.0 - * which accompanies this distribution, and is available at - * http://www.eclipse.org/legal/epl-v10.html - * - * Contributors: - * IBM Corporation - initial API and implementation - *******************************************************************************/ -package org.eclipse.ui.internal; - -import org.eclipse.ui.IEditorPart; -import org.eclipse.ui.IWorkbenchPage; -import org.eclipse.ui.IWorkbenchPart; -import org.eclipse.ui.IWorkbenchWindow; -import org.eclipse.ui.actions.ActionFactory.IWorkbenchAction; - -/** - * The abstract superclass for actions that depend on the active editor. - * This implementation tracks the active editor (see getActiveEditor) - * and updates the availability of the action when an editor becomes - * active. - * - * Subclasses must implement the following IAction method: - * - * run - to do the action&apos;s work - * - * - * - * Subclasses may extend any of the IPartListener methods if the - * action availablity needs to be recalculated: - * - * partActivated - * partDeactivated - * partOpened - * partClosed - * partBroughtToTop - * - * - * - * Subclasses may extend any of the IPageListener methods if the - * action availablity needs to be recalculated: - * - * pageActivated - * pageClosed - * pageOpened - * - * - * - * This method implements the IPartListener and - * IPageListenerinterfaces, and automatically registers listeners - * so that it can keep its enablement state up to date. Ordinarily, the - * window&apos;s references to these listeners will be dropped automatically when - * the window closes. However, if the client needs to get rid of an action - * while the window is still open, the client must call - * {@link IWorkbenchAction#dispose dispose} to give the action an - * opportunity to deregister its listeners and to perform any other cleanup. - * - */ -public abstract class ActiveEditorAction extends PageEventAction { - - private IEditorPart activeEditor; - - /** - * Creates a new action with the given text. - * - * @param text the string used as the text for the action, - * or null if there is no text - * @param window the workbench window this action is - * registered with. - */ - protected ActiveEditorAction(String text, IWorkbenchWindow window) { - super(text, window); - updateState(); - } - - /** - * Notification that the active editor tracked - * by the action is being activated. - * - * Subclasses may override. - */ - protected void editorActivated(IEditorPart part) { - } - - /** - * Notification that the active editor tracked - * by the action is being deactivated. - * - * Subclasses may override. - */ - protected void editorDeactivated(IEditorPart part) { - } - - /** - * Return the active editor - * - * @return the page&apos;s active editor, and null - * if no active editor or no active page. - */ - public final IEditorPart getActiveEditor() { - return activeEditor; - } - - /* (non-Javadoc) - * Method declared on PageEventAction. - */ - public void pageActivated(IWorkbenchPage page) { - super.pageActivated(page); - updateActiveEditor(); - updateState(); - } - - /* (non-Javadoc) - * Method declared on PageEventAction. - */ - public void pageClosed(IWorkbenchPage page) { - super.pageClosed(page); - updateActiveEditor(); - updateState(); - } - - /* (non-Javadoc) - * Method declared on PartEventAction. - */ - public void partActivated(IWorkbenchPart part) { - super.partActivated(part); - if (part instanceof IEditorPart) { - updateActiveEditor(); - updateState(); - } - } - - /* (non-Javadoc) - * Method declared on PartEventAction. - */ - public void partBroughtToTop(IWorkbenchPart part) { - super.partBroughtToTop(part); - if (part instanceof IEditorPart) { - updateActiveEditor(); - updateState(); - } - } - - /* (non-Javadoc) - * Method declared on PartEventAction. - */ - public void partClosed(IWorkbenchPart part) { - super.partClosed(part); - if (part instanceof IEditorPart) { - updateActiveEditor(); - updateState(); - } - } - - /* (non-Javadoc) - * Method declared on PartEventAction. - */ - public void partDeactivated(IWorkbenchPart part) { - super.partDeactivated(part); - if (part instanceof IEditorPart) { - updateActiveEditor(); - updateState(); - } - } - - /** - * Set the active editor - */ - private void setActiveEditor(IEditorPart part) { - if (activeEditor == part) { - return; - } - if (activeEditor != null) { - editorDeactivated(activeEditor); - } - activeEditor = part; - if (activeEditor != null) { - editorActivated(activeEditor); - } - } - - /** - * Update the active editor based on the current - * active page. - */ - private void updateActiveEditor() { - if (getActivePage() == null) { - setActiveEditor(null); - } else { - setActiveEditor(getActivePage().getActiveEditor()); - } - } - - /** - * Update the state of the action. By default, the action - * is enabled if there is an active editor. - * - * Subclasses may override or extend this method. - */ - protected void updateState() { - setEnabled(getActiveEditor() != null); - } - -} diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ApplicationMenuManager.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ApplicationMenuManager.java new file mode 100644 index 0000000..2aa0a03 --- /dev/null +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ApplicationMenuManager.java @@ -0,0 +1,83 @@ +/******************************************************************************* + * Copyright (c) 2010 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + ******************************************************************************/ + +package org.eclipse.ui.internal; + +import org.eclipse.jface.action.IContributionItem; +import org.eclipse.jface.action.MenuManager; +import org.eclipse.swt.widgets.Decorations; +import org.eclipse.swt.widgets.Item; +import org.eclipse.swt.widgets.Menu; + +/** + * @since 3.7 + * + */ +class ApplicationMenuManager extends MenuManager{ + + private final Menu appMenu; + private boolean disposing; + + public ApplicationMenuManager(Menu appMenu) { + this.appMenu = appMenu; + } + + + /* (non-Javadoc) + * @see org.eclipse.jface.action.MenuManager#createMenuBar(org.eclipse.swt.widgets.Decorations) + */ + public Menu createMenuBar(Decorations parent) { + return appMenu; + } + + protected boolean menuExist() { + // our menu always exist, + // except disposing - if not dispose will be called on this menu + return !disposing; + } + + /* (non-Javadoc) + * @see org.eclipse.jface.action.MenuManager#getMenuItemCount() + */ + protected int getMenuItemCount() { + return appMenu.getItemCount(); + } + + /* (non-Javadoc) + * @see org.eclipse.jface.action.MenuManager#getMenuItem(int) + */ + protected Item getMenuItem(int index) { + return appMenu.getItem(index); + } + /* (non-Javadoc) + * @see org.eclipse.jface.action.MenuManager#getMenuItems() + */ + protected Item[] getMenuItems() { + return appMenu.getItems(); + } + + /* (non-Javadoc) + * @see org.eclipse.jface.action.MenuManager#doItemFill(org.eclipse.jface.action.IContributionItem, int) + */ + protected void doItemFill(IContributionItem ci, int index) { + ci.fill(appMenu, index); + } + + /* (non-Javadoc) + * @see org.eclipse.jface.action.MenuManager#dispose() + */ + public void dispose() { + disposing = true; + super.dispose(); + disposing = false; + } +} + diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/BaseSaveAction.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/BaseSaveAction.java deleted file mode 100644 index a6968f3..0000000 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/BaseSaveAction.java +++ /dev/null @@ -1,235 +0,0 @@ -/******************************************************************************* - * Copyright (c) 2000, 2006 IBM Corporation and others. - * All rights reserved. This program and the accompanying materials - * are made available under the terms of the Eclipse Public License v1.0 - * which accompanies this distribution, and is available at - * http://www.eclipse.org/legal/epl-v10.html - * - * Contributors: - * IBM Corporation - initial API and implementation - *******************************************************************************/ - -package org.eclipse.ui.internal; - -import java.util.ArrayList; -import java.util.Iterator; -import java.util.List; - -import org.eclipse.ui.IEditorPart; -import org.eclipse.ui.IPropertyListener; -import org.eclipse.ui.ISaveablePart; -import org.eclipse.ui.IViewPart; -import org.eclipse.ui.IWorkbenchPage; -import org.eclipse.ui.IWorkbenchPart; -import org.eclipse.ui.IWorkbenchWindow; -import org.eclipse.ui.internal.util.Util; - -/** - * The abstract superclass for save actions that depend on the active editor. - */ -public abstract class BaseSaveAction extends ActiveEditorAction { - /* - * The view-related code below was added to track the view with focus - * in order to support save actions from a view (see bug 10234). - */ - - /** - * List of parts (element type: IWorkbenchPart) - * against which this class has outstanding property listeners registered. - */ - private List partsWithListeners = new ArrayList(1); - - private final IPropertyListener propListener = new IPropertyListener() { - public void propertyChanged(Object source, int propId) { - if (source == getActiveEditor()) { - if (propId == IEditorPart.PROP_DIRTY) { - updateState(); - } - } - } - }; - - /** - * Creates a new action with the given text. - * - * @param text the string used as the text for the action, - * or null if there is no text - * @param window the workbench window this action is - * registered with. - */ - protected BaseSaveAction(String text, IWorkbenchWindow window) { - super(text, window); - } - - /* (non-Javadoc) - * Method declared on ActiveEditorAction. - */ - protected void editorActivated(IEditorPart part) { - if (part != null) { - part.addPropertyListener(propListener); - partsWithListeners.add(part); - } - } - - /* (non-Javadoc) - * Method declared on ActiveEditorAction. - */ - protected void editorDeactivated(IEditorPart part) { - if (part != null) { - part.removePropertyListener(propListener); - partsWithListeners.remove(part); - } - } - - private IViewPart activeView; - - private final IPropertyListener propListener2 = new IPropertyListener() { - public void propertyChanged(Object source, int propId) { - if (source == activeView) { - if (propId == IEditorPart.PROP_DIRTY) { - updateState(); - } - } - } - }; - - /** the active saveable part is tracked in order to listen to its dirty events */ - private ISaveablePart activeSaveablePart; - - private final IPropertyListener propListener3 = new IPropertyListener() { - public void propertyChanged(Object source, int propId) { - if (source == activeSaveablePart) { - if (propId == IEditorPart.PROP_DIRTY) { - updateState(); - } - } - } - }; - - /* (non-Javadoc) - * Method declared on PageEventAction. - */ - public void pageActivated(IWorkbenchPage page) { - super.pageActivated(page); - updateActiveView(); - updateState(); - } - - /* (non-Javadoc) - * Method declared on PageEventAction. - */ - public void pageClosed(IWorkbenchPage page) { - super.pageClosed(page); - updateActiveView(); - updateState(); - } - - /* (non-Javadoc) - * Method declared on PartEventAction. - */ - public void partActivated(IWorkbenchPart part) { - super.partActivated(part); - if (part instanceof IViewPart) { - updateActiveView(); - updateState(); - } - } - - /* (non-Javadoc) - * Method declared on PartEventAction. - */ - public void partClosed(IWorkbenchPart part) { - super.partClosed(part); - if (part instanceof IViewPart) { - updateActiveView(); - updateState(); - } - } - - /* (non-Javadoc) - * Method declared on PartEventAction. - */ - public void partDeactivated(IWorkbenchPart part) { - super.partDeactivated(part); - if (part instanceof IViewPart) { - updateActiveView(); - updateState(); - } - } - - /** - * Update the active view based on the current - * active page. - */ - private void updateActiveView() { - if (getActivePage() == null) { - setActiveView(null); - } else { - setActiveView(getActivePage().getActivePart()); - } - } - - /** - * - */ - private void updateActiveSaveablePart() { - if (activeSaveablePart instanceof IWorkbenchPart) { - ((IWorkbenchPart)activeSaveablePart).removePropertyListener(propListener3); - partsWithListeners.remove(activeSaveablePart); - } - activeSaveablePart = getSaveableView(); - if (activeSaveablePart == activeView) { - // no need to listen to the same part twice - activeSaveablePart = null; - } - if (activeSaveablePart instanceof IWorkbenchPart) { - ((IWorkbenchPart)activeSaveablePart).addPropertyListener(propListener3); - partsWithListeners.add(activeSaveablePart); - } - } - - /** - * Set the active editor - */ - private void setActiveView(IWorkbenchPart part) { - if (activeView == part) { - return; - } - if (activeView != null) { - activeView.removePropertyListener(propListener2); - partsWithListeners.remove(activeView); - } - if (part instanceof IViewPart) { - activeView = (IViewPart) part; - } else { - activeView = null; - } - if (activeView != null) { - activeView.addPropertyListener(propListener2); - partsWithListeners.add(activeView); - } - updateActiveSaveablePart(); - } - - protected final ISaveablePart getSaveableView() { - if (activeView == null) { - return null; - } - - return (ISaveablePart) Util.getAdapter(activeView, ISaveablePart.class); - } - - /* (non-Javadoc) - * Method declared on PageEventAction. - */ - public void dispose() { - super.dispose(); - for (Iterator it = partsWithListeners.iterator(); it.hasNext();) { - IWorkbenchPart part = (IWorkbenchPart) it.next(); - part.removePropertyListener(propListener); - part.removePropertyListener(propListener2); - part.removePropertyListener(propListener3); - } - partsWithListeners.clear(); - } -} diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/EditorHistory.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/EditorHistory.java index ed38172..e6e9c60 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/EditorHistory.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/EditorHistory.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -47,7 +47,9 @@ * Adds an item to the history. Added in fifo fashion. */ public void add(IEditorInput input, IEditorDescriptor desc) { - add(new EditorHistoryItem(input, desc), 0); + if (input != null &amp;&amp; input.exists()) { + add(new EditorHistoryItem(input, desc), 0); + } } /** diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/EditorManager.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/EditorManager.java index 95d0456..9fdd5f8 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/EditorManager.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/EditorManager.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -8,9 +8,11 @@ * Contributors: * IBM Corporation - initial API and implementation * Nikolay Botev - bug 240651 + * Markus Schorn - Bug 341327 *******************************************************************************/ package org.eclipse.ui.internal; +import java.io.File; import java.util.ArrayList; import java.util.Arrays; import java.util.HashMap; @@ -19,7 +21,6 @@ import java.util.List; import java.util.ListIterator; import java.util.Map; - import org.eclipse.core.commands.AbstractHandler; import org.eclipse.core.commands.ExecutionEvent; import org.eclipse.core.commands.IHandler; @@ -36,7 +37,9 @@ import org.eclipse.core.runtime.SubProgressMonitor; import org.eclipse.core.runtime.dynamichelpers.IExtensionChangeHandler; import org.eclipse.core.runtime.dynamichelpers.IExtensionTracker; +import org.eclipse.jface.dialogs.DialogSettings; import org.eclipse.jface.dialogs.IDialogConstants; +import org.eclipse.jface.dialogs.IDialogSettings; import org.eclipse.jface.dialogs.MessageDialog; import org.eclipse.jface.internal.provisional.action.ICoolBarManager2; import org.eclipse.jface.operation.IRunnableContext; @@ -50,6 +53,7 @@ import org.eclipse.jface.util.SafeRunnable; import org.eclipse.jface.viewers.ArrayContentProvider; import org.eclipse.jface.window.IShellProvider; +import org.eclipse.jface.window.Window; import org.eclipse.osgi.util.NLS; import org.eclipse.swt.SWT; import org.eclipse.swt.custom.BusyIndicator; @@ -85,6 +89,7 @@ import org.eclipse.ui.PartInitException; import org.eclipse.ui.PlatformUI; import org.eclipse.ui.Saveable; +import org.eclipse.ui.dialogs.EditorSelectionDialog; import org.eclipse.ui.dialogs.ListSelectionDialog; import org.eclipse.ui.handlers.IHandlerActivation; import org.eclipse.ui.handlers.IHandlerService; @@ -95,10 +100,12 @@ import org.eclipse.ui.internal.misc.StatusUtil; import org.eclipse.ui.internal.misc.UIStats; import org.eclipse.ui.internal.part.NullEditorInput; +import org.eclipse.ui.internal.progress.ProgressManagerUtil; import org.eclipse.ui.internal.registry.EditorDescriptor; import org.eclipse.ui.internal.registry.EditorRegistry; import org.eclipse.ui.internal.tweaklets.TabBehaviour; import org.eclipse.ui.internal.tweaklets.Tweaklets; +import org.eclipse.ui.internal.util.PrefUtil; import org.eclipse.ui.internal.util.Util; import org.eclipse.ui.model.WorkbenchPartLabelProvider; import org.eclipse.ui.part.AbstractMultiEditor; @@ -141,6 +148,10 @@ // Handler for the pin editor keyboard shortcut private IHandlerActivation pinEditorHandlerActivation = null; + // determines if a prompt is shown when opening large files + private long maxFileSize = 0; + private boolean checkDocumentSize; + static final String RESOURCES_TO_SAVE_MESSAGE = WorkbenchMessages.EditorManager_saveResourcesMessage; static final String SAVE_RESOURCES_TITLE = WorkbenchMessages.EditorManager_saveResourcesTitle; @@ -157,7 +168,14 @@ this.page = workbenchPage; this.editorPresentation = pres; + initMaxFileSize(); page.getExtensionTracker().registerHandler(this, null); + } + + private void initMaxFileSize() { + IPreferenceStore preferenceStore = PrefUtil.getInternalPreferenceStore(); + maxFileSize = preferenceStore.getLong(IPreferenceConstants.LARGE_DOC_SIZE_FOR_EDITORS); + checkDocumentSize = maxFileSize != 0; } /** @@ -359,7 +377,10 @@ actionBars.removeRef(); if (actionBars.getRef() &lt;= 0) { String type = actionBars.getEditorType(); - actionCache.remove(type); + Object obj = actionCache.get(type); + if (actionBars == obj) { + actionCache.remove(type); + } // refresh the cool bar manager before disposing of a cool item ICoolBarManager2 coolBar = (ICoolBarManager2) window.getCoolBarManager2(); if (coolBar != null) { @@ -627,15 +648,24 @@ throw new IllegalArgumentException(); } - IEditorRegistry reg = getEditorRegistry(); - EditorDescriptor desc = (EditorDescriptor) reg.findEditor(editorId); + IEditorDescriptor desc = getEditorRegistry().findEditor(editorId); + if (desc != null &amp;&amp; !desc.isOpenExternal() &amp;&amp; isLargeDocument(input)) { + desc = getAlternateEditor(); + if (desc == null) { + // the user pressed cancel in the editor selection dialog + return null; + } + } + if (desc == null) { throw new PartInitException(NLS.bind( WorkbenchMessages.EditorManager_unknownEditorIDMessage, editorId)); } - IEditorReference result = openEditorFromDescriptor(desc, input, editorState); + IEditorReference result = openEditorFromDescriptor((EditorDescriptor) desc, input, + editorState); + return result; } @@ -1437,7 +1467,11 @@ return (IPathEditorInput) Util.getAdapter(input, IPathEditorInput.class); } - private class InnerEditor extends EditorReference { + /** + * An editor reference that is actually contained within another editor + * reference. + */ + class InnerEditor extends EditorReference { private IEditorReference outerEditor; @@ -1449,6 +1483,14 @@ super(EditorManager.this, input, desc); this.outerEditor = outerEditor; this.outerEditorPart = outerEditorPart; + } + + /** + * @return Returns the parent editor reference that this reference is a + * child of. + */ + public IEditorReference getOuterEditor() { + return outerEditor; } protected void doDisposePart() { @@ -1690,4 +1732,38 @@ .getPreferenceStore(); return store.getBoolean(IPreferenceConstants.USE_IPERSISTABLE_EDITORS); } + + private static IEditorDescriptor getAlternateEditor() { + Shell shell = ProgressManagerUtil.getDefaultParent(); + EditorSelectionDialog dialog = new EditorSelectionDialog(shell) { + protected IDialogSettings getDialogSettings() { + IDialogSettings result = new DialogSettings(&quot;EditorSelectionDialog&quot;); //$NON-NLS-1$ + result.put(EditorSelectionDialog.STORE_ID_INTERNAL_EXTERNAL, true); + return result; + } + }; + dialog.setMessage(WorkbenchMessages.EditorManager_largeDocumentWarning); + + if (dialog.open() == Window.OK) + return dialog.getSelectedEditor(); + return null; + } + + boolean isLargeDocument(IEditorInput editorInput) { + + if (!checkDocumentSize) + return false; + + if (!(editorInput instanceof IPathEditorInput)) + return false; // we know nothing about it + + try { + IPath path = ((IPathEditorInput) editorInput).getPath(); + File file = new File(path.toOSString()); + return file.length() &gt; maxFileSize; + } catch (Exception e) { + // ignore exceptions + return false; + } + } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/EditorReference.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/EditorReference.java index 662e95e..9b3538a 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/EditorReference.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/EditorReference.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2006, 2010 IBM Corporation and others. + * Copyright (c) 2006, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -746,11 +746,21 @@ * * @return true if it has inner editor reference or the input is * MultiEditorInput. + * @see #getChildren() */ public boolean isMultiReference() { return multiEditorChildren!=null || restoredInput instanceof MultiEditorInput; } + /** + * @return Returns the child editor references. May be null if + * this is not a multi reference. + * @see #isMultiReference() + */ + public IEditorReference[] getChildren() { + return multiEditorChildren; + } + /** * Creates and returns an empty editor (ErrorEditorPart). * diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ErrorViewPart.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ErrorViewPart.java index e07c3e5..e18d5d4 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ErrorViewPart.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ErrorViewPart.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2007 IBM Corporation and others. + * Copyright (c) 2005, 2010 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -25,6 +25,7 @@ public class ErrorViewPart extends ViewPart { private IStatus error; + private Composite parentControl; /** * Creates instance of the class @@ -47,6 +48,7 @@ * @see org.eclipse.ui.part.WorkbenchPart#createPartControl(org.eclipse.swt.widgets.Composite) */ public void createPartControl(Composite parent) { + parentControl = parent; if (error != null) { new StatusPart(parent, error); } @@ -67,6 +69,17 @@ * @see org.eclipse.ui.part.WorkbenchPart#setFocus() */ public void setFocus() { + parentControl.setFocus(); + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.ui.part.WorkbenchPart#dispose() + */ + public void dispose() { + super.dispose(); + parentControl = null; } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ExtensionEventHandler.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ExtensionEventHandler.java index c316b20..f49f27c 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ExtensionEventHandler.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ExtensionEventHandler.java @@ -16,7 +16,6 @@ import java.util.Iterator; import java.util.List; import java.util.Map; - import org.eclipse.core.runtime.IConfigurationElement; import org.eclipse.core.runtime.IExtension; import org.eclipse.core.runtime.IExtensionDelta; @@ -55,12 +54,7 @@ .getExtensionDeltas(WorkbenchPlugin.PI_WORKBENCH); IExtension ext; IExtensionPoint extPt; - IWorkbenchWindow[] win = PlatformUI.getWorkbench() - .getWorkbenchWindows(); - if (win.length == 0) { - return; - } - Display display = win[0].getShell().getDisplay(); + Display display = PlatformUI.getWorkbench().getDisplay(); if (display == null) { return; } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/FastViewBar.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/FastViewBar.java index b9a3e10..cebe308 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/FastViewBar.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/FastViewBar.java @@ -16,7 +16,6 @@ import java.util.Iterator; import java.util.List; import java.util.Map; - import org.eclipse.core.runtime.IStatus; import org.eclipse.core.runtime.Platform; import org.eclipse.core.runtime.Status; @@ -136,8 +135,11 @@ ToolItem position; /** - * @param panesToDrop the list of ViewPanes to drop at the given position - */ + * @param panesToDrop + * the list of ViewPanes to drop at the given position + * @param position + * the tool item denoting the position + */ public ViewDropTarget(List panesToDrop, ToolItem position) { setTarget(panesToDrop, position); } @@ -526,7 +528,7 @@ } } - if (page.isZoomed()) { + if (page != null &amp;&amp; page.isZoomed()) { page.zoomOut(); } @@ -799,9 +801,6 @@ return horizontal; } - /** - * @param ref - */ public int getViewSide(IViewReference ref) { boolean horizontal = isHorizontal(ref); @@ -829,9 +828,11 @@ } /** - * Returns the approximate location where the next fastview icon - * will be drawn (display coordinates) - */ + * Returns the approximate location where the next fast view icon will be + * drawn (display coordinates) + * + * @return the rectangle + */ public Rectangle getLocationOfNextIcon() { ToolBar control = getToolBar(); diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/HeapStatus.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/HeapStatus.java index f5ef8f0..4778926 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/HeapStatus.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/HeapStatus.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2007 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -15,7 +15,6 @@ package org.eclipse.ui.internal; import java.lang.reflect.Method; - import org.eclipse.jface.action.Action; import org.eclipse.jface.action.IAction; import org.eclipse.jface.action.IMenuListener; @@ -27,7 +26,6 @@ import org.eclipse.jface.util.PropertyChangeEvent; import org.eclipse.osgi.util.NLS; import org.eclipse.swt.SWT; -import org.eclipse.swt.custom.BusyIndicator; import org.eclipse.swt.graphics.Color; import org.eclipse.swt.graphics.GC; import org.eclipse.swt.graphics.Image; @@ -49,6 +47,7 @@ private boolean armed; private Image gcImage; + private Image disabledGcImage; private Color bgCol, usedMemCol, lowMemCol, freeMemCol, topLeftCol, bottomRightCol, sepCol, textCol, markCol, armCol; private Canvas button; private IPreferenceStore prefStore; @@ -67,7 +66,9 @@ private float lowMemThreshold = 0.05f; private boolean showLowMemThreshold = true; private boolean updateTooltip = false; - + + protected volatile boolean isInGC = false; + private final Runnable timer = new Runnable() { public void run() { if (!isDisposed()) { @@ -119,11 +120,12 @@ button.setToolTipText(WorkbenchMessages.HeapStatus_buttonToolTip); ImageDescriptor imageDesc = WorkbenchImages.getWorkbenchImageDescriptor(&quot;elcl16/trash.gif&quot;); //$NON-NLS-1$ + Display display = getDisplay(); gcImage = imageDesc.createImage(); if (gcImage != null) { imgBounds = gcImage.getBounds(); + disabledGcImage = new Image(display, gcImage, SWT.IMAGE_DISABLE); } - Display display = getDisplay(); usedMemCol = display.getSystemColor(SWT.COLOR_INFO_BACKGROUND); lowMemCol = new Color(display, 255, 70, 70); // medium red freeMemCol = new Color(display, 255, 190, 125); // light orange @@ -155,8 +157,10 @@ break; case SWT.MouseUp: if (event.button == 1) { - gc(); - arm(false); + if (!isInGC) { + arm(false); + gc(); + } } break; case SWT.MouseDown: @@ -164,7 +168,8 @@ if (event.widget == HeapStatus.this) { setMark(); } else if (event.widget == button) { - arm(true); + if (!isInGC) + arm(true); } } break; @@ -234,6 +239,9 @@ if (gcImage != null) { gcImage.dispose(); } + if (disabledGcImage != null) { + disabledGcImage.dispose(); + } if (lowMemCol != null) { lowMemCol.dispose(); @@ -268,6 +276,15 @@ button.redraw(); button.update(); } + + private void gcRunning(boolean isInGC) { + if (this.isInGC == isInGC) { + return; + } + this.isInGC = isInGC; + button.redraw(); + button.update(); + } /** * Creates the context menu @@ -314,26 +331,20 @@ } private void gc() { - BusyIndicator.showWhile(getDisplay(), new Runnable() { + gcRunning(true); + Thread t = new Thread() { public void run() { - Thread t = new Thread() { + busyGC(); + getDisplay().asyncExec(new Runnable() { public void run() { - busyGC(); - }}; - t.start(); - while(t.isAlive()) { - try { - Display d = getDisplay(); - while(d != null &amp;&amp; !d.isDisposed() &amp;&amp; d.readAndDispatch()) { - // loop + if (!isDisposed()) { + gcRunning(false); } - t.join(10); - } catch (InterruptedException e) { - Thread.currentThread().interrupt(); } - } + }); } - }); + }; + t.start(); } private void busyGC() { @@ -345,7 +356,13 @@ private void paintButton(GC gc) { Rectangle rect = button.getClientArea(); - + if (isInGC) { + if (disabledGcImage != null) { + int buttonY = (rect.height - imgBounds.height) / 2 + rect.y; + gc.drawImage(disabledGcImage, rect.x, buttonY); + } + return; + } if (armed) { gc.setBackground(armCol); gc.fillRectangle(rect.x, rect.y, rect.width, rect.height); diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/IPreferenceConstants.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/IPreferenceConstants.java index b23d975..115a97a 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/IPreferenceConstants.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/IPreferenceConstants.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -234,4 +234,17 @@ */ public static final String USE_32_THREADING = &quot;use32Threading&quot;; //$NON-NLS-1$ + /** + * This preference is the threshold value to determine whether a document is + * large or not. When the user tries to open a file larger than the + * threshold, then EditorSelectionDialog will be opened, suggesting the user + * to open with an external editor. + * + * This preference is a long value that represents the + * threshold in bytes. The default value is 0 meaning no + * prompting on editor opening. + * + * @since 3.7 + */ + public static final String LARGE_DOC_SIZE_FOR_EDITORS = &quot;LARGE_DOC_SIZE_FOR_EDITORS&quot;; //$NON-NLS-1$ } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/JFaceUtil.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/JFaceUtil.java index 6c6c15d..acdae9a 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/JFaceUtil.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/JFaceUtil.java @@ -16,8 +16,8 @@ import org.eclipse.core.runtime.Platform; import org.eclipse.core.runtime.SafeRunner; import org.eclipse.core.runtime.preferences.IEclipsePreferences; -import org.eclipse.core.runtime.preferences.InstanceScope; import org.eclipse.core.runtime.preferences.IEclipsePreferences.NodeChangeEvent; +import org.eclipse.core.runtime.preferences.InstanceScope; import org.eclipse.jface.internal.InternalPolicy; import org.eclipse.jface.preference.JFacePreferences; import org.eclipse.jface.util.ILogger; @@ -72,11 +72,12 @@ }); // Get all debug options from Platform - if (&quot;true&quot;.equalsIgnoreCase(Platform.getDebugOption(&quot;/debug&quot;))) { //$NON-NLS-1$ //$NON-NLS-2$ + if (&quot;true&quot;.equalsIgnoreCase(Platform.getDebugOption(Policy.JFACE + &quot;/debug&quot;))) { //$NON-NLS-1$ //$NON-NLS-2$ Policy.DEBUG_DIALOG_NO_PARENT = &quot;true&quot;.equalsIgnoreCase(Platform.getDebugOption(Policy.JFACE + &quot;/debug/dialog/noparent&quot;)); //$NON-NLS-1$ //$NON-NLS-2$ Policy.TRACE_ACTIONS = &quot;true&quot;.equalsIgnoreCase(Platform.getDebugOption(Policy.JFACE + &quot;/trace/actions&quot;)); //$NON-NLS-1$ //$NON-NLS-2$ Policy.TRACE_TOOLBAR = &quot;true&quot;.equalsIgnoreCase(Platform.getDebugOption(Policy.JFACE + &quot;/trace/toolbarDisposal&quot;)); //$NON-NLS-1$ //$NON-NLS-2$ InternalPolicy.DEBUG_LOG_REENTRANT_VIEWER_CALLS = &quot;true&quot;.equalsIgnoreCase(Platform.getDebugOption(Policy.JFACE + &quot;/debug/viewers/reentrantViewerCalls&quot;)); //$NON-NLS-1$ //$NON-NLS-2$ + InternalPolicy.DEBUG_LOG_EQUAL_VIEWER_ELEMENTS = &quot;true&quot;.equalsIgnoreCase(Platform.getDebugOption(Policy.JFACE + &quot;/debug/viewers/equalElements&quot;)); //$NON-NLS-1$ //$NON-NLS-2$ } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/OpenPreferencesAction.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/OpenPreferencesAction.java deleted file mode 100644 index 0a5336f..0000000 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/OpenPreferencesAction.java +++ /dev/null @@ -1,76 +0,0 @@ -/******************************************************************************* - * Copyright (c) 2000, 2006 IBM Corporation and others. - * All rights reserved. This program and the accompanying materials - * are made available under the terms of the Eclipse Public License v1.0 - * which accompanies this distribution, and is available at - * http://www.eclipse.org/legal/epl-v10.html - * - * Contributors: - * IBM Corporation - initial API and implementation - *******************************************************************************/ -package org.eclipse.ui.internal; - -import org.eclipse.jface.action.Action; -import org.eclipse.jface.preference.PreferenceDialog; -import org.eclipse.ui.IWorkbenchWindow; -import org.eclipse.ui.PlatformUI; -import org.eclipse.ui.actions.ActionFactory; -import org.eclipse.ui.dialogs.PreferencesUtil; - -/** - * Open the preferences dialog - */ -public class OpenPreferencesAction extends Action implements ActionFactory.IWorkbenchAction { - - /** - * The workbench window; or null if this action has been - * disposed. - */ - private IWorkbenchWindow workbenchWindow; - - /** - * Create a new OpenPreferenceAction This default constructor - * allows the the action to be called from the welcome page. - */ - public OpenPreferencesAction() { - this(PlatformUI.getWorkbench().getActiveWorkbenchWindow()); - } - - /** - * Create a new OpenPreferenceAction and initialize it from the - * given resource bundle. - * - * @param window - */ - public OpenPreferencesAction(IWorkbenchWindow window) { - super(WorkbenchMessages.OpenPreferences_text); - if (window == null) { - throw new IllegalArgumentException(); - } - this.workbenchWindow = window; - // @issue action id not set - setToolTipText(WorkbenchMessages.OpenPreferences_toolTip); - window.getWorkbench().getHelpSystem() - .setHelp(this, IWorkbenchHelpContextIds.OPEN_PREFERENCES_ACTION); - } - - /* - * (non-Javadoc) Method declared on Action. - */ - public void run() { - if (workbenchWindow == null) { - // action has been dispose - return; - } - PreferenceDialog dialog = PreferencesUtil.createPreferenceDialogOn(null, null, null, null); - dialog.open(); - } - - /* - * (non-Javadoc) Method declared on ActionFactory.IWorkbenchAction. - */ - public void dispose() { - workbenchWindow = null; - } - -} diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PageLayout.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PageLayout.java index 62471b7..8ce5282 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PageLayout.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PageLayout.java @@ -22,7 +22,6 @@ import java.util.HashMap; import java.util.List; import java.util.Map; - import org.eclipse.osgi.util.NLS; import org.eclipse.swt.SWT; import org.eclipse.ui.IFolderLayout; @@ -36,6 +35,7 @@ import org.eclipse.ui.internal.presentations.PresentationFactoryUtil; import org.eclipse.ui.internal.registry.ActionSetRegistry; import org.eclipse.ui.internal.registry.IActionSetDescriptor; +import org.eclipse.ui.internal.registry.ViewRegistry; import org.eclipse.ui.views.IViewDescriptor; import org.eclipse.ui.views.IViewRegistry; @@ -535,8 +535,19 @@ if (partID.equals(ID_EDITOR_AREA)) { return editorFolder; } - IViewDescriptor viewDescriptor = viewFactory.getViewRegistry() - .find(ViewFactory.extractPrimaryId(partID)); + IViewDescriptor viewDescriptor = null; + + IViewRegistry viewRegistry = viewFactory.getViewRegistry(); + String primaryId = ViewFactory.extractPrimaryId(partID); + + if (viewRegistry instanceof ViewRegistry) { + viewDescriptor = ((ViewRegistry) viewRegistry).findInternal(primaryId); + if (viewDescriptor != null &amp;&amp; WorkbenchActivityHelper.restrictUseOf(viewDescriptor)) { + return null; + } + } else { + viewDescriptor = viewRegistry.find(primaryId); + } if (WorkbenchActivityHelper.filterItem(viewDescriptor)) { return null; } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PartPane.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PartPane.java index eb2ad31..9e04b2a 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PartPane.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PartPane.java @@ -9,6 +9,7 @@ * IBM Corporation - initial API and implementation * Stefan Xenos, IBM; Chris Torrence, ITT Visual Information Solutions - bug 51580 * Nikolay Botev - bug 240651 + * Mohamed Tarief - bug 203849 *******************************************************************************/ package org.eclipse.ui.internal; @@ -16,6 +17,7 @@ import org.eclipse.jface.action.MenuManager; import org.eclipse.jface.util.IPropertyChangeListener; import org.eclipse.jface.util.PropertyChangeEvent; +import org.eclipse.jface.window.Window; import org.eclipse.swt.SWT; import org.eclipse.swt.events.FocusAdapter; import org.eclipse.swt.events.FocusEvent; @@ -493,11 +495,14 @@ * Add the Left,Right,Up,Botton menu items to the Size menu. */ protected void addSizeItems(Menu sizeMenu) { - Sashes sashes = findSashes(); - addSizeItem(sizeMenu, - WorkbenchMessages.PartPane_sizeLeft, sashes.left); - addSizeItem(sizeMenu, - WorkbenchMessages.PartPane_sizeRight, sashes.right); + Sashes sashes = findSashes(); + if (Window.getDefaultOrientation() == SWT.RIGHT_TO_LEFT) { + addSizeItem(sizeMenu, WorkbenchMessages.PartPane_sizeLeft, sashes.right); + addSizeItem(sizeMenu, WorkbenchMessages.PartPane_sizeRight, sashes.left); + } else { + addSizeItem(sizeMenu, WorkbenchMessages.PartPane_sizeLeft, sashes.left); + addSizeItem(sizeMenu, WorkbenchMessages.PartPane_sizeRight, sashes.right); + } addSizeItem(sizeMenu, WorkbenchMessages.PartPane_sizeTop, sashes.top); addSizeItem(sizeMenu, WorkbenchMessages.PartPane_sizeBottom, sashes.bottom); diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PerspectiveHelper.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PerspectiveHelper.java index 5e442be..3c5d25e 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PerspectiveHelper.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PerspectiveHelper.java @@ -20,7 +20,6 @@ import java.util.List; import java.util.Map; import java.util.Vector; - import org.eclipse.core.runtime.IStatus; import org.eclipse.jface.preference.IPreferenceStore; import org.eclipse.swt.SWT; @@ -39,6 +38,7 @@ import org.eclipse.ui.internal.dnd.DragUtil; import org.eclipse.ui.internal.dnd.IDragOverListener; import org.eclipse.ui.internal.dnd.IDropTarget; +import org.eclipse.ui.internal.misc.Policy; import org.eclipse.ui.internal.misc.StringMatcher; import org.eclipse.ui.presentations.IStackPresentationSite; @@ -298,6 +298,9 @@ active = true; } + private String tmpViewId = null; + private Exception tmpStackTrace = null; + /** * Adds a part to the presentation. If a placeholder exists for the part * then swap the part in. Otherwise, add the part in the bottom right @@ -371,6 +374,26 @@ ContainerPlaceholder containerPlaceholder = (ContainerPlaceholder) container; ILayoutContainer parentContainer = containerPlaceholder .getContainer(); + if (parentContainer == null) { + if (Policy.DEBUG_PERSPECTIVES) { + WorkbenchPlugin.log( + &quot;Previous ContainerPlaceholder for &quot; + tmpViewId, //$NON-NLS-1$ + tmpStackTrace); + tmpViewId = null; + tmpStackTrace = new Exception(); + tmpStackTrace.fillInStackTrace(); + WorkbenchPlugin.log( + &quot;Current ContainerPlaceholder with null parent for &quot; //$NON-NLS-1$ + + primaryId + &quot;:&quot; + secondaryId, tmpStackTrace); //$NON-NLS-1$ + tmpStackTrace = null; + } + return; + } + if (Policy.DEBUG_PERSPECTIVES) { + tmpViewId = primaryId + &quot;:&quot; + secondaryId; //$NON-NLS-1$ + tmpStackTrace = new Exception(); + tmpStackTrace.fillInStackTrace(); + } container = (ILayoutContainer) containerPlaceholder .getRealContainer(); if (container instanceof LayoutPart) { diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PlatformUIPreferenceListener.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PlatformUIPreferenceListener.java index 1999d64..e38e8d1 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PlatformUIPreferenceListener.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/PlatformUIPreferenceListener.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -161,13 +161,13 @@ editorRegistry.readResources(editorMap, reader); } } catch (WorkbenchException e) { - e.printStackTrace(); + WorkbenchPlugin.log(e); } finally { if (reader != null) { try { reader.close(); } catch (IOException e) { - e.printStackTrace(); + WorkbenchPlugin.log(e); } } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ProductProperties.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ProductProperties.java index f728401..c326e10 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ProductProperties.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ProductProperties.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2004, 2008 IBM Corporation and others. + * Copyright (c) 2004, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -10,6 +10,7 @@ *******************************************************************************/ package org.eclipse.ui.internal; +import com.ibm.icu.text.MessageFormat; import java.io.IOException; import java.io.InputStream; import java.net.URL; @@ -17,15 +18,12 @@ import java.util.HashMap; import java.util.MissingResourceException; import java.util.PropertyResourceBundle; - import org.eclipse.core.runtime.IProduct; import org.eclipse.core.runtime.Path; import org.eclipse.core.runtime.Platform; import org.eclipse.jface.resource.ImageDescriptor; import org.eclipse.ui.branding.IProductConstants; import org.osgi.framework.Bundle; - -import com.ibm.icu.text.MessageFormat; /** * A class that converts the strings returned by @@ -264,12 +262,19 @@ if (property.indexOf(&apos;{&apos;) == -1) { return property; } - String[] tempMappings = getMappings(product.getDefiningBundle()); - /* - * Check if the mapping value is a system property, specified - * by &apos;$&apos; at the beginning and end of the string. If so, update - * the mappings array with the system property value. - */ + + /* + * Check if the mapping value is a system property, specified by &apos;$&apos; at + * the beginning and end of the string. If so, update the temp mappings + * array with the system property value. Note that we use a clone (copy) + * of the mappings so that the cached system property value is not + * stored in the per-bundle mappings for this class. This allows changes + * in system property values to be reflected each time this method is + * called. See https://bugs.eclipse.org/bugs/show_bug.cgi?id=302184 + */ + + String[] tempMappings = (String[]) getMappings(product.getDefiningBundle()).clone(); + for (int i=0; iSave action. - */ -public class SaveAction extends BaseSaveAction implements IBackgroundSaveListener { - - /** - * Create an instance of this class - * - * @param window the window - */ - public SaveAction(IWorkbenchWindow window) { - super(WorkbenchMessages.SaveAction_text, window); - setText(WorkbenchMessages.SaveAction_text); - setToolTipText(WorkbenchMessages.SaveAction_toolTip); - setId(&quot;save&quot;); //$NON-NLS-1$ - window.getWorkbench().getHelpSystem().setHelp(this, - IWorkbenchHelpContextIds.SAVE_ACTION); - setImageDescriptor(WorkbenchImages - .getImageDescriptor(ISharedImages.IMG_ETOOL_SAVE_EDIT)); - setDisabledImageDescriptor(WorkbenchImages - .getImageDescriptor(ISharedImages.IMG_ETOOL_SAVE_EDIT_DISABLED)); - setActionDefinitionId(IWorkbenchCommandConstants.FILE_SAVE); - ((WorkbenchWindow)window).addBackgroundSaveListener(this); - } - - public void dispose() { - ((WorkbenchWindow)getWorkbenchWindow()).removeBackgroundSaveListener(this); - super.dispose(); - } - - /* (non-Javadoc) - * Method declared on IAction. - * Performs the Save action by calling the - * IEditorPart.doSave method on the active editor. - */ - public void run() { - if (getWorkbenchWindow() == null) { - // action has been disposed - return; - } - /* ********************************************************************************** - * The code below was added to track the view with focus - * in order to support save actions from a view (see bug 10234). - */ - ISaveablePart saveView = getSaveableView(); - if (saveView != null) { - ((WorkbenchPage) getActivePart().getSite().getPage()).savePart( - saveView, getActivePart(), false); - return; - } - - IEditorPart part = getActiveEditor(); - if (part != null) { - IWorkbenchPage page = part.getSite().getPage(); - page.saveEditor(part, false); - } - } - - /* (non-Javadoc) - * Method declared on ActiveEditorAction. - */ - protected void updateState() { - /* ********************************************************************************** - * The code below was added to track the view with focus - * in order to support save actions from a view (see bug 10234). - */ - ISaveablePart saveable = getSaveableView(); - if (saveable == null) { - saveable = getActiveEditor(); - } - /* **********************************************************************************/ - if (saveable instanceof ISaveablesSource) { - ISaveablesSource modelSource = (ISaveablesSource) saveable; - setEnabled(SaveableHelper.needsSave(modelSource)); - return; - } - setEnabled(saveable != null &amp;&amp; saveable.isDirty()); - } - - public void handleBackgroundSaveStarted() { - updateState(); - } - - public void setEnabled(boolean enabled) { - super.setEnabled(enabled); - IWorkbenchWindow window = getWorkbenchWindow(); - if (window != null) { - Shell shell = window.getShell(); - if (shell != null &amp;&amp; !shell.isDisposed()) { - shell.setModified(enabled); - } - } - } - -} diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/SaveAllAction.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/SaveAllAction.java deleted file mode 100644 index b0fc821..0000000 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/SaveAllAction.java +++ /dev/null @@ -1,194 +0,0 @@ -/******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. - * All rights reserved. This program and the accompanying materials - * are made available under the terms of the Eclipse Public License v1.0 - * which accompanies this distribution, and is available at - * http://www.eclipse.org/legal/epl-v10.html - * - * Contributors: - * IBM Corporation - initial API and implementation - *******************************************************************************/ -package org.eclipse.ui.internal; - -import java.util.ArrayList; -import java.util.Iterator; -import java.util.List; - -import org.eclipse.ui.IPropertyListener; -import org.eclipse.ui.ISaveablePart; -import org.eclipse.ui.ISaveablesLifecycleListener; -import org.eclipse.ui.ISaveablesSource; -import org.eclipse.ui.ISharedImages; -import org.eclipse.ui.IWorkbenchCommandConstants; -import org.eclipse.ui.IWorkbenchPage; -import org.eclipse.ui.IWorkbenchPart; -import org.eclipse.ui.IWorkbenchWindow; -import org.eclipse.ui.Saveable; - -/** - * Global action that saves all targets in the - * workbench that implement ISaveTarget interface. - * The action keeps track of opened save targets - * and their &apos;save&apos; state. If none of the currently - * opened targets needs saving, it will disable. - * This action is somewhat different from all - * other global actions in that it works on - * multiple targets at the same time i.e. it - * does not disconnect from the target when it - * becomes deactivated. - */ -public class SaveAllAction extends PageEventAction implements IPropertyListener { - /** - * List of parts (element type: IWorkbenchPart) - * against which this class has outstanding property listeners registered. - */ - private List partsWithListeners = new ArrayList(1); - private IWorkbenchPart openPart; - - /** - * The default constructor. - * - * @param window the window - */ - public SaveAllAction(IWorkbenchWindow window) { - super(WorkbenchMessages.SaveAll_text, window); - setToolTipText(WorkbenchMessages.SaveAll_toolTip); - setId(&quot;saveAll&quot;); //$NON-NLS-1$ - setEnabled(false); - window.getWorkbench().getHelpSystem().setHelp(this, - IWorkbenchHelpContextIds.SAVE_ALL_ACTION); - setImageDescriptor(WorkbenchImages - .getImageDescriptor(ISharedImages.IMG_ETOOL_SAVEALL_EDIT)); - setDisabledImageDescriptor(WorkbenchImages - .getImageDescriptor(ISharedImages.IMG_ETOOL_SAVEALL_EDIT_DISABLED)); - setActionDefinitionId(IWorkbenchCommandConstants.FILE_SAVE_ALL); - } - - /* (non-Javadoc) - * Method declared on PageEventAction. - */ - public void pageActivated(IWorkbenchPage page) { - super.pageActivated(page); - updateState(); - } - - /* (non-Javadoc) - * Method declared on PageEventAction. - */ - public void pageClosed(IWorkbenchPage page) { - super.pageClosed(page); - updateState(); - } - - /* (non-Javadoc) - * Method declared on PartEventAction. - */ - public void partClosed(IWorkbenchPart part) { - super.partClosed(part); - if (part instanceof ISaveablePart) { - part.removePropertyListener(this); - partsWithListeners.remove(part); - updateState(); - } - } - - /* (non-Javadoc) - * Method declared on PartEventAction. - */ - public void partOpened(IWorkbenchPart part) { - super.partOpened(part); - if (part instanceof ISaveablePart) { - part.addPropertyListener(this); - partsWithListeners.add(part); - // We need to temporarily cache the opened part - // because saveable views are not registered - // with a perspective until after this method - // is called. We can&apos;t pass it through to - // update because it&apos;s protected. An async - // call to update may be a better approach. - // See bug 93784 [WorkbenchParts] View not yet added to perspective when partOpened sent - openPart = part; - updateState(); - openPart = null; - } - } - - /* (non-Javadoc) - * Method declared on IPropertyListener. - */ - public void propertyChanged(Object source, int propID) { - if (source instanceof ISaveablePart) { - if (propID == ISaveablePart.PROP_DIRTY) { - updateState(); - } - } - } - - /* (non-Javadoc) - * Method declared on Action. - */ - public void run() { - if (getWorkbenchWindow() == null) { - // action has been disposed - return; - } - WorkbenchPage page = (WorkbenchPage) getActivePage(); - if (page != null) { - // The second parameter is true to also save saveables from non-part - // sources, see bug 139004. - page.saveAllEditors(false, true); - updateState(); - } - } - - /** - * Updates availability depending on number of - * targets that need saving. - */ - protected void updateState() { - // Workaround for bug 93784 [WorkbenchParts] View not yet added to perspective when partOpened sent - if (openPart != null &amp;&amp; openPart.getSite().getPage().equals(getActivePage()) &amp;&amp; ((ISaveablePart) openPart).isDirty()) { - setEnabled(true); - } - else { - WorkbenchPage page = (WorkbenchPage) getActivePage(); - if (page == null) { - setEnabled(false); - } else { - if (page.getDirtyParts().length &gt; 0) { - setEnabled(true); - } else { - // Since Save All also saves saveables from non-part sources, - // look if any such saveables exist and are dirty. - SaveablesList saveablesList = (SaveablesList) page - .getWorkbenchWindow().getWorkbench().getService( - ISaveablesLifecycleListener.class); - ISaveablesSource[] nonPartSources = saveablesList.getNonPartSources(); - for (int i = 0; i &lt; nonPartSources.length; i++) { - Saveable[] saveables = nonPartSources[i].getSaveables(); - for (int j = 0; j &lt; saveables.length; j++) { - if (saveables[j].isDirty()) { - setEnabled(true); - return; - } - } - } - setEnabled(false); - } - } - } - } - - /* (non-Javadoc) - * Method declared on PageEventAction. - */ - public void dispose() { - super.dispose(); - for (Iterator it = partsWithListeners.iterator(); it.hasNext();) { - IWorkbenchPart part = (IWorkbenchPart) it.next(); - part.removePropertyListener(this); - } - partsWithListeners.clear(); - } - -} diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/SaveAsAction.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/SaveAsAction.java deleted file mode 100644 index b9693cc..0000000 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/SaveAsAction.java +++ /dev/null @@ -1,86 +0,0 @@ -/******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. - * All rights reserved. This program and the accompanying materials - * are made available under the terms of the Eclipse Public License v1.0 - * which accompanies this distribution, and is available at - * http://www.eclipse.org/legal/epl-v10.html - * - * Contributors: - * IBM Corporation - initial API and implementation - *******************************************************************************/ -package org.eclipse.ui.internal; - -import org.eclipse.ui.IEditorPart; -import org.eclipse.ui.ISaveablePart; -import org.eclipse.ui.ISharedImages; -import org.eclipse.ui.IWorkbenchCommandConstants; -import org.eclipse.ui.IWorkbenchWindow; - -/** - * Workbench common Save As action. - */ -public class SaveAsAction extends BaseSaveAction { - - /** - * Create an instance of this class - * - * @param window the window - */ - public SaveAsAction(IWorkbenchWindow window) { - super(WorkbenchMessages.SaveAs_text, window); - setActionDefinitionId(IWorkbenchCommandConstants.FILE_SAVE_AS); - setText(WorkbenchMessages.SaveAs_text); - setToolTipText(WorkbenchMessages.SaveAs_toolTip); - setId(&quot;saveAs&quot;); //$NON-NLS-1$ - window.getWorkbench().getHelpSystem().setHelp(this, - IWorkbenchHelpContextIds.SAVE_AS_ACTION); - setImageDescriptor(WorkbenchImages - .getImageDescriptor(ISharedImages.IMG_ETOOL_SAVEAS_EDIT)); - setDisabledImageDescriptor(WorkbenchImages - .getImageDescriptor(ISharedImages.IMG_ETOOL_SAVEAS_EDIT_DISABLED)); - } - - /* (non-Javadoc) - * Method declared on Action. - */ - public void run() { - if (getWorkbenchWindow() == null) { - // action has been disposed - return; - } - /* ********************************************************************************** - * The code below was added to track the view with focus - * in order to support save actions from a view (see bug 10234). - */ - ISaveablePart saveView = getSaveableView(); - if (saveView != null) { - saveView.doSaveAs(); - return; - } - /* **********************************************************************************/ - - IEditorPart editor = getActiveEditor(); - if (editor != null) { - editor.doSaveAs(); - } - } - - /* (non-Javadoc) - * Method declared on ActiveEditorAction. - */ - protected void updateState() { - /* ********************************************************************************** - * The code below was added to track the view with focus - * in order to support save actions from a view (see bug 10234). - */ - ISaveablePart saveView = getSaveableView(); - if (saveView != null) { - setEnabled(saveView.isSaveAsAllowed()); - return; - } - /* **********************************************************************************/ - - IEditorPart editor = getActiveEditor(); - setEnabled(editor != null &amp;&amp; editor.isSaveAsAllowed()); - } -} diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/SaveablesList.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/SaveablesList.java index 4a95828..42d2e15 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/SaveablesList.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/SaveablesList.java @@ -344,6 +344,11 @@ */ public Object preCloseParts(List partsToClose, boolean save, final IWorkbenchWindow window) { + return preCloseParts(partsToClose, save, window, window); + } + + public Object preCloseParts(List partsToClose, boolean save, IShellProvider shellProvider, + final IWorkbenchWindow window) { // reference count (how many occurrences of a model will go away?) PostCloseInfo postCloseInfo = new PostCloseInfo(); for (Iterator it = partsToClose.iterator(); it.hasNext();) { @@ -380,7 +385,7 @@ fillModelsClosing(postCloseInfo.modelsClosing, postCloseInfo.modelsDecrementing); if (save) { - boolean canceled = promptForSavingIfNecessary(window, + boolean canceled = promptForSavingIfNecessary(shellProvider, window, postCloseInfo.modelsClosing, postCloseInfo.modelsDecrementing, true); if (canceled) { return null; @@ -397,6 +402,12 @@ */ private boolean promptForSavingIfNecessary(final IWorkbenchWindow window, Set modelsClosing, Map modelsDecrementing, boolean canCancel) { + return promptForSavingIfNecessary(window, window, modelsClosing, modelsDecrementing, + canCancel); + } + + private boolean promptForSavingIfNecessary(IShellProvider shellProvider, + IWorkbenchWindow window, Set modelsClosing, Map modelsDecrementing, boolean canCancel) { List modelsToOptionallySave = new ArrayList(); for (Iterator it = modelsDecrementing.keySet().iterator(); it.hasNext();) { Saveable modelDecrementing = (Saveable) it.next(); @@ -405,8 +416,8 @@ } } - boolean shouldCancel = modelsToOptionallySave.isEmpty() ? false : promptForSaving(modelsToOptionallySave, - window, window, canCancel, true); + boolean shouldCancel = modelsToOptionallySave.isEmpty() ? false : promptForSaving( + modelsToOptionallySave, shellProvider, window, canCancel, true); if (shouldCancel) { return true; @@ -419,8 +430,8 @@ modelsToSave.add(modelClosing); } } - return modelsToSave.isEmpty() ? false : promptForSaving(modelsToSave, - window, window, canCancel, false); + return modelsToSave.isEmpty() ? false : promptForSaving(modelsToSave, shellProvider, + window, canCancel, false); } /** diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ShowViewMenu.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ShowViewMenu.java index ddd01ab..8ab67f7 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ShowViewMenu.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ShowViewMenu.java @@ -11,15 +11,14 @@ package org.eclipse.ui.internal; +import com.ibm.icu.text.Collator; import java.util.ArrayList; -import java.util.Arrays; import java.util.Collections; import java.util.Comparator; import java.util.HashMap; import java.util.Iterator; import java.util.List; import java.util.Map; - import org.eclipse.core.commands.Command; import org.eclipse.core.commands.ExecutionException; import org.eclipse.core.commands.IParameter; @@ -39,6 +38,7 @@ import org.eclipse.swt.widgets.Menu; import org.eclipse.swt.widgets.MenuItem; import org.eclipse.ui.IPluginContribution; +import org.eclipse.ui.IViewReference; import org.eclipse.ui.IWorkbenchCommandConstants; import org.eclipse.ui.IWorkbenchPage; import org.eclipse.ui.IWorkbenchWindow; @@ -53,23 +53,69 @@ import org.eclipse.ui.views.IViewDescriptor; import org.eclipse.ui.views.IViewRegistry; -import com.ibm.icu.text.Collator; - /** * A ShowViewMenu is used to populate a menu manager with Show * View actions. The visible views are determined by user preference from the * Perspective Customize dialog. */ public class ShowViewMenu extends ContributionItem { - /** - * @deprecated As of 3.5, replaced by {@link IWorkbenchCommandConstants#VIEWS_SHOW_VIEW} - */ - public static final String SHOW_VIEW_ID= IWorkbenchCommandConstants.VIEWS_SHOW_VIEW; - /** - * @deprecated As of 3.6, replaced by - * {@link IWorkbenchCommandConstants#VIEWS_SHOW_VIEW_PARM_ID} - */ - public static final String VIEW_ID_PARM = IWorkbenchCommandConstants.VIEWS_SHOW_VIEW_PARM_ID; + + static class Pair { + public final Object a; + public final Object b; + int hashCode = -1; + + /** + * @param a + * must not be null + * @param b + * can be null + */ + public Pair(Object a, Object b) { + this.a = a; + this.b = b; + } + + /* + * (non-Javadoc) + * + * @see java.lang.Object#hashCode() + */ + public int hashCode() { + if (hashCode == -1) { + final int prime = 31; + hashCode = 1; + hashCode = prime * hashCode + ((a == null) ? 0 : a.hashCode()); + hashCode = prime * hashCode + ((b == null) ? 0 : b.hashCode()); + if (hashCode == -1) { + hashCode = a.hashCode(); + } + } + return hashCode; + } + + /* + * (non-Javadoc) + * + * @see java.lang.Object#equals(java.lang.Object) + */ + public boolean equals(Object obj) { + if (this == obj) { + return true; + } + Pair p = (Pair) obj; + if (!a.equals(p.a)) { + return false; + } + if (b == p.b) { + return true; + } + if (b == null || p.b == null) { + return false; + } + return b.equals(p.b); + } + } private IWorkbenchWindow window; @@ -89,9 +135,6 @@ private Action showDlgAction; private Map actions = new HashMap(21); - - // Maps pages to a list of opened views - private Map openedViews = new HashMap(); protected boolean dirty = true; @@ -196,18 +239,18 @@ } // Get visible actions. - List viewIds = Arrays.asList(page.getShowViewShortcuts()); + List viewIds = getShortcuts(page); // add all open views viewIds = addOpenedViews(page, viewIds); List actions = new ArrayList(viewIds.size()); for (Iterator i = viewIds.iterator(); i.hasNext();) { - String id = (String) i.next(); - if (id.equals(IIntroConstants.INTRO_VIEW_ID)) { + Pair id = (Pair) i.next(); + if (id.a.equals(IIntroConstants.INTRO_VIEW_ID)) { continue; } - CommandContributionItemParameter item = getItem(id); + CommandContributionItemParameter item = getItem((String) id.a, (String) id.b); if (item != null) { actions.add(item); } @@ -231,6 +274,15 @@ // Add Other... innerMgr.add(showDlgAction); + } + + private List getShortcuts(IWorkbenchPage page) { + ArrayList list = new ArrayList(); + String[] shortcuts = page.getShowViewShortcuts(); + for (int i = 0; i &lt; shortcuts.length; i++) { + list.add(new Pair(shortcuts[i], null)); + } + return list; } static class PluginCCIP extends CommandContributionItemParameter implements @@ -266,7 +318,7 @@ } - private CommandContributionItemParameter getItem(String viewId) { + private CommandContributionItemParameter getItem(String viewId, String secondaryId) { IViewRegistry reg = WorkbenchPlugin.getDefault().getViewRegistry(); IViewDescriptor desc = reg.find(viewId); if (desc==null) { @@ -281,11 +333,15 @@ parms.icon = desc.getImageDescriptor(); parms.parameters = new HashMap(); - parms.parameters.put(VIEW_ID_PARM, viewId); + parms.parameters.put(IWorkbenchCommandConstants.VIEWS_SHOW_VIEW_PARM_ID, viewId); if (makeFast) { parms.parameters.put( IWorkbenchCommandConstants.VIEWS_SHOW_VIEW_PARM_FASTVIEW, &quot;true&quot;); //$NON-NLS-1$ + } + if (secondaryId != null) { + parms.parameters.put(IWorkbenchCommandConstants.VIEWS_SHOW_VIEW_SECONDARY_ID, + secondaryId); } return parms; } @@ -310,10 +366,10 @@ } private ArrayList getParts(IWorkbenchPage page) { - ArrayList parts = (ArrayList) openedViews.get(page); - if (parts == null) { - parts = new ArrayList(); - openedViews.put(page, parts); + ArrayList parts = new ArrayList(); + IViewReference[] refs = page.getViewReferences(); + for (int i = 0; i &lt; refs.length; i++) { + parts.add(new Pair(refs[i].getId(), refs[i].getSecondaryId())); } return parts; } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ViewPane.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ViewPane.java index df01139..99f88c2 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ViewPane.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ViewPane.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -13,6 +13,7 @@ package org.eclipse.ui.internal; +import org.eclipse.jface.action.IContributionItem; import org.eclipse.jface.action.MenuManager; import org.eclipse.jface.internal.provisional.action.IToolBarManager2; import org.eclipse.jface.util.IPropertyChangeListener; @@ -96,7 +97,16 @@ protected void update(boolean force, boolean recursive) { super.update(force, recursive); - boolean hasMenu = !isEmpty(); + boolean hasMenu = false; + IContributionItem[] items = getItems(); + for (int i = 0; i &lt; items.length; i++) { + if (items[i].isVisible() &amp;&amp; !items[i].isSeparator() &amp;&amp; !items[i].isGroupMarker()) { + // only show the menu if we have visible items that aren&apos;t separators or group markers + hasMenu = true; + break; + } + } + if (hasMenu != hadViewMenu) { hadViewMenu = hasMenu; firePropertyChange(IPresentablePart.PROP_PANE_MENU); @@ -170,6 +180,7 @@ // ISV toolbar. // // 1GD0ISU: ITPUI:ALL - Dbl click on view tool cause zoom final Control isvToolBar = isvToolBarMgr.createControl2(parentControl.getParent()); + isvToolBar.setVisible(false); isvToolBarMgr.addPropertyChangeListener(new ISVPropListener(isvToolBar)); @@ -401,19 +412,13 @@ return !page.isFixedLayout(); } - /** - * Return if there should be a view menu at all. - * There is no view menu if there is no menu manager, - * no pull down button or if the receiver is an - * inactive fast view. - */ + /** + * Returns whether there should be a view menu or not. There should not be a + * view menu if there is no menu manager or the manager itself has no + * visible items that are not separators or group markers. + */ public boolean hasViewMenu() { - - if (isvMenuMgr != null) { - return !isvMenuMgr.isEmpty(); - } - - return false; + return isvMenuMgr != null &amp;&amp; hadViewMenu; } public void showViewMenu(Point location) { diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ViewReference.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ViewReference.java index 99e662b..0c2ed54 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ViewReference.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/ViewReference.java @@ -10,18 +10,19 @@ *******************************************************************************/ package org.eclipse.ui.internal; -import org.eclipse.ui.internal.testing.ContributionInfoMessages; - import org.eclipse.core.runtime.IConfigurationElement; import org.eclipse.core.runtime.IStatus; import org.eclipse.core.runtime.dynamichelpers.IExtensionTracker; import org.eclipse.jface.action.ContributionManager; import org.eclipse.jface.action.IAction; +import org.eclipse.jface.action.IMenuManager; +import org.eclipse.jface.action.IToolBarManager; import org.eclipse.jface.resource.ImageDescriptor; import org.eclipse.osgi.util.NLS; import org.eclipse.swt.SWT; import org.eclipse.swt.layout.FillLayout; import org.eclipse.swt.widgets.Composite; +import org.eclipse.ui.IActionBars; import org.eclipse.ui.IKeyBindingService; import org.eclipse.ui.IMemento; import org.eclipse.ui.IViewPart; @@ -32,9 +33,11 @@ import org.eclipse.ui.IWorkbenchPart3; import org.eclipse.ui.PartInitException; import org.eclipse.ui.PlatformUI; +import org.eclipse.ui.SubActionBars; import org.eclipse.ui.internal.misc.StatusUtil; import org.eclipse.ui.internal.misc.UIStats; import org.eclipse.ui.internal.registry.ViewDescriptor; +import org.eclipse.ui.internal.testing.ContributionInfoMessages; import org.eclipse.ui.internal.util.Util; import org.eclipse.ui.menus.IMenuService; import org.eclipse.ui.part.IWorkbenchPartOrientation; @@ -105,18 +108,26 @@ if (view != null) { // Free action bars, pane, etc. PartSite site = (PartSite) view.getSite(); - ViewActionBars actionBars = (ViewActionBars) site.getActionBars(); + IActionBars actionBars = site.getActionBars(); // // 3.3 start // + IMenuService menuService = (IMenuService) site .getService(IMenuService.class); - menuService.releaseContributions((ContributionManager) site.getActionBars() - .getMenuManager()); - menuService.releaseContributions((ContributionManager) site.getActionBars() - .getToolBarManager()); + IMenuManager menuManager = actionBars.getMenuManager(); + if (menuManager instanceof ContributionManager) { + menuService.releaseContributions((ContributionManager) menuManager); + } + IToolBarManager toolBarManager = actionBars.getToolBarManager(); + if(toolBarManager instanceof ContributionManager) + { + menuService.releaseContributions((ContributionManager) toolBarManager); + } // 3.3 end - actionBars.dispose(); + if (actionBars instanceof SubActionBars) { + ((SubActionBars) actionBars).dispose(); + } // and now dispose the delegates since the // PluginActionContributionItem diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/Workbench.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/Workbench.java index d81199e..6fed79c 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/Workbench.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/Workbench.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -16,6 +16,7 @@ package org.eclipse.ui.internal; import com.ibm.icu.util.ULocale; +import com.ibm.icu.util.ULocale.Category; import java.io.BufferedInputStream; import java.io.BufferedReader; import java.io.File; @@ -95,6 +96,7 @@ import org.eclipse.swt.widgets.Display; import org.eclipse.swt.widgets.Event; import org.eclipse.swt.widgets.Listener; +import org.eclipse.swt.widgets.Menu; import org.eclipse.swt.widgets.Shell; import org.eclipse.swt.widgets.TaskBar; import org.eclipse.swt.widgets.TaskItem; @@ -131,6 +133,7 @@ import org.eclipse.ui.commands.ICommandImageService; import org.eclipse.ui.commands.ICommandService; import org.eclipse.ui.commands.IWorkbenchCommandSupport; +import org.eclipse.ui.contexts.IContextActivation; import org.eclipse.ui.contexts.IContextService; import org.eclipse.ui.contexts.IWorkbenchContextSupport; import org.eclipse.ui.handlers.IHandlerService; @@ -189,6 +192,7 @@ import org.eclipse.ui.intro.IIntroManager; import org.eclipse.ui.keys.IBindingService; import org.eclipse.ui.menus.IMenuService; +import org.eclipse.ui.menus.MenuUtil; import org.eclipse.ui.model.IContributionService; import org.eclipse.ui.operations.IWorkbenchOperationSupport; import org.eclipse.ui.progress.IProgressService; @@ -663,8 +667,12 @@ final int[] returnCode = new int[1]; Realm.runWithDefault(SWTObservables.getRealm(display), new Runnable() { public void run() { - ULocale.setDefault(new ULocale(Platform.getNL() - + Platform.getNLExtensions())); + final String nlExtensions = Platform.getNLExtensions(); + if (nlExtensions.length() &gt; 0) { + ULocale.setDefault(Category.FORMAT, + new ULocale(ULocale.getDefault(Category.FORMAT).getBaseName() + + nlExtensions)); + } // create the workbench instance Workbench workbench = new Workbench(display, advisor); // run the workbench event loop @@ -1436,6 +1444,9 @@ * (non-Javadoc) Method declared on IWorkbench. */ public int getWorkbenchWindowCount() { + if (windowManager == null) { + return 0; + } return windowManager.getWindowCount(); } @@ -1443,6 +1454,9 @@ * (non-Javadoc) Method declared on IWorkbench. */ public IWorkbenchWindow[] getWorkbenchWindows() { + if (windowManager == null) { + return new IWorkbenchWindow[0]; + } Window[] windows = windowManager.getWindows(); IWorkbenchWindow[] dwindows = new IWorkbenchWindow[windows.length]; System.arraycopy(windows, 0, dwindows, 0, windows.length); @@ -1553,6 +1567,25 @@ startSourceProviders(); } }); + + StartupThreading.runWithoutExceptions(new StartupRunnable() { + + public void runWithException() { + + activateWorkbenchContext(); + + } + }); + + StartupThreading.runWithoutExceptions(new StartupRunnable() { + + public void runWithException() { + + createApplicationMenu(); + } + }); + + // attempt to restore a previous workbench state try { @@ -1751,6 +1784,14 @@ new SaveablesList()); }}); + StartupThreading.runWithoutExceptions(new StartupRunnable() { + + public void runWithException() { + // side effect of getter is initializing + getProgressService(); + } + }); + /* * Phase 1 of the initialization of commands. When this phase completes, * all the services and managers will exist, and be accessible via the @@ -1806,6 +1847,9 @@ bindingService[0].readRegistryAndPreferences(commandService[0]); serviceLocator.registerService(IBindingService.class, bindingService[0]); + // there is a thin window where the filter is set but the service is not + // yet available + ((BindingService) bindingService[0]).getKeyboard().getKeyDownFilter().setEnabled(true); final CommandImageManager commandImageManager = new CommandImageManager(); final CommandImageService commandImageService = new CommandImageService( @@ -2128,13 +2172,30 @@ super.handleException(e); } }); - // ensure at least one window was opened - if (result[0].isOK() &amp;&amp; windowManager.getWindows().length == 0) { + // ensure at least one window was opened, only when appMenu isn&apos;t there + if (shouldReturnNoWindowError(result[0])) { String msg = WorkbenchMessages.Workbench_noWindowsRestored; result[0] = new Status(IStatus.ERROR, WorkbenchPlugin.PI_WORKBENCH, IWorkbenchConfigurer.RESTORE_CODE_RESET, msg, null); } return result[0]; + } + + private boolean shouldReturnNoWindowError(final IStatus result) { + + final boolean[] shouldReturn = new boolean[1]; + // first check for the result &amp; no of windows + shouldReturn[0] = result.isOK() &amp;&amp; windowManager.getWindows().length == 0; + if (shouldReturn[0]) { + // if result is ok and there is no window, check for appMenu + display.syncExec(new Runnable() { + public void run() { + // return error if there is no appMenu + shouldReturn[0] = !hasAppMenu(); + } + }); + } + return shouldReturn[0]; } /* @@ -2988,6 +3049,10 @@ ((GrabFocus) Tweaklets.get(GrabFocus.KEY)).dispose(); + deactivateWorkbenchContext(); + + disposeApplicationMenu(); + // Bring down all of the services. serviceLocator.dispose(); @@ -3008,6 +3073,7 @@ tracker.close(); } } + /** * Cancels the early startup job, if it&apos;s still running. @@ -3709,6 +3775,9 @@ */ private MenuSourceProvider menuSourceProvider; + private IContextActivation workbenchContext; + + private ApplicationMenuManager applicationMenuMgr; /** @@ -3816,4 +3885,47 @@ }; } + private void createApplicationMenu() { + + if (!hasAppMenu()) + return; + + applicationMenuMgr = new ApplicationMenuManager(getAppMenu()); + IMenuService menuService = (IMenuService) serviceLocator.getService(IMenuService.class); + menuService.populateContributionManager(applicationMenuMgr, MenuUtil.WORKBENCH_MENU); + applicationMenuMgr.update(true); + } + + private void disposeApplicationMenu() { + + if (applicationMenuMgr == null) + return; + IMenuService menuService = (IMenuService) serviceLocator.getService(IMenuService.class); + menuService.releaseContributions(applicationMenuMgr); + applicationMenuMgr.dispose(); + } + + private void activateWorkbenchContext() { + IContextService contextService = (IContextService) serviceLocator + .getService(IContextService.class); + workbenchContext = contextService.activateContext(IContextService.CONTEXT_ID_WORKBENCH_MENU); + } + + private void deactivateWorkbenchContext() { + if(workbenchContext == null) + return; + workbenchContext.getContextService().deactivateContext(workbenchContext); + } + + + public boolean hasAppMenu() { + if (getAppMenu() == null) + return false; + return !getWorkbenchConfigurer().getExitOnLastWindowClose(); + } + + private Menu getAppMenu() { + return getDisplay().getMenuBar(); + } + } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchMessages.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchMessages.java index df2e34e..4bec539 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchMessages.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchMessages.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2010 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -245,6 +245,10 @@ public static String ResetPerspective_message; public static String ResetPerspective_title; public static String RevertPerspective_note; + + public static String RevertPerspective_title; + public static String RevertPerspective_message; + public static String RevertPerspective_option; public static String ClosePerspectiveAction_text; public static String ClosePerspectiveAction_toolTip; @@ -623,6 +627,7 @@ public static String EditorManager_create_element_returned_null; public static String EditorManager_wrong_createElement_result; public static String EditorManager_backgroundSaveJobName; + public static String EditorManager_largeDocumentWarning; public static String EditorPane_pinEditor; diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchPage.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchPage.java index f649781..56a6536 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchPage.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchPage.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -53,6 +53,8 @@ import org.eclipse.swt.widgets.Composite; import org.eclipse.swt.widgets.Control; import org.eclipse.swt.widgets.Display; +import org.eclipse.swt.widgets.Event; +import org.eclipse.swt.widgets.Listener; import org.eclipse.swt.widgets.Shell; import org.eclipse.ui.IActionBars; import org.eclipse.ui.IEditorDescriptor; @@ -283,6 +285,78 @@ private IExtensionPoint getPerspectiveExtensionPoint() { return Platform.getExtensionRegistry().getExtensionPoint(PlatformUI.PLUGIN_ID, IWorkbenchRegistryConstants.PL_PERSPECTIVE_EXTENSIONS); + } + + class MnemonicDisabler implements Listener { + private final Composite root; + private boolean enabled = false; + + public MnemonicDisabler(Composite root) { + this.root = root; + root.getShell().addListener(SWT.Activate, this); + root.getShell().addListener(SWT.Deactivate, this); + root.addListener(SWT.Dispose, this); + root.getDisplay().addFilter(SWT.Traverse, this); + } + + public void handleEvent(Event event) { + switch (event.type) { + case SWT.Activate: + enabled = true; + break; + + case SWT.Dispose: + root.getDisplay().removeFilter(SWT.Traverse, this); + root.getShell().removeListener(SWT.Activate, this); + root.getShell().removeListener(SWT.Deactivate, this); + case SWT.Deactivate: + enabled = false; + break; + + case SWT.Traverse: + if (!enabled) { + return; + } + handleTraverse(event); + break; + } + } + + private void handleTraverse(Event event) { + if (event.detail != SWT.TRAVERSE_MNEMONIC || event.doit != true) + return; + Control candidate = (Control) event.widget; + + // List of Controls which define the active part&apos;s &quot;context&quot;. + List activeContexts = new ArrayList(); + activeContexts.add(((PartSite) getActivePart().getSite()).getPane().getControl()); + // $TODO need to also add the parts toolbar to the list + + IWorkbenchPartReference allParts[] = getSortedParts(); + List otherContexts = new ArrayList(); + for (int i = 0; i &lt; allParts.length; i++) { + IWorkbenchPartReference partReference = allParts[i]; + IWorkbenchPart part = partReference.getPart(false); + if (part != null &amp;&amp; isPartVisible(part)) + otherContexts.add(((PartSite) part.getSite()).getPane().getControl()); + // $TODO need to also add the toolbar&apos;s control for the part + } + otherContexts.removeAll(activeContexts); + + // walk up the candidate&apos;s parent chain + while (candidate != null) { + if (activeContexts.contains(candidate)) + return; + else if (otherContexts.contains(candidate)) { + event.doit = false; + return; + } + candidate = candidate.getParent(); + } + // Candidate was not inside any context, so it is some global + // Control. + } + } /** @@ -1091,7 +1165,11 @@ if (!((GrabFocus)Tweaklets.get(GrabFocus.KEY)).grabFocusAllowed(part)) { return; } - checkIntro(); + + if (mode != VIEW_CREATE) { + checkIntro(); + } + if (mode == VIEW_ACTIVATE) { activate(part); } else if (mode == VIEW_VISIBLE) { @@ -1163,7 +1241,7 @@ */ public boolean closeAllSavedEditors() { // get the Saved editors - IEditorReference editors[] = getEditorReferences(); + IEditorReference editors[] = getAllEditorReferences(); IEditorReference savedEditors[] = new IEditorReference[editors.length]; int j = 0; for (int i = 0; i &lt; editors.length; i++) { @@ -1185,7 +1263,7 @@ * See IWorkbenchPage */ public boolean closeAllEditors(boolean save) { - return closeEditors(getEditorReferences(), save); + return closeEditors(getAllEditorReferences(), save); } private void updateActivePart() { @@ -1376,6 +1454,7 @@ IEditorReference ref = editorRefs[i]; // Remove editor from the presentation + removedEditors.remove(ref); editorPresentation.closeEditor(ref); partRemoved((WorkbenchPartReference)ref); @@ -1650,6 +1729,7 @@ public void runWithException() { composite = new Composite(parent, SWT.NONE); + new MnemonicDisabler(composite); composite.setVisible(false); // Make visible on activate. // force the client composite to be layed out parent.layout(); @@ -2115,6 +2195,12 @@ public IEditorReference[] getEditorReferences() { return editorPresentation.getEditors(); } + + public IEditorReference[] getAllEditorReferences() { + ArrayList allRefs = new ArrayList(removedEditors); + allRefs.addAll(Arrays.asList(editorPresentation.getEditors())); + return (IEditorReference[]) allRefs.toArray(new IEditorReference[allRefs.size()]); + } /** * Returns the docked views. @@ -3327,7 +3413,7 @@ /* * Saves the workbench part. */ - protected boolean savePart(ISaveablePart saveable, IWorkbenchPart part, + public boolean savePart(ISaveablePart saveable, IWorkbenchPart part, boolean confirm) { // Do not certify part do allow editors inside a multipageeditor to // call this. @@ -3484,6 +3570,23 @@ if (partBeingActivated != null) { if (partBeingActivated.getPart(false) != newPart) { + // check if we&apos;re a nested editor reference + if (partBeingActivated instanceof EditorManager.InnerEditor) { + EditorReference outerEditor = (EditorReference) ((EditorManager.InnerEditor) partBeingActivated) + .getOuterEditor(); + // get all the sibling references + IEditorReference[] children = outerEditor.getChildren(); + if (children != null) { + for (int i = 0; i &lt; children.length; i++) { + // there&apos;s a recursive activation request for a + // sibling reference, ignore it + if (children[i].getPart(false) == newPart) { + return; + } + } + } + } + WorkbenchPlugin.log(new RuntimeException(NLS.bind( &quot;WARNING: Prevented recursive attempt to activate part {0} while still in the middle of activating part {1}&quot;, //$NON-NLS-1$ getId(newPart), getId(partBeingActivated)))); @@ -4822,16 +4925,13 @@ IWorkbenchPartReference[] getAllParts() { ArrayList allParts = new ArrayList(); IViewReference[] views = viewFactory.getViews(); - IEditorReference[] editors = getEditorReferences(); + IEditorReference[] editors = getAllEditorReferences(); if (views.length &gt; 0) { allParts.addAll(Arrays.asList(views)); } if (editors.length &gt; 0) { allParts.addAll(Arrays.asList(editors)); - } - if (removedEditors.size() &gt; 0) { - allParts.addAll(removedEditors); } return (IWorkbenchPartReference[]) allParts diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchPartReference.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchPartReference.java index f92f262..c751ad3 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchPartReference.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchPartReference.java @@ -16,7 +16,6 @@ import java.util.HashMap; import java.util.Iterator; import java.util.Map; - import org.eclipse.core.runtime.Assert; import org.eclipse.core.runtime.IStatus; import org.eclipse.core.runtime.ListenerList; @@ -167,9 +166,10 @@ private boolean queueEvents = false; - private static DisposeListener prematureDisposeListener = new DisposeListener() { + private DisposeListener prematureDisposeListener = new DisposeListener() { public void widgetDisposed(DisposeEvent e) { - WorkbenchPlugin.log(new RuntimeException(&quot;Widget disposed too early!&quot;)); //$NON-NLS-1$ + WorkbenchPlugin.log(new RuntimeException(&quot;Widget disposed too early for part &quot; //$NON-NLS-1$ + + getId())); } }; diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchPlugin.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchPlugin.java index 6085404..9a95a3b 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchPlugin.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchPlugin.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,6 +7,7 @@ * * Contributors: * IBM Corporation - initial API and implementation + * Dina Sayed, dsayed@eg.ibm.com, IBM - bug 303889 *******************************************************************************/ package org.eclipse.ui.internal; @@ -936,6 +937,29 @@ return checkCommandLineLocale(); //Use the default value if there is nothing specified } + /** + * Check whether the workbench messages are in a Bidi language. This method + * will return null if it is unable to determine message + * properties. + */ + private Boolean isBidiMessageText() { + // Check if the user installed the NLS packs for bidi + String message = WorkbenchMessages.Startup_Loading_Workbench; + if (message == null) + return null; + + try { + // use qualified class name to avoid import statement + // and premature attempt to resolve class reference + boolean isBidi = com.ibm.icu.text.Bidi.requiresBidi(message.toCharArray(), 0, + message.length()); + return new Boolean(isBidi); + } catch (NoClassDefFoundError e) { + // the ICU Base bundle used in place of ICU? + return null; + } + } + /** * Check to see if the command line parameter for -nl * has been set. If so imply the orientation from this @@ -953,21 +977,23 @@ * @see SWT#RIGHT_TO_LEFT */ private int checkCommandLineLocale() { - - //Check if the user property is set. If not do not - //rely on the vm. - if(System.getProperty(NL_USER_PROPERTY) == null) { - return SWT.NONE; + // Check if the user property is set. If not, do not rely on the VM. + if (System.getProperty(NL_USER_PROPERTY) == null) { + Boolean needRTL = isBidiMessageText(); + if (needRTL != null &amp;&amp; needRTL.booleanValue()) + return SWT.RIGHT_TO_LEFT; + } else { + String lang = Locale.getDefault().getLanguage(); + boolean bidiLangauage = &quot;iw&quot;.equals(lang) || &quot;he&quot;.equals(lang) || &quot;ar&quot;.equals(lang) || //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ + &quot;fa&quot;.equals(lang) || &quot;ur&quot;.equals(lang); //$NON-NLS-1$ //$NON-NLS-2$ + if (bidiLangauage) { + Boolean needRTL = isBidiMessageText(); + if (needRTL == null) + return SWT.RIGHT_TO_LEFT; + if (needRTL.booleanValue()) + return SWT.RIGHT_TO_LEFT; + } } - - Locale locale = Locale.getDefault(); - String lang = locale.getLanguage(); - - if (&quot;iw&quot;.equals(lang) || &quot;he&quot;.equals(lang) || &quot;ar&quot;.equals(lang) || //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ - &quot;fa&quot;.equals(lang) || &quot;ur&quot;.equals(lang)) { //$NON-NLS-1$ //$NON-NLS-2$ - return SWT.RIGHT_TO_LEFT; - } - return SWT.NONE; } @@ -1218,10 +1244,11 @@ } private void bundleChanged(BundleEvent event) { + int eventType = event.getType(); // a bundle in the STARTING state generates 2 events, LAZY_ACTIVATION // when it enters STARTING and STARTING when it exists STARTING :-) synchronized (startingBundles) { - switch (event.getType()) { + switch (eventType) { case BundleEvent.STARTING : startingBundles.add(event.getBundle()); break; diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchWindow.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchWindow.java index eab3d69..38019d7 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchWindow.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkbenchWindow.java @@ -722,17 +722,8 @@ updateDisabled = true; try { - // Only do the check if it is OK to close if we are not closing - // via the workbench as the workbench will check this itself. Workbench workbench = getWorkbenchImpl(); - int count = workbench.getWorkbenchWindowCount(); - // also check for starting - if the first window dies on startup - // then we&apos;ll need to open a default window. - if (!workbench.isStarting() - &amp;&amp; !workbench.isClosing() - &amp;&amp; count &lt;= 1 - &amp;&amp; workbench.getWorkbenchConfigurer() - .getExitOnLastWindowClose()) { + if (shouldCloseWorkbench(workbench)) { windowClosed = workbench.close(); } else { if (okToClose()) { @@ -752,6 +743,38 @@ } return windowClosed; + } + + /** + * + * Checks and returns whether we should close the workbench when closing + * this window + * + * @param workbench + * @return true, if the workbench needs to be closed, + * false otherwise + */ + private boolean shouldCloseWorkbench(Workbench workbench) { + + // also check for starting - if the first window dies on startup + // then we&apos;ll need to open a default window. + + if (workbench.isStarting()) + return false; + + // Only do the check if it is OK to close if we are not closing + // via the workbench as the workbench will check this itself. + if (workbench.isClosing()) + return false; + + int count = workbench.getWorkbenchWindowCount(); + + // we have more windows apart from this. Dont&apos; close workbench + if(count &gt;1 ) + return false; + + // now do whatever the workbenchconfigurer says ... + return workbench.getWorkbenchConfigurer().getExitOnLastWindowClose(); } /** @@ -816,6 +839,19 @@ if (!super.canHandleShellCloseEvent()) { return false; } + + // Ensure that any pending &apos;Close&apos; event are flushed + // before opening any dialogs + final boolean[] boundingAsynchDone = { false }; + Display display = getShell().getDisplay(); + display.asyncExec(new Runnable() { + public void run() { + boundingAsynchDone[0] = true; + } + }); + while (!boundingAsynchDone[0] &amp;&amp; display.readAndDispatch()) + ; + // let the advisor or other interested parties // veto the user&apos;s explicit request to close the window return fireWindowShellClosing(); diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkingSetManager.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkingSetManager.java index 6886913..214b5e8 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkingSetManager.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/WorkingSetManager.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,6 +7,7 @@ * * Contributors: * IBM Corporation - initial API and implementation + * Tasktop Technologies - fix for bug 327396 *******************************************************************************/ package org.eclipse.ui.internal; @@ -42,6 +43,10 @@ // Working set persistence public static final String WORKING_SET_STATE_FILENAME = &quot;workingsets.xml&quot;; //$NON-NLS-1$ + + private boolean restoreInProgress; + + private boolean savePending; public WorkingSetManager(BundleContext context) { super(context); @@ -101,6 +106,8 @@ if (stateFile != null &amp;&amp; stateFile.exists()) { try { + restoreInProgress = true; + FileInputStream input = new FileInputStream(stateFile); BufferedReader reader = new BufferedReader( new InputStreamReader(input, &quot;utf-8&quot;)); //$NON-NLS-1$ @@ -119,6 +126,13 @@ e, WorkbenchMessages.ProblemRestoringWorkingSetState_title, WorkbenchMessages.ProblemRestoringWorkingSetState_message); + } finally { + restoreInProgress = false; + } + + if (savePending) { + saveState(); + savePending = false; } } } @@ -127,6 +141,11 @@ * Saves the working sets in the persistence store */ private void saveState() { + if (restoreInProgress) { + // bug 327396: avoid saving partial state + savePending = true; + return; + } File stateFile = getWorkingSetStateFile(); if (stateFile == null) { diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/AbstractActivityManager.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/AbstractActivityManager.java index cbee560..f7ef9b4 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/AbstractActivityManager.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/AbstractActivityManager.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2006 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -11,15 +11,13 @@ package org.eclipse.ui.internal.activities; -import java.util.ArrayList; -import java.util.List; - +import org.eclipse.core.runtime.ListenerList; import org.eclipse.ui.activities.ActivityManagerEvent; import org.eclipse.ui.activities.IActivityManager; import org.eclipse.ui.activities.IActivityManagerListener; public abstract class AbstractActivityManager implements IActivityManager { - private List activityManagerListeners; + private ListenerList activityManagerListeners; protected AbstractActivityManager() { } @@ -31,12 +29,10 @@ } if (activityManagerListeners == null) { - activityManagerListeners = new ArrayList(); + activityManagerListeners = new ListenerList(); } - if (!activityManagerListeners.contains(activityManagerListener)) { - activityManagerListeners.add(activityManagerListener); - } + activityManagerListeners.add(activityManagerListener); } protected void fireActivityManagerChanged( @@ -45,10 +41,11 @@ throw new NullPointerException(); } - if (activityManagerListeners != null) { - for (int i = 0; i &lt; activityManagerListeners.size(); i++) { - ((IActivityManagerListener) activityManagerListeners.get(i)) - .activityManagerChanged(activityManagerEvent); + if (activityManagerListeners != null) { + Object[] listeners = activityManagerListeners.getListeners(); + for (int i = 0; i &lt; listeners.length; i++) { + ((IActivityManagerListener) listeners[i]) + .activityManagerChanged(activityManagerEvent); } } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/ExtensionActivityRegistry.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/ExtensionActivityRegistry.java index 03e9cdb..4cb554c 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/ExtensionActivityRegistry.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/ExtensionActivityRegistry.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -16,7 +16,6 @@ import java.util.Collections; import java.util.Iterator; import java.util.List; - import org.eclipse.core.expressions.Expression; import org.eclipse.core.expressions.ExpressionConverter; import org.eclipse.core.runtime.CoreException; @@ -28,6 +27,7 @@ import org.eclipse.core.runtime.IRegistryChangeListener; import org.eclipse.core.runtime.IStatus; import org.eclipse.core.runtime.Status; +import org.eclipse.jface.preference.IPreferenceStore; import org.eclipse.ui.PlatformUI; import org.eclipse.ui.internal.WorkbenchPlugin; import org.eclipse.ui.internal.registry.IWorkbenchRegistryConstants; @@ -35,6 +35,12 @@ import org.eclipse.ui.statushandlers.StatusManager; final class ExtensionActivityRegistry extends AbstractActivityRegistry { + + /** + * Prefix for all activity preferences + */ + private final static String PREFIX = &quot;UIActivities.&quot;; //$NON-NLS-1$ + private List activityRequirementBindingDefinitions; private List activityDefinitions; @@ -170,6 +176,22 @@ } } + // merge enablement overrides from plugin_customization.ini + IPreferenceStore store = WorkbenchPlugin.getDefault().getPreferenceStore(); + for (Iterator i = activityDefinitions.iterator(); i.hasNext();) { + ActivityDefinition activityDef = (ActivityDefinition) i.next(); + String id = activityDef.getId(); + String preferenceKey = createPreferenceKey(id); + if (&quot;&quot;.equals(store.getDefaultString(preferenceKey))) //$NON-NLS-1$ + continue; + if (store.getDefaultBoolean(preferenceKey)) { + if (!defaultEnabledActivities.contains(id) &amp;&amp; activityDef.getEnabledWhen() == null) + defaultEnabledActivities.add(id); + } else { + defaultEnabledActivities.remove(id); + } + } + // Removal of all defaultEnabledActivites which target to expression // controlled activities. for (int i = 0; i &lt; defaultEnabledActivities.size();) { @@ -267,6 +289,17 @@ } } + /** + * Create the preference key for the activity. + * + * @param activityId + * the activity id. + * @return String a preference key representing the activity. + */ + private String createPreferenceKey(String activityId) { + return PREFIX + activityId; + } + private void readDefaultEnablement( IConfigurationElement configurationElement) { String enabledActivity = Persistence diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/Identifier.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/Identifier.java index 69d2c00..239f0db 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/Identifier.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/Identifier.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2008 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -11,12 +11,10 @@ package org.eclipse.ui.internal.activities; -import java.util.ArrayList; import java.util.Collections; import java.util.HashSet; -import java.util.List; import java.util.Set; - +import org.eclipse.core.runtime.ListenerList; import org.eclipse.ui.activities.IIdentifier; import org.eclipse.ui.activities.IIdentifierListener; import org.eclipse.ui.activities.IdentifierEvent; @@ -40,7 +38,7 @@ private String id; - private List identifierListeners; + private ListenerList identifierListeners; private transient String string; @@ -58,13 +56,10 @@ } if (identifierListeners == null) { - identifierListeners = new ArrayList(); + identifierListeners = new ListenerList(); } - if (!identifierListeners.contains(identifierListener)) { - identifierListeners.add(identifierListener); - } - + identifierListeners.add(identifierListener); strongReferences.add(this); } @@ -107,9 +102,10 @@ } if (identifierListeners != null) { - for (int i = 0; i &lt; identifierListeners.size(); i++) { - ((IIdentifierListener) identifierListeners.get(i)) - .identifierChanged(identifierEvent); + Object[] listeners = identifierListeners.getListeners(); + for (int i = 0; i &lt; listeners.length; i++) { + Object listener = listeners[i]; + ((IIdentifierListener) listener).identifierChanged(identifierEvent); } } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/MutableActivityManager.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/MutableActivityManager.java index 3728443..f306dd5 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/MutableActivityManager.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/activities/MutableActivityManager.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -31,7 +31,6 @@ import org.eclipse.core.runtime.jobs.Job; import org.eclipse.jface.util.IPropertyChangeListener; import org.eclipse.jface.util.PropertyChangeEvent; -import org.eclipse.swt.widgets.Display; import org.eclipse.ui.PlatformUI; import org.eclipse.ui.activities.ActivityEvent; import org.eclipse.ui.activities.ActivityManagerEvent; @@ -45,12 +44,9 @@ import org.eclipse.ui.activities.IMutableActivityManager; import org.eclipse.ui.activities.ITriggerPointAdvisor; import org.eclipse.ui.activities.IdentifierEvent; -import org.eclipse.ui.internal.WorkbenchPlugin; -import org.eclipse.ui.internal.misc.Policy; import org.eclipse.ui.progress.UIJob; import org.eclipse.ui.services.IEvaluationReference; import org.eclipse.ui.services.IEvaluationService; -import org.eclipse.ui.statushandlers.StatusManager; /** * An activity registry that may be altered. @@ -59,10 +55,6 @@ */ public final class MutableActivityManager extends AbstractActivityManager implements IMutableActivityManager, Cloneable { - private static final boolean DEBUG = Policy.DEBUG_UI_GLOBAL; - - private static final int MAX_ERRORS = 5; - private static int reportErrors = 0; private Map activitiesById = new HashMap(); @@ -140,8 +132,7 @@ readRegistry(true); } - public IActivity getActivity(String activityId) { - checkThread(); + synchronized public IActivity getActivity(String activityId) { if (activityId == null) { throw new NullPointerException(); } @@ -157,8 +148,7 @@ return activity; } - public ICategory getCategory(String categoryId) { - checkThread(); + synchronized public ICategory getCategory(String categoryId) { if (categoryId == null) { throw new NullPointerException(); } @@ -174,23 +164,19 @@ return category; } - public Set getDefinedActivityIds() { - checkThread(); + synchronized public Set getDefinedActivityIds() { return Collections.unmodifiableSet(definedActivityIds); } - public Set getDefinedCategoryIds() { - checkThread(); + synchronized public Set getDefinedCategoryIds() { return Collections.unmodifiableSet(definedCategoryIds); } - public Set getEnabledActivityIds() { - checkThread(); + synchronized public Set getEnabledActivityIds() { return Collections.unmodifiableSet(enabledActivityIds); } - public IIdentifier getIdentifier(String identifierId) { - checkThread(); + synchronized public IIdentifier getIdentifier(String identifierId) { if (identifierId == null) { throw new NullPointerException(); } @@ -536,8 +522,7 @@ } } - public void setEnabledActivityIds(Set enabledActivityIds) { - checkThread(); + synchronized public void setEnabledActivityIds(Set enabledActivityIds) { enabledActivityIds = new HashSet(enabledActivityIds); Set requiredActivityIds = new HashSet(enabledActivityIds); getRequiredActivityIds(enabledActivityIds, requiredActivityIds); @@ -920,8 +905,7 @@ /* (non-Javadoc) * @see java.lang.Object#clone() */ - public Object clone() { - checkThread(); + synchronized public Object clone() { MutableActivityManager clone = new MutableActivityManager(advisor, activityRegistry); clone.setEnabledActivityIds(getEnabledActivityIds()); return clone; @@ -981,24 +965,4 @@ return deferredIdentifierJob; } - private static final String ERR_MSG = &quot;Invalid Thread Access to Activity Manager&quot;; //$NON-NLS-1$ - - private void checkThread() { - if (!DEBUG) { - return; - } - if (reportErrors &gt;= MAX_ERRORS) { - return; - } - if (PlatformUI.getWorkbench().isStarting()) { - return; - } - boolean nonUiThread = (null == Display.getCurrent()); - if (nonUiThread) { - reportErrors++; - StatusManager.getManager().handle( - new Status(IStatus.ERROR, WorkbenchPlugin.PI_WORKBENCH, ERR_MSG, new Exception( - ERR_MSG)), StatusManager.LOG); - } - } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/decorators/DecorationScheduler.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/decorators/DecorationScheduler.java index 0c28413..7f4606a 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/decorators/DecorationScheduler.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/decorators/DecorationScheduler.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -20,7 +20,6 @@ import java.util.List; import java.util.Map; import java.util.Set; - import org.eclipse.core.runtime.Assert; import org.eclipse.core.runtime.IProgressMonitor; import org.eclipse.core.runtime.IStatus; @@ -191,10 +190,10 @@ * decoration and return null. * * @param element - * The element to be decorated. If it is null - * return null. + * The element to be decorated. If it is null return + * null. * @param adaptedElement - * It&apos;s adapted value. + * Its adapted value. * @param context * The deocration context * @return DecorationResult or null diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/AboutDialog.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/AboutDialog.java index 5fed814..fc1bc1c 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/AboutDialog.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/AboutDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -26,7 +26,6 @@ import org.eclipse.swt.accessibility.AccessibleAdapter; import org.eclipse.swt.accessibility.AccessibleEvent; import org.eclipse.swt.custom.BusyIndicator; -import org.eclipse.swt.custom.ScrolledComposite; import org.eclipse.swt.custom.StyledText; import org.eclipse.swt.events.ControlAdapter; import org.eclipse.swt.events.ControlEvent; @@ -38,6 +37,7 @@ import org.eclipse.swt.graphics.GC; import org.eclipse.swt.graphics.Image; import org.eclipse.swt.graphics.Point; +import org.eclipse.swt.graphics.Rectangle; import org.eclipse.swt.layout.GridData; import org.eclipse.swt.layout.GridLayout; import org.eclipse.swt.layout.RowLayout; @@ -65,6 +65,7 @@ */ public class AboutDialog extends TrayDialog { private final static int MAX_IMAGE_WIDTH_FOR_TEXT = 250; + private final static int TEXT_MARGIN = 5; private final static int DETAILS_ID = IDialogConstants.CLIENT_ID + 1; @@ -81,6 +82,8 @@ private StyledText text; private AboutTextManager aboutTextManager; + + private AboutItem item; /** * Create an instance of the AboutDialog for the given window. @@ -189,7 +192,7 @@ protected Control createDialogArea(Composite parent) { // brand the about box if there is product info Image aboutImage = null; - AboutItem item = null; + item = null; if (product != null) { ImageDescriptor imageDescriptor = ProductProperties .getAboutImage(product); @@ -277,91 +280,44 @@ topContainerHeightHint = Math.max(topContainerHeightHint, aboutImage.getBounds().height); } - GridData data = new GridData(); - data.horizontalAlignment = GridData.FILL; - data.verticalAlignment = GridData.FILL; - data.grabExcessHorizontalSpace = true; - data.grabExcessVerticalSpace = true; - data.heightHint = topContainerHeightHint; + GridData data = new GridData(SWT.FILL, SWT.FILL, true, true); topContainer.setLayoutData(data); + // used only to drive initial size so that there are no hints in the + // layout data + topContainer.setSize(432, topContainerHeightHint); if (item != null) { - final int minWidth = 432; - // This value should really be calculated - // from the computeSize(SWT.DEFAULT, - // SWT.DEFAULT) of all the - // children in infoArea excluding the - // wrapped styled text - // There is no easy way to do this. + text = new StyledText(topContainer, SWT.MULTI | SWT.WRAP | SWT.READ_ONLY); + configureText(topContainer); - // A scrolled composite is used instead of a vertical scroll bar on - // the styled text, because styled text does not automatically - // remove the vertical bar when not needed. - final ScrolledComposite scroller = new ScrolledComposite(topContainer, - SWT.V_SCROLL | SWT.H_SCROLL); - data = new GridData(GridData.FILL_BOTH); - data.widthHint = minWidth; - scroller.setLayoutData(data); + // computing trim for later + Rectangle rect = text.computeTrim(0, 0, 100, 100); + final int xTrim = rect.width - 100; + final int yTrim = rect.height - 100; - final Composite textComposite = new Composite(scroller, SWT.NONE); - textComposite.setBackground(background); - - layout = new GridLayout(); - textComposite.setLayout(layout); - - text = new StyledText(textComposite, SWT.MULTI | SWT.WRAP | SWT.READ_ONLY); - - // Don&apos;t set caret to &apos;null&apos; as this causes https://bugs.eclipse.org/293263. -// text.setCaret(null); - - text.setFont(parent.getFont()); - text.setText(item.getText()); - text.setCursor(null); - text.setBackground(background); - text.setForeground(foreground); - - aboutTextManager = new AboutTextManager(text); - aboutTextManager.setItem(item); - - createTextMenu(); - - GridData gd = new GridData(); - gd.verticalAlignment = GridData.BEGINNING; - gd.horizontalAlignment = GridData.FILL; - gd.grabExcessHorizontalSpace = true; - text.setLayoutData(gd); - - // Adjust the scrollbar increments - scroller.getHorizontalBar().setIncrement(20); - scroller.getVerticalBar().setIncrement(20); - - final boolean[] inresize = new boolean[1]; // flag to stop unneccesary - // recursion - textComposite.addControlListener(new ControlAdapter() { - public void controlResized(ControlEvent e) { - if (inresize[0]) - return; - inresize[0] = true; - // required because of bugzilla report 4579 - textComposite.layout(true); - // required because you want to change the height that the - // scrollbar will scroll over when the width changes. - int width = textComposite.getClientArea().width; - Point p = textComposite.computeSize(width, SWT.DEFAULT); - scroller.setMinSize(minWidth, p.y); - inresize[0] = false; - } - }); - - scroller.setExpandHorizontal(true); - scroller.setExpandVertical(true); - Point p = textComposite.computeSize(minWidth, SWT.DEFAULT); - textComposite.setSize(p.x, p.y); - scroller.setMinWidth(minWidth); - scroller.setMinHeight(p.y); - - scroller.setContent(textComposite); - } + topContainer.addControlListener(new ControlAdapter() { + public void controlResized(ControlEvent e) { + text.setSize(SWT.DEFAULT, SWT.DEFAULT); + topContainer.layout(true); + // do we need a scroll bar? + Point size = text.getSize(); + int availableHeight = size.y - yTrim; + int availableWidth = size.x - xTrim - (2 * TEXT_MARGIN); + Point newSize = text.computeSize(availableWidth, SWT.DEFAULT, true); + int style = text.getStyle(); + if (newSize.y &gt; availableHeight) { + if ((style &amp; SWT.V_SCROLL) == 0) { + recreateWrappedText(topContainer, true); + } + } else { + if ((style &amp; SWT.V_SCROLL) != 0) { + recreateWrappedText(topContainer, false); + } + } + topContainer.layout(true); + } + }); + } // horizontal bar Label bar = new Label(workArea, SWT.HORIZONTAL | SWT.SEPARATOR); @@ -392,6 +348,47 @@ return workArea; } + void recreateWrappedText(Composite parent, boolean withScrolling) { + int style = text.getStyle(); + if (withScrolling) { + style |= SWT.V_SCROLL; + } else { + style ^= SWT.V_SCROLL; + } + boolean hasFocus = text.isFocusControl(); + Point selection = text.getSelection(); + text.dispose(); + text = new StyledText(parent, style); + configureText(parent); + if (hasFocus) { + text.setFocus(); + } + text.setSelection(selection); + } + + void configureText(final Composite parent) { + // Don&apos;t set caret to &apos;null&apos; as this causes + // https://bugs.eclipse.org/293263. + // text.setCaret(null); + Color background = JFaceColors.getBannerBackground(parent.getDisplay()); + Color foreground = JFaceColors.getBannerForeground(parent.getDisplay()); + + text.setFont(parent.getFont()); + text.setText(item.getText()); + text.setCursor(null); + text.setBackground(background); + text.setForeground(foreground); + text.setMargins(TEXT_MARGIN, TEXT_MARGIN, TEXT_MARGIN, 0); + + aboutTextManager = new AboutTextManager(text); + aboutTextManager.setItem(item); + + createTextMenu(); + + GridData gd = new GridData(SWT.FILL, SWT.FILL, true, true); + text.setLayoutData(gd); + } + /** * Create the context menu for the text widget. * diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog.java index 58ac7e8..2ae24c7 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/CustomizePerspectiveDialog.java @@ -128,7 +128,6 @@ import org.eclipse.ui.internal.PluginActionCoolBarContributionItem; import org.eclipse.ui.internal.PluginActionSet; import org.eclipse.ui.internal.PluginActionSetBuilder; -import org.eclipse.ui.internal.ShowViewMenu; import org.eclipse.ui.internal.WorkbenchMessages; import org.eclipse.ui.internal.WorkbenchPage; import org.eclipse.ui.internal.WorkbenchPlugin; @@ -1023,7 +1022,7 @@ getParamID(item)); } else if (isShowView(item)) { parameters.put( - ShowViewMenu.VIEW_ID_PARM, + IWorkbenchCommandConstants.VIEWS_SHOW_VIEW_PARM_ID, getParamID(item)); } } @@ -2365,7 +2364,7 @@ if (isNewWizard(item)) { key = IWorkbenchCommandConstants.FILE_NEW_PARM_WIZARDID; } else if (isShowView(item)) { - key = ShowViewMenu.VIEW_ID_PARM; + key = IWorkbenchCommandConstants.VIEWS_SHOW_VIEW_PARM_ID; } else if (isShowPerspective(item)) { key = IWorkbenchCommandConstants.PERSPECTIVES_SHOW_PERSPECTIVE_PARM_ID; } @@ -3206,7 +3205,7 @@ perspective.turnOnActionSets((IActionSetDescriptor[]) toAdd .toArray(new IActionSetDescriptor[toAdd.size()])); perspective.turnOffActionSets((IActionSetDescriptor[]) toRemove - .toArray(new IActionSetDescriptor[toAdd.size()])); + .toArray(new IActionSetDescriptor[toRemove.size()])); // Menu and Toolbar Items requiresUpdate |= updateHiddenElements(menuItems, perspective.getHiddenMenuItems()); diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/EditorsPreferencePage.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/EditorsPreferencePage.java index 701eabc..f7a360e 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/EditorsPreferencePage.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/EditorsPreferencePage.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2008 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -47,7 +47,7 @@ */ public class EditorsPreferencePage extends PreferencePage implements IWorkbenchPreferencePage { - private static final int REUSE_INDENT = 10; + private static final int REUSE_INDENT = 20; protected Composite editorReuseGroup; @@ -280,14 +280,14 @@ editorReuseIndentGroup = new Composite(editorReuseGroup, SWT.LEFT); GridLayout indentLayout = new GridLayout(); indentLayout.marginLeft = REUSE_INDENT; - indentLayout.marginRight = 0; + indentLayout.marginWidth = 0; editorReuseIndentGroup.setLayout(indentLayout); editorReuseIndentGroup.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false)); editorReuseThresholdGroup = new Composite(editorReuseIndentGroup, SWT.LEFT); layout = new GridLayout(); - layout.marginWidth = 0; + layout.marginWidth = 0; editorReuseThresholdGroup.setLayout(layout); editorReuseThresholdGroup.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false)); diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/FileEditorsPreferencePage.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/FileEditorsPreferencePage.java index c3966a8..7efcee2 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/FileEditorsPreferencePage.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/FileEditorsPreferencePage.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -17,7 +17,6 @@ import java.util.Iterator; import java.util.List; import java.util.Map; - import org.eclipse.core.runtime.Assert; import org.eclipse.core.runtime.Platform; import org.eclipse.core.runtime.content.IContentType; @@ -211,7 +210,6 @@ addResourceTypeButton = new Button(groupComponent, SWT.PUSH); addResourceTypeButton.setText(WorkbenchMessages.FileEditorPreference_add); addResourceTypeButton.addListener(SWT.Selection, this); - addResourceTypeButton.setLayoutData(data); setButtonLayoutData(addResourceTypeButton); removeResourceTypeButton = new Button(groupComponent, SWT.PUSH); diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/FilteredPreferenceDialog.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/FilteredPreferenceDialog.java index 83f8abe..eda9a6d 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/FilteredPreferenceDialog.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/FilteredPreferenceDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2003, 2010 IBM Corporation and others. + * Copyright (c) 2003, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -353,7 +353,9 @@ * @param filteredIds */ public void showOnly(String[] filteredIds) { - filteredTree.addFilter(new PreferenceNodeFilter(filteredIds)); + if (!hasAtMostOnePage()) { + filteredTree.addFilter(new PreferenceNodeFilter(filteredIds)); + } } /** diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/NewWizardNewPage.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/NewWizardNewPage.java index f744929..841d3ce 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/NewWizardNewPage.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/NewWizardNewPage.java @@ -30,6 +30,7 @@ import org.eclipse.jface.viewers.StructuredSelection; import org.eclipse.jface.viewers.TreeViewer; import org.eclipse.jface.viewers.ViewerFilter; +import org.eclipse.jface.wizard.IWizard; import org.eclipse.jface.wizard.IWizardContainer; import org.eclipse.jface.wizard.IWizardContainer2; import org.eclipse.swt.SWT; @@ -50,6 +51,7 @@ import org.eclipse.ui.activities.WorkbenchActivityHelper; import org.eclipse.ui.dialogs.FilteredTree; import org.eclipse.ui.internal.WorkbenchMessages; +import org.eclipse.ui.internal.registry.WizardsRegistryReader; import org.eclipse.ui.model.AdaptableList; import org.eclipse.ui.model.WorkbenchLabelProvider; import org.eclipse.ui.wizards.IWizardCategory; @@ -132,6 +134,14 @@ } else { needShowAll = !allActivityEnabled(wizardCategories); } + + IWizard wizard = mainPage.getWizard(); + if (wizard instanceof NewWizard) { + if (WizardsRegistryReader.FULL_EXAMPLES_WIZARD_CATEGORY.equals(((NewWizard) wizard) + .getCategoryId())) { + filter.setFilterPrimaryWizards(true); + } + } } /** diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/StartupPreferencePage.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/StartupPreferencePage.java index c924a08..063c968 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/StartupPreferencePage.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/StartupPreferencePage.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -135,10 +135,9 @@ * @see PreferencePage */ protected void performDefaults() { - TableItem items[] = pluginsList.getItems(); - for (int i = 0; i &lt; items.length; i++) { - items[i].setChecked(true); - } + IPreferenceStore store = PrefUtil.getInternalPreferenceStore(); + store.setToDefault(IPreferenceConstants.PLUGINS_NOT_ACTIVATED_ON_STARTUP); + updateCheckState(); } /** diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WizardActivityFilter.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WizardActivityFilter.java index 7b30a81..2006f8a 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WizardActivityFilter.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WizardActivityFilter.java @@ -24,6 +24,11 @@ * @since 3.0 */ public class WizardActivityFilter extends ViewerFilter { + private boolean filterPrimaryWizards = false; + + public void setFilterPrimaryWizards(boolean filter) { + filterPrimaryWizards = filter; + } /* (non-Javadoc) * @see org.eclipse.jface.viewers.ViewerFilter#select(org.eclipse.jface.viewers.Viewer, java.lang.Object, java.lang.Object) @@ -35,7 +40,7 @@ return filter(viewer, element, children).length &gt; 0; } - if (parentElement.getClass().equals(AdaptableList.class)) { + if (parentElement.getClass().equals(AdaptableList.class) &amp;&amp; !filterPrimaryWizards) { return true; //top-level (&quot;primary&quot;) wizards should always be returned } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WorkbenchEditorsDialog.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WorkbenchEditorsDialog.java index bde239a..6baeb97 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WorkbenchEditorsDialog.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WorkbenchEditorsDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -451,7 +451,7 @@ SaveablesList saveablesList = (SaveablesList) window .getService(ISaveablesLifecycleListener.class); // prompt for save - if (saveablesList.preCloseParts(selectedEditors, true, window) != null) { + if (saveablesList.preCloseParts(selectedEditors, true, this, window) != null) { // close all editors for (int i = 0; i &lt; items.length; i++) { Adapter e = (Adapter) items[i].getData(); @@ -626,8 +626,6 @@ return; } - saveDialogSettings(); - Adapter selection = (Adapter) items[0].getData(); //It would be better to activate before closing the //dialog but it does not work when the editor is in other @@ -636,6 +634,11 @@ selection.activate(); } + public boolean close() { + saveDialogSettings(); + return super.close(); + } + /** * Saves the dialog settings. */ diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WorkbenchWizardElement.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WorkbenchWizardElement.java index c9d882e..e807241 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WorkbenchWizardElement.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WorkbenchWizardElement.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,6 +7,7 @@ * * Contributors: * IBM Corporation - initial API and implementation + * Fair Isaac Corporation - http://bugs.eclipse.org/326695 *******************************************************************************/ package org.eclipse.ui.internal.dialogs; @@ -28,6 +29,7 @@ import org.eclipse.ui.internal.registry.RegistryReader; import org.eclipse.ui.model.IWorkbenchAdapter; import org.eclipse.ui.model.IWorkbenchAdapter2; +import org.eclipse.ui.model.IWorkbenchAdapter3; import org.eclipse.ui.model.WorkbenchAdapter; import org.eclipse.ui.plugin.AbstractUIPlugin; import org.eclipse.ui.wizards.IWizardCategory; @@ -128,7 +130,8 @@ */ public Object getAdapter(Class adapter) { if (adapter == IWorkbenchAdapter.class - || adapter == IWorkbenchAdapter2.class) { + || adapter == IWorkbenchAdapter2.class + || adapter == IWorkbenchAdapter3.class) { return this; } else if (adapter == IPluginContribution.class) { diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WorkingSetSelectionDialog.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WorkingSetSelectionDialog.java index f2b55d2..684bee7 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WorkingSetSelectionDialog.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/dialogs/WorkingSetSelectionDialog.java @@ -357,11 +357,11 @@ IWorkingSetManager workingSetManager = workbenchWindow.getWorkbench() .getWorkingSetManager(); IWorkingSet aggregate = workingSetManager.getWorkingSet(setId); - if (aggregate == null) { - aggregate = workingSetManager.createAggregateWorkingSet(setId, - WorkbenchMessages.WorkbenchPage_workingSet_multi_label, typedResult); - workingSetManager.addWorkingSet(aggregate); - } + if (aggregate != null) + workingSetManager.removeWorkingSet(aggregate); + aggregate = workingSetManager.createAggregateWorkingSet(setId, + WorkbenchMessages.WorkbenchPage_workingSet_multi_label, typedResult); + workingSetManager.addWorkingSet(aggregate); setSelection(new IWorkingSet[] { aggregate }); setResult(Collections.singletonList(aggregate)); } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/AbstractSaveHandler.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/AbstractSaveHandler.java new file mode 100644 index 0000000..61d3e50 --- /dev/null +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/AbstractSaveHandler.java @@ -0,0 +1,86 @@ +/******************************************************************************* + * Copyright (c) 2010 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + ******************************************************************************/ + +package org.eclipse.ui.internal.handlers; + +import org.eclipse.core.commands.ExecutionEvent; +import org.eclipse.core.expressions.EvaluationResult; +import org.eclipse.core.expressions.Expression; +import org.eclipse.core.expressions.ExpressionInfo; +import org.eclipse.core.expressions.IEvaluationContext; +import org.eclipse.ui.ISaveablePart; +import org.eclipse.ui.ISources; +import org.eclipse.ui.IWorkbenchPart; +import org.eclipse.ui.handlers.HandlerUtil; +import org.eclipse.ui.internal.AbstractEvaluationHandler; +import org.eclipse.ui.internal.InternalHandlerUtil; +import org.eclipse.ui.internal.util.Util; + +/** + * @since 3.7 + * + */ +public abstract class AbstractSaveHandler extends AbstractEvaluationHandler { + + protected static DirtyStateTracker dirtyStateTracker; + private Expression enabledWhen; + + public AbstractSaveHandler() { + if (dirtyStateTracker == null) + dirtyStateTracker = new DirtyStateTracker(); + } + + protected Expression getEnabledWhenExpression() { + if (enabledWhen == null) { + enabledWhen = new Expression() { + public EvaluationResult evaluate(IEvaluationContext context) { + return AbstractSaveHandler.this.evaluate(context); + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.core.expressions.Expression#collectExpressionInfo(org.eclipse.core.expressions.ExpressionInfo) + */ + public void collectExpressionInfo(ExpressionInfo info) { + info.addVariableNameAccess(ISources.ACTIVE_PART_NAME); + } + }; + } + return enabledWhen; + } + + protected abstract EvaluationResult evaluate(IEvaluationContext context); + + protected ISaveablePart getSaveablePart(IEvaluationContext context) { + IWorkbenchPart activePart = InternalHandlerUtil.getActivePart(context); + + if (activePart instanceof ISaveablePart) + return (ISaveablePart) activePart; + + return InternalHandlerUtil.getActiveEditor(context); + } + + protected ISaveablePart getSaveablePart(ExecutionEvent event) { + + IWorkbenchPart activePart = HandlerUtil.getActivePart(event); + if (activePart instanceof ISaveablePart) { + return (ISaveablePart) activePart; + } + + ISaveablePart part = (ISaveablePart) Util.getAdapter(activePart, ISaveablePart.class); + if (part != null) + return part; + + return HandlerUtil.getActiveEditor(event); + } + +} \ No newline at end of file diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/CloseAllSavedHandler.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/CloseAllSavedHandler.java new file mode 100644 index 0000000..f7637bd --- /dev/null +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/CloseAllSavedHandler.java @@ -0,0 +1,136 @@ +/******************************************************************************* + * Copyright (c) 2010 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + *******************************************************************************/ +package org.eclipse.ui.internal.handlers; + +import org.eclipse.core.commands.ExecutionEvent; +import org.eclipse.core.expressions.EvaluationResult; +import org.eclipse.core.expressions.Expression; +import org.eclipse.core.expressions.ExpressionInfo; +import org.eclipse.core.expressions.IEvaluationContext; +import org.eclipse.ui.IEditorReference; +import org.eclipse.ui.ISources; +import org.eclipse.ui.IWorkbenchPage; +import org.eclipse.ui.IWorkbenchWindow; +import org.eclipse.ui.internal.AbstractEvaluationHandler; +import org.eclipse.ui.internal.InternalHandlerUtil; +import org.eclipse.ui.internal.WorkbenchPage; +import org.eclipse.ui.internal.util.Util; + + +/** + * + * @author Prakash G.R. + * @since 3.7 + * + */ +public class CloseAllSavedHandler extends AbstractEvaluationHandler { + + private Expression enabledWhen; + private IWorkbenchPage page; + + /* + * (non-Javadoc) + * + * @see + * org.eclipse.ui.internal.AbstractEvaluationHandler#getEnabledWhenExpression + * () + */ + protected Expression getEnabledWhenExpression() { + if (enabledWhen == null) { + enabledWhen = new Expression() { + public EvaluationResult evaluate(IEvaluationContext context) { + return CloseAllSavedHandler.this.evaluate(context); + } + + /* + * (non-Javadoc) + * + * @see + * org.eclipse.core.expressions.Expression#collectExpressionInfo + * (org.eclipse.core.expressions.ExpressionInfo) + */ + public void collectExpressionInfo(ExpressionInfo info) { + // We use active part, so that we get evaluated for the part + // events + info.addVariableNameAccess(ISources.ACTIVE_PART_NAME); + } + }; + } + return enabledWhen; + } + + private EvaluationResult evaluate(IEvaluationContext context) { + + IWorkbenchWindow window = InternalHandlerUtil.getActiveWorkbenchWindow(context); + + setWindow(window); + + return window != null &amp;&amp; window.getActivePage() != null ? EvaluationResult.TRUE + : EvaluationResult.FALSE; + } + + /** + * @param window + */ + private void setWindow(IWorkbenchWindow window) { + + if (Util.equals(page, window.getActivePage())) + return; + + page = window.getActivePage(); + + update(); + } + + /** + * @return Returns the page. + */ + public IWorkbenchPage getActivePage() { + return page; + } + + /* + * (non-Javadoc) + * + * @see + * org.eclipse.core.commands.IHandler#execute(org.eclipse.core.commands. + * ExecutionEvent) + */ + public Object execute(ExecutionEvent event) { + IWorkbenchPage page = getActivePage(); + if (page != null) { + ((WorkbenchPage) page).closeAllSavedEditors(); + } + return null; + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.ui.internal.handlers.AbstractPageEventHandler#update() + */ + protected void update() { + IWorkbenchPage page = getActivePage(); + if (page == null) { + setEnabled(false); + return; + } + IEditorReference editors[] = page.getEditorReferences(); + for (int i = 0; i &lt; editors.length; i++) { + if (!editors[i].isDirty()) { + setEnabled(true); + return; + } + } + setEnabled(false); + } + +} diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/ContextMenuHandler.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/ContextMenuHandler.java new file mode 100644 index 0000000..86b5756 --- /dev/null +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/ContextMenuHandler.java @@ -0,0 +1,63 @@ +/******************************************************************************* + * Copyright (c) 2011 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + *******************************************************************************/ +package org.eclipse.ui.internal.handlers; + +import org.eclipse.core.commands.AbstractHandler; +import org.eclipse.core.commands.ExecutionEvent; +import org.eclipse.core.commands.ExecutionException; +import org.eclipse.jface.util.Geometry; +import org.eclipse.swt.SWT; +import org.eclipse.swt.graphics.Point; +import org.eclipse.swt.widgets.Control; +import org.eclipse.swt.widgets.Display; +import org.eclipse.swt.widgets.Event; +import org.eclipse.swt.widgets.Menu; +import org.eclipse.swt.widgets.Shell; +import org.eclipse.ui.handlers.HandlerUtil; + +public class ContextMenuHandler extends AbstractHandler { + public Object execute(ExecutionEvent event) throws ExecutionException { + Shell shell = HandlerUtil.getActiveShell(event); + Display display = shell == null ? Display.getCurrent() : shell.getDisplay(); + Control focusControl = display.getFocusControl(); + if (focusControl != null) { + Menu menu = focusControl.getMenu(); + if (menu != null) { + menu.setVisible(true); + } else { + Point size = focusControl.getSize(); + Point center = focusControl.toDisplay(Geometry.divide(size, 2)); + + Point location = focusControl.toDisplay(0, 0); + + Event mouseEvent = new Event(); + mouseEvent.widget = focusControl; + mouseEvent.x = center.x; + mouseEvent.y = center.y; + + Point cursorLoc = display.getCursorLocation(); + if (cursorLoc.x &lt; location.x || location.x + size.x &lt;= cursorLoc.x + || cursorLoc.y &lt; location.y || location.y + size.y &lt;= cursorLoc.y) { + mouseEvent.type = SWT.MouseMove; + display.post(mouseEvent); + } + + mouseEvent.button = 3; + mouseEvent.type = SWT.MouseDown; + display.post(mouseEvent); + + mouseEvent.type = SWT.MouseUp; + display.post(mouseEvent); + } + } + return null; + } +} diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/DirtyStateTracker.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/DirtyStateTracker.java new file mode 100644 index 0000000..6d68da6 --- /dev/null +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/DirtyStateTracker.java @@ -0,0 +1,166 @@ +/******************************************************************************* + * Copyright (c) 2010 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + ******************************************************************************/ + +package org.eclipse.ui.internal.handlers; + +import org.eclipse.ui.IPartListener; +import org.eclipse.ui.IPropertyListener; +import org.eclipse.ui.ISaveablePart; +import org.eclipse.ui.ISources; +import org.eclipse.ui.IWindowListener; +import org.eclipse.ui.IWorkbench; +import org.eclipse.ui.IWorkbenchPart; +import org.eclipse.ui.IWorkbenchWindow; +import org.eclipse.ui.internal.Workbench; +import org.eclipse.ui.services.IEvaluationService; + +/** + * @since 3.7 + * + */ +public class DirtyStateTracker implements IPartListener, IWindowListener, + IPropertyListener { + + private final IWorkbench workbench; + + public DirtyStateTracker() { + + workbench = Workbench.getInstance(); + workbench.addWindowListener(this); + IWorkbenchWindow window = workbench.getActiveWorkbenchWindow(); + register(window); + } + + public void update() { + IEvaluationService service = (IEvaluationService) workbench + .getService(IEvaluationService.class); + service.requestEvaluation(ISources.ACTIVE_PART_NAME); + } + + /** + * @param window + */ + private void register(IWorkbenchWindow window) { + if (window == null) + return; + window.getPartService().addPartListener(this); + } + + /* + * (non-Javadoc) + * + * @see + * org.eclipse.ui.IPartListener#partActivated(org.eclipse.ui.IWorkbenchPart) + */ + public void partActivated(IWorkbenchPart part) { + if (part instanceof ISaveablePart) { + part.addPropertyListener(this); + } + } + + /* + * (non-Javadoc) + * + * @see + * org.eclipse.ui.IPartListener#partBroughtToTop(org.eclipse.ui.IWorkbenchPart + * ) + */ + public void partBroughtToTop(IWorkbenchPart part) { + } + + /* + * (non-Javadoc) + * + * @see + * org.eclipse.ui.IPartListener#partClosed(org.eclipse.ui.IWorkbenchPart) + */ + public void partClosed(IWorkbenchPart part) { + if (part instanceof ISaveablePart) { + part.removePropertyListener(this); + } + } + + /* + * (non-Javadoc) + * + * @see + * org.eclipse.ui.IPartListener#partDeactivated(org.eclipse.ui.IWorkbenchPart + * ) + */ + public void partDeactivated(IWorkbenchPart part) { + } + + /* + * (non-Javadoc) + * + * @see + * org.eclipse.ui.IPartListener#partOpened(org.eclipse.ui.IWorkbenchPart) + */ + public void partOpened(IWorkbenchPart part) { + if (part instanceof ISaveablePart) { + part.addPropertyListener(this); + } + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.ui.IWindowListener#windowActivated(org.eclipse.ui. + * IWorkbenchWindow) + */ + public void windowActivated(IWorkbenchWindow window) { + register(window); + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.ui.IWindowListener#windowDeactivated(org.eclipse.ui. + * IWorkbenchWindow) + */ + public void windowDeactivated(IWorkbenchWindow window) { + } + + /* + * (non-Javadoc) + * + * @see + * org.eclipse.ui.IWindowListener#windowClosed(org.eclipse.ui.IWorkbenchWindow + * ) + */ + public void windowClosed(IWorkbenchWindow window) { + window.getPartService().removePartListener(this); + } + + /* + * (non-Javadoc) + * + * @see + * org.eclipse.ui.IWindowListener#windowOpened(org.eclipse.ui.IWorkbenchWindow + * ) + */ + public void windowOpened(IWorkbenchWindow window) { + register(window); + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.ui.IPropertyListener#propertyChanged(java.lang.Object, + * int) + */ + public void propertyChanged(Object source, int propID) { + if (source instanceof ISaveablePart &amp;&amp; propID == ISaveablePart.PROP_DIRTY) { + update(); + } + } + +} diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/NestableHandlerService.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/NestableHandlerService.java index 4576a75..7558f52 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/NestableHandlerService.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/NestableHandlerService.java @@ -11,8 +11,6 @@ package org.eclipse.ui.internal.handlers; -import java.util.Iterator; - import org.eclipse.core.expressions.Expression; import org.eclipse.ui.handlers.IHandlerActivation; import org.eclipse.ui.handlers.IHandlerService; @@ -61,16 +59,17 @@ return; } - final Iterator localActivationItr = localActivationsToParentActivations - .keySet().iterator(); - while (localActivationItr.hasNext()) { - final Object object = localActivationItr.next(); + Object[] localActivations = localActivationsToParentActivations.keySet().toArray(); + for (int i = 0; i &lt; localActivations.length; i++) { + final Object object = localActivations[i]; if (object instanceof IHandlerActivation) { final IHandlerActivation localActivation = (IHandlerActivation) object; - super.doActivation(localActivation); + // Ignore activations that have been cleared since the copy + // was made. + if (localActivationsToParentActivations.containsKey(localActivation)) + super.doActivation(localActivation); } } - active = true; } @@ -91,11 +90,11 @@ deactivateHandlers(parentActivations); parentActivations.clear(); - final Iterator localActivationItr = localActivationsToParentActivations - .keySet().iterator(); - while (localActivationItr.hasNext()) { - final Object object = localActivationItr.next(); - localActivationsToParentActivations.put(object, null); + Object[] localActivations = localActivationsToParentActivations.keySet().toArray(); + for (int i = 0; i &lt; localActivations.length; i++) { + final Object object = localActivations[i]; + if (localActivationsToParentActivations.containsKey(object)) + localActivationsToParentActivations.put(object, null); } active = false; diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/ResetPerspectiveHandler.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/ResetPerspectiveHandler.java index 4891989..9b5a063 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/ResetPerspectiveHandler.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/ResetPerspectiveHandler.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2010 IBM Corporation and others. + * Copyright (c) 2010, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -13,14 +13,19 @@ import org.eclipse.core.commands.AbstractHandler; import org.eclipse.core.commands.ExecutionEvent; +import org.eclipse.jface.dialogs.IDialogConstants; import org.eclipse.jface.dialogs.MessageDialog; +import org.eclipse.jface.dialogs.MessageDialogWithToggle; import org.eclipse.osgi.util.NLS; import org.eclipse.swt.SWT; import org.eclipse.ui.IPerspectiveDescriptor; import org.eclipse.ui.IWorkbenchWindow; +import org.eclipse.ui.PlatformUI; import org.eclipse.ui.handlers.HandlerUtil; import org.eclipse.ui.internal.WorkbenchMessages; import org.eclipse.ui.internal.WorkbenchPage; +import org.eclipse.ui.internal.registry.PerspectiveDescriptor; +import org.eclipse.ui.internal.registry.PerspectiveRegistry; /** * @@ -46,13 +51,38 @@ if (page != null) { IPerspectiveDescriptor descriptor = page.getPerspective(); if (descriptor != null) { - String message = NLS.bind(WorkbenchMessages.ResetPerspective_message, - descriptor.getLabel()); - boolean result = MessageDialog.open(MessageDialog.QUESTION, - activeWorkbenchWindow.getShell(), - WorkbenchMessages.ResetPerspective_title, message, SWT.SHEET); - if (result) { - page.resetPerspective(); + boolean offerRevertToBase = false; + if (descriptor instanceof PerspectiveDescriptor) { + PerspectiveDescriptor desc = (PerspectiveDescriptor) descriptor; + offerRevertToBase = desc.isPredefined() &amp;&amp; desc.hasCustomDefinition(); + } + + if (offerRevertToBase) { + String message = NLS.bind(WorkbenchMessages.RevertPerspective_message, + descriptor.getLabel()); + boolean toggleState = false; + MessageDialogWithToggle dialog = MessageDialogWithToggle.open( + MessageDialog.QUESTION, activeWorkbenchWindow.getShell(), + WorkbenchMessages.RevertPerspective_title, message, + WorkbenchMessages.RevertPerspective_option, + toggleState, null, null, SWT.SHEET); + if (dialog.getReturnCode() == IDialogConstants.YES_ID) { + if (dialog.getToggleState()) { + PerspectiveRegistry reg = (PerspectiveRegistry) PlatformUI + .getWorkbench().getPerspectiveRegistry(); + reg.revertPerspective(descriptor); + } + page.resetPerspective(); + } + } else { + String message = NLS.bind(WorkbenchMessages.ResetPerspective_message, + descriptor.getLabel()); + boolean result = MessageDialog.open(MessageDialog.QUESTION, + activeWorkbenchWindow.getShell(), + WorkbenchMessages.ResetPerspective_title, message, SWT.SHEET); + if (result) { + page.resetPerspective(); + } } } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/SaveAllHandler.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/SaveAllHandler.java new file mode 100644 index 0000000..06deb1d --- /dev/null +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/SaveAllHandler.java @@ -0,0 +1,88 @@ +/******************************************************************************* + * Copyright (c) 2010 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + ******************************************************************************/ + +package org.eclipse.ui.internal.handlers; + +import org.eclipse.core.commands.ExecutionEvent; +import org.eclipse.core.commands.ExecutionException; +import org.eclipse.core.expressions.EvaluationResult; +import org.eclipse.core.expressions.IEvaluationContext; +import org.eclipse.ui.ISaveablesLifecycleListener; +import org.eclipse.ui.ISaveablesSource; +import org.eclipse.ui.IWorkbenchPage; +import org.eclipse.ui.IWorkbenchWindow; +import org.eclipse.ui.Saveable; +import org.eclipse.ui.handlers.HandlerUtil; +import org.eclipse.ui.internal.InternalHandlerUtil; +import org.eclipse.ui.internal.SaveablesList; +import org.eclipse.ui.internal.WorkbenchPage; + +/** + * Saves all active editors + * + * Replacement for SaveAllAction + * + * + * @since 3.7 + * + */ +public class SaveAllHandler extends AbstractSaveHandler { + + public SaveAllHandler() { + registerEnablement(); + } + + public Object execute(ExecutionEvent event) throws ExecutionException { + IWorkbenchWindow window = HandlerUtil + .getActiveWorkbenchWindowChecked(event); + IWorkbenchPage page = window.getActivePage(); + if (page != null) { + ((WorkbenchPage) page).saveAllEditors(false, true); + } + + return null; + } + + protected EvaluationResult evaluate(IEvaluationContext context) { + + IWorkbenchWindow window = InternalHandlerUtil.getActiveWorkbenchWindow(context); + // no window? not active + if (window == null) + return EvaluationResult.FALSE; + WorkbenchPage page = (WorkbenchPage) window.getActivePage(); + + // no page? not active + if (page == null) + return EvaluationResult.FALSE; + + // if at least one dirty part, then we are active + if (page.getDirtyParts().length &gt; 0) + return EvaluationResult.TRUE; + + // Since Save All also saves saveables from non-part sources, + // look if any such saveables exist and are dirty. + SaveablesList saveablesList = (SaveablesList) window.getWorkbench().getService( + ISaveablesLifecycleListener.class); + ISaveablesSource[] nonPartSources = saveablesList.getNonPartSources(); + for (int i = 0; i &lt; nonPartSources.length; i++) { + Saveable[] saveables = nonPartSources[i].getSaveables(); + for (int j = 0; j &lt; saveables.length; j++) { + if (saveables[j].isDirty()) { + return EvaluationResult.TRUE; + } + } + } + + // if nothing, then we are not active + return EvaluationResult.FALSE; + } + +} diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/SaveAsHandler.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/SaveAsHandler.java new file mode 100644 index 0000000..38cdff2 --- /dev/null +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/SaveAsHandler.java @@ -0,0 +1,67 @@ +/******************************************************************************* + * Copyright (c) 2010 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + ******************************************************************************/ + +package org.eclipse.ui.internal.handlers; + +import org.eclipse.core.commands.ExecutionEvent; +import org.eclipse.core.expressions.EvaluationResult; +import org.eclipse.core.expressions.IEvaluationContext; +import org.eclipse.ui.ISaveablePart; +import org.eclipse.ui.IWorkbenchWindow; +import org.eclipse.ui.internal.InternalHandlerUtil; +import org.eclipse.ui.internal.WorkbenchPage; + +/** + * + * Replacement for SaveAsAction + * + * + * @since 3.7 + * + */ +public class SaveAsHandler extends AbstractSaveHandler { + + public SaveAsHandler() { + registerEnablement(); + } + + public Object execute(ExecutionEvent event) { + + ISaveablePart saveablePart = getSaveablePart(event); + + if (saveablePart != null) + saveablePart.doSaveAs(); + + return null; + } + + protected EvaluationResult evaluate(IEvaluationContext context) { + + IWorkbenchWindow window = InternalHandlerUtil.getActiveWorkbenchWindow(context); + // no window? not active + if (window == null) + return EvaluationResult.FALSE; + WorkbenchPage page = (WorkbenchPage) window.getActivePage(); + + // no page? not active + if (page == null) + return EvaluationResult.FALSE; + + // get saveable part + ISaveablePart saveablePart = getSaveablePart(context); + if (saveablePart == null) + return EvaluationResult.FALSE; + + // if its availble, return whatever it says + return saveablePart.isSaveAsAllowed() ? EvaluationResult.TRUE : EvaluationResult.FALSE; + } + +} diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/SaveHandler.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/SaveHandler.java new file mode 100644 index 0000000..0214be7 --- /dev/null +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/handlers/SaveHandler.java @@ -0,0 +1,96 @@ +/******************************************************************************* + * Copyright (c) 2010 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + ******************************************************************************/ + +package org.eclipse.ui.internal.handlers; + +import org.eclipse.core.commands.ExecutionEvent; +import org.eclipse.core.expressions.EvaluationResult; +import org.eclipse.core.expressions.IEvaluationContext; +import org.eclipse.ui.IEditorPart; +import org.eclipse.ui.ISaveablePart; +import org.eclipse.ui.ISaveablesSource; +import org.eclipse.ui.IWorkbenchPage; +import org.eclipse.ui.IWorkbenchPart; +import org.eclipse.ui.IWorkbenchWindow; +import org.eclipse.ui.handlers.HandlerUtil; +import org.eclipse.ui.internal.InternalHandlerUtil; +import org.eclipse.ui.internal.SaveableHelper; +import org.eclipse.ui.internal.WorkbenchPage; + +/** + * + * Replacement for SaveAction + * + * + * @since 3.7 + * + */ +public class SaveHandler extends AbstractSaveHandler { + + public SaveHandler() { + registerEnablement(); + } + + public Object execute(ExecutionEvent event) { + + ISaveablePart saveablePart = getSaveablePart(event); + + // no saveable + if (saveablePart == null) + return null; + + // if editor + if (saveablePart instanceof IEditorPart) { + IEditorPart editorPart = (IEditorPart) saveablePart; + IWorkbenchPage page = editorPart.getSite().getPage(); + page.saveEditor(editorPart, false); + return null; + } + + // if view + IWorkbenchPart activePart = HandlerUtil.getActivePart(event); + WorkbenchPage page = (WorkbenchPage) activePart.getSite().getPage(); + page.savePart(saveablePart, activePart, false); + + return null; + + } + + protected EvaluationResult evaluate(IEvaluationContext context) { + + IWorkbenchWindow window = InternalHandlerUtil.getActiveWorkbenchWindow(context); + // no window? not active + if (window == null) + return EvaluationResult.FALSE; + WorkbenchPage page = (WorkbenchPage) window.getActivePage(); + + // no page? not active + if (page == null) + return EvaluationResult.FALSE; + + // get saveable part + ISaveablePart saveablePart = getSaveablePart(context); + if (saveablePart == null) + return EvaluationResult.FALSE; + + if (saveablePart instanceof ISaveablesSource) { + ISaveablesSource modelSource = (ISaveablesSource) saveablePart; + if (SaveableHelper.needsSave(modelSource)) + return EvaluationResult.TRUE; + return EvaluationResult.FALSE; + } + + if (saveablePart != null &amp;&amp; saveablePart.isDirty()) + return EvaluationResult.TRUE; + + return EvaluationResult.FALSE; + } +} diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/BindingPersistence.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/BindingPersistence.java index a8cf0db..d499a23 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/BindingPersistence.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/BindingPersistence.java @@ -56,7 +56,6 @@ import org.eclipse.ui.WorkbenchException; import org.eclipse.ui.XMLMemento; import org.eclipse.ui.commands.ICommandService; -import org.eclipse.ui.internal.ShowViewMenu; import org.eclipse.ui.internal.WorkbenchPlugin; import org.eclipse.ui.internal.misc.Policy; import org.eclipse.ui.internal.registry.IWorkbenchRegistryConstants; @@ -579,7 +578,7 @@ parameterizedCommand = null; } else if (viewParameter != null) { HashMap parms = new HashMap(); - parms.put(ShowViewMenu.VIEW_ID_PARM, viewParameter); + parms.put(IWorkbenchCommandConstants.VIEWS_SHOW_VIEW_PARM_ID, viewParameter); parameterizedCommand = ParameterizedCommand.generateCommand(command, parms); } else { parameterizedCommand = readParameters(memento, @@ -942,7 +941,7 @@ parameterizedCommand = null; } else if (viewParameter != null) { HashMap parms = new HashMap(); - parms.put(ShowViewMenu.VIEW_ID_PARM, viewParameter); + parms.put(IWorkbenchCommandConstants.VIEWS_SHOW_VIEW_PARM_ID, viewParameter); parameterizedCommand = ParameterizedCommand.generateCommand(command, parms); } else { parameterizedCommand = readParameters(configurationElement, diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/BindingService.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/BindingService.java index e3a5561..ca97c8d 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/BindingService.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/BindingService.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2009 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -13,7 +13,9 @@ import java.io.IOException; import java.util.Collection; import java.util.Map; - +import org.eclipse.core.commands.ExecutionException; +import org.eclipse.core.commands.NotEnabledException; +import org.eclipse.core.commands.NotHandledException; import org.eclipse.core.commands.ParameterizedCommand; import org.eclipse.core.commands.common.NotDefinedException; import org.eclipse.jface.bindings.Binding; @@ -25,11 +27,17 @@ import org.eclipse.jface.bindings.keys.formatting.KeyFormatterFactory; import org.eclipse.swt.SWT; import org.eclipse.swt.widgets.Display; +import org.eclipse.swt.widgets.Event; import org.eclipse.swt.widgets.Listener; import org.eclipse.ui.IWorkbench; +import org.eclipse.ui.IWorkbenchCommandConstants; import org.eclipse.ui.commands.ICommandService; +import org.eclipse.ui.handlers.IHandlerService; import org.eclipse.ui.internal.WorkbenchPlugin; +import org.eclipse.ui.internal.keys.WorkbenchKeyboard.KeyDownFilter; +import org.eclipse.ui.internal.misc.StatusUtil; import org.eclipse.ui.keys.IBindingService; +import org.eclipse.ui.statushandlers.StatusManager; /** * @@ -62,6 +70,8 @@ private IWorkbench workbench; + private Listener backForwardListener; + /** * Constructs a new instance of BindingService using a JFace * binding manager. @@ -93,13 +103,50 @@ // Hook up the key binding support. keyboard = new WorkbenchKeyboard(workbench); final Display display = workbench.getDisplay(); - final Listener listener = keyboard.getKeyDownFilter(); + final KeyDownFilter listener = keyboard.getKeyDownFilter(); + listener.setEnabled(false); display.addFilter(SWT.KeyDown, listener); display.addFilter(SWT.Traverse, listener); // Initialize the key formatter. KeyFormatterFactory.setDefault(SWTKeySupport .getKeyFormatterForPlatform()); + + // Hook up the back/forward mouse buttons / special keys. + backForwardListener = new Listener() { + public void handleEvent(Event event) { + String commandId; + switch (event.button) { + case 4: + case 8: + commandId = IWorkbenchCommandConstants.NAVIGATE_BACKWARD_HISTORY; + break; + case 5: + case 9: + commandId = IWorkbenchCommandConstants.NAVIGATE_FORWARD_HISTORY; + break; + default: + return; + } + + final IHandlerService handlerService = (IHandlerService) workbench + .getService(IHandlerService.class); + + try { + handlerService.executeCommand(commandId, event); + event.doit = false; + } catch (NotDefinedException e) { + // regular condition; do nothing + } catch (NotEnabledException e) { + // regular condition; do nothing + } catch (NotHandledException e) { + // regular condition; do nothing + } catch (ExecutionException ex) { + StatusUtil.handleStatus(ex, StatusManager.SHOW | StatusManager.LOG); + } + } + }; + display.addFilter(SWT.MouseDown, backForwardListener); } /** @@ -126,10 +173,12 @@ if (display != null) { display.removeFilter(SWT.KeyDown, listener); display.removeFilter(SWT.Traverse, listener); + display.removeFilter(SWT.MouseDown, backForwardListener); } workbench = null; keyboard = null; bindingPersistence.dispose(); + backForwardListener = null; } public final TriggerSequence[] getActiveBindingsFor( diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/KeysPreferenceFiltersDialog.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/KeysPreferenceFiltersDialog.java index 47e151d..df9765e 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/KeysPreferenceFiltersDialog.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/KeysPreferenceFiltersDialog.java @@ -18,6 +18,7 @@ import org.eclipse.swt.widgets.Composite; import org.eclipse.swt.widgets.Control; import org.eclipse.swt.widgets.Shell; +import org.eclipse.ui.internal.Workbench; import org.eclipse.ui.preferences.ViewSettingsDialog; /** @@ -32,10 +33,12 @@ private Button actionSetFilterCheckBox; private Button internalFilterCheckBox; private Button uncategorizedFilterCheckBox; + private Button workbenchMenuFilterCheckBox; private boolean filterActionSet; private boolean filterInternal; private boolean filterUncategorized; + private boolean filterWorkbenchMenu; private boolean filterShowUnboundCommands; void setFilterActionSet(boolean b) { @@ -46,6 +49,10 @@ filterInternal = b; } + void setFilterWorkbenchMenu(boolean b) { + filterWorkbenchMenu = b; + } + void setFilterUncategorized(boolean b) { filterUncategorized = b; } @@ -60,6 +67,10 @@ boolean getFilterUncategorized() { return filterUncategorized; + } + + boolean getFilterWorkbenchMenu() { + return filterWorkbenchMenu; } /** @@ -78,6 +89,7 @@ actionSetFilterCheckBox.setSelection(true); internalFilterCheckBox.setSelection(true); uncategorizedFilterCheckBox.setSelection(true); + workbenchMenuFilterCheckBox.setSelection(!Workbench.getInstance().hasAppMenu()); super.performDefaults(); } @@ -101,9 +113,15 @@ uncategorizedFilterCheckBox .setText(NewKeysPreferenceMessages.UncategorizedFilterCheckBox_Text); + workbenchMenuFilterCheckBox = new Button(topComposite, SWT.CHECK); + workbenchMenuFilterCheckBox + .setText(NewKeysPreferenceMessages.WorkbenchMenuFilterCheckBox_Text); + actionSetFilterCheckBox.setSelection(filterActionSet); internalFilterCheckBox.setSelection(filterInternal); uncategorizedFilterCheckBox.setSelection(filterUncategorized); + workbenchMenuFilterCheckBox.setSelection(filterWorkbenchMenu); + applyDialogFont(topComposite); return topComposite; @@ -118,6 +136,7 @@ filterActionSet = actionSetFilterCheckBox.getSelection(); filterInternal = internalFilterCheckBox.getSelection(); filterUncategorized = uncategorizedFilterCheckBox.getSelection(); + filterWorkbenchMenu = workbenchMenuFilterCheckBox.getSelection(); super.okPressed(); } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/NewKeysPreferenceMessages.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/NewKeysPreferenceMessages.java index cdda389..29dd7d1 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/NewKeysPreferenceMessages.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/NewKeysPreferenceMessages.java @@ -62,6 +62,7 @@ public static String ActionSetFilterCheckBox_Text; public static String InternalFilterCheckBox_Text; public static String UncategorizedFilterCheckBox_Text; + public static String WorkbenchMenuFilterCheckBox_Text; static { // load message values from bundle file diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/NewKeysPreferencePage.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/NewKeysPreferencePage.java index 562d660..2b1a389 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/NewKeysPreferencePage.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/NewKeysPreferencePage.java @@ -92,6 +92,7 @@ import org.eclipse.ui.commands.ICommandService; import org.eclipse.ui.dialogs.FilteredTree; import org.eclipse.ui.internal.IWorkbenchHelpContextIds; +import org.eclipse.ui.internal.Workbench; import org.eclipse.ui.internal.WorkbenchPlugin; import org.eclipse.ui.internal.keys.model.BindingElement; import org.eclipse.ui.internal.keys.model.BindingModel; @@ -167,6 +168,8 @@ private boolean fFilterActionSetContexts = true; private boolean fFilterInternalContexts = true; + + private boolean fFilterWorkbenchMenuContext = !Workbench.getInstance().hasAppMenu(); private KeyController keyController; @@ -569,17 +572,20 @@ getShell()); dialog.setFilterActionSet(fFilterActionSetContexts); dialog.setFilterInternal(fFilterInternalContexts); + dialog.setFilterWorkbenchMenu(fFilterWorkbenchMenuContext); + dialog.setFilterUncategorized(fFilteredTree .isFilteringCategories()); if (dialog.open() == Window.OK) { fFilterActionSetContexts = dialog.getFilterActionSet(); fFilterInternalContexts = dialog.getFilterInternal(); + fFilterWorkbenchMenuContext = dialog.getFilterWorkbenchMenu(); fFilteredTree.filterCategories(dialog .getFilterUncategorized()); // Apply context filters - keyController.filterContexts(fFilterActionSetContexts, - fFilterInternalContexts); + keyController.filterContexts(fFilterActionSetContexts, fFilterInternalContexts, + fFilterWorkbenchMenuContext); ISelection currentContextSelection = fWhenCombo .getSelection(); @@ -1166,8 +1172,8 @@ .getSchemeModel().getSelectedElement())); // Apply context filters - keyController.filterContexts(fFilterActionSetContexts, - fFilterInternalContexts); + keyController.filterContexts(fFilterActionSetContexts, fFilterInternalContexts, + fFilterWorkbenchMenuContext); fWhenCombo.setInput(keyController.getContextModel()); fFilteredTree.filterCategories(fPatternFilter.isFilteringCategories()); diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/NewKeysPreferencePage.properties b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/NewKeysPreferencePage.properties index 3e53da3..4884d9e 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/NewKeysPreferencePage.properties +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/NewKeysPreferencePage.properties @@ -1,5 +1,5 @@ ############################################################################### -# Copyright (c) 2005, 2008 IBM Corporation and others. +# Copyright (c) 2005, 2011 IBM Corporation and others. # All rights reserved. This program and the accompanying materials # are made available under the terms of the Eclipse Public License v1.0 # which accompanies this distribution, and is available at @@ -16,7 +16,7 @@ BindingLabel_Text = &amp;Binding: CommandNameColumn_Text = Command CommandNameLabel_Text = &amp;Name: -CommandDescriptionLabel_Text = &amp;Description: +CommandDescriptionLabel_Text = D&amp;escription: CategoryColumn_Text= Category UserColumn_Text= User DeleteSchemeButton_Text = D&amp;elete @@ -49,5 +49,6 @@ ActionSetFilterCheckBox_Text= Filter &amp;action set contexts InternalFilterCheckBox_Text = Filter &amp;internal contexts UncategorizedFilterCheckBox_Text = Filter &amp;uncategorized commands +WorkbenchMenuFilterCheckBox_Text = Filter &amp;Workbench Menu Context KeysPreferenceFilterDialog_Title= When Context Filters diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/model/ContextModel.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/model/ContextModel.java index ec0842a..7adcb8d 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/model/ContextModel.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/model/ContextModel.java @@ -16,7 +16,6 @@ import java.util.Iterator; import java.util.List; import java.util.Map; - import org.eclipse.core.commands.common.NotDefinedException; import org.eclipse.core.commands.contexts.Context; import org.eclipse.ui.contexts.IContextService; @@ -104,8 +103,10 @@ * true to filter action set contexts. * @param internal * true to filter internal contexts + * @param workbenchMenu + * true to filter Workbench Menu Context */ - public void filterContexts(boolean actionSets, boolean internal) { + public void filterContexts(boolean actionSets, boolean internal, boolean workbenchMenu) { // Remove undesired contexts for (int i = 0; i &lt; contexts.size(); i++) { boolean removeContext = false; @@ -137,6 +138,11 @@ removeContext = true; } + if (workbenchMenu == true + &amp;&amp; contextElement.getId().equals(IContextService.CONTEXT_ID_WORKBENCH_MENU)) { + removeContext = true; + } + if (removeContext) { contextIdToFilteredContexts.put(contextElement.getId(), contextElement); @@ -154,12 +160,15 @@ .get(iterator.next()); try { - if (actionSets == false - &amp;&amp; (contextElement.getId().equalsIgnoreCase( - CONTEXT_ID_ACTION_SETS) || ((Context) contextElement - .getModelObject()).getParentId() - .equalsIgnoreCase(CONTEXT_ID_ACTION_SETS))) { - restoreContext = true; + if (actionSets == false) { + if (contextElement.getId().equalsIgnoreCase(CONTEXT_ID_ACTION_SETS)) { + restoreContext = true; + } else { + String parentId = ((Context) contextElement.getModelObject()).getParentId(); + if (parentId != null &amp;&amp; parentId.equalsIgnoreCase(CONTEXT_ID_ACTION_SETS)) { + restoreContext = true; + } + } } } catch (NotDefinedException e) { // No parentId to check @@ -169,6 +178,11 @@ restoreContext = true; } + if (workbenchMenu == false + &amp;&amp; contextElement.getId().equals(IContextService.CONTEXT_ID_WORKBENCH_MENU)) { + restoreContext = true; + } + if (restoreContext) { contexts.add(contextElement); contextIdToElement.put(contextElement.getId(), contextElement); diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/model/KeyController.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/model/KeyController.java index f582148..8954b1c 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/model/KeyController.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/keys/model/KeyController.java @@ -466,11 +466,12 @@ * @param actionSets * true to filter action set contexts * @param internal - * false to filter internal contexts - * + * true to filter internal contexts + * @param workbenchMenu + * true to filter Workbench Menu Context */ - public void filterContexts(boolean actionSets, boolean internal) { - contextModel.filterContexts(actionSets, internal); + public void filterContexts(boolean actionSets, boolean internal, boolean workbenchMenu) { + contextModel.filterContexts(actionSets, internal, workbenchMenu); } /** diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/menus/DynamicMenuContributionItem.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/menus/DynamicMenuContributionItem.java index 8aa2746..e14822c 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/menus/DynamicMenuContributionItem.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/menus/DynamicMenuContributionItem.java @@ -89,6 +89,78 @@ /* * (non-Javadoc) * + * @see org.eclipse.jface.action.ContributionItem#isEnabled() + */ + public boolean isEnabled() { + if (loadedDynamicContribution != null) { + return loadedDynamicContribution.isEnabled(); + } + return super.isEnabled(); + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.jface.action.ContributionItem#isGroupMarker() + */ + public boolean isGroupMarker() { + if (loadedDynamicContribution != null) { + return loadedDynamicContribution.isGroupMarker(); + } + return super.isGroupMarker(); + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.jface.action.ContributionItem#isSeparator() + */ + public boolean isSeparator() { + if (loadedDynamicContribution != null) { + return loadedDynamicContribution.isSeparator(); + } + return super.isSeparator(); + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.jface.action.ContributionItem#isVisible() + */ + public boolean isVisible() { + if (loadedDynamicContribution != null) { + return loadedDynamicContribution.isVisible(); + } + return super.isVisible(); + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.jface.action.ContributionItem#saveWidgetState() + */ + public void saveWidgetState() { + if (loadedDynamicContribution != null) { + loadedDynamicContribution.saveWidgetState(); + } + super.saveWidgetState(); + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.jface.action.ContributionItem#setVisible(boolean) + */ + public void setVisible(boolean visible) { + if (loadedDynamicContribution != null) { + loadedDynamicContribution.setVisible(visible); + } + super.setVisible(visible); + } + + /* + * (non-Javadoc) + * * @see * org.eclipse.jface.action.ContributionItem#fill(org.eclipse.swt.widgets * .Composite) diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/menus/DynamicToolBarContributionItem.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/menus/DynamicToolBarContributionItem.java index cac3a91..b0cb4b9 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/menus/DynamicToolBarContributionItem.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/menus/DynamicToolBarContributionItem.java @@ -89,6 +89,78 @@ /* * (non-Javadoc) * + * @see org.eclipse.jface.action.ContributionItem#isEnabled() + */ + public boolean isEnabled() { + if (loadedDynamicContribution != null) { + return loadedDynamicContribution.isEnabled(); + } + return super.isEnabled(); + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.jface.action.ContributionItem#isGroupMarker() + */ + public boolean isGroupMarker() { + if (loadedDynamicContribution != null) { + return loadedDynamicContribution.isGroupMarker(); + } + return super.isGroupMarker(); + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.jface.action.ContributionItem#isSeparator() + */ + public boolean isSeparator() { + if (loadedDynamicContribution != null) { + return loadedDynamicContribution.isSeparator(); + } + return super.isSeparator(); + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.jface.action.ContributionItem#saveWidgetState() + */ + public void saveWidgetState() { + if (loadedDynamicContribution != null) { + loadedDynamicContribution.saveWidgetState(); + } + super.saveWidgetState(); + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.jface.action.ContributionItem#setVisible(boolean) + */ + public void setVisible(boolean visible) { + if (loadedDynamicContribution != null) { + loadedDynamicContribution.setVisible(visible); + } + super.setVisible(visible); + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.jface.action.ContributionItem#isVisible() + */ + public boolean isVisible() { + if (loadedDynamicContribution != null) { + return loadedDynamicContribution.isVisible(); + } + return super.isVisible(); + } + + /* + * (non-Javadoc) + * * @see * org.eclipse.jface.action.ContributionItem#fill(org.eclipse.swt.widgets * .CoolBar, int) diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/messages.properties b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/messages.properties index 9e211e0..8d6d63f 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/messages.properties +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/messages.properties @@ -1,5 +1,5 @@ ############################################################################### -# Copyright (c) 2000, 2010 IBM Corporation and others. +# Copyright (c) 2000, 2011 IBM Corporation and others. # All rights reserved. This program and the accompanying materials # are made available under the terms of the Eclipse Public License v1.0 # which accompanies this distribution, and is available at @@ -200,7 +200,11 @@ ResetPerspective_toolTip = Reset Perspective ResetPerspective_message = Do you want to reset the current {0} perspective to its defaults? ResetPerspective_title = Reset Perspective -RevertPerspective_note=Reset takes effect the next time the perspective is opened +RevertPerspective_note=&apos;Revert&apos; removes the customization from the selected perspective.\nThis only applies to newly opened perspectives. + +RevertPerspective_title = Reset Perspective +RevertPerspective_message = Do you want to reset the current {0} perspective to its saved state? +RevertPerspective_option = &amp;Also discard perspective&apos;s customization ClosePerspectiveAction_text = &amp;Close Perspective ClosePerspectiveAction_toolTip = Close Perspective @@ -439,7 +443,7 @@ FilteredPreferenceDialog_Key_Scrolling=Key &amp;Scrolling FilteredPreferenceDialog_PreferenceSaveFailed=Preferences save failed. FilteredPreferenceDialog_Resize = &amp;Resize tree -FilteredPreferenceDialog_FilterToolTip = Preferences dialog menu +FilteredPreferenceDialog_FilterToolTip = Additional Dialog Actions FileExtension_fileTypeMessage = Enter file type to add: (*.doc or report.doc for example) @@ -468,8 +472,8 @@ PerspectivesPreference_MakeDefault = Ma&amp;ke Default PerspectivesPreference_MakeDefaultTip = Make the Current Selection the Default Perspective -PerspectivesPreference_Reset = &amp;Reset -PerspectivesPreference_ResetTip = Reset the Current Selection to its Original Value +PerspectivesPreference_Reset = &amp;Revert +PerspectivesPreference_ResetTip = Reverts the Current Selection to its Original Value PerspectivesPreference_Delete = D&amp;elete PerspectivesPreference_DeleteTip = Delete a User Defined Perspective PerspectivesPreference_available = Available &amp;perspectives: @@ -492,7 +496,7 @@ WorkbenchPreference_singleClick=&amp;Single click WorkbenchPreference_singleClick_SelectOnHover=Select on &amp;hover WorkbenchPreference_singleClick_OpenAfterDelay=Open when using arrow &amp;keys -WorkbenchPreference_noEffectOnAllViews=This preference may not take effect on all views +WorkbenchPreference_noEffectOnAllViews=This preference may not take effect on all views. # --- Fonts --- FontsPreference_useSystemFont=&amp;Use System Font @@ -582,7 +586,7 @@ EditorManager_problemsSavingEditors=Problems occurred saving editors. EditorManager_unableToSaveEditor=Unable to save editor: {0}. EditorManager_backgroundSaveJobName=Saving {0} - +EditorManager_largeDocumentWarning= The document you are trying to open is large. This may affect the stability of the application. Opening with an external program is recommended. EditorPane_pinEditor=&amp;Pin Editor ExternalEditor_errorMessage = Error opening external editor ({0}). @@ -888,7 +892,7 @@ FastViewBar_horizontal=&amp;Horizontal FastViewBar_vertical=&amp;Vertical FastViewBar_show_view=&amp;New Fast View -FastViewBar_0=Show View as a fast view +FastViewBar_0=Show View as a Fast View WorkbenchPlugin_extension=Cannot create extension diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/misc/Policy.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/misc/Policy.java index 386f670..e2c574d 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/misc/Policy.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/misc/Policy.java @@ -34,6 +34,8 @@ public static boolean DEBUG_DRAG_DROP = DEFAULT; + public static boolean DEBUG_PERSPECTIVES = DEFAULT; + /** * Flag to log stale jobs */ @@ -165,6 +167,7 @@ if (getDebugOption(&quot;/debug&quot;)) { //$NON-NLS-1$ DEBUG_UI_GLOBAL = true; DEBUG_SWT_GRAPHICS = getDebugOption(&quot;/trace/graphics&quot;); //$NON-NLS-1$ + DEBUG_PERSPECTIVES = getDebugOption(&quot;/trace/perspectives&quot;); //$NON-NLS-1$ DEBUG_SWT_DEBUG = getDebugOption(&quot;/debug/swtdebug&quot;); //$NON-NLS-1$ DEBUG_SWT_DEBUG_GLOBAL = getDebugOption(&quot;/debug/swtdebugglobal&quot;); //$NON-NLS-1$ DEBUG_DRAG_DROP = getDebugOption(&quot;/trace/dragDrop&quot;); //$NON-NLS-1$ diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/part/StatusPart.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/part/StatusPart.java index 3edea87..0c6347f 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/part/StatusPart.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/part/StatusPart.java @@ -12,11 +12,12 @@ import java.io.PrintWriter; import java.io.StringWriter; - import org.eclipse.core.runtime.CoreException; import org.eclipse.core.runtime.IStatus; import org.eclipse.jface.dialogs.IDialogConstants; import org.eclipse.swt.SWT; +import org.eclipse.swt.events.DisposeEvent; +import org.eclipse.swt.events.DisposeListener; import org.eclipse.swt.events.SelectionAdapter; import org.eclipse.swt.events.SelectionEvent; import org.eclipse.swt.graphics.Color; @@ -206,8 +207,13 @@ } } }); - button.setImage(descriptor.getImageDescriptor().createImage()); - button - .setToolTipText(WorkbenchMessages.ErrorLogUtil_ShowErrorLogTooltip); + final Image image = descriptor.getImageDescriptor().createImage(); + button.setImage(image); + button.setToolTipText(WorkbenchMessages.ErrorLogUtil_ShowErrorLogTooltip); + button.addDisposeListener(new DisposeListener() { + public void widgetDisposed(DisposeEvent e) { + image.dispose(); + } + }); } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/presentations/SystemMenuMove.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/presentations/SystemMenuMove.java index a98308f..5a1e653 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/presentations/SystemMenuMove.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/presentations/SystemMenuMove.java @@ -60,4 +60,7 @@ super.update(force, recursive); } + public void update() { + update(false, false); + } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/presentations/defaultpresentation/DefaultPartList.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/presentations/defaultpresentation/DefaultPartList.java index 02954a5..997d6e7 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/presentations/defaultpresentation/DefaultPartList.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/presentations/defaultpresentation/DefaultPartList.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2004, 2006 IBM Corporation and others. + * Copyright (c) 2004, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -66,7 +66,7 @@ SWT.Deactivate, new Listener() { public void handleEvent(Event event) { - editorList.setVisible(false); + editorList.setVisible(false); } } ); diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/progress/JobInfo.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/progress/JobInfo.java index 5a59787..4430152 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/progress/JobInfo.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/progress/JobInfo.java @@ -8,6 +8,7 @@ * Contributors: * IBM Corporation - initial API and implementation * Brock Janiczak - Fix for Bug 123169 [Progress] NPE from JobInfo + * Martin W. Kirst - jUnit test for Bug 361121 [Progress] DetailedProgressViewer&apos;s comparator violates its general contract *******************************************************************************/ package org.eclipse.ui.internal.progress; @@ -53,7 +54,7 @@ * * @param enclosingJob */ - JobInfo(Job enclosingJob) { + protected JobInfo(Job enclosingJob) { this.job = enclosingJob; } @@ -154,10 +155,12 @@ } } + // If equal prio, order by names if (job.getPriority() == job2.getPriority()) { return job.getName().compareTo(job2.getName()); } + // order by priority if (job.getPriority() &gt; job2.getPriority()) { return -1; } @@ -181,15 +184,16 @@ return 1; } - if (element.getJob().getState() == getJob().getState()) { + int thisState = getJob().getState(); + int anotherState = element.getJob().getState(); + + // if equal job state, compare other job attributes + if (thisState == anotherState) { return compareJobs(element); } - if (getJob().getState() == Job.RUNNING) { - return -1; - } - return 1; - + // ordering by job states, Job.RUNNING should be ordered first + return (thisState &gt; anotherState ? -1 : (thisState == anotherState ? 0 : 1)); } /** diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/progress/ProgressAnimationItem.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/progress/ProgressAnimationItem.java index dfcd7a4..7f11608 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/progress/ProgressAnimationItem.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/progress/ProgressAnimationItem.java @@ -128,7 +128,12 @@ } } - execute(ji, job); + // To fix a bug (335543) introduced in 3.6.1. + // doAction() should return if progress region button was + // selected to open a job result action or command. + if (execute(ji, job)) { + return; + } } } } @@ -140,14 +145,16 @@ /** * @param ji * @param job + * @return true if Action or Command is executed */ - private void execute(JobInfo ji, Job job) { + private boolean execute(JobInfo ji, Job job) { Object prop = job.getProperty(IProgressConstants2.ACTION_PROPERTY); if (prop instanceof IAction &amp;&amp; ((IAction) prop).isEnabled()) { IAction action = (IAction) prop; action.run(); removeTopElement(ji); + return true; } prop = job.getProperty(IProgressConstants2.COMMAND_PROPERTY); @@ -176,8 +183,9 @@ StatusManager.getManager().handle(status, StatusManager.LOG | StatusManager.SHOW); } - + return true; } + return false; } /** diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog.java index d87cc2e..a507fe1 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/progress/ProgressMonitorFocusJobDialog.java @@ -1,12 +1,13 @@ /******************************************************************************* - * Copyright (c) 2004, 2008 IBM Corporation and others. + * Copyright (c) 2004, 2010 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at * http://www.eclipse.org/legal/epl-v10.html * * Contributors: - * IBM - Initial API and implementation + * IBM - Initial API and implementation + * Markus Schorn (Wind River Systems) *******************************************************************************/ package org.eclipse.ui.internal.progress; @@ -413,20 +414,35 @@ setOpenOnRun(false); aboutToRun(); - // start with a quick busy indicator. Lock the UI as we + + final Object jobIsDone = new Object(); + final JobChangeAdapter jobListener = new JobChangeAdapter() { + public void done(IJobChangeEvent event) { + synchronized (jobIsDone) { + jobIsDone.notify(); + } + } + }; + job.addJobChangeListener(jobListener); + + // Start with a quick busy indicator. Lock the UI as we // want to preserve modality BusyIndicator.showWhile(PlatformUI.getWorkbench().getDisplay(), new Runnable() { public void run() { try { - Thread - .sleep(ProgressManagerUtil.SHORT_OPERATION_TIME); + synchronized (jobIsDone) { + if (job.getState() != Job.NONE) { + jobIsDone.wait(ProgressManagerUtil.SHORT_OPERATION_TIME); + } + } } catch (InterruptedException e) { // Do not log as this is a common operation from the // lock listener } } }); + job.removeJobChangeListener(jobListener); WorkbenchJob openJob = new WorkbenchJob( ProgressMessages.ProgressMonitorFocusJobDialog_UserDialogJob) { diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/PerspectiveProvider.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/PerspectiveProvider.java index 64db59c..1c69419 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/PerspectiveProvider.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/PerspectiveProvider.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2006, 2008 IBM Corporation and others. + * Copyright (c) 2006, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -18,6 +18,7 @@ import org.eclipse.ui.IPerspectiveDescriptor; import org.eclipse.ui.ISharedImages; import org.eclipse.ui.PlatformUI; +import org.eclipse.ui.activities.WorkbenchActivityHelper; import org.eclipse.ui.internal.WorkbenchImages; /** @@ -42,13 +43,15 @@ if (cachedElements == null) { IPerspectiveDescriptor[] perspectives = PlatformUI.getWorkbench() .getPerspectiveRegistry().getPerspectives(); - cachedElements = new QuickAccessElement[perspectives.length]; for (int i = 0; i &lt; perspectives.length; i++) { - PerspectiveElement perspectiveElement = new PerspectiveElement( - perspectives[i], this); - cachedElements[i] = perspectiveElement; - idToElement.put(perspectiveElement.getId(), perspectiveElement); + if (!WorkbenchActivityHelper.filterItem(perspectives[i])) { + PerspectiveElement perspectiveElement = new PerspectiveElement(perspectives[i], + this); + idToElement.put(perspectiveElement.getId(), perspectiveElement); + } } + cachedElements = (QuickAccessElement[]) idToElement.values().toArray( + new QuickAccessElement[idToElement.size()]); } return cachedElements; } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/PreferenceProvider.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/PreferenceProvider.java index 68dc070..bf92624 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/PreferenceProvider.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/PreferenceProvider.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2006, 2007 IBM Corporation and others. + * Copyright (c) 2006, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -19,6 +19,7 @@ import org.eclipse.jface.preference.IPreferenceNode; import org.eclipse.jface.resource.ImageDescriptor; import org.eclipse.ui.PlatformUI; +import org.eclipse.ui.activities.WorkbenchActivityHelper; import org.eclipse.ui.internal.IWorkbenchGraphicConstants; import org.eclipse.ui.internal.WorkbenchImages; @@ -60,11 +61,14 @@ */ private void collectElements(String prefix, IPreferenceNode[] subNodes, List result) { for (int i = 0; i &lt; subNodes.length; i++) { - PreferenceElement preferenceElement = new PreferenceElement( - subNodes[i], prefix, this); - result.add(preferenceElement); - String nestedPrefix = prefix.length() == 0 ? subNodes[i].getLabelText() : (prefix + &quot;/&quot; + subNodes[i].getLabelText()); //$NON-NLS-1$ - collectElements(nestedPrefix, subNodes[i].getSubNodes(), result); + if (!WorkbenchActivityHelper.filterItem(subNodes[i])) { + PreferenceElement preferenceElement = new PreferenceElement(subNodes[i], prefix, + this); + result.add(preferenceElement); + String nestedPrefix = prefix.length() == 0 ? subNodes[i].getLabelText() : (prefix + + &quot;/&quot; + subNodes[i].getLabelText()); //$NON-NLS-1$ + collectElements(nestedPrefix, subNodes[i].getSubNodes(), result); + } } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/QuickAccessDialog.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/QuickAccessDialog.java index 0157b96..8f854c8 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/QuickAccessDialog.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/QuickAccessDialog.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2010 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -21,6 +21,7 @@ import org.eclipse.jface.bindings.TriggerSequence; import org.eclipse.jface.bindings.keys.KeySequence; import org.eclipse.jface.bindings.keys.SWTKeySupport; +import org.eclipse.jface.dialogs.Dialog; import org.eclipse.jface.dialogs.IDialogSettings; import org.eclipse.jface.dialogs.PopupDialog; import org.eclipse.jface.layout.GridDataFactory; @@ -49,6 +50,8 @@ import org.eclipse.swt.events.SelectionListener; import org.eclipse.swt.graphics.Color; import org.eclipse.swt.graphics.Font; +import org.eclipse.swt.graphics.FontMetrics; +import org.eclipse.swt.graphics.GC; import org.eclipse.swt.graphics.Point; import org.eclipse.swt.graphics.Rectangle; import org.eclipse.swt.graphics.TextLayout; @@ -614,7 +617,16 @@ } protected Point getDefaultSize() { - return new Point(350, 420); + GC gc = new GC(table); + FontMetrics fontMetrics = gc.getFontMetrics(); + gc.dispose(); + int x = Dialog.convertHorizontalDLUsToPixels(fontMetrics, 300); + if (x &lt; 350) + x = 350; + int y = Dialog.convertVerticalDLUsToPixels(fontMetrics, 270); + if (y &lt; 420) + y = 420; + return new Point(x, y); } protected Point getDefaultLocation(Point initialSize) { diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/ViewElement.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/ViewElement.java index a0e322f..223bda4 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/ViewElement.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/ViewElement.java @@ -25,6 +25,9 @@ public class ViewElement extends QuickAccessElement { private final IViewDescriptor viewDescriptor; + private String secondaryId; + private boolean multiInstance; + private String contentDescription; private String category; @@ -44,19 +47,61 @@ } } + /** + * @return The primary id of the view + */ + public String getPrimaryId() { + + return viewDescriptor.getId(); + } + + /** + * @param secondaryId + * The secondaryId to set. + */ + public void setSecondaryId(String secondaryId) { + this.secondaryId = secondaryId; + } + + /** + * @param multiInstance + * The multiInstance to set. + */ + public void setMultiInstance(boolean multiInstance) { + this.multiInstance = multiInstance; + } + + /** + * @param contentDescription + * The contentDescription to set. + */ + public void setContentDescription(String contentDescription) { + this.contentDescription = contentDescription; + } + + /** + * @return Returns the multiInstance. + */ + public boolean isMultiInstance() { + return multiInstance; + } + public void execute() { IWorkbenchPage activePage = PlatformUI.getWorkbench() .getActiveWorkbenchWindow().getActivePage(); if (activePage != null) { try { - activePage.showView(viewDescriptor.getId()); + activePage.showView(viewDescriptor.getId(), secondaryId, + IWorkbenchPage.VIEW_ACTIVATE); } catch (PartInitException e) { } } } public String getId() { - return viewDescriptor.getId(); + if(secondaryId ==null) + return viewDescriptor.getId(); + return viewDescriptor.getId() + &apos;:&apos; + secondaryId; } public ImageDescriptor getImageDescriptor() { @@ -64,20 +109,35 @@ } public String getLabel() { - if (category == null) { - return viewDescriptor.getLabel(); + String label = viewDescriptor.getLabel(); + + if (isMultiInstance() &amp;&amp; contentDescription != null) + label = label + &quot; (&quot; + contentDescription + &apos;)&apos;; //$NON-NLS-1$ + + if (category != null) { + label = label + separator + category; } - return viewDescriptor.getLabel() + separator + category; + return label; } + /* + * (non-Javadoc) + * + * @see java.lang.Object#hashCode() + */ public int hashCode() { final int prime = 31; int result = 1; - result = prime * result - + ((viewDescriptor == null) ? 0 : viewDescriptor.hashCode()); + result = prime * result + ((secondaryId == null) ? 0 : secondaryId.hashCode()); + result = prime * result + ((viewDescriptor == null) ? 0 : viewDescriptor.hashCode()); return result; } + /* + * (non-Javadoc) + * + * @see java.lang.Object#equals(java.lang.Object) + */ public boolean equals(Object obj) { if (this == obj) return true; @@ -85,7 +145,12 @@ return false; if (getClass() != obj.getClass()) return false; - final ViewElement other = (ViewElement) obj; + ViewElement other = (ViewElement) obj; + if (secondaryId == null) { + if (other.secondaryId != null) + return false; + } else if (!secondaryId.equals(other.secondaryId)) + return false; if (viewDescriptor == null) { if (other.viewDescriptor != null) return false; @@ -93,4 +158,5 @@ return false; return true; } + } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/ViewProvider.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/ViewProvider.java index b1aa686..5147d1c 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/ViewProvider.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/ViewProvider.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2006, 2009 IBM Corporation and others. + * Copyright (c) 2006, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -11,14 +11,20 @@ package org.eclipse.ui.internal.quickaccess; +import java.util.Collection; import java.util.HashMap; +import java.util.HashSet; +import java.util.Iterator; import java.util.Map; - import org.eclipse.jface.resource.ImageDescriptor; +import org.eclipse.ui.IViewReference; +import org.eclipse.ui.IWorkbenchPage; import org.eclipse.ui.PlatformUI; +import org.eclipse.ui.activities.WorkbenchActivityHelper; import org.eclipse.ui.internal.IWorkbenchGraphicConstants; import org.eclipse.ui.internal.WorkbenchImages; import org.eclipse.ui.views.IViewDescriptor; +import org.eclipse.ui.views.IViewRegistry; /** * @since 3.3 @@ -28,6 +34,7 @@ private QuickAccessElement[] cachedElements; private Map idToElement = new HashMap(); + private Collection multiInstanceViewIds = new HashSet(0); public String getId() { return &quot;org.eclipse.ui.views&quot;; //$NON-NLS-1$ @@ -47,16 +54,72 @@ if (cachedElements == null) { IViewDescriptor[] views = PlatformUI.getWorkbench() .getViewRegistry().getViews(); - cachedElements = new QuickAccessElement[views.length]; + Collection elements = new HashSet(views.length); for (int i = 0; i &lt; views.length; i++) { - ViewElement viewElement = new ViewElement(views[i], this); - cachedElements[i] = viewElement; - idToElement.put(viewElement.getId(), viewElement); + if (!WorkbenchActivityHelper.filterItem(views[i])) { + addElement(views[i], elements, null, null); + } } + + addOpenViews(elements); + + markMultiInstance(elements); + + + cachedElements = (QuickAccessElement[]) elements + .toArray(new QuickAccessElement[elements.size()]); + } return cachedElements; } + private void addElement(IViewDescriptor viewDesc, Collection elements, String secondaryId, + String desc) { + ViewElement viewElement = new ViewElement(viewDesc, this); + viewElement.setSecondaryId(secondaryId); + viewElement.setContentDescription(desc); + boolean added = elements.add(viewElement); + if (added) { + idToElement.put(viewElement.getId(), viewElement); + } else { + // *could* be multinstance + multiInstanceViewIds.add(viewDesc.getId()); + } + } + + public void addOpenViews(Collection elements) { + + IWorkbenchPage page = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage(); + IViewRegistry viewRegistry = PlatformUI.getWorkbench().getViewRegistry(); + IViewReference[] refs = page.getViewReferences(); + for (int i = 0; i &lt; refs.length; i++) { + IViewDescriptor viewDescriptor = viewRegistry.find(refs[i].getId()); + addElement(viewDescriptor, elements, refs[i].getSecondaryId(), + refs[i].getContentDescription()); + } + } + + /** + * @param elements + */ + protected void markMultiInstance(Collection elements) { + for (Iterator i = multiInstanceViewIds.iterator(); i.hasNext();) { + String viewId = (String) i.next(); + ViewElement firstInstance = null; + for (Iterator j = elements.iterator(); j.hasNext();) { + ViewElement viewElement = (ViewElement) j.next(); + if (viewElement.getPrimaryId().equals(viewId)) { + if (firstInstance == null) + firstInstance = viewElement; + else { + firstInstance.setMultiInstance(true); + viewElement.setMultiInstance(true); + } + } + } + } + } + public ImageDescriptor getImageDescriptor() { return WorkbenchImages .getImageDescriptor(IWorkbenchGraphicConstants.IMG_VIEW_DEFAULTVIEW_MISC); diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/WizardProvider.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/WizardProvider.java index 1d6e8ff..0f09ca9 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/WizardProvider.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/quickaccess/WizardProvider.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2006, 2007 IBM Corporation and others. + * Copyright (c) 2006, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -18,6 +18,7 @@ import java.util.Map; import org.eclipse.jface.resource.ImageDescriptor; +import org.eclipse.ui.activities.WorkbenchActivityHelper; import org.eclipse.ui.internal.IWorkbenchGraphicConstants; import org.eclipse.ui.internal.WorkbenchImages; import org.eclipse.ui.internal.WorkbenchPlugin; @@ -46,12 +47,14 @@ collectWizards(rootCategory, result); IWizardDescriptor[] wizards = (IWizardDescriptor[]) result .toArray(new IWizardDescriptor[result.size()]); - cachedElements = new QuickAccessElement[wizards.length]; for (int i = 0; i &lt; wizards.length; i++) { - WizardElement wizardElement = new WizardElement(wizards[i], this); - cachedElements[i] = wizardElement; - idToElement.put(wizardElement.getId(), wizardElement); + if (!WorkbenchActivityHelper.filterItem(wizards[i])) { + WizardElement wizardElement = new WizardElement(wizards[i], this); + idToElement.put(wizardElement.getId(), wizardElement); + } } + cachedElements = (QuickAccessElement[]) idToElement.values().toArray( + new QuickAccessElement[idToElement.size()]); } return cachedElements; } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/registry/EditorRegistry.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/registry/EditorRegistry.java index ed0db10..36720c5 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/registry/EditorRegistry.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/registry/EditorRegistry.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -12,6 +12,7 @@ *******************************************************************************/ package org.eclipse.ui.internal.registry; +import com.ibm.icu.text.Collator; import java.io.BufferedReader; import java.io.FileInputStream; import java.io.IOException; @@ -29,9 +30,8 @@ import java.util.Iterator; import java.util.List; import java.util.Map; -import java.util.StringTokenizer; import java.util.Map.Entry; - +import java.util.StringTokenizer; import org.eclipse.core.commands.common.EventManager; import org.eclipse.core.runtime.IConfigurationElement; import org.eclipse.core.runtime.IExtension; @@ -70,7 +70,6 @@ import org.eclipse.ui.internal.misc.ProgramImageDescriptor; import org.eclipse.ui.internal.util.Util; -import com.ibm.icu.text.Collator; /** * Provides access to the collection of defined editors for resource types. @@ -144,12 +143,12 @@ private static final Comparator comparer = new Comparator() { private Collator collator = Collator.getInstance(); - public int compare(Object arg0, Object arg1) { - String s1 = ((IEditorDescriptor) arg0).getLabel(); - String s2 = ((IEditorDescriptor) arg1).getLabel(); - return collator.compare(s1, s2); - } - }; + public int compare(Object arg0, Object arg1) { + String s1 = ((IEditorDescriptor) arg0).getLabel(); + String s2 = ((IEditorDescriptor) arg1).getLabel(); + return collator.compare(s1, s2); + } + }; private RelatedRegistry relatedRegistry; @@ -344,7 +343,20 @@ * (non-Javadoc) Method declared on IEditorRegistry. */ public IEditorDescriptor getDefaultEditor(String filename) { - return getDefaultEditor(filename, guessAtContentType(filename)); + IEditorDescriptor defaultEditor = getDefaultEditor(filename, guessAtContentType(filename)); + if (defaultEditor != null) { + return defaultEditor; + } + + IContentType[] contentTypes = Platform.getContentTypeManager() + .findContentTypesFor(filename); + for (int i = 0; i &lt; contentTypes.length; i++) { + IEditorDescriptor editor = getDefaultEditor(filename, contentTypes[i]); + if (editor != null) { + return editor; + } + } + return null; } /** @@ -647,11 +659,12 @@ IPreferenceStore store = WorkbenchPlugin.getDefault() .getPreferenceStore(); Reader reader = null; + FileInputStream stream = null; try { // Get the editors defined in the preferences store String xmlString = store.getString(IPreferenceConstants.EDITORS); if (xmlString == null || xmlString.length() == 0) { - FileInputStream stream = new FileInputStream(workbenchStatePath + stream = new FileInputStream(workbenchStatePath .append(IWorkbenchConstants.EDITOR_FILE_NAME) .toOSString()); reader = new BufferedReader(new InputStreamReader(stream, @@ -699,13 +712,6 @@ } } } catch (IOException e) { - try { - if (reader != null) { - reader.close(); - } - } catch (IOException ex) { - e.printStackTrace(); - } //Ignore this as the workbench may not yet have saved any state return false; } catch (WorkbenchException e) { @@ -713,6 +719,15 @@ WorkbenchMessages.EditorRegistry_errorMessage, e.getStatus()); return false; + } finally { + try { + if (reader != null) { + reader.close(); + } else if (stream != null) + stream.close(); + } catch (IOException ex) { + WorkbenchPlugin.log(&quot;Error reading editors: Could not close steam&quot;, ex); //$NON-NLS-1$ + } } return true; @@ -872,11 +887,12 @@ IPreferenceStore store = WorkbenchPlugin.getDefault() .getPreferenceStore(); Reader reader = null; + FileInputStream stream = null; try { // Get the resource types String xmlString = store.getString(IPreferenceConstants.RESOURCES); if (xmlString == null || xmlString.length() == 0) { - FileInputStream stream = new FileInputStream(workbenchStatePath + stream = new FileInputStream(workbenchStatePath .append(IWorkbenchConstants.RESOURCE_TYPE_FILE_NAME) .toOSString()); reader = new BufferedReader(new InputStreamReader(stream, @@ -887,13 +903,6 @@ // Read the defined resources into the table readResources(editorTable, reader); } catch (IOException e) { - try { - if (reader != null) { - reader.close(); - } - } catch (IOException ex) { - ex.printStackTrace(); - } MessageDialog.openError((Shell) null, WorkbenchMessages.EditorRegistry_errorTitle, WorkbenchMessages.EditorRegistry_errorMessage); return false; @@ -902,6 +911,16 @@ WorkbenchMessages.EditorRegistry_errorMessage, e.getStatus()); return false; + } finally { + try { + if (reader != null) { + reader.close(); + } else if (stream != null) { + stream.close(); + } + } catch (IOException ex) { + WorkbenchPlugin.log(&quot;Error reading resources: Could not close steam&quot;, ex); //$NON-NLS-1$ + } } return true; diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/registry/ViewRegistry.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/registry/ViewRegistry.java index fc55b01..6346c5e 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/registry/ViewRegistry.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/registry/ViewRegistry.java @@ -11,6 +11,7 @@ *******************************************************************************/ package org.eclipse.ui.internal.registry; +import com.ibm.icu.text.MessageFormat; import java.util.ArrayList; import java.util.Collection; import java.util.Comparator; @@ -18,7 +19,6 @@ import java.util.List; import java.util.SortedSet; import java.util.TreeSet; - import org.eclipse.core.runtime.IConfigurationElement; import org.eclipse.core.runtime.IExtension; import org.eclipse.core.runtime.IExtensionPoint; @@ -37,8 +37,6 @@ import org.eclipse.ui.views.IViewCategory; import org.eclipse.ui.views.IViewDescriptor; import org.eclipse.ui.views.IViewRegistry; - -import com.ibm.icu.text.MessageFormat; /** * The central manager for view descriptors. @@ -254,13 +252,27 @@ * null if the descriptor fails the Expressions check. */ public IViewDescriptor find(String id) { - Iterator itr = views.iterator(); + IViewDescriptor desc = findInternal(id); + if (WorkbenchActivityHelper.restrictUseOf(desc)) { + return null; + } + return desc; + } + + /** + * Finds the view descriptor without worrying about activities. + * + * @param id + * the ID to search for + * @return the view descriptor, or null + * + * @noreference This method is not intended to be referenced by clients. + */ + public IViewDescriptor findInternal(String id) { + Iterator itr = views.iterator(); while (itr.hasNext()) { IViewDescriptor desc = (IViewDescriptor) itr.next(); if (id.equals(desc.getId())) { - if (WorkbenchActivityHelper.restrictUseOf(desc)) { - return null; - } return desc; } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/services/WorkbenchSourceProvider.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/services/WorkbenchSourceProvider.java index 88c3ff9..07be4fa 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/services/WorkbenchSourceProvider.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/services/WorkbenchSourceProvider.java @@ -632,13 +632,10 @@ return; } - HashMap currentState = new HashMap(); - int sources = updateSelection(currentState); - sources |= ISources.ACTIVE_WORKBENCH_WINDOW_SUBORDINATE; - currentState.put( + fireSourceChanged(ISources.ACTIVE_WORKBENCH_WINDOW_SUBORDINATE, ISources.ACTIVE_WORKBENCH_WINDOW_ACTIVE_PERSPECTIVE_NAME, id); - fireSourceChanged(sources, currentState); + lastPerspectiveId = id; } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/themes/CascadingTheme.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/themes/CascadingTheme.java index 057ef0e..14d58f0 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/themes/CascadingTheme.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/themes/CascadingTheme.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2004, 2006 IBM Corporation and others. + * Copyright (c) 2004, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -11,7 +11,6 @@ package org.eclipse.ui.internal.themes; import java.util.Set; - import org.eclipse.core.commands.common.EventManager; import org.eclipse.jface.resource.ColorRegistry; import org.eclipse.jface.resource.FontRegistry; @@ -37,10 +36,6 @@ } }; - /** - * @param colorRegistry - * @param fontRegistry - */ public CascadingTheme(ITheme currentTheme, CascadingColorRegistry colorRegistry, CascadingFontRegistry fontRegistry) { diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/themes/ColorsAndFontsPreferencePage.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/themes/ColorsAndFontsPreferencePage.java index 808c0b5..50c588f 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/themes/ColorsAndFontsPreferencePage.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/themes/ColorsAndFontsPreferencePage.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2003, 2010 IBM Corporation and others. + * Copyright (c) 2003, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -87,6 +87,7 @@ import org.eclipse.ui.themes.ITheme; import org.eclipse.ui.themes.IThemeManager; import org.eclipse.ui.themes.IThemePreview; + /** * Preference page for management of system colors, gradients and fonts. @@ -532,10 +533,22 @@ * @since 3.2 */ private boolean isDefault(IThemeElementDefinition def) { - if (def instanceof FontDefinition) - return ColorsAndFontsPreferencePage.this.isDefault((FontDefinition)def); - if (def instanceof ColorDefinition) - return ColorsAndFontsPreferencePage.this.isDefault((ColorDefinition)def); + if (def instanceof FontDefinition) { + FontDefinition fontDef = (FontDefinition) def; + String defaultFontID = fontDef.getDefaultsTo(); + return defaultFontID != null + &amp;&amp; Arrays.equals(fontRegistry.getFontData(def.getId()), + fontRegistry.getFontData(defaultFontID)); + } + if (def instanceof ColorDefinition) { + ColorDefinition colorDef = (ColorDefinition) def; + String defaultColorID = colorDef.getDefaultsTo(); + if (defaultColorID == null) + return false; + RGB defaultRGB = colorRegistry.getRGB(defaultColorID); + return defaultRGB != null + &amp;&amp; defaultRGB.equals(colorRegistry.getRGB(colorDef.getId())); + } return false; } } @@ -554,18 +567,17 @@ private Font appliedDialogFont; /** - * Map of definition id-&gt;RGB objects that map to changes expressed in this - * UI session. These changes should be made in preferences and the - * registry. - */ + * Map of definition id-&gt;RGB capturing the explicit changes made by + * the user. These changes need to be stored into the preference store. + */ private Map colorPreferencesToSet = new HashMap(7); private CascadingColorRegistry colorRegistry; /** - * Map of definition id-&gt;RGB objects that map to changes expressed in this - * UI session. These changes should be made in the registry. - */ + * Map of definition id-&gt;RGB capturing the temporary changes caused by a + * &apos;defaultsTo&apos; color change. + */ private Map colorValuesToSet = new HashMap(7); /** @@ -622,6 +634,10 @@ */ private Button goToDefaultButton; + /** + * Map of definition id-&gt;FontData[] capturing the changes explicitly made by + * the user. These changes need to be stored into the preference store. + */ private Map fontPreferencesToSet = new HashMap(7); private CascadingFontRegistry fontRegistry; @@ -630,11 +646,10 @@ private Button fontSystemButton; - /** - * Map of definition id-&gt;FontData[] objects that map to changes expressed in - * this UI session. These changes should be made in preferences and the - * registry. - */ + /** + * Map of definition id-&gt;FontData[] capturing the temporary changes caused + * by a &apos;defaultsTo&apos; font change. + */ private Map fontValuesToSet = new HashMap(7); /** @@ -958,15 +973,6 @@ workbench.getThemeManager().removePropertyChangeListener(themeChangeListener); clearPreviews(); - // also dispose elements used by default previewers - if (currentFont != null &amp;&amp; !currentFont.isDisposed()) { - currentFont.dispose(); - currentFont = null; - } - if (currentColor != null &amp;&amp; !currentColor.isDisposed()) { - currentColor.dispose(); - currentColor = null; - } colorRegistry.dispose(); fontRegistry.dispose(); } @@ -1153,9 +1159,9 @@ public void widgetSelected(SelectionEvent e) { if (isFontSelected()) - resetFont(getSelectedFontDefinition()); + resetFont(getSelectedFontDefinition(), false); else if (isColorSelected()) - resetColor(getSelectedColorDefinition()); + resetColor(getSelectedColorDefinition(), false); updateControls(); } }); @@ -1167,7 +1173,6 @@ return; FontData[] defaultFontData = JFaceResources.getDefaultFont().getFontData(); setFontPreferenceValue(definition, defaultFontData); - setRegistryValue(definition, defaultFontData); updateControls(); } }); @@ -1223,7 +1228,6 @@ setPreferenceStore(PrefUtil.getInternalPreferenceStore()); final IThemeManager themeManager = aWorkbench.getThemeManager(); - themeChangeListener = new IPropertyChangeListener() { public void propertyChange(PropertyChangeEvent event) { if (event.getProperty().equals( @@ -1245,8 +1249,6 @@ if (labelProvider != null) labelProvider.dispose(); // nuke the old cache - - currentTheme = manager.getCurrentTheme(); if (colorRegistry != null) colorRegistry.dispose(); @@ -1287,6 +1289,14 @@ if (colorPreferencesToSet.get(id).equals(getColorAncestorValue(definition))) return true; } + } else if (colorValuesToSet.containsKey(id)) { + if (definition.getValue() != null) { // value-based color + if (colorValuesToSet.get(id).equals(definition.getValue())) + return true; + } else { + if (colorValuesToSet.get(id).equals(getColorAncestorValue(definition))) + return true; + } } else { if (definition.getValue() != null) { // value-based color if (getPreferenceStore().isDefault(ThemeElementHelper.createPreferenceKey(currentTheme, id))) @@ -1312,6 +1322,16 @@ if (Arrays.equals((FontData[]) fontPreferencesToSet.get(id), ancestor)) return true; } + } else if (fontValuesToSet.containsKey(id)) { + if (definition.getValue() != null) { // value-based font + if (Arrays.equals((FontData[]) fontValuesToSet.get(id), definition.getValue())) + return true; + } else { + FontData[] ancestor = getFontAncestorValue(definition); + if (Arrays.equals((FontData[]) fontValuesToSet.get(id), ancestor)) + return true; + } + } else { if (definition.getValue() != null) { // value-based font if (getPreferenceStore().isDefault(ThemeElementHelper.createPreferenceKey(currentTheme, id))) @@ -1372,7 +1392,7 @@ Arrays.sort(definitionsCopy, new IThemeRegistry.HierarchyComparator(definitions)); for (int i = 0; i &lt; definitionsCopy.length; i++) { - resetColor(definitionsCopy[i]); + resetColor(definitionsCopy[i], true); } } @@ -1399,7 +1419,8 @@ protected void performDefaults() { performColorDefaults(); performFontDefaults(); - updateControls(); + updateControls(); + tree.getViewer().refresh(); } private void performFontDefaults() { @@ -1412,11 +1433,12 @@ Arrays.sort(definitionsCopy, new IThemeRegistry.HierarchyComparator(definitions)); for (int i = 0; i &lt; definitionsCopy.length; i++) { - resetFont(definitionsCopy[i]); + resetFont(definitionsCopy[i], true); } } private boolean performFontOk() { + for (Iterator i = fontPreferencesToSet.keySet().iterator(); i.hasNext();) { String id = (String) i.next(); String key = ThemeElementHelper.createPreferenceKey(currentTheme, id); @@ -1459,8 +1481,8 @@ * @param definition the ColorDefinition to reset. * @return whether any change was made. */ - private boolean resetColor(ColorDefinition definition) { - if (!isDefault(definition)) { + private boolean resetColor(ColorDefinition definition, boolean force) { + if (force || !isDefault(definition)) { RGB newRGB; if (definition.getValue() != null) newRGB = definition.getValue(); @@ -1476,10 +1498,10 @@ return false; } - protected boolean resetFont(FontDefinition definition) { - if (!isDefault(definition)) { + protected boolean resetFont(FontDefinition definition, boolean force) { + if (force || !isDefault(definition)) { FontData[] newFD; - if (definition.getDefaultsTo() != null) + if (!force &amp;&amp; definition.getDefaultsTo() != null) newFD = getFontAncestorValue(definition); else newFD = PreferenceConverter.getDefaultFontDataArray(getPreferenceStore(), ThemeElementHelper @@ -1487,7 +1509,6 @@ if (newFD != null) { setFontPreferenceValue(definition, newFD); - setRegistryValue(definition, newFD); return true; } } @@ -1534,6 +1555,7 @@ setDescendantRegistryValues(children[i], datas); setRegistryValue(children[i], datas); fontValuesToSet.put(children[i].getId(), datas); + fontPreferencesToSet.remove(children[i].getId()); } } } @@ -1541,6 +1563,7 @@ protected void setFontPreferenceValue(FontDefinition definition, FontData[] datas) { setDescendantRegistryValues(definition, datas); fontPreferencesToSet.put(definition.getId(), datas); + setRegistryValue(definition, datas); } /** @@ -1790,11 +1813,11 @@ private void editFont(FontDefinition definition, Display display) { if (definition != null) { final FontDialog fontDialog = new FontDialog(getShell()); + fontDialog.setEffectsVisible(false); fontDialog.setFontList(getFontValue(definition)); final FontData data = fontDialog.open(); if (data != null) { setFontPreferenceValue(definition, fontDialog.getFontList()); - setRegistryValue(definition, fontDialog.getFontList()); } } } @@ -1865,10 +1888,8 @@ } private void setCurrentFont(FontDefinition fontDefinition) { - FontData[] fontData = getFontValue(fontDefinition); - if (currentFont != null &amp;&amp; !currentFont.isDisposed()) - currentFont.dispose(); - currentFont = new Font(previewComposite.getDisplay(), fontData); + currentFont = fontRegistry.get(fontDefinition.getId()); + FontData[] fontData = currentFont.getFontData(); // recalculate sample text StringBuffer tmp = new StringBuffer(); @@ -1896,10 +1917,7 @@ } public void setCurrentColor(ColorDefinition colorDefinition) { - RGB color = getColorValue(colorDefinition); - if (currentColor != null &amp;&amp; !currentColor.isDisposed()) - currentColor.dispose(); - currentColor = new Color(previewComposite.getDisplay(), color); + currentColor = colorRegistry.get(colorDefinition.getId()); colorSampler.redraw(); String description = colorDefinition.getDescription(); diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/themes/ThemeRegistry.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/themes/ThemeRegistry.java index 7761de6..a2b468c 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/themes/ThemeRegistry.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/themes/ThemeRegistry.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2004, 2007 IBM Corporation and others. + * Copyright (c) 2004, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -19,7 +19,6 @@ import java.util.List; import java.util.Map; import java.util.Set; - import org.eclipse.ui.themes.IThemeManager; /** @@ -94,11 +93,6 @@ return (IThemeDescriptor) findDescriptor(getThemes(), id); } - /** - * @param descriptors - * @param id - * @return - */ private IThemeElementDefinition findDescriptor( IThemeElementDefinition[] descriptors, String id) { int idx = Arrays.binarySearch(descriptors, id, ID_COMPARATOR); @@ -198,12 +192,12 @@ } /** - * Overlay the override onto the base definition. - * - * @param defs the base definition - * @param overrides the override - * @return the overlayed element - */ + * Overlay the override onto the base definition. + * + * @param original + * the base definition + * @return the overlaid element + */ private IThemeElementDefinition overlay(IThemeElementDefinition original, IThemeElementDefinition overlay) { if (original instanceof ColorDefinition) { diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/tweaklets/TabBehaviourMRU.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/tweaklets/TabBehaviourMRU.java index 927144f..24d1c2c 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/tweaklets/TabBehaviourMRU.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/tweaklets/TabBehaviourMRU.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007, 2009 IBM Corporation and others. + * Copyright (c) 2007, 2010 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -13,7 +13,6 @@ import org.eclipse.jface.dialogs.IDialogConstants; import org.eclipse.jface.dialogs.MessageDialog; -import org.eclipse.jface.dialogs.ProgressMonitorDialog; import org.eclipse.osgi.util.NLS; import org.eclipse.swt.SWT; import org.eclipse.ui.IEditorInput; @@ -29,7 +28,6 @@ import org.eclipse.ui.internal.WorkbenchMessages; import org.eclipse.ui.internal.WorkbenchPage; import org.eclipse.ui.internal.WorkbenchPlugin; -import org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog; import org.eclipse.ui.internal.registry.EditorDescriptor; /** @@ -98,11 +96,10 @@ }; int result = dialog.open(); if (result == 0) { // YES - ProgressMonitorDialog pmd = new ProgressMonitorJobsDialog(dialog - .getShell()); - pmd.open(); - dirtyEditor.getEditor(true).doSave(pmd.getProgressMonitor()); - pmd.close(); + IEditorPart editor = dirtyEditor.getEditor(true); + if (!page.getEditorManager().savePart(editor, editor, false)) { + return null; + } } else if ((result == 2) || (result == -1)) { return null; } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/util/ConfigurationElementMemento.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/util/ConfigurationElementMemento.java index 35a6865..c332961 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/util/ConfigurationElementMemento.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/util/ConfigurationElementMemento.java @@ -35,6 +35,22 @@ return null; } + public IMemento[] getChildren() { + IConfigurationElement[] configurationElements = configurationElement.getChildren(); + + if (configurationElements != null &amp;&amp; configurationElements.length &gt;= 1) { + IMemento mementos[] = new ConfigurationElementMemento[configurationElements.length]; + + for (int i = 0; i &lt; configurationElements.length; i++) { + mementos[i] = new ConfigurationElementMemento(configurationElements[i]); + } + + return mementos; + } + + return new IMemento[0]; + } + public IMemento getChild(String type) { IConfigurationElement[] configurationElements = configurationElement .getChildren(type); diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/util/PrefUtil.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/util/PrefUtil.java index 28d2bc1..c1333cd 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/util/PrefUtil.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/util/PrefUtil.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2004, 2006 IBM Corporation and others. + * Copyright (c) 2004, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -11,8 +11,11 @@ package org.eclipse.ui.internal.util; import org.eclipse.core.runtime.Assert; +import org.eclipse.core.runtime.preferences.InstanceScope; import org.eclipse.jface.preference.IPreferenceStore; import org.eclipse.ui.internal.WorkbenchPlugin; +import org.osgi.service.prefs.BackingStoreException; + /** * Internal utility class to help with getting/setting preferences. @@ -47,8 +50,11 @@ private static IPreferenceStore uiPreferenceStore; /** - * Sets the callback used to obtain and save the UI preference store. - */ + * Sets the callback used to obtain and save the UI preference store. + * + * @param callback + * the callback + */ public static final void setUICallback(ICallback callback) { Assert.isTrue(uiCallback == null); uiCallback = callback; @@ -96,6 +102,10 @@ * Saves the internal preference store, if needed. */ public static void saveInternalPrefs() { - WorkbenchPlugin.getDefault().savePluginPreferences(); + try { + InstanceScope.INSTANCE.getNode(WorkbenchPlugin.PI_WORKBENCH).flush(); + } catch (BackingStoreException e) { + WorkbenchPlugin.log(e); + } } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/wizards/preferences/WizardPreferencesPage.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/wizards/preferences/WizardPreferencesPage.java index aa9ea05..edfbc17 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/wizards/preferences/WizardPreferencesPage.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/internal/wizards/preferences/WizardPreferencesPage.java @@ -363,9 +363,10 @@ buttonComposite.setLayoutData(data); buttonComposite.setFont(parentFont); - selectAllButton = createButton(buttonComposite, - IDialogConstants.SELECT_ALL_ID, - PreferencesMessages.SelectionDialog_selectLabel, false); + selectAllButton = new Button(buttonComposite, SWT.PUSH); + selectAllButton.setText(PreferencesMessages.SelectionDialog_selectLabel); + selectAllButton.setData(new Integer(IDialogConstants.SELECT_ALL_ID)); + setButtonLayoutData(selectAllButton); SelectionListener listener = new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { @@ -376,9 +377,10 @@ selectAllButton.addSelectionListener(listener); selectAllButton.setFont(parentFont); - deselectAllButton = createButton(buttonComposite, - IDialogConstants.DESELECT_ALL_ID, - PreferencesMessages.SelectionDialog_deselectLabel, false); + deselectAllButton = new Button(buttonComposite, SWT.PUSH); + deselectAllButton.setText(PreferencesMessages.SelectionDialog_deselectLabel); + deselectAllButton.setData(new Integer(IDialogConstants.DESELECT_ALL_ID)); + setButtonLayoutData(deselectAllButton); listener = new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/menus/CommandContributionItem.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/menus/CommandContributionItem.java index 00b4ef4..6d23bb1 100755 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/menus/CommandContributionItem.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/menus/CommandContributionItem.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2006, 2009 IBM Corporation and others. + * Copyright (c) 2006, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -636,10 +636,15 @@ ToolItem item = (ToolItem) widget; String text = label; + String tooltip = label; if (text == null) { if (command != null) { try { text = command.getCommand().getName(); + tooltip = command.getCommand().getDescription(); + if (tooltip == null || tooltip.trim().length() == 0) { + tooltip = text; + } } catch (NotDefinedException e) { StatusManager.getManager().handle( StatusUtil.newStatus(IStatus.ERROR, @@ -654,7 +659,7 @@ item.setText(text); } - String toolTipText = getToolTipText(text); + String toolTipText = getToolTipText(tooltip); item.setToolTipText(toolTipText); if (item.getSelection() != checkedState) { diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/menus/MenuUtil.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/menus/MenuUtil.java index bd9d9a7..c231d29 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/menus/MenuUtil.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/menus/MenuUtil.java @@ -19,6 +19,15 @@ * @noinstantiate This class is not intended to be instantiated by clients. */ public class MenuUtil { + /** + * + * Workbench Menu. On supported platforms, this menu is shown when no + * workbench windows are active + * + * @since 3.7 + * + * */ + public final static String WORKBENCH_MENU = &quot;menu:org.eclipse.ui.workbench.menu&quot;; //$NON-NLS-1$ /** Main Menu */ public final static String MAIN_MENU = &quot;menu:org.eclipse.ui.main.menu&quot;; //$NON-NLS-1$ /** Main ToolBar (CoolBar) */ diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/model/IWorkbenchAdapter3.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/model/IWorkbenchAdapter3.java new file mode 100644 index 0000000..15bb096 --- /dev/null +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/model/IWorkbenchAdapter3.java @@ -0,0 +1,37 @@ +/******************************************************************************* + * Copyright (c) 2011 Fair Isaac Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * Fair Isaac Corporation - Initial API and implementation - http://bugs.eclipse.org/326695 + ******************************************************************************/ + +package org.eclipse.ui.model; + +import org.eclipse.jface.viewers.StyledString; + +/** + * Extension interface for IWorkbenchAdapter that allows for + * StyledString support. + * + * @see IWorkbenchAdapter + * @see WorkbenchLabelProvider + * @see BaseWorkbenchContentProvider + * @see org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.IStyledLabelProvider + * + * @since 3.7 + */ +public interface IWorkbenchAdapter3 { + + /** + * Returns the styled text label for the given element. + * + * @param element + * the element to evaluate the styled string for + * @return the styled string. + */ + public StyledString getStyledText(Object element); +} diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/model/WorkbenchAdapter.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/model/WorkbenchAdapter.java index 235384e..af1c8c9 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/model/WorkbenchAdapter.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/model/WorkbenchAdapter.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2006 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,10 +7,12 @@ * * Contributors: * IBM Corporation - initial API and implementation + * Fair Isaac Corporation - http://bugs.eclipse.org/333590 *******************************************************************************/ package org.eclipse.ui.model; import org.eclipse.jface.resource.ImageDescriptor; +import org.eclipse.jface.viewers.StyledString; import org.eclipse.swt.graphics.FontData; import org.eclipse.swt.graphics.RGB; @@ -21,7 +23,7 @@ * @since 3.0 */ public abstract class WorkbenchAdapter implements IWorkbenchAdapter, - IWorkbenchAdapter2 { + IWorkbenchAdapter2, IWorkbenchAdapter3 { /** * The empty list of children. */ @@ -83,4 +85,17 @@ public FontData getFont(Object element) { return null; } -} + + /** + * The default implementation of this IWorkbenchAdapter3 method + * returns the {@link StyledString} which wraps the label of the element. + * Subclasses may override. + * + * @return Return the {@link StyledString} which wraps the label of the + * element. + * @since 3.7 + */ + public StyledString getStyledText(Object object) { + return new StyledString(getLabel(object)); + } +} \ No newline at end of file diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/model/WorkbenchLabelProvider.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/model/WorkbenchLabelProvider.java index 57f8831..1d459f1 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/model/WorkbenchLabelProvider.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/model/WorkbenchLabelProvider.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,6 +7,7 @@ * * Contributors: * IBM Corporation - initial API and implementation + * Fair Isaac Corporation - http://bugs.eclipse.org/326695 *******************************************************************************/ package org.eclipse.ui.model; @@ -17,11 +18,15 @@ import org.eclipse.jface.resource.LocalResourceManager; import org.eclipse.jface.resource.ResourceManager; import org.eclipse.jface.viewers.DecoratingLabelProvider; +import org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.IStyledLabelProvider; import org.eclipse.jface.viewers.IColorProvider; import org.eclipse.jface.viewers.IFontProvider; import org.eclipse.jface.viewers.ILabelProvider; import org.eclipse.jface.viewers.LabelProvider; import org.eclipse.jface.viewers.LabelProviderChangedEvent; +import org.eclipse.jface.viewers.StyledCellLabelProvider; +import org.eclipse.jface.viewers.StyledString; +import org.eclipse.jface.viewers.StyledString.Styler; import org.eclipse.swt.graphics.Color; import org.eclipse.swt.graphics.Font; import org.eclipse.swt.graphics.FontData; @@ -40,7 +45,7 @@ * on the labels and icons of adaptable objects. */ public class WorkbenchLabelProvider extends LabelProvider implements - IColorProvider, IFontProvider { + IColorProvider, IFontProvider, IStyledLabelProvider { /** * Returns a workbench label provider that is hooked up to the decorator @@ -143,6 +148,19 @@ } /** + * Returns the implementation of IWorkbenchAdapter3 for the given object. + * + * @param o + * the object to look up. + * @return IWorkbenchAdapter3 ornull if the adapter is not + * defined or the object is not adaptable. + * @since 3.7 + */ + protected final IWorkbenchAdapter3 getAdapter3(Object o) { + return (IWorkbenchAdapter3) Util.getAdapter(o, IWorkbenchAdapter3.class); + } + + /** * Lazy load the resource manager * * @return The resource manager, create one if necessary @@ -176,6 +194,51 @@ return (Image) getResourceManager().get(descriptor); } + /** + * The default implementation of this returns the styled text label for the + * given element. + * + * @param element + * the element to evaluate the styled string for + * + * @return the styled string. + * + * @since 3.7 + */ + public StyledString getStyledText(Object element) { + IWorkbenchAdapter3 adapter = getAdapter3(element); + if (adapter == null) { + // If adapter class doesn&apos;t implement IWorkbenchAdapter3 than use + // StyledString with text of element. Since the output of getText is + // already decorated, so we don&apos;t need to call decorateText again + // here. + return new StyledString(getText(element)); + } + StyledString styledString = adapter.getStyledText(element); + // Now, re-use any existing decorateText implementation, to decorate + // this styledString. + String decorated = decorateText(styledString.getString(), element); + Styler styler = getDecorationStyle(element); + return StyledCellLabelProvider.styleDecoratedString(decorated, styler, styledString); + } + + /** + * Sets the {@link org.eclipse.jface.viewers.StyledString.Styler} to be used + * for string decorations. By default the + * {@link StyledString#DECORATIONS_STYLER decoration style}. Clients can + * override. + * + * @param element + * the element that has been decorated + * + * @return return the decoration style + * + * @since 3.7 + */ + protected Styler getDecorationStyle(Object element) { + return StyledString.DECORATIONS_STYLER; + } + /* (non-Javadoc) * Method declared on ILabelProvider */ diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/part/MultiPageEditorSite.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/part/MultiPageEditorSite.java index d3811ce..4aec47a 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/part/MultiPageEditorSite.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/part/MultiPageEditorSite.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -532,6 +532,9 @@ if (oldSelectionProvider instanceof IPostSelectionProvider) { ((IPostSelectionProvider) oldSelectionProvider) .removePostSelectionChangedListener(getPostSelectionChangedListener()); + } else { + oldSelectionProvider + .removeSelectionChangedListener(getPostSelectionChangedListener()); } } if (selectionProvider != null) { @@ -540,6 +543,8 @@ if (selectionProvider instanceof IPostSelectionProvider) { ((IPostSelectionProvider) selectionProvider) .addPostSelectionChangedListener(getPostSelectionChangedListener()); + } else { + selectionProvider.addSelectionChangedListener(getPostSelectionChangedListener()); } } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/part/PageBook.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/part/PageBook.java index 7a764bd..5f57aab 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/part/PageBook.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/part/PageBook.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2008 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -92,30 +92,24 @@ * @param page the page to show */ public void showPage(Control page) { - - if (page == currentPage) { - return; - } - if (page.getParent() != this) { + if (page.isDisposed() || page.getParent() != this) { return; } - Control oldPage = currentPage; - currentPage = page; + currentPage = page; // show new page - if (page != null) { - if (!page.isDisposed()) { - page.setVisible(true); - layout(true); - // if (fRequestFocusOnShowPage) - // page.setFocus(); - } - } + page.setVisible(true); + layout(true); - // hide old *after* new page has been made visible in order to avoid flashing - if (oldPage != null &amp;&amp; !oldPage.isDisposed()) { - oldPage.setVisible(false); + // hide old (and all others) *after* new page has been made visible in + // order to avoid flashing + Control[] children = getChildren(); + for (int i = 0; i &lt; children.length; i++) { + Control child = children[i]; + if (child != page &amp;&amp; !child.isDisposed()) { + child.setVisible(false); + } } } } diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/part/PageBookView.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/part/PageBookView.java index 2c83875..77958f0 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/part/PageBookView.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/part/PageBookView.java @@ -962,6 +962,8 @@ if (provider instanceof IPostSelectionProvider) { ((IPostSelectionProvider) provider) .removePostSelectionChangedListener(postSelectionListener); + } else { + provider.removeSelectionChangedListener(postSelectionListener); } } } @@ -988,6 +990,8 @@ if (provider instanceof IPostSelectionProvider) { ((IPostSelectionProvider) provider) .addPostSelectionChangedListener(postSelectionListener); + } else { + provider.addSelectionChangedListener(postSelectionListener); } } // Update action bars. diff --git a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/statushandlers/AbstractStatusAreaProvider.java b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/statushandlers/AbstractStatusAreaProvider.java index 90f89f1..c3e950e 100644 --- a/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/statushandlers/AbstractStatusAreaProvider.java +++ b/bundles/org.eclipse.ui.workbench/Eclipse UI/org/eclipse/ui/statushandlers/AbstractStatusAreaProvider.java @@ -59,13 +59,9 @@ /** * This method is called before - * {@link #createSupportArea(Composite, StatusAdapter)} to check if it will - * display any significant implementation. - * - * Important: This API is a part of work in progress and therefore is - * suitable only for support area providers (which are presented in the - * status dialog tray). - * + * {@link #createSupportArea(Composite, StatusAdapter)} to check if the + * {@link AbstractStatusAreaProvider} will display any significant + * informations. If not, then it will not be presented at all. * * @param statusAdapter * - {@link StatusAdapter} for which status are will be @@ -77,4 +73,22 @@ public boolean validFor(StatusAdapter statusAdapter) { return true; } + + /** + * This method is called before + * {@link #createSupportArea(Composite, IStatus)} to check if the + * {@link AbstractStatusAreaProvider} will display any significant + * informations. If not, then it will not be presented at all. + * + * This implementation wraps the {@link IStatus} into {@link StatusAdapter} + * and calls {@link #validFor(StatusAdapter)}. + * + * @param status + * - {@link IStatus} for which status are will be requested. + * @return true if provider is able to process particular {@link IStatus} + * @since 3.7 + */ + public final boolean validFor(IStatus status) { + return validFor(new StatusAdapter(status)); + } } diff --git a/bundles/org.eclipse.ui.workbench/META-INF/MANIFEST.MF b/bundles/org.eclipse.ui.workbench/META-INF/MANIFEST.MF index b13e631..d22b034 100644 --- a/bundles/org.eclipse.ui.workbench/META-INF/MANIFEST.MF +++ b/bundles/org.eclipse.ui.workbench/META-INF/MANIFEST.MF @@ -2,7 +2,7 @@ Bundle-ManifestVersion: 2 Bundle-Name: %pluginName Bundle-SymbolicName: org.eclipse.ui.workbench; singleton:=true -Bundle-Version: 3.7.0.qualifier +Bundle-Version: 3.8.0.qualifier Bundle-ClassPath: e4-workbench.jar, compatibility.jar, . @@ -94,7 +94,7 @@ Require-Bundle: org.eclipse.core.runtime;bundle-version=&quot;[3.6.0,4.0.0)&quot;, org.eclipse.help;bundle-version=&quot;[3.2.0,4.0.0)&quot;, org.eclipse.jface;bundle-version=&quot;[3.5.0,4.0.0)&quot;, - org.eclipse.swt;bundle-version=&quot;[3.5.0,4.0.0)&quot;, + org.eclipse.swt;bundle-version=&quot;[3.8.0,4.0.0)&quot;, org.eclipse.core.expressions;bundle-version=&quot;[3.4.0,4.0.0)&quot;, org.eclipse.jface.databinding;bundle-version=&quot;[1.3.0,2.0.0)&quot;, org.eclipse.core.databinding.property;bundle-version=&quot;[1.2.0,2.0.0)&quot;, diff --git a/bundles/org.eclipse.ui/.cvsignore b/bundles/org.eclipse.ui/.cvsignore deleted file mode 100644 index c5e82d7..0000000 --- a/bundles/org.eclipse.ui/.cvsignore +++ /dev/null @@ -1 +0,0 @@ -bin \ No newline at end of file diff --git a/bundles/org.eclipse.ui/.options b/bundles/org.eclipse.ui/.options index 8822dc0..7812b81 100644 --- a/bundles/org.eclipse.ui/.options +++ b/bundles/org.eclipse.ui/.options @@ -6,10 +6,10 @@ # Show all jobs in dialogs and the progress view including the support jobs org.eclipse.ui/debug/showAllJobs=false -#Report if a stale job was found +# Report if a stale job was found org.eclipse.ui/debug/job.stale=false -#Report if an image cannot be resolved when it is declared +# Report if an image cannot be resolved when it is declared org.eclipse.ui/debug/declaredImages=false # Enable extended SWT debugging of the Device. @@ -27,6 +27,10 @@ # Enable the trace of SWT graphics. org.eclipse.ui/trace/graphics=false +# Enable tracing of perspective debugging code +org.eclipse.ui/trace/perspectives=false + + ## Note that logging of all performance events are controlled by a central flag ## Turn this flag on to enable tracking of performance events ## org.eclipse.core.runtime/perf=true diff --git a/bundles/org.eclipse.ui/.settings/.api_filters b/bundles/org.eclipse.ui/.settings/.api_filters new file mode 100644 index 0000000..02ffa0a --- /dev/null +++ b/bundles/org.eclipse.ui/.settings/.api_filters @@ -0,0 +1,19 @@ + + + + + + + + + + + + + + + + + + + \ No newline at end of file diff --git a/bundles/org.eclipse.ui/.settings/org.eclipse.core.runtime.prefs b/bundles/org.eclipse.ui/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/bundles/org.eclipse.ui/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/bundles/org.eclipse.ui/.settings/org.eclipse.pde.prefs b/bundles/org.eclipse.ui/.settings/org.eclipse.pde.prefs index 3544248..b52f7bf 100644 --- a/bundles/org.eclipse.ui/.settings/org.eclipse.pde.prefs +++ b/bundles/org.eclipse.ui/.settings/org.eclipse.pde.prefs @@ -1,14 +1,35 @@ -#Tue Nov 16 14:10:37 EST 2004 -compilers.p.unused-element-or-attribute=1 -compilers.p.unresolved-ex-points=0 -compilers.p.deprecated=0 -compilers.p.unknown-element=1 -compilers.p.unknown-resource=1 -compilers.p.unknown-class=1 -compilers.p.unknown-attribute=0 -compilers.p.no-required-att=0 -eclipse.preferences.version=1 -compilers.p.unresolved-import=0 -compilers.p.not-externalized-att=0 -compilers.p.illegal-att-value=0 -compilers.use-project=true +compilers.f.unresolved-features=1 +compilers.f.unresolved-plugins=1 +compilers.incompatible-environment=0 +compilers.p.build=1 +compilers.p.build.bin.includes=1 +compilers.p.build.encodings=2 +compilers.p.build.java.compiler=2 +compilers.p.build.java.compliance=1 +compilers.p.build.missing.output=2 +compilers.p.build.output.library=1 +compilers.p.build.source.library=1 +compilers.p.build.src.includes=1 +compilers.p.deprecated=0 +compilers.p.discouraged-class=1 +compilers.p.illegal-att-value=0 +compilers.p.internal=1 +compilers.p.missing-packages=0 +compilers.p.missing-version-export-package=2 +compilers.p.missing-version-import-package=2 +compilers.p.missing-version-require-bundle=2 +compilers.p.no-required-att=0 +compilers.p.not-externalized-att=0 +compilers.p.unknown-attribute=0 +compilers.p.unknown-class=1 +compilers.p.unknown-element=1 +compilers.p.unknown-identifier=1 +compilers.p.unknown-resource=1 +compilers.p.unresolved-ex-points=0 +compilers.p.unresolved-import=0 +compilers.p.unused-element-or-attribute=1 +compilers.s.create-docs=false +compilers.s.doc-folder=doc +compilers.s.open-tags=1 +compilers.use-project=true +eclipse.preferences.version=1 diff --git a/bundles/org.eclipse.ui/META-INF/MANIFEST.MF b/bundles/org.eclipse.ui/META-INF/MANIFEST.MF index 2668160..c455662 100644 --- a/bundles/org.eclipse.ui/META-INF/MANIFEST.MF +++ b/bundles/org.eclipse.ui/META-INF/MANIFEST.MF @@ -2,7 +2,7 @@ Bundle-ManifestVersion: 2 Bundle-Name: %Plugin.name Bundle-SymbolicName: org.eclipse.ui; singleton:=true -Bundle-Version: 3.7.0.qualifier +Bundle-Version: 3.7.100.qualifier Bundle-ClassPath: . Bundle-Activator: org.eclipse.ui.internal.UIPlugin Bundle-ActivationPolicy: lazy diff --git a/bundles/org.eclipse.ui/buildnotes_workbench.html b/bundles/org.eclipse.ui/buildnotes_workbench.html index 26cc1b1..394ee69 100644 --- a/bundles/org.eclipse.ui/buildnotes_workbench.html +++ b/bundles/org.eclipse.ui/buildnotes_workbench.html @@ -4,14 +4,396 @@ - Eclipse Platform Release Notes (3.5) - JFace and Workbench + Eclipse Platform Release Notes (3.7) - JFace and Workbench - Eclipse Platform Build Notes (3.5) + Eclipse Platform Build Notes (3.7) JFace and Workbench + Integration Build (June 27, 2011, 3:18 p.m.) + Problem reports updated + +Bug 203950. [Viewers] TreeViewer and ViewFilter do not handle expand &apos;+&apos; correctly (FIXED) +Bug 345769. [Accessibility] The button in the top right hand corner of the Preferences Dialog does not have a tooltip/MSAA name (FIXED) + + + Integration Build (June 01, 2011, 11:30 a.m.) + Problem reports updated + +Bug 347491. Virtual tree test failures on Mac OS 10.6.7 (FIXED) + + + Integration Build (May 25, 2011, 11:42 a.m.) + Problem reports updated + +Bug 345127. mac tests are failing due to os upgrade (REOPENED) + + + Integration Build (May 22, 2011, 2:47 p.m.) + Problem reports updated + +Bug 346543. [Contributions] [JFace] MenuManager should identify its widgets (FIXED) + + + Integration Build (May 18, 2011, 4:19 p.m.) + Problem reports updated + +Bug 321564. [Dialogs] &apos;&lt;&apos; in Open Resource not working as expected (FIXED) +Bug 344654. [EditorMgmt] Editors should be able to treat large files specially (e.g. deny opening huge files) (FIXED) + + + Integration Build (May 09, 2011, 10:25 a.m.) + Problem reports updated + +Bug 334362. Properties dialog: properties for closed project are sometimes wrong (FIXED) + + + Integration Build (May 06, 2011, 4:18 p.m.) + Problem reports updated + +Bug 88788. [KeyBindings] request: Back/Forward keys and mouse buttons don&apos;t work with Eclipse (FIXED) +Bug 344883. EditorSelectionDialog#promptForExternalEditor() leaks an image (FIXED) + + + Integration Build (May 04, 2011, 7:39 a.m.) + Problem reports updated + +Bug 191834. [JFace] class PopupDialog cannot be loaded in a non-UI thread (FIXED) + + + Integration Build (April 26, 2011, 4:35 p.m.) + Problem reports updated + +Bug 224703. [WorkingSets] Project explorer doesn&apos;t show recreated working set (FIXED) +Bug 306352. [Preferences] PreferenceConverter does not store black color in preference store (ASSIGNED) + + + Integration Build (April 25, 2011, 3:57 p.m.) + Problem reports updated + +Bug 224703. [WorkingSets] Project explorer doesn&apos;t show recreated working set (NEW) +Bug 343141. [Markers] Problems view: State lost after checking &quot;Show all items&quot; and clicking OK (FIXED) +Bug 343261. PlatformUITest.testWithoutDisplayAccess_sync() fails on Java 7 (FIXED) +Bug 343721. [CommonNavigator] getParent of NavigatorContentServiceContentProvider does not return expected node. (FIXED) + + + Integration Build (April 21, 2011, 4:23 p.m.) + Problem reports updated + +Bug 298961. [Presentations] [perfs] PresentationActivateTest#Presentation... test has an invalid duration (FIXED) +Bug 337240. [CommonNavigator] Mac OSX: Dragging file in Project Explorer creates backwards animation (FIXED) +Bug 343477. [CommonNavigagor] ProjectExplorer property sheet adapter factory is incorrectly declared (FIXED) + + + Integration Build (April 20, 2011, 4:17 p.m.) + Problem reports updated + +Bug 213290. [Dialogs] Browse Button in new Plug-in Project Wizard does not work when &apos;Location&apos; path is null (FIXED) +Bug 228229. [JFace] Should we have a jfacefonts_vista.properties file? (FIXED) +Bug 298952. [Progress] ProgressMonitorDialogPerformanceTest#testLongNames() runs too short on windows test machines (FIXED) +Bug 340136. [perfs] Performance regression in OpenCloseViewTest#showView:BookmarkView() (NEW) +Bug 343160. Key bindings preference page has duplicated mnemonic (FIXED) + + + Integration Build (April 18, 2011, 3:09 p.m.) + Problem reports updated + +Bug 231081. [Markers] Polish Problems view&apos;s columns preferences (FIXED) +Bug 340978. [IDE] Add UI preference for new Preference: PREF_LIGHTWEIGHT_AUTO_REFRESH (FIXED) +Bug 341903. [Perspectives] Code-Bug in CustomizePerspectiveDialog (FIXED) +Bug 342685. EditorWithStateTest and WorkingSetTest fail on Java 7 (FIXED) + + + Integration Build (April 11, 2011, 2:49 p.m.) + Problem reports updated + +Bug 153280. [ActivityMgmt] Examples are shown even when capability disabled (FIXED) +Bug 231081. [Markers] Polish Problems view&apos;s columns preferences (REOPENED) +Bug 275910. [Widgets] PaintListener on Tree not invoked when item count is 0 (FIXED) +Bug 278402. [Import/Export] Export project does not export empty folders (FIXED) +Bug 292198. [Viewers] Enable optimizations in font support for StyledCellLabelProvider (FIXED) +Bug 307545. [Workbench] heap status garbage collection/computation on UI thread (FIXED) +Bug 341447. [Markers] Problems view columns reset (FIXED) +Bug 341702. [JFace] CompositeImageDescriptor mixes images with alpha channel wrong (FIXED) +Bug 342003. [Markers] Failure in marker session tests (CLOSED) + + + Integration Build (April 04, 2011, 2:48 p.m.) + Problem reports updated + +Bug 88788. [KeyBindings] request: Back/Forward keys and mouse buttons don&apos;t work with Eclipse (FIXED) +Bug 126429. [ActivityMgmt] Activities should allow default enablement to be controlled by product definition (FIXED) +Bug 140425. [WorkbenchParts] Closing Workspace gives &quot;Widget disposed too early!&quot; in log (FIXED) +Bug 302308. [Perspectives] NPE in PerspectiveHelper.addPart() (FIXED) +Bug 312540. [LinkedResources] Copy resource in Navigator and Project Explorer always shows dialog (FIXED) +Bug 327004. [Viewers] Widget is disposed exception when refreshing TreeViewer after modifying a filter (FIXED) +Bug 335985. Adapt the KeyController model to the e4 model (NEW) +Bug 338912. [Markers] Issues in Marker preferences dialog (FIXED) +Bug 340978. [IDE] Add UI preference for new Preference: PREF_LIGHTWEIGHT_AUTO_REFRESH (FIXED) +Bug 341219. [MPE] MultiPageEditorSite may not end up forwarding post selection events (FIXED) +Bug 341259. [JFace] Add debug flag to find bad content providers that return multiple equal children (FIXED) +Bug 341327. [Commands] Handler conflict due to multiple instances of EditorActionBars for one editor id (FIXED) +Bug 341612. most tests won&apos;t run by default (FIXED) + + + Integration Build (March 28, 2011, 2:55 p.m.) + Problem reports updated + +Bug 130854. [CellEditors] JFace TableViewer ignoring ICellEditor validator state (FIXED) +Bug 323431. [ActivityMgmt] ConcurrentModificationException when activities added dynamically (FIXED) +Bug 340268. [Import/Export] Button label truncation on Import/Export Preferences dialogs (FIXED) +Bug 340342. [Contributions] Tooltips for command (FIXED) +Bug 340656. [Preferences] FileEditorsPreferencePage reuses a GridData instance for two different controls (FIXED) + + + Integration Build (March 21, 2011, 2:44 p.m.) + Problem reports updated + +Bug 297375. [Contributions] DynamicToolBarContributionItem needs to proxy more methods (FIXED) +Bug 306352. [Preferences] PreferenceConverter does not store black color in preference store (REOPENED) +Bug 339129. Perspective reset actions are not consistent. (FIXED) +Bug 339713. [Markers] number of visible items not preserved when view is closed (FIXED) + + + Integration Build (March 14, 2011, 2:56 p.m.) + Problem reports updated + +Bug 339129. Perspective reset actions are not consistent. (FIXED) +Bug 339227. [Preferences] Startup and shutdown preference page: Restore defaults does not work as expected (FIXED) +Bug 339267. TrayDialog closes the tray if the help button is pressed with a cheat sheet open (FIXED) + + + Integration Build (March 10, 2011, 10:32 a.m.) + Problem reports updated + +Bug 339481. [Markers] NegativeArraySizeException when trying to create Problems view (REOPENED) + + + Integration Build (March 09, 2011, 4:10 p.m.) + Problem reports updated + +Bug 339347. [Markers] Can&apos;t toggle item limits in Problems view any more without losing limit (FIXED) + + + Integration Build (March 09, 2011, 11:48 a.m.) + Problem reports updated + +Bug 225601. Adopt API tooling for UI bundles (FIXED) +Bug 283676. [FieldAssist] ControlDecoration should add @noextend API tooling tag (FIXED) +Bug 284330. [JFace] Add isVisible API to ControlDecoration (FIXED) +Bug 287454. [KeyBindings] F16-F19 unusable as shortcut keys in General -&gt; Keys (FIXED) +Bug 330206. Help button setHelpAvailable(), API is not working (FIXED) +Bug 339080. API tool errors in latest SWT (FIXED) + + + Integration Build (March 07, 2011, 11:30 a.m.) + Problem reports updated + +Bug 338843. Update Display#getAppMenuBar() calls (FIXED) + + + Integration Build (March 06, 2011, 7:26 p.m.) + Problem reports updated + +Bug 231081. [Markers] Polish Problems view&apos;s columns preferences (REOPENED) +Bug 283820. [Contexts] NPE on Keys preference page in ContextModel.filterContexts (FIXED) +Bug 318914. [WorkingSets] Provide a preference to set size of the list of most recently used working sets (FIXED) +Bug 327396. [WorkingSets] updating of working sets during workbench restore can cause loss of working sets (NEW) +Bug 333417. [KeyBindings] Rename &quot;Workbench&quot; context and hide if not supported (FIXED) +Bug 335308. [JFace] JavaDoc of ControlDecoration#setDescriptionText is wrong (FIXED) +Bug 335960. [IDE] Update BuildAction to use new Workspace Build Configurations API (FIXED) +Bug 338056. SourceProviders through plugin.xml do not work (FIXED) +Bug 338843. Update Display#getAppMenuBar() calls (FIXED) + + + Integration Build (March 06, 2011, 7:23 p.m.) + Problem reports updated + +Bug 231081. [Markers] Polish Problems view&apos;s columns preferences (REOPENED) +Bug 283820. [Contexts] NPE on Keys preference page in ContextModel.filterContexts (FIXED) +Bug 318914. [WorkingSets] Provide a preference to set size of the list of most recently used working sets (FIXED) +Bug 327396. [WorkingSets] updating of working sets during workbench restore can cause loss of working sets (NEW) +Bug 333417. [KeyBindings] Rename &quot;Workbench&quot; context and hide if not supported (FIXED) +Bug 335308. [JFace] JavaDoc of ControlDecoration#setDescriptionText is wrong (FIXED) +Bug 335960. [IDE] Update BuildAction to use new Workspace Build Configurations API (FIXED) +Bug 338056. SourceProviders through plugin.xml do not work (FIXED) +Bug 338843. Update Display#getAppMenuBar() calls (FIXED) + + + Integration Build (M�???�??�?¤rz 07, 2011, 12:34 a.m.) + Problem reports updated + +Bug 331992. Workspace lock dialog not brought to front (FIXED) + + + Integration Build (February 28, 2011, 2:52 p.m.) + Problem reports updated + +Bug 72556. [KeyBindings] interactions: Mnemonics should not work across workbench parts (FIXED) +Bug 267424. [Perspectives] Closing a hidden editor (FIXED) +Bug 333417. [KeyBindings] Rename &quot;Workbench&quot; context and hide if not supported (FIXED) + + + Integration Build (February 22, 2011, 8:04 a.m.) + Problem reports updated + +Bug 231081. [Markers] Polish Problems view&apos;s columns preferences (FIXED) +Bug 297258. [IDE] Dialog font not honoured completely in the &apos;Local History&apos; preference page (FIXED) +Bug 305367. [DataBinding] Detail value observables for observable (list|set|map)s (FIXED) +Bug 333417. [KeyBindings] Rename &quot;Workbench&quot; context and hide if not supported (FIXED) +Bug 333684. [Dialogs] SWTExceptions when closing launch configuration dialog with the help up (FIXED) +Bug 335543. ProgressAnimationItem toolbar button selection opens ProgressView (FIXED) +Bug 335996. [Dialogs] TrayDialog must not include tray when saving size (FIXED) +Bug 337229. Make OpenStrategy&apos;s constant for post selection delay API (FIXED) +Bug 337347. Mention that IPartListener2 implementations can implement IPageChangedListener to get page change notifications (FIXED) + + + Integration Build (February 14, 2011, 3:00 p.m.) + Problem reports updated + +Bug 140101. [Markers] Focus cannot be set to &quot;Creation time&quot; field in the properties dialog of the task (FIXED) +Bug 231081. [Markers] Polish Problems view&apos;s columns preferences (FIXED) +Bug 269916. [EFS] [Accessibility]Provide shortcut key for &quot;Choose file system&quot; in New Report Project dialog (FIXED) +Bug 313899. [Progress] Every user-job causes a busy cursor to be shown for a minimum of 250ms (FIXED) +Bug 325743. [PropertiesView] Blank display when maximize Properties view for a resource in a different view (FIXED) +Bug 328708. Colors and Fonts preference page: Reset is broken (FIXED) +Bug 336682. [ErrorHandling] testSupport2 swallows the exception (FIXED) +Bug 336684. [JFace] NPE in Tray Dialog (FIXED) +Bug 336954. [Dialogs] OpenResourceDialog &amp; FilteredResourcesSelectionDialog set bogus help context to parent shell (FIXED) + + + Integration Build (February 07, 2011, 2:28 p.m.) + Problem reports updated + +Bug 67035. [EditorMgmt] Hide Editors command should be renamed (FIXED) +Bug 105917. [IDE] Resource property page should mention the recursive &apos;isDerived&apos; value (FIXED) +Bug 129309. [Workbench] allow &apos;Copy&apos; on the status line (FIXED) +Bug 272153. [Wizards] Accessibility: Reading of back/next buttons by Screenreader (FIXED) +Bug 302308. [Perspectives] NPE in PerspectiveHelper.addPart() (NEW) +Bug 313430. [Workbench] NPE during startup at WorkbenchKeyboard.isPartialMatch (FIXED) +Bug 317102. [EditorMgmt] Recursive editor activation when using AbstractMultiEditor (FIXED) +Bug 329754. [Presentations] Misplaced view toolbar (FIXED) +Bug 332367. [DataBinding] Performance of (WritableList|SimplePropertyObservableMap)#clear() (FIXED) +Bug 334996. PageBook#showPage(Control) should set all other pages to invisible (FIXED) +Bug 335877. [ActivityMgmt] [QuickAccess] Disabled/filtered contributions are available in the Quick Access dialog (FIXED) +Bug 335976. CCE when trying to expand the markers&apos; view&apos;s &apos;Group By&apos; submenu (FIXED) + + + Integration Build (January 31, 2011, 3:01 p.m.) + Problem reports updated + +Bug 55295. [ViewMgmt] View menu is shown even if all of its items are invisible (FIXED) +Bug 188700. [Quick Acces] Ctrl+3 dialog too small in High Contrast (FIXED) +Bug 196856. [EditorMgmt] &apos;Switch to Editor&apos; dialog should persist dialog bounds even if the dialog has been closed regularly (FIXED) +Bug 310475. [FastView] Fast view&apos;s system menu enables/disables unpredictably (FIXED) +Bug 334362. Properties dialog: properties for closed project are sometimes wrong (FIXED) +Bug 334636. [TabbedProperties] NullPointerException in TabbedPropertySheetPage.disposeContributor (FIXED) +Bug 335608. [BiDi] Cannot launch with com.ibm.icu.base (FIXED) + + + Integration Build (January 26, 2011, 8:01 p.m.) + Problem reports updated + +Bug 332644. [EditorMgmt] DefaultPartList leaks shells (REOPENED) + + + Integration Build (January 26, 2011, 10:16 a.m.) + Problem reports updated + +Bug 335318. Improve wording of new derived resource encoding option (FIXED) + + + Integration Build (January 24, 2011, 12:23 p.m.) + Problem reports updated + +Bug 2265. New project wizard bases icon on the closed icon (1GEG3RS) (FIXED) + + + Integration Build (January 24, 2011, 7:44 a.m.) + Problem reports updated + + + + Integration Build (January 21, 2011, 4:08 p.m.) + Problem reports updated + +Bug 303889. [BiDi] BIDI3.6: Triggering Eclipse mirroring and Bidi-script based languages translation (FIXED) +Bug 334236. [Import/Export] &quot;Copy projects into workspace&quot; should not select all projects on change (FIXED) +Bug 334524. [Commands] Loosing current selection of view after perspective switch (FIXED) + + + Integration Build (January 17, 2011, 3:03 p.m.) + Problem reports updated + +Bug 300472. [Dialogs] [JFace] Provide accessor for dialog messages (FIXED) +Bug 325899. [Preferences] [accessibility] Preferences Dialog menu button needs a tooltip (FIXED) +Bug 333590. [Workbench] WorkbenchAdapterFactory can&apos;t adapt workbench adapter extension interfaces (FIXED) +Bug 333684. [Dialogs] SWTExceptions when closing launch configuration dialog with the help up (FIXED) +Bug 333970. [ErrorHandling] Test failures in official build: at org.eclipse.ui.tests.statushandlers.StatusDialogManagerTest.testBug276371(StatusDialogManagerTest.java:638) (FIXED) +Bug 334125. StatusPart.createShowLogButton(..) leaks an image (FIXED) + + + Integration Build (January 10, 2011, 3:03 p.m.) + Problem reports updated + +Bug 74073. [Mac] Closing window should not exit App (FIXED) +Bug 97787. [EditorMgmt] Untitled Text Editor - Can lose unsaved content when reusing text editors (FIXED) +Bug 127852. [UX][Help] Help button should be a toggle (FIXED) +Bug 207510. Call to IResource.setEncoding() persists derived file&apos;s encoding setting in .settings\org.eclipse.core.resources.prefs (FIXED) +Bug 208626. [KeyBindings] Mnemonic gets hidden if there is existing Alt key binding (FIXED) +Bug 221172. [Commands] [ViewMgmt] Window &gt; Show View doesn&apos;t open existing instances of multi-instance views (FIXED) +Bug 235657. [Markers][Undo] regression: can no longer undo marker operations (FIXED) +Bug 270007. [GlobalActions] Registering actions should not be required to use standard org.eclipse.ui commands (NEW) +Bug 300368. Resource Working Set shows inexistent project that cannot be deleted in Package Explorer (FIXED) +Bug 305216. [EditorMgmt] Focus lost when closing a dirty editor from the editor selection dialog (FIXED) +Bug 306611. [DataBinding] Converted value property (FIXED) +Bug 313303. [KeyBindings] Add &quot;shortcuts&quot; keywords to Keys preference page (FIXED) +Bug 323444. [Undo] [Commands] java.util.ConcurrentModificationException when trying to get the undo history from a source viewer (FIXED) +Bug 324078. [IDE] Cannot create a virtual TreeViewer in ContentOutlinePage (FIXED) +Bug 324663. [ActivityMgmt] Enabling activity through core expression overrides pattern binding, causing exception (FIXED) +Bug 326340. [Workbench] Removing recent workspaces doesn&apos;t remove them from the &quot;Switch Workspace&quot; menu (FIXED) +Bug 326695. [Workbench] WorkbenchLabelProvider and IWorkbenchAdapter doesn&apos;t support StyledString (FIXED) +Bug 331335. [Wizards] Bad implementation of IWizard&apos;s dispose() method can prevent the dialog from closing (FIXED) +Bug 331348. [DataBinding] Make get methods of properties non-final (FIXED) +Bug 331621. Workbench throws NPE&apos;s on initial startup after install when bundles are started programmatically in earlyStartup() (FIXED) +Bug 331665. Add UI for Bug 207510 (FIXED) +Bug 331909. [Workbench] Intermittent test failure in PlatformUITest.testWithoutDisplayAccess_sync() (FIXED) +Bug 332123. [Examples] Get rid of warnings in &apos;org.eclipse.ui.examples.propertysheet&apos; (FIXED) +Bug 332216. [ViewMgmt] ErrorViewPart must implement setFocus() method (FIXED) +Bug 332644. [EditorMgmt] DefaultPartList leaks shells (FIXED) +Bug 332930. Simplify code from bug 207510 (FIXED) +Bug 333101. [Preferences] Redundant preferences node creation in LineDelimiterEditor (FIXED) +Bug 333577. [Win32] WindowXP command &quot;Close Group&quot; can not close all the Eclipse window that in one group (FIXED) +Bug 333584. [GlobalActions] Save does not work (FIXED) +Bug 333634. Cannot undo deletion of markers (FIXED) +Bug 333689. [About] About dialog text - needs to not cache system property values (FIXED) +Bug 333741. 9 Errors in WorkspaceOperationsTests (FIXED) + + + Integration Build (December 13, 2010, 6:53 p.m.) + Problem reports updated + + + + Integration Build (Dezember 08, 2010, 1:32 p.m.) + Problem reports updated + +Bug 162079. [PropertiesView] Properties view should be a post selection listener (FIXED) + + + Integration Build (December 06, 2010, 11:53 a.m.) + Problem reports updated + +Bug 110684. [PresentationAPI] [RCP] [EditorMgmt] Workbench sometimes restores multiple empty editor folders (FIXED) +Bug 162079. [PropertiesView] Properties view should be a post selection listener (FIXED) +Bug 207773. [Workbench] IMemento reference incomplete (FIXED) +Bug 244316. [WorkbenchLauncher] File-&gt;&quot;Switch Workspace&quot;-&gt;Other does nothing first time (ASSIGNED) +Bug 309746. [CommonNavigator] intermittent test failure in org.eclipse.ui.tests.navigator.SorterTest.testSorterContentOverride (REOPENED) +Bug 331524. WorkbenchPreferenceDialog overrides client focus (was: [preferences] Configuring problem severity via hover broken) (FIXED) + + Integration Build (November 29, 2010, 5:07 p.m.) Problem reports updated diff --git a/bundles/org.eclipse.ui/plugin.properties b/bundles/org.eclipse.ui/plugin.properties index 0c95fc0..11c06a1 100644 --- a/bundles/org.eclipse.ui/plugin.properties +++ b/bundles/org.eclipse.ui/plugin.properties @@ -1,5 +1,5 @@ ############################################################################### -# Copyright (c) 2000, 2010 IBM Corporation and others. +# Copyright (c) 2000, 2011 IBM Corporation and others. # All rights reserved. This program and the accompanying materials # are made available under the terms of the Eclipse Public License v1.0 # which accompanies this distribution, and is available at @@ -157,8 +157,8 @@ command.helpSearch.name = Help Search command.dynamicHelp.description = Open the dynamic help command.dynamicHelp.name = Dynamic Help -command.hideShowEditors.description = Hide all editors -command.hideShowEditors.name = Hide Editors +command.hideShowEditors.description = Toggles the visibility of the editor area +command.hideShowEditors.name = Toggle Editor Area Visibility command.import.description = Import command.import.importWizardIdParameter.name = Import Wizard command.import.name = Import @@ -258,9 +258,12 @@ command.showSystemMenu.name = Show System Menu command.showViewMenu.description = Show the view menu command.showViewMenu.name = Show View Menu +command.showContextMenu.description = Show the context menu +command.showContextMenu.name = Show Context Menu command.showView.name = Show View command.showView.description = Shows a particular view command.showView.viewIdParameter = View +command.showView.secondaryIdParameter = Secondary Id command.showView.makeFastParameter = As FastView command.switchToEditor.description = Switch to an editor command.switchToEditor.name = Switch to Editor @@ -283,6 +286,8 @@ context.window.description = A window is open context.actionSet.name = Action Set context.actionSet.description = Parent context for action sets +context.workbenchMenu.name = Workbench Menu +context.workbenchMenu.description = When no Workbench windows are active keyConfiguration.default.description = Default Key Configuration keyConfiguration.default.name = Default @@ -347,4 +352,4 @@ installationPage.main.name = About installationPage.system.name = Configuration -installationPage.plugins.name = Plug-ins \ No newline at end of file +installationPage.plugins.name = Plug-ins diff --git a/bundles/org.eclipse.ui/plugin.xml b/bundles/org.eclipse.ui/plugin.xml index e78ffa5..21d6c05 100644 --- a/bundles/org.eclipse.ui/plugin.xml +++ b/bundles/org.eclipse.ui/plugin.xml @@ -94,6 +94,11 @@ id=&quot;org.eclipse.ui.contexts.actionSet&quot; name=&quot;%context.actionSet.name&quot;&gt; + + @@ -172,6 +177,17 @@ sequence=&quot;M1+M2+Z&quot; schemeId=&quot;org.eclipse.ui.defaultAcceleratorConfiguration&quot; platform=&quot;carbon&quot;/&gt; + + + + @@ -1152,6 +1182,10 @@ id=&quot;org.eclipse.ui.views.showView.viewId&quot; name=&quot;%command.showView.viewIdParameter&quot; values=&quot;org.eclipse.ui.internal.registry.ViewParameterValues&quot; /&gt; + + + diff --git a/bundles/org.eclipse.ui/schema/actionSets.exsd b/bundles/org.eclipse.ui/schema/actionSets.exsd index 0ad7f9d..23f755f 100644 --- a/bundles/org.eclipse.ui/schema/actionSets.exsd +++ b/bundles/org.eclipse.ui/schema/actionSets.exsd @@ -304,7 +304,7 @@ - optional attribute indicating whether the retarget action allows the handler to override it&apos;s label and tooltip. Only applies if &lt;samp&gt;retarget&lt;/samp&gt; attribute is true. + optional attribute indicating whether the retarget action allows the handler to override its label and tooltip. Only applies if &lt;samp&gt;retarget&lt;/samp&gt; attribute is true. @@ -597,7 +597,7 @@ - Copyright (c) 2000, 2007 IBM Corporation and others.&lt;br&gt; + Copyright (c) 2000, 2011 IBM Corporation and others.&lt;br&gt; All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at &lt;a diff --git a/bundles/org.eclipse.ui/schema/commands.exsd b/bundles/org.eclipse.ui/schema/commands.exsd index 157ce95..cce623a 100644 --- a/bundles/org.eclipse.ui/schema/commands.exsd +++ b/bundles/org.eclipse.ui/schema/commands.exsd @@ -7,7 +7,7 @@ &lt;p&gt; -The &lt;code&gt;org.eclipse.ui.commands&lt;/code&gt; extension point is used to declare commands and command categories, using the &lt;code&gt;command&lt;/code&gt; and &lt;code&gt;category&lt;/code&gt; elements. A command is an abstract representation of some semantic behaviour, but not it&apos;s actual implementation. This allows different developers to contribute specific behaviour for their individual parts. For example, there might be a &quot;paste&quot; command with one implementation in an editor and a different implementation in an explorer widget. These implementations are called handlers. Commands can also be viewed as declarative function pointers, or signal handlers. +The &lt;code&gt;org.eclipse.ui.commands&lt;/code&gt; extension point is used to declare commands and command categories, using the &lt;code&gt;command&lt;/code&gt; and &lt;code&gt;category&lt;/code&gt; elements. A command is an abstract representation of some semantic behaviour, but not its actual implementation. This allows different developers to contribute specific behaviour for their individual parts. For example, there might be a &quot;paste&quot; command with one implementation in an editor and a different implementation in an explorer widget. These implementations are called handlers. Commands can also be viewed as declarative function pointers, or signal handlers. &lt;/p&gt; @@ -851,7 +851,7 @@ - Copyright (c) 2000, 2007 IBM Corporation and others.&lt;br&gt; + Copyright (c) 2000, 2011 IBM Corporation and others.&lt;br&gt; All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at &lt;a diff --git a/bundles/org.eclipse.ui/schema/propertiesView.exsd b/bundles/org.eclipse.ui/schema/propertiesView.exsd index 2d00bdb..dc1f51f 100644 --- a/bundles/org.eclipse.ui/schema/propertiesView.exsd +++ b/bundles/org.eclipse.ui/schema/propertiesView.exsd @@ -3,7 +3,7 @@ - + This extension point is used to modify behavior of the Properties view. @@ -100,7 +100,7 @@ - Copyright (c) 2009 IBM Corporation and others.&lt;br&gt; + Copyright (c) 2009, 2011 IBM Corporation and others.&lt;br&gt; All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at &lt;a diff --git a/bundles/org.eclipse.ui/schema/statusHandlers.exsd b/bundles/org.eclipse.ui/schema/statusHandlers.exsd index d8667e6..d11ffcf 100644 --- a/bundles/org.eclipse.ui/schema/statusHandlers.exsd +++ b/bundles/org.eclipse.ui/schema/statusHandlers.exsd @@ -3,7 +3,7 @@ - + &lt;p&gt; @@ -261,7 +261,7 @@ - Copyright (c) 2006, 2007 IBM Corporation and others.&lt;br&gt; + Copyright (c) 2006, 2011 IBM Corporation and others.&lt;br&gt; All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at &lt;a diff --git a/bundles/org.eclipse.ui/schema/themes.exsd b/bundles/org.eclipse.ui/schema/themes.exsd index ce88415..522c27f 100644 --- a/bundles/org.eclipse.ui/schema/themes.exsd +++ b/bundles/org.eclipse.ui/schema/themes.exsd @@ -546,7 +546,7 @@ - This element allows a category to be bound to a specific presentation as described by the &lt;code&gt;org.eclipse.ui.presentationFactory&lt;/code&gt; extension point. If a category has any presentation bindings then it (and it&apos;s children) is only configurable by the user if it is bound to the active presentation. This is useful for removing unused items from user consideration. + This element allows a category to be bound to a specific presentation as described by the &lt;code&gt;org.eclipse.ui.presentationFactory&lt;/code&gt; extension point. If a category has any presentation bindings then it (and its children) is only configurable by the user if it is bound to the active presentation. This is useful for removing unused items from user consideration. @@ -687,7 +687,7 @@ - Copyright (c) 2003, 2006 IBM Corporation and others.&lt;br&gt; + Copyright (c) 2003, 2011 IBM Corporation and others.&lt;br&gt; All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at &lt;a diff --git a/bundles/org.eclipse.ui/schema/viewActions.exsd b/bundles/org.eclipse.ui/schema/viewActions.exsd index 64dc294..9bdb361 100644 --- a/bundles/org.eclipse.ui/schema/viewActions.exsd +++ b/bundles/org.eclipse.ui/schema/viewActions.exsd @@ -3,7 +3,7 @@ - + &lt;p&gt;This extension point is used to add actions to the pulldown menu and toolbar for views registered by other plug-ins. Each view has a local pulldown menu normally activated @@ -494,7 +494,7 @@ - Copyright (c) 2002, 2007 IBM Corporation and others.&lt;br&gt; + Copyright (c) 2002, 2011 IBM Corporation and others.&lt;br&gt; All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at &lt;a diff --git a/bundles/org.eclipse.ui/src/org/eclipse/ui/internal/UIPreferenceInitializer.java b/bundles/org.eclipse.ui/src/org/eclipse/ui/internal/UIPreferenceInitializer.java index 693e7fe..c04d4c3 100644 --- a/bundles/org.eclipse.ui/src/org/eclipse/ui/internal/UIPreferenceInitializer.java +++ b/bundles/org.eclipse.ui/src/org/eclipse/ui/internal/UIPreferenceInitializer.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2008 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -152,6 +152,8 @@ node.putInt(IWorkbenchPreferenceConstants.EDITOR_TAB_POSITION, SWT.TOP); node.putBoolean( IWorkbenchPreferenceConstants.SHOW_MULTIPLE_EDITOR_TABS, true); + + node.putInt(IWorkbenchPreferenceConstants.RECENTLY_USED_WORKINGSETS_SIZE, 5); migrateInternalPreferences(); diff --git a/examples/org.eclipse.jface.examples.databinding/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.jface.examples.databinding/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.jface.examples.databinding/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.jface.snippets/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.jface.snippets/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.jface.snippets/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.ui.examples.contributions/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.ui.examples.contributions/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.ui.examples.contributions/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.ui.examples.fieldassist/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.ui.examples.fieldassist/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.ui.examples.fieldassist/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.ui.examples.job/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.ui.examples.job/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.ui.examples.job/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.ui.examples.multipageeditor/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.ui.examples.multipageeditor/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.ui.examples.multipageeditor/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.ui.examples.navigator/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.ui.examples.navigator/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.ui.examples.navigator/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.ui.examples.presentation/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.ui.examples.presentation/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.ui.examples.presentation/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.ui.examples.propertysheet/.classpath b/examples/org.eclipse.ui.examples.propertysheet/.classpath index ad14fb0..4e8418b 100644 --- a/examples/org.eclipse.ui.examples.propertysheet/.classpath +++ b/examples/org.eclipse.ui.examples.propertysheet/.classpath @@ -2,6 +2,6 @@ - + diff --git a/examples/org.eclipse.ui.examples.propertysheet/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.ui.examples.propertysheet/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.ui.examples.propertysheet/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.ui.examples.propertysheet/.settings/org.eclipse.jdt.core.prefs b/examples/org.eclipse.ui.examples.propertysheet/.settings/org.eclipse.jdt.core.prefs index 36e5b57..e492bc5 100644 --- a/examples/org.eclipse.ui.examples.propertysheet/.settings/org.eclipse.jdt.core.prefs +++ b/examples/org.eclipse.ui.examples.propertysheet/.settings/org.eclipse.jdt.core.prefs @@ -1,4 +1,4 @@ -#Mon Jan 15 21:12:52 EST 2007 +#Wed Dec 08 12:02:59 CET 2010 eclipse.preferences.version=1 org.eclipse.jdt.core.builder.cleanOutputFolder=clean org.eclipse.jdt.core.builder.duplicateResourceTask=warning @@ -24,13 +24,13 @@ org.eclipse.jdt.core.compiler.debug.sourceFile=generate org.eclipse.jdt.core.compiler.doc.comment.support=enabled org.eclipse.jdt.core.compiler.maxProblemPerUnit=100 -org.eclipse.jdt.core.compiler.problem.assertIdentifier=error +org.eclipse.jdt.core.compiler.problem.assertIdentifier=warning org.eclipse.jdt.core.compiler.problem.deprecation=warning org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled org.eclipse.jdt.core.compiler.problem.discouragedReference=error org.eclipse.jdt.core.compiler.problem.emptyStatement=warning -org.eclipse.jdt.core.compiler.problem.enumIdentifier=error +org.eclipse.jdt.core.compiler.problem.enumIdentifier=warning org.eclipse.jdt.core.compiler.problem.fieldHiding=warning org.eclipse.jdt.core.compiler.problem.finalParameterBound=warning org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning @@ -63,7 +63,6 @@ org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore -org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=enabled org.eclipse.jdt.core.compiler.problem.unusedImport=error diff --git a/examples/org.eclipse.ui.examples.propertysheet/META-INF/MANIFEST.MF b/examples/org.eclipse.ui.examples.propertysheet/META-INF/MANIFEST.MF index d41f763..674dbcb 100644 --- a/examples/org.eclipse.ui.examples.propertysheet/META-INF/MANIFEST.MF +++ b/examples/org.eclipse.ui.examples.propertysheet/META-INF/MANIFEST.MF @@ -2,7 +2,7 @@ Bundle-ManifestVersion: 2 Bundle-Name: %Plugin.name Bundle-SymbolicName: org.eclipse.ui.examples.propertysheet; singleton:=true -Bundle-Version: 3.2.100.qualifier +Bundle-Version: 3.2.200.qualifier Bundle-ClassPath: propertysheet.jar Bundle-Activator: org.eclipse.ui.examples.propertysheet.PropertySheetPlugin Bundle-Vendor: %Plugin.providerName @@ -16,4 +16,6 @@ org.eclipse.text, org.eclipse.ui.workbench.texteditor, org.eclipse.ui.editors -Eclipse-LazyStart: true +Bundle-ActivationPolicy: lazy +Export-Package: org.eclipse.ui.examples.propertysheet +Bundle-RequiredExecutionEnvironment: J2SE-1.4 diff --git a/examples/org.eclipse.ui.examples.rcp.browser/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.ui.examples.rcp.browser/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.ui.examples.rcp.browser/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.ui.examples.readmetool/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.ui.examples.readmetool/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.ui.examples.readmetool/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.ui.examples.undo/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.ui.examples.undo/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.ui.examples.undo/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.ui.examples.views.properties.tabbed.article/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.ui.examples.views.properties.tabbed.article/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.ui.examples.views.properties.tabbed.article/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.ui.examples.views.properties.tabbed.hockeyleague/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.ui.examples.views.properties.tabbed.hockeyleague/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.ui.examples.views.properties.tabbed.hockeyleague/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.ui.examples.views.properties.tabbed.logic/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.ui.examples.views.properties.tabbed.logic/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.ui.examples.views.properties.tabbed.logic/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.ui.forms.examples/.settings/org.eclipse.core.runtime.prefs b/examples/org.eclipse.ui.forms.examples/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/examples/org.eclipse.ui.forms.examples/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/examples/org.eclipse.ui.forms.examples/META-INF/MANIFEST.MF b/examples/org.eclipse.ui.forms.examples/META-INF/MANIFEST.MF index b6b8683..a9ed9c3 100644 --- a/examples/org.eclipse.ui.forms.examples/META-INF/MANIFEST.MF +++ b/examples/org.eclipse.ui.forms.examples/META-INF/MANIFEST.MF @@ -2,7 +2,7 @@ Bundle-ManifestVersion: 2 Bundle-Name: %pluginName Bundle-SymbolicName: org.eclipse.ui.forms.examples; singleton:=true -Bundle-Version: 3.1.100 +Bundle-Version: 3.1.200 Bundle-ClassPath: examples.jar Bundle-Activator: org.eclipse.ui.forms.examples.internal.ExamplesPlugin Bundle-Vendor: Eclipse.org diff --git a/examples/org.eclipse.ui.forms.examples/src/org/eclipse/ui/forms/examples/views/FormView.java b/examples/org.eclipse.ui.forms.examples/src/org/eclipse/ui/forms/examples/views/FormView.java index df7bf12..bf8e73f 100644 --- a/examples/org.eclipse.ui.forms.examples/src/org/eclipse/ui/forms/examples/views/FormView.java +++ b/examples/org.eclipse.ui.forms.examples/src/org/eclipse/ui/forms/examples/views/FormView.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2007 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -11,6 +11,8 @@ package org.eclipse.ui.forms.examples.views; import org.eclipse.jface.resource.JFaceResources; import org.eclipse.swt.SWT; +import org.eclipse.swt.events.SelectionEvent; +import org.eclipse.swt.events.SelectionListener; import org.eclipse.swt.layout.GridLayout; import org.eclipse.swt.widgets.Button; import org.eclipse.swt.widgets.Composite; @@ -37,6 +39,9 @@ public class FormView extends ViewPart { private FormToolkit toolkit; private ScrolledForm form; + private ImageHyperlink ih; + private Button enableHyperlink; + private Button clearHyperlinkImage; /** * The constructor. */ @@ -75,11 +80,48 @@ td.colspan = 2; button.setLayoutData(td); - ImageHyperlink ih = toolkit.createImageHyperlink(form.getBody(), SWT.NULL); - ih.setText(&quot;Image link with no image&quot;); ih = toolkit.createImageHyperlink(form.getBody(), SWT.NULL); ih.setImage(ExamplesPlugin.getDefault().getImageRegistry().get(ExamplesPlugin.IMG_SAMPLE)); - ih.setText(&quot;Link with image and text&quot;); + ih.setText(&quot;Image Hyperlink with image and text&quot;); + td = new TableWrapData(); + td.colspan = 2; + ih.setLayoutData(td); + + enableHyperlink = toolkit.createButton(form.getBody(), &quot;Hyperlink Enabled&quot;, SWT.CHECK); + enableHyperlink.setSelection(true); + enableHyperlink.addSelectionListener(new SelectionListener() { + public void widgetSelected(SelectionEvent e) { + ih.setEnabled(enableHyperlink.getSelection()); + form.reflow(true); + } + + public void widgetDefaultSelected(SelectionEvent e) { + } + }); + + td = new TableWrapData(); + td.colspan = 2; + enableHyperlink.setLayoutData(td); + + clearHyperlinkImage = toolkit.createButton(form.getBody(), &quot;Hyperlink has image&quot;, SWT.CHECK); + clearHyperlinkImage.setSelection(true); + clearHyperlinkImage.addSelectionListener(new SelectionListener() { + + public void widgetSelected(SelectionEvent e) { + if (clearHyperlinkImage.getSelection()) { + ih.setImage(ExamplesPlugin.getDefault().getImageRegistry().get(ExamplesPlugin.IMG_SAMPLE)); + } else { + ih.setImage(null); + } + form.reflow(true); + } + + public void widgetDefaultSelected(SelectionEvent e) { + } + }); + td = new TableWrapData(); + td.colspan = 2; + clearHyperlinkImage.setLayoutData(td); ExpandableComposite ec = toolkit.createExpandableComposite(form.getBody(), ExpandableComposite.TREE_NODE|ExpandableComposite.CLIENT_INDENT); ImageHyperlink eci = toolkit.createImageHyperlink(ec, SWT.NULL); diff --git a/tests/org.eclipse.jface.tests.databinding.conformance/.settings/org.eclipse.core.runtime.prefs b/tests/org.eclipse.jface.tests.databinding.conformance/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/tests/org.eclipse.jface.tests.databinding.conformance/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/tests/org.eclipse.jface.tests.databinding/.settings/org.eclipse.core.runtime.prefs b/tests/org.eclipse.jface.tests.databinding/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/tests/org.eclipse.jface.tests.databinding/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/tests/org.eclipse.jface.tests.databinding/JFace-Data Binding Test Suite.launch b/tests/org.eclipse.jface.tests.databinding/JFace-Data Binding Test Suite.launch index 844642f..a0f323a 100644 --- a/tests/org.eclipse.jface.tests.databinding/JFace-Data Binding Test Suite.launch +++ b/tests/org.eclipse.jface.tests.databinding/JFace-Data Binding Test Suite.launch @@ -1,5 +1,4 @@ - - + @@ -35,7 +34,7 @@ - + @@ -45,7 +44,8 @@ + - + \ No newline at end of file diff --git a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/databinding/beans/SetOnlyJavaBeanTest.java b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/databinding/beans/SetOnlyJavaBeanTest.java new file mode 100644 index 0000000..c3286f9 --- /dev/null +++ b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/databinding/beans/SetOnlyJavaBeanTest.java @@ -0,0 +1,68 @@ +/******************************************************************************* + * Copyright (c) 2006 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation (bug 146488) + * Matthew Hall - initial API and implementation (bug 146488) + ******************************************************************************/ + +package org.eclipse.core.tests.databinding.beans; + +import org.eclipse.core.databinding.DataBindingContext; +import org.eclipse.core.databinding.UpdateValueStrategy; +import org.eclipse.core.databinding.beans.PojoProperties; +import org.eclipse.core.databinding.observable.value.IObservableValue; +import org.eclipse.jface.tests.databinding.AbstractDefaultRealmTestCase; + +/** + * @since 1.1 + */ +public class SetOnlyJavaBeanTest extends AbstractDefaultRealmTestCase { + + public void testValidationError() throws Exception { + Model model = new Model(); + model.setString(&quot;abc&quot;); + + Target target = new Target(); + + IObservableValue modelObservable = + PojoProperties.value(&quot;string&quot;).observe(model); + IObservableValue targetObservable = + PojoProperties.value(&quot;string&quot;).observe(target); + + DataBindingContext context = new DataBindingContext(); + context.bindValue(targetObservable, modelObservable, + new UpdateValueStrategy(UpdateValueStrategy.POLICY_NEVER), + new UpdateValueStrategy()); + + assertEquals(&quot;abc&quot;, target.string); + + modelObservable.setValue(&quot;xyz&quot;); + + assertEquals(&quot;xyz&quot;, target.string); + } + + public static class Model { + private String string; + + public String getString() { + return string; + } + + public void setString(String string) { + this.string = string; + } + } + + public static class Target { + private String string; + + public void setString(String value) { + this.string = value; + } + } +} \ No newline at end of file diff --git a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/databinding/observable/list/AbstractObservableListTest.java b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/databinding/observable/list/AbstractObservableListTest.java index fde28d4..5bea23e 100755 --- a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/databinding/observable/list/AbstractObservableListTest.java +++ b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/databinding/observable/list/AbstractObservableListTest.java @@ -8,7 +8,7 @@ * Contributors: * Brad Reynolds - initial API and implementation * Brad Reynolds - bug 167204 - * Matthew Hall - bugs 208858, 213145, 247367 + * Matthew Hall - bugs 208858, 213145, 247367, 349038 ******************************************************************************/ package org.eclipse.core.tests.databinding.observable.list; @@ -23,7 +23,9 @@ import org.eclipse.core.databinding.observable.ChangeEvent; import org.eclipse.core.databinding.observable.Diffs; +import org.eclipse.core.databinding.observable.DisposeEvent; import org.eclipse.core.databinding.observable.IChangeListener; +import org.eclipse.core.databinding.observable.IDisposeListener; import org.eclipse.core.databinding.observable.IObservable; import org.eclipse.core.databinding.observable.IObservableCollection; import org.eclipse.core.databinding.observable.IStaleListener; @@ -174,6 +176,29 @@ }); } + public void testAddDisposeListener_AfterDispose() { + list.dispose(); + list.addDisposeListener(new IDisposeListener() { + public void handleDispose(DisposeEvent event) { + // do nothing + } + }); + } + + public void testRemoveDisposeListener_AfterDispose() { + list.dispose(); + list.removeDisposeListener(new IDisposeListener() { + public void handleDispose(DisposeEvent event) { + // do nothing + } + }); + } + + public void testHasListeners_AfterDispose() { + list.dispose(); + list.hasListeners(); + } + public static Test suite() { TestSuite suite = new TestSuite(AbstractObservableListTest.class.getName()); suite.addTestSuite(AbstractObservableListTest.class); @@ -245,6 +270,10 @@ protected void fireListChange(ListDiff diff) { super.fireListChange(diff); } + + protected synchronized boolean hasListeners() { + return super.hasListeners(); + } } static class MutableObservableListStub extends AbstractObservableListStub { diff --git a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/databinding/observable/map/AbstractObservableMapTest.java b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/databinding/observable/map/AbstractObservableMapTest.java index 7f617e8..32c1d0f 100644 --- a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/databinding/observable/map/AbstractObservableMapTest.java +++ b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/databinding/observable/map/AbstractObservableMapTest.java @@ -7,6 +7,7 @@ * * Contributors: * Brad Reynolds - initial API and implementation + * Matthew Hall - bug 349038 ******************************************************************************/ package org.eclipse.core.tests.databinding.observable.map; @@ -15,7 +16,15 @@ import junit.framework.TestCase; +import org.eclipse.core.databinding.observable.ChangeEvent; +import org.eclipse.core.databinding.observable.DisposeEvent; +import org.eclipse.core.databinding.observable.IChangeListener; +import org.eclipse.core.databinding.observable.IDisposeListener; +import org.eclipse.core.databinding.observable.IStaleListener; +import org.eclipse.core.databinding.observable.StaleEvent; import org.eclipse.core.databinding.observable.map.AbstractObservableMap; +import org.eclipse.core.databinding.observable.map.IMapChangeListener; +import org.eclipse.core.databinding.observable.map.MapChangeEvent; import org.eclipse.core.databinding.observable.map.MapDiff; import org.eclipse.jface.databinding.conformance.util.CurrentRealm; import org.eclipse.jface.databinding.conformance.util.RealmTester; @@ -74,7 +83,84 @@ } }); } - + + public void testAddListChangeListener_AfterDispose() { + map.dispose(); + map.addMapChangeListener(new IMapChangeListener() { + public void handleMapChange(MapChangeEvent event) { + // do nothing + } + }); + } + + public void testRemoveListChangeListener_AfterDispose() { + map.dispose(); + map.removeMapChangeListener(new IMapChangeListener() { + public void handleMapChange(MapChangeEvent event) { + // do nothing + } + }); + } + + public void testAddChangeListener_AfterDispose() { + map.dispose(); + map.addChangeListener(new IChangeListener() { + public void handleChange(ChangeEvent event) { + // do nothing + } + }); + } + + public void testRemoveChangeListener_AfterDispose() { + map.dispose(); + map.removeChangeListener(new IChangeListener() { + public void handleChange(ChangeEvent event) { + // do nothing + } + }); + } + + public void testAddStaleListener_AfterDispose() { + map.dispose(); + map.addStaleListener(new IStaleListener() { + public void handleStale(StaleEvent staleEvent) { + // do nothing + } + }); + } + + public void testRemoveStaleListener_AfterDispose() { + map.dispose(); + map.removeStaleListener(new IStaleListener() { + public void handleStale(StaleEvent staleEvent) { + // do nothing + } + }); + } + + public void testAddDisposeListener_AfterDispose() { + map.dispose(); + map.addDisposeListener(new IDisposeListener() { + public void handleDispose(DisposeEvent event) { + // do nothing + } + }); + } + + public void testRemoveDisposeListener_AfterDispose() { + map.dispose(); + map.removeDisposeListener(new IDisposeListener() { + public void handleDispose(DisposeEvent event) { + // do nothing + } + }); + } + + public void testHasListeners_AfterDispose() { + map.dispose(); + map.hasListeners(); + } + static class AbstractObservableMapStub extends AbstractObservableMap { public Set entrySet() { return null; @@ -91,5 +177,9 @@ protected void fireStale() { super.fireStale(); } + + protected synchronized boolean hasListeners() { + return super.hasListeners(); + } } } diff --git a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/databinding/validation/MultiValidatorTest.java b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/databinding/validation/MultiValidatorTest.java index 4506a57..93a84ad 100644 --- a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/databinding/validation/MultiValidatorTest.java +++ b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/databinding/validation/MultiValidatorTest.java @@ -7,7 +7,7 @@ * * Contributors: * Matthew Hall - initial API and implementation (bug 218269) - * Matthew Hall - bug 237884, 251003 + * Matthew Hall - bugs 237884, 251003, 332504 * Ovidio Mallo - bugs 240590, 238909, 251003, 247741, 235859 ******************************************************************************/ @@ -391,6 +391,30 @@ assertTrue(validator.getTargets().contains(emptyListDependency)); } + public void testBug357568_MultiValidatorTargetAsDependency() { + validator = new MultiValidator() { + protected IStatus validate() { + ObservableTracker.getterCalled(dependency); + ObservableTracker.getterCalled(new DependencyObservable()); + ObservableTracker.getterCalled(validator.getTargets()); + return null; + } + }; + + validator.getValidationStatus().getValue(); + dependency.setValue(ValidationStatus.info(&quot;foo&quot;)); + } + + public void testBug357568_ValidationStatusAsDependency() { + validator = new MultiValidator() { + protected IStatus validate() { + return (IStatus) validator.getValidationStatus().getValue(); + } + }; + + validator.getValidationStatus(); + } + private static class DependencyObservableValue extends WritableValue { private boolean stale = false; diff --git a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/internal/databinding/ConverterValuePropertyTest.java b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/internal/databinding/ConverterValuePropertyTest.java new file mode 100644 index 0000000..a99170f --- /dev/null +++ b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/internal/databinding/ConverterValuePropertyTest.java @@ -0,0 +1,64 @@ +/******************************************************************************* + * Copyright (c) 2010 Ovidio Mallo and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * Ovidio Mallo - initial API and implementation (bug 306611) + ******************************************************************************/ + +package org.eclipse.core.tests.internal.databinding; + +import org.eclipse.core.databinding.BindingProperties; +import org.eclipse.core.databinding.conversion.IConverter; +import org.eclipse.core.databinding.property.value.IValueProperty; +import org.eclipse.core.internal.databinding.ConverterValueProperty; +import org.eclipse.core.internal.databinding.conversion.ObjectToStringConverter; +import org.eclipse.jface.tests.databinding.AbstractDefaultRealmTestCase; + +/** + * Tests for the {@link ConverterValueProperty} class. + */ +public class ConverterValuePropertyTest extends AbstractDefaultRealmTestCase { + + private IConverter converter; + + protected void setUp() throws Exception { + super.setUp(); + + converter = new ObjectToStringConverter(Integer.class); + } + + public void testGetValue() { + IValueProperty property = BindingProperties.convertedValue(converter); + + assertEquals(&quot;123&quot;, property.getValue(new Integer(123))); + } + + public void testGetValueForNullSource() { + // The converter converts null to &quot;&quot;. + IValueProperty property = BindingProperties.convertedValue(converter); + + // null should also be converted rather than simply returning null. + assertEquals(&quot;&quot;, property.getValue(null)); + } + + public void testSetValue() { + IValueProperty property = BindingProperties.convertedValue(converter); + + try { + property.setValue(new Integer(123), &quot;123&quot;); + fail(&quot;setting a value should trigger an exception!&quot;); + } catch (UnsupportedOperationException e) { + // expected exception + } + } + + public void testGetValueType() { + IValueProperty property = BindingProperties.convertedValue(converter); + + assertEquals(converter.getToType(), property.getValueType()); + } +} diff --git a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/internal/databinding/observable/masterdetail/ListDetailValueObservableListTest.java b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/internal/databinding/observable/masterdetail/ListDetailValueObservableListTest.java new file mode 100644 index 0000000..eefa802 --- /dev/null +++ b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/internal/databinding/observable/masterdetail/ListDetailValueObservableListTest.java @@ -0,0 +1,391 @@ +/******************************************************************************* + * Copyright (c) 2010 Ovidio Mallo and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * Ovidio Mallo - initial API and implementation (bug 305367) + ******************************************************************************/ + +package org.eclipse.core.tests.internal.databinding.observable.masterdetail; + +import java.util.ArrayList; +import java.util.Collections; +import java.util.List; + +import junit.framework.Test; +import junit.framework.TestSuite; + +import org.eclipse.core.databinding.beans.BeansObservables; +import org.eclipse.core.databinding.observable.IObservable; +import org.eclipse.core.databinding.observable.IObservableCollection; +import org.eclipse.core.databinding.observable.Realm; +import org.eclipse.core.databinding.observable.list.IObservableList; +import org.eclipse.core.databinding.observable.list.ListDiff; +import org.eclipse.core.databinding.observable.list.ListDiffEntry; +import org.eclipse.core.databinding.observable.list.WritableList; +import org.eclipse.core.databinding.observable.masterdetail.IObservableFactory; +import org.eclipse.core.databinding.observable.value.WritableValue; +import org.eclipse.core.internal.databinding.observable.masterdetail.ListDetailValueObservableList; +import org.eclipse.jface.databinding.conformance.ObservableListContractTest; +import org.eclipse.jface.databinding.conformance.delegate.AbstractObservableCollectionContractDelegate; +import org.eclipse.jface.databinding.conformance.util.ListChangeEventTracker; +import org.eclipse.jface.examples.databinding.model.SimplePerson; +import org.eclipse.jface.tests.databinding.AbstractDefaultRealmTestCase; + +/** + * @since 1.3 + */ +public class ListDetailValueObservableListTest extends + AbstractDefaultRealmTestCase { + + public static Test suite() { + TestSuite suite = new TestSuite( + ListDetailValueObservableListTest.class.getName()); + suite.addTestSuite(ListDetailValueObservableListTest.class); + suite.addTest(ObservableListContractTest.suite(new Delegate())); + return suite; + } + + public void testUnmodifiability() { + WritableList masterObservableList = new WritableList(); + masterObservableList.add(new SimplePerson()); + masterObservableList.add(new SimplePerson()); + ListDetailValueObservableList ldol = new ListDetailValueObservableList( + masterObservableList, BeansObservables.valueFactory(&quot;name&quot;), + null); + + try { + ldol.add(&quot;name&quot;); + fail(&quot;ListDetailValueObservableList must not be modifiable.&quot;); + } catch (UnsupportedOperationException e) { + // expected exception + } + + try { + ldol.remove(masterObservableList.get(0)); + fail(&quot;ListDetailValueObservableList must not be modifiable.&quot;); + } catch (UnsupportedOperationException e) { + // expected exception + } + + try { + ldol.removeAll(Collections.singleton(masterObservableList.get(0))); + fail(&quot;ListDetailValueObservableList must not be modifiable.&quot;); + } catch (UnsupportedOperationException e) { + // expected exception + } + + try { + ldol.retainAll(Collections.EMPTY_LIST); + fail(&quot;ListDetailValueObservableList must not be modifiable.&quot;); + } catch (UnsupportedOperationException e) { + // expected exception + } + + try { + ldol.move(0, 1); + fail(&quot;ListDetailValueObservableList must not be modifiable.&quot;); + } catch (UnsupportedOperationException e) { + // expected exception + } + } + + public void testGetElementType() { + ListDetailValueObservableList ldol = new ListDetailValueObservableList( + new WritableList(), BeansObservables.valueFactory(&quot;name&quot;), + String.class); + + assertSame(String.class, ldol.getElementType()); + } + + public void testGetObserved() { + WritableList masterList = new WritableList(); + ListDetailValueObservableList ldol = new ListDetailValueObservableList( + masterList, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + // The observed object is the master list. + assertSame(masterList, ldol.getObserved()); + } + + public void testMasterListInitiallyNotEmpty() { + WritableList masterList = new WritableList(); + SimplePerson person = new SimplePerson(); + person.setName(&quot;name&quot;); + masterList.add(person); + ListDetailValueObservableList ldol = new ListDetailValueObservableList( + masterList, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + // Make sure that a non-empty master list is initialized correctly. + assertEquals(masterList.size(), ldol.size()); + assertEquals(person.getName(), ldol.get(0)); + } + + public void testAddRemove() { + WritableList masterList = new WritableList(); + ListDetailValueObservableList ldol = new ListDetailValueObservableList( + masterList, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + // Initially, the detail list is empty. + assertTrue(ldol.isEmpty()); + + // Add a first person and check that its name is in the detail list. + SimplePerson p1 = new SimplePerson(); + p1.setName(&quot;name1&quot;); + masterList.add(p1); + assertEquals(masterList.size(), ldol.size()); + assertEquals(p1.getName(), ldol.get(0)); + + // Add a second person and check that it&apos;s name is in the detail list. + SimplePerson p2 = new SimplePerson(); + p2.setName(&quot;name2&quot;); + masterList.add(p2); + assertEquals(masterList.size(), ldol.size()); + assertEquals(p2.getName(), ldol.get(1)); + + // Remove the first person from the master list and check that we still + // have the name of the second person in the detail list. + masterList.remove(0); + assertEquals(masterList.size(), ldol.size()); + assertEquals(p2.getName(), ldol.get(0)); + + // Remove the second person as well. + masterList.remove(0); + assertTrue(ldol.isEmpty()); + } + + public void testChangeDetail() { + WritableList masterList = new WritableList(); + ListDetailValueObservableList ldol = new ListDetailValueObservableList( + masterList, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + // Change the detail attribute explicitly. + SimplePerson p1 = new SimplePerson(); + p1.setName(&quot;name1&quot;); + masterList.add(p1); + assertEquals(p1.getName(), ldol.get(0)); + p1.setName(&quot;name2&quot;); + assertEquals(p1.getName(), ldol.get(0)); + + // Change the detail attribute by changing the master. + SimplePerson p2 = new SimplePerson(); + p2.setName(&quot;name3&quot;); + masterList.set(0, p2); + assertEquals(p2.getName(), ldol.get(0)); + } + + public void testSet() { + WritableList masterList = new WritableList(); + ListDetailValueObservableList ldol = new ListDetailValueObservableList( + masterList, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + // Change the detail attribute explicitly. + SimplePerson person = new SimplePerson(); + person.setName(&quot;name1&quot;); + masterList.add(person); + assertEquals(person.getName(), ldol.get(0)); + + // Set a new name on the detail list. + ldol.set(0, &quot;name2&quot;); + // Check that the name has been propagated to the master. + assertEquals(&quot;name2&quot;, person.getName()); + assertEquals(person.getName(), ldol.get(0)); + } + + public void testDuplicateMasterElements() { + WritableList masterList = new WritableList(); + ListDetailValueObservableList ldol = new ListDetailValueObservableList( + masterList, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + SimplePerson master = new SimplePerson(); + master.setName(&quot;name1&quot;); + + // Add the same master twice. + masterList.add(master); + masterList.add(master); + + // Attach the change listener to the detail list. + ListChangeEventTracker changeTracker = ListChangeEventTracker + .observe(ldol); + + // Setting the name on master should trigger an event on both + // occurrences of in the master list. + master.setName(&quot;name2&quot;); + + // We should have 2 replace diffs, i.e. 4 diff entries. + assertEquals(1, changeTracker.count); + assertEquals(4, changeTracker.event.diff.getDifferences().length); + assertReplaceDiffAt(changeTracker.event.diff, 0, 0, &quot;name1&quot;, &quot;name2&quot;); + assertReplaceDiffAt(changeTracker.event.diff, 2, 0, &quot;name1&quot;, &quot;name2&quot;); + + // Remove one instance of the master (one will remain). + masterList.remove(master); + + // It should still be possible to work on the remaining master instance. + ldol.set(0, &quot;name3&quot;); + assertEquals(&quot;name3&quot;, master.getName()); + } + + public void testDetailObservableChangeEvent() { + WritableList masterList = new WritableList(); + ListDetailValueObservableList ldol = new ListDetailValueObservableList( + masterList, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + ListChangeEventTracker changeTracker = ListChangeEventTracker + .observe(ldol); + + SimplePerson person = new SimplePerson(); + person.setName(&quot;old name&quot;); + + // Initially, we should not have received any event. + assertEquals(0, changeTracker.count); + + // Add the person and check that we receive an addition event on the + // correct index and with the correct value. + masterList.add(person); + assertEquals(1, changeTracker.count); + assertEquals(1, changeTracker.event.diff.getDifferences().length); + assertTrue(changeTracker.event.diff.getDifferences()[0].isAddition()); + assertEquals(0, + changeTracker.event.diff.getDifferences()[0].getPosition()); + assertEquals(person.getName(), + changeTracker.event.diff.getDifferences()[0].getElement()); + + // Change the detail property and check that we receive a replace event. + person.setName(&quot;new name&quot;); + assertEquals(2, changeTracker.count); + assertIsSingleReplaceDiff(changeTracker.event.diff, 0, &quot;old name&quot;, + &quot;new name&quot;); + } + + private void assertIsSingleReplaceDiff(ListDiff diff, int index, + Object oldElement, Object newElement) { + // We should have 2 diff entries. + assertEquals(2, diff.getDifferences().length); + + // Check that it indeed is a replace diff. + assertReplaceDiffAt(diff, 0, index, oldElement, newElement); + } + + private void assertReplaceDiffAt(ListDiff diff, int diffOffset, int index, + Object oldElement, Object newElement) { + ListDiffEntry entry1 = diff.getDifferences()[0]; + ListDiffEntry entry2 = diff.getDifferences()[1]; + + // One diff entry must be an addition, the other a removal. + assertTrue(entry1.isAddition() != entry2.isAddition()); + + // Check for the index on the diff entries. + assertEquals(index, entry1.getPosition()); + assertEquals(index, entry2.getPosition()); + + // Check for the old/new element values on both diff entries. + if (entry1.isAddition()) { + assertEquals(oldElement, entry2.getElement()); + assertEquals(newElement, entry1.getElement()); + } else { + assertEquals(oldElement, entry1.getElement()); + assertEquals(newElement, entry2.getElement()); + } + } + + public void testMasterNull() { + WritableList masterObservableList = new WritableList(); + ListDetailValueObservableList ldol = new ListDetailValueObservableList( + masterObservableList, BeansObservables.valueFactory(&quot;name&quot;), + String.class); + + // Make sure null values are handled gracefully. + masterObservableList.add(null); + assertEquals(1, ldol.size()); + assertNull(ldol.get(0)); + } + + public void testDetailObservableValuesAreDisposed() { + final List detailObservables = new ArrayList(); + IObservableFactory detailValueFactory = new IObservableFactory() { + public IObservable createObservable(Object target) { + WritableValue detailObservable = new WritableValue(); + // Remember the created observables. + detailObservables.add(detailObservable); + return detailObservable; + } + }; + + WritableList masterList = new WritableList(); + ListDetailValueObservableList ldol = new ListDetailValueObservableList( + masterList, detailValueFactory, null); + + masterList.add(new Object()); + masterList.add(new Object()); + + assertEquals(ldol.size(), detailObservables.size()); + + // No detail observables should be disposed yet. + assertFalse(((WritableValue) detailObservables.get(0)).isDisposed()); + assertFalse(((WritableValue) detailObservables.get(1)).isDisposed()); + + // Only the detail observable for the removed master should be disposed. + masterList.remove(1); + assertFalse(((WritableValue) detailObservables.get(0)).isDisposed()); + assertTrue(((WritableValue) detailObservables.get(1)).isDisposed()); + + // After disposing the detail list, all detail observables should be + // disposed. + ldol.dispose(); + assertTrue(((WritableValue) detailObservables.get(0)).isDisposed()); + assertTrue(((WritableValue) detailObservables.get(1)).isDisposed()); + } + + public void testDisposeOnMasterDisposed() { + WritableList masterList = new WritableList(); + ListDetailValueObservableList ldol = new ListDetailValueObservableList( + masterList, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + // Initially, nothing should be disposed. + assertFalse(masterList.isDisposed()); + assertFalse(ldol.isDisposed()); + + // Upon disposing the master list, the detail list should be disposed as + // well. + masterList.dispose(); + assertTrue(masterList.isDisposed()); + assertTrue(ldol.isDisposed()); + } + + private static class Delegate extends + AbstractObservableCollectionContractDelegate { + public IObservableCollection createObservableCollection(Realm realm, + int elementCount) { + WritableList masterList = new WritableList(realm); + for (int i = 0; i &lt; elementCount; i++) { + masterList.add(new SimplePerson()); + } + + return new TestListDetailValueObservableList(masterList, + BeansObservables.valueFactory(realm, &quot;name&quot;), String.class); + } + + public void change(IObservable observable) { + TestListDetailValueObservableList ldol = (TestListDetailValueObservableList) observable; + ldol.masterList.add(new SimplePerson()); + } + + public Object getElementType(IObservableCollection collection) { + return String.class; + } + } + + private static class TestListDetailValueObservableList extends + ListDetailValueObservableList { + final IObservableList masterList; + + public TestListDetailValueObservableList(IObservableList masterList, + IObservableFactory detailValueFactory, Object detailType) { + super(masterList, detailValueFactory, detailType); + this.masterList = masterList; + } + } +} diff --git a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/internal/databinding/observable/masterdetail/MapDetailValueObservableMapTest.java b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/internal/databinding/observable/masterdetail/MapDetailValueObservableMapTest.java new file mode 100644 index 0000000..5146b89 --- /dev/null +++ b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/internal/databinding/observable/masterdetail/MapDetailValueObservableMapTest.java @@ -0,0 +1,309 @@ +/******************************************************************************* + * Copyright (c) 2010 Ovidio Mallo and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * Ovidio Mallo - initial API and implementation (bug 305367) + ******************************************************************************/ + +package org.eclipse.core.tests.internal.databinding.observable.masterdetail; + +import java.util.HashMap; +import java.util.Map; + +import junit.framework.Test; +import junit.framework.TestSuite; + +import org.eclipse.core.databinding.beans.BeansObservables; +import org.eclipse.core.databinding.observable.IObservable; +import org.eclipse.core.databinding.observable.map.WritableMap; +import org.eclipse.core.databinding.observable.masterdetail.IObservableFactory; +import org.eclipse.core.databinding.observable.value.WritableValue; +import org.eclipse.core.internal.databinding.observable.masterdetail.MapDetailValueObservableMap; +import org.eclipse.jface.databinding.conformance.util.MapChangeEventTracker; +import org.eclipse.jface.examples.databinding.model.SimplePerson; +import org.eclipse.jface.tests.databinding.AbstractDefaultRealmTestCase; + +/** + * @since 1.3 + */ +public class MapDetailValueObservableMapTest extends + AbstractDefaultRealmTestCase { + + public static Test suite() { + TestSuite suite = new TestSuite( + MapDetailValueObservableMapTest.class.getName()); + suite.addTestSuite(MapDetailValueObservableMapTest.class); + return suite; + } + + public void testGetKeyType() { + MapDetailValueObservableMap mdom = new MapDetailValueObservableMap( + new WritableMap(SimplePerson.class, SimplePerson.class), + BeansObservables.valueFactory(&quot;name&quot;), String.class); + + assertSame(SimplePerson.class, mdom.getKeyType()); + } + + public void testGetValueType() { + MapDetailValueObservableMap mdom = new MapDetailValueObservableMap( + new WritableMap(), BeansObservables.valueFactory(&quot;name&quot;), + String.class); + + assertSame(String.class, mdom.getValueType()); + } + + public void testGetObserved() { + WritableMap masterMap = new WritableMap(); + MapDetailValueObservableMap mdom = new MapDetailValueObservableMap( + masterMap, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + // The observed object is the master key set. + assertSame(masterMap, mdom.getObserved()); + } + + public void testMasterSetInitiallyNotEmpty() { + WritableMap masterMap = new WritableMap(); + SimplePerson person = new SimplePerson(); + person.setName(&quot;name&quot;); + masterMap.put(person, person); + MapDetailValueObservableMap mdom = new MapDetailValueObservableMap( + masterMap, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + // Make sure that a non-empty master key set is initialized correctly. + assertEquals(masterMap.size(), mdom.size()); + assertEquals(person.getName(), mdom.get(person)); + } + + public void testAddRemove() { + WritableMap masterMap = new WritableMap(); + MapDetailValueObservableMap mdom = new MapDetailValueObservableMap( + masterMap, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + // Initially, the detail map is empty. + assertTrue(mdom.isEmpty()); + + // Add a first person and check that its name is in the detail map. + SimplePerson p1 = new SimplePerson(); + p1.setName(&quot;name1&quot;); + masterMap.put(p1, p1); + assertEquals(masterMap.size(), mdom.size()); + assertEquals(p1.getName(), mdom.get(p1)); + + // Add a second person and check that it&apos;s name is in the detail map. + SimplePerson p2 = new SimplePerson(); + p2.setName(&quot;name2&quot;); + masterMap.put(p2, p2); + assertEquals(masterMap.size(), mdom.size()); + assertEquals(p2.getName(), mdom.get(p2)); + + // Remove the first person from the master map and check that we still + // have the name of the second person in the detail map. + masterMap.remove(p1); + assertEquals(masterMap.size(), mdom.size()); + assertEquals(p2.getName(), mdom.get(p2)); + + // Remove the second person as well. + masterMap.remove(p2); + assertTrue(mdom.isEmpty()); + } + + public void testChangeDetail() { + WritableMap masterMap = new WritableMap(); + MapDetailValueObservableMap mdom = new MapDetailValueObservableMap( + masterMap, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + // Change the detail attribute explicitly. + SimplePerson p1 = new SimplePerson(); + p1.setName(&quot;name1&quot;); + masterMap.put(p1, p1); + assertEquals(p1.getName(), mdom.get(p1)); + p1.setName(&quot;name2&quot;); + assertEquals(p1.getName(), mdom.get(p1)); + + // Change the detail attribute by changing the master. + SimplePerson p2 = new SimplePerson(); + p2.setName(&quot;name3&quot;); + masterMap.put(p1, p2); + assertEquals(p2.getName(), mdom.get(p1)); + } + + public void testPut() { + WritableMap masterMap = new WritableMap(); + MapDetailValueObservableMap mdom = new MapDetailValueObservableMap( + masterMap, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + // Change the detail attribute explicitly. + SimplePerson person = new SimplePerson(); + person.setName(&quot;name1&quot;); + masterMap.put(person, person); + assertEquals(person.getName(), mdom.get(person)); + + // Set a new name on the detail map. + mdom.put(person, &quot;name2&quot;); + // Check that the name has been propagated to the master. + assertEquals(&quot;name2&quot;, person.getName()); + assertEquals(person.getName(), mdom.get(person)); + } + + public void testContainsValue() { + WritableMap masterMap = new WritableMap(); + MapDetailValueObservableMap mdom = new MapDetailValueObservableMap( + masterMap, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + // Add a person with a given name. + SimplePerson person = new SimplePerson(); + person.setName(&quot;name&quot;); + masterMap.put(person, person); + + // Make sure the name of the person is contained. + assertTrue(mdom.containsValue(person.getName())); + + // Remove the person and make sure that it&apos;s name cannot be found + // anymore. + masterMap.remove(person); + assertFalse(mdom.containsValue(person.getName())); + } + + public void testRemove() { + WritableMap masterMap = new WritableMap(); + MapDetailValueObservableMap mdom = new MapDetailValueObservableMap( + masterMap, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + // Add two person objects to the map. + SimplePerson p1 = new SimplePerson(); + SimplePerson p2 = new SimplePerson(); + masterMap.put(p1, p1); + masterMap.put(p2, p2); + + // Initially, both person objects should be contained in the detail map. + assertTrue(mdom.containsKey(p1)); + assertTrue(mdom.containsKey(p2)); + + // Remove one person and check that it is not contained anymore. + mdom.remove(p1); + assertFalse(mdom.containsKey(p1)); + assertTrue(mdom.containsKey(p2)); + + // Trying to remove a non-existent is allowed but has no effect. + mdom.remove(p1); + assertFalse(mdom.containsKey(p1)); + assertTrue(mdom.containsKey(p2)); + } + + public void testDetailObservableChangeEvent() { + WritableMap masterMap = new WritableMap(); + MapDetailValueObservableMap mdom = new MapDetailValueObservableMap( + masterMap, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + MapChangeEventTracker changeTracker = MapChangeEventTracker + .observe(mdom); + + SimplePerson person = new SimplePerson(); + person.setName(&quot;old name&quot;); + + // Initially, we should not have received any event. + assertEquals(0, changeTracker.count); + + // Add the person and check that we receive an addition event on the + // correct index and with the correct value. + masterMap.put(person, person); + assertEquals(1, changeTracker.count); + assertEquals(1, changeTracker.event.diff.getAddedKeys().size()); + assertEquals(0, changeTracker.event.diff.getRemovedKeys().size()); + assertEquals(0, changeTracker.event.diff.getChangedKeys().size()); + assertSame(person, changeTracker.event.diff.getAddedKeys().iterator() + .next()); + assertNull(changeTracker.event.diff.getOldValue(person)); + assertEquals(&quot;old name&quot;, changeTracker.event.diff.getNewValue(person)); + + // Change the detail property and check that we receive a replace + person.setName(&quot;new name&quot;); + assertEquals(2, changeTracker.count); + assertEquals(0, changeTracker.event.diff.getAddedKeys().size()); + assertEquals(0, changeTracker.event.diff.getRemovedKeys().size()); + assertEquals(1, changeTracker.event.diff.getChangedKeys().size()); + assertSame(person, changeTracker.event.diff.getChangedKeys().iterator() + .next()); + assertEquals(&quot;old name&quot;, changeTracker.event.diff.getOldValue(person)); + assertEquals(&quot;new name&quot;, changeTracker.event.diff.getNewValue(person)); + } + + public void testMasterNull() { + WritableMap masterMap = new WritableMap(); + MapDetailValueObservableMap mdom = new MapDetailValueObservableMap( + masterMap, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + // Make sure null values are handled gracefully. + masterMap.put(null, null); + assertEquals(1, mdom.size()); + assertNull(mdom.get(null)); + } + + public void testDetailObservableValuesAreDisposed() { + final Map detailObservables = new HashMap(); + IObservableFactory detailValueFactory = new IObservableFactory() { + public IObservable createObservable(Object target) { + WritableValue detailObservable = new WritableValue(); + // Remember the created observables. + detailObservables.put(target, detailObservable); + return detailObservable; + } + }; + + WritableMap masterMap = new WritableMap(); + MapDetailValueObservableMap mdom = new MapDetailValueObservableMap( + masterMap, detailValueFactory, null); + + Object master1 = new Object(); + Object master2 = new Object(); + masterMap.put(master1, master1); + masterMap.put(master2, master2); + + // Attach a listener in order to ensure that all detail observables are + // actually created. + MapChangeEventTracker.observe(mdom); + + assertEquals(mdom.size(), detailObservables.size()); + + // No detail observables should be disposed yet. + assertFalse(((WritableValue) detailObservables.get(master1)) + .isDisposed()); + assertFalse(((WritableValue) detailObservables.get(master2)) + .isDisposed()); + + // Only the detail observable for the removed master should be disposed. + masterMap.remove(master2); + assertFalse(((WritableValue) detailObservables.get(master1)) + .isDisposed()); + assertTrue(((WritableValue) detailObservables.get(master2)) + .isDisposed()); + + // After disposing the detail map, all detail observables should be + // disposed. + mdom.dispose(); + assertTrue(((WritableValue) detailObservables.get(master1)) + .isDisposed()); + assertTrue(((WritableValue) detailObservables.get(master2)) + .isDisposed()); + } + + public void testDisposeOnMasterDisposed() { + WritableMap masterMap = new WritableMap(); + MapDetailValueObservableMap mdom = new MapDetailValueObservableMap( + masterMap, BeansObservables.valueFactory(&quot;name&quot;), String.class); + + // Initially, nothing should be disposed. + assertFalse(masterMap.isDisposed()); + assertFalse(mdom.isDisposed()); + + // Upon disposing the master map, the detail map should be disposed as + // well. + masterMap.dispose(); + assertTrue(masterMap.isDisposed()); + assertTrue(mdom.isDisposed()); + } +} diff --git a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/internal/databinding/observable/masterdetail/SetDetailValueObservableMapTest.java b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/internal/databinding/observable/masterdetail/SetDetailValueObservableMapTest.java new file mode 100644 index 0000000..26bcf1b --- /dev/null +++ b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/core/tests/internal/databinding/observable/masterdetail/SetDetailValueObservableMapTest.java @@ -0,0 +1,311 @@ +/******************************************************************************* + * Copyright (c) 2010 Ovidio Mallo and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * Ovidio Mallo - initial API and implementation (bug 305367) + ******************************************************************************/ + +package org.eclipse.core.tests.internal.databinding.observable.masterdetail; + +import java.util.HashMap; +import java.util.Map; + +import junit.framework.Test; +import junit.framework.TestSuite; + +import org.eclipse.core.databinding.beans.BeansObservables; +import org.eclipse.core.databinding.observable.IObservable; +import org.eclipse.core.databinding.observable.masterdetail.IObservableFactory; +import org.eclipse.core.databinding.observable.set.WritableSet; +import org.eclipse.core.databinding.observable.value.WritableValue; +import org.eclipse.core.internal.databinding.observable.masterdetail.SetDetailValueObservableMap; +import org.eclipse.jface.databinding.conformance.util.MapChangeEventTracker; +import org.eclipse.jface.examples.databinding.model.SimplePerson; +import org.eclipse.jface.tests.databinding.AbstractDefaultRealmTestCase; + +/** + * @since 1.3 + */ +public class SetDetailValueObservableMapTest extends + AbstractDefaultRealmTestCase { + + public static Test suite() { + TestSuite suite = new TestSuite(SetDetailValueObservableMapTest.class + .getName()); + suite.addTestSuite(SetDetailValueObservableMapTest.class); + return suite; + } + + public void testGetValueType() { + SetDetailValueObservableMap sdom = new SetDetailValueObservableMap( + new WritableSet(), BeansObservables.valueFactory(&quot;name&quot;), + String.class); + + assertSame(String.class, sdom.getValueType()); + } + + public void testGetObserved() { + WritableSet masterKeySet = new WritableSet(); + SetDetailValueObservableMap sdom = new SetDetailValueObservableMap( + masterKeySet, BeansObservables.valueFactory(&quot;name&quot;), + String.class); + + // The observed object is the master key set. + assertSame(masterKeySet, sdom.getObserved()); + } + + public void testMasterSetInitiallyNotEmpty() { + WritableSet masterKeySet = new WritableSet(); + SimplePerson person = new SimplePerson(); + person.setName(&quot;name&quot;); + masterKeySet.add(person); + SetDetailValueObservableMap sdom = new SetDetailValueObservableMap( + masterKeySet, BeansObservables.valueFactory(&quot;name&quot;), + String.class); + + // Make sure that a non-empty master key set is initialized correctly. + assertEquals(masterKeySet.size(), sdom.size()); + assertEquals(person.getName(), sdom.get(person)); + } + + public void testAddRemove() { + WritableSet masterKeySet = new WritableSet(); + SetDetailValueObservableMap sdom = new SetDetailValueObservableMap( + masterKeySet, BeansObservables.valueFactory(&quot;name&quot;), + String.class); + + // Initially, the detail map is empty. + assertTrue(sdom.isEmpty()); + + // Add a first person and check that its name is in the detail list. + SimplePerson p1 = new SimplePerson(); + p1.setName(&quot;name1&quot;); + masterKeySet.add(p1); + assertEquals(masterKeySet.size(), sdom.size()); + assertEquals(p1.getName(), sdom.get(p1)); + + // Add a second person and check that it&apos;s name is in the detail list. + SimplePerson p2 = new SimplePerson(); + p2.setName(&quot;name2&quot;); + masterKeySet.add(p2); + assertEquals(masterKeySet.size(), sdom.size()); + assertEquals(p2.getName(), sdom.get(p2)); + + // Remove the first person from the master list and check that we still + // have the name of the second person in the detail list. + masterKeySet.remove(p1); + assertEquals(masterKeySet.size(), sdom.size()); + assertEquals(p2.getName(), sdom.get(p2)); + + // Remove the second person as well. + masterKeySet.remove(p2); + assertTrue(sdom.isEmpty()); + } + + public void testChangeDetail() { + WritableSet masterKeySet = new WritableSet(); + SetDetailValueObservableMap sdom = new SetDetailValueObservableMap( + masterKeySet, BeansObservables.valueFactory(&quot;name&quot;), + String.class); + + // Change the detail attribute explicitly. + SimplePerson p1 = new SimplePerson(); + p1.setName(&quot;name1&quot;); + masterKeySet.add(p1); + assertEquals(p1.getName(), sdom.get(p1)); + p1.setName(&quot;name2&quot;); + assertEquals(p1.getName(), sdom.get(p1)); + + // Change the detail attribute by changing the master. + SimplePerson p2 = new SimplePerson(); + p2.setName(&quot;name3&quot;); + masterKeySet.add(p2); + assertEquals(p2.getName(), sdom.get(p2)); + } + + public void testPut() { + WritableSet masterKeySet = new WritableSet(); + SetDetailValueObservableMap sdom = new SetDetailValueObservableMap( + masterKeySet, BeansObservables.valueFactory(&quot;name&quot;), + String.class); + + // Change the detail attribute explicitly. + SimplePerson person = new SimplePerson(); + person.setName(&quot;name1&quot;); + masterKeySet.add(person); + assertEquals(person.getName(), sdom.get(person)); + + // Set a new name on the detail map. + sdom.put(person, &quot;name2&quot;); + // Check that the name has been propagated to the master. + assertEquals(&quot;name2&quot;, person.getName()); + assertEquals(person.getName(), sdom.get(person)); + } + + public void testContainsValue() { + WritableSet masterKeySet = new WritableSet(); + SetDetailValueObservableMap sdom = new SetDetailValueObservableMap( + masterKeySet, BeansObservables.valueFactory(&quot;name&quot;), + String.class); + + // Add a person with a given name. + SimplePerson person = new SimplePerson(); + person.setName(&quot;name&quot;); + masterKeySet.add(person); + + // Make sure the name of the person is contained. + assertTrue(sdom.containsValue(person.getName())); + + // Remove the person and make sure that it&apos;s name cannot be found + // anymore. + masterKeySet.remove(person); + assertFalse(sdom.containsValue(person.getName())); + } + + public void testRemove() { + WritableSet masterKeySet = new WritableSet(); + SetDetailValueObservableMap sdom = new SetDetailValueObservableMap( + masterKeySet, BeansObservables.valueFactory(&quot;name&quot;), + String.class); + + // Add two person objects to the map. + SimplePerson p1 = new SimplePerson(); + SimplePerson p2 = new SimplePerson(); + masterKeySet.add(p1); + masterKeySet.add(p2); + + // Initially, both person objects should be contained in the detail map. + assertTrue(sdom.containsKey(p1)); + assertTrue(sdom.containsKey(p2)); + + // Remove one person and check that it is not contained anymore. + sdom.remove(p1); + assertFalse(sdom.containsKey(p1)); + assertTrue(sdom.containsKey(p2)); + + // Trying to remove a non-existent is allowed but has no effect. + sdom.remove(p1); + assertFalse(sdom.containsKey(p1)); + assertTrue(sdom.containsKey(p2)); + } + + public void testDetailObservableChangeEvent() { + WritableSet masterKeySet = new WritableSet(); + SetDetailValueObservableMap sdom = new SetDetailValueObservableMap( + masterKeySet, BeansObservables.valueFactory(&quot;name&quot;), + String.class); + + MapChangeEventTracker changeTracker = MapChangeEventTracker + .observe(sdom); + + SimplePerson person = new SimplePerson(); + person.setName(&quot;old name&quot;); + + // Initially, we should not have received any event. + assertEquals(0, changeTracker.count); + + // Add the person and check that we receive an addition event on the + // correct index and with the correct value. + masterKeySet.add(person); + assertEquals(1, changeTracker.count); + assertEquals(1, changeTracker.event.diff.getAddedKeys().size()); + assertEquals(0, changeTracker.event.diff.getRemovedKeys().size()); + assertEquals(0, changeTracker.event.diff.getChangedKeys().size()); + assertSame(person, changeTracker.event.diff.getAddedKeys().iterator() + .next()); + assertNull(changeTracker.event.diff.getOldValue(person)); + assertEquals(&quot;old name&quot;, changeTracker.event.diff.getNewValue(person)); + + // Change the detail property and check that we receive a replace + person.setName(&quot;new name&quot;); + assertEquals(2, changeTracker.count); + assertEquals(0, changeTracker.event.diff.getAddedKeys().size()); + assertEquals(0, changeTracker.event.diff.getRemovedKeys().size()); + assertEquals(1, changeTracker.event.diff.getChangedKeys().size()); + assertSame(person, changeTracker.event.diff.getChangedKeys().iterator() + .next()); + assertEquals(&quot;old name&quot;, changeTracker.event.diff.getOldValue(person)); + assertEquals(&quot;new name&quot;, changeTracker.event.diff.getNewValue(person)); + } + + public void testMasterNull() { + WritableSet masterKeySet = new WritableSet(); + SetDetailValueObservableMap sdom = new SetDetailValueObservableMap( + masterKeySet, BeansObservables.valueFactory(&quot;name&quot;), + String.class); + + // Make sure null values are handled gracefully. + masterKeySet.add(null); + assertEquals(1, sdom.size()); + assertNull(sdom.get(null)); + } + + public void testDetailObservableValuesAreDisposed() { + final Map detailObservables = new HashMap(); + IObservableFactory detailValueFactory = new IObservableFactory() { + public IObservable createObservable(Object target) { + WritableValue detailObservable = new WritableValue(); + // Remember the created observables. + detailObservables.put(target, detailObservable); + return detailObservable; + } + }; + + WritableSet masterKeySet = new WritableSet(); + SetDetailValueObservableMap sdom = new SetDetailValueObservableMap( + masterKeySet, detailValueFactory, null); + + Object master1 = new Object(); + Object master2 = new Object(); + masterKeySet.add(master1); + masterKeySet.add(master2); + + // Attach a listener in order to ensure that all detail observables are + // actually created. + MapChangeEventTracker.observe(sdom); + + assertEquals(sdom.size(), detailObservables.size()); + + // No detail observables should be disposed yet. + assertFalse(((WritableValue) detailObservables.get(master1)) + .isDisposed()); + assertFalse(((WritableValue) detailObservables.get(master2)) + .isDisposed()); + + // Only the detail observable for the removed master should be disposed. + masterKeySet.remove(master2); + assertFalse(((WritableValue) detailObservables.get(master1)) + .isDisposed()); + assertTrue(((WritableValue) detailObservables.get(master2)) + .isDisposed()); + + // After disposing the detail map, all detail observables should be + // disposed. + sdom.dispose(); + assertTrue(((WritableValue) detailObservables.get(master1)) + .isDisposed()); + assertTrue(((WritableValue) detailObservables.get(master2)) + .isDisposed()); + } + + public void testDisposeOnMasterDisposed() { + WritableSet masterKeySet = new WritableSet(); + SetDetailValueObservableMap sdom = new SetDetailValueObservableMap( + masterKeySet, BeansObservables.valueFactory(&quot;name&quot;), + String.class); + + // Initially, nothing should be disposed. + assertFalse(masterKeySet.isDisposed()); + assertFalse(sdom.isDisposed()); + + // Upon disposing the master list, the detail list should be disposed as + // well. + masterKeySet.dispose(); + assertTrue(masterKeySet.isDisposed()); + assertTrue(sdom.isDisposed()); + } +} diff --git a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/jface/tests/databinding/BindingTestSuite.java b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/jface/tests/databinding/BindingTestSuite.java index ac2417d..8000db8 100644 --- a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/jface/tests/databinding/BindingTestSuite.java +++ b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/jface/tests/databinding/BindingTestSuite.java @@ -17,7 +17,7 @@ * 246103, 249992, 256150, 256543, 262269, 175735, 262946, * 255734, 263693, 169876, 266038, 268336, 270461, 271720, * 283204, 281723, 283428 - * Ovidio Mallo - bugs 237163, 235195, 299619 + * Ovidio Mallo - bugs 237163, 235195, 299619, 306611, 305367 *******************************************************************************/ package org.eclipse.jface.tests.databinding; @@ -41,6 +41,7 @@ import org.eclipse.core.tests.databinding.beans.BeansObservablesTest; import org.eclipse.core.tests.databinding.beans.PojoObservablesTest; import org.eclipse.core.tests.databinding.beans.PojoPropertiesTest; +import org.eclipse.core.tests.databinding.beans.SetOnlyJavaBeanTest; import org.eclipse.core.tests.databinding.conversion.NumberToStringConverterTest; import org.eclipse.core.tests.databinding.conversion.StringToNumberConverterTest; import org.eclipse.core.tests.databinding.observable.AbstractObservableTest; @@ -84,6 +85,7 @@ import org.eclipse.core.tests.databinding.validation.ValidationStatusTest; import org.eclipse.core.tests.internal.databinding.BindingMessagesTest; import org.eclipse.core.tests.internal.databinding.BindingStatusTest; +import org.eclipse.core.tests.internal.databinding.ConverterValuePropertyTest; import org.eclipse.core.tests.internal.databinding.IdentityMapTest; import org.eclipse.core.tests.internal.databinding.IdentitySetTest; import org.eclipse.core.tests.internal.databinding.QueueTest; @@ -142,6 +144,9 @@ import org.eclipse.core.tests.internal.databinding.observable.masterdetail.DetailObservableMapTest; import org.eclipse.core.tests.internal.databinding.observable.masterdetail.DetailObservableSetTest; import org.eclipse.core.tests.internal.databinding.observable.masterdetail.DetailObservableValueTest; +import org.eclipse.core.tests.internal.databinding.observable.masterdetail.ListDetailValueObservableListTest; +import org.eclipse.core.tests.internal.databinding.observable.masterdetail.MapDetailValueObservableMapTest; +import org.eclipse.core.tests.internal.databinding.observable.masterdetail.SetDetailValueObservableMapTest; import org.eclipse.core.tests.internal.databinding.property.value.ListSimpleValueObservableListTest; import org.eclipse.core.tests.internal.databinding.property.value.MapSimpleValueObservableMapTest; import org.eclipse.core.tests.internal.databinding.property.value.SetSimpleValueObservableMapTest; @@ -258,6 +263,7 @@ addTestSuite(BeansObservablesTest.class); addTestSuite(PojoObservablesTest.class); addTestSuite(PojoPropertiesTest.class); + addTestSuite(SetOnlyJavaBeanTest.class); // org.eclipse.core.tests.databinding.conversion addTestSuite(NumberToStringConverterTest.class); @@ -316,6 +322,7 @@ // org.eclipse.core.tests.internal.databinding addTestSuite(BindingMessagesTest.class); addTestSuite(BindingStatusTest.class); + addTestSuite(ConverterValuePropertyTest.class); addTestSuite(IdentityMapTest.class); addTestSuite(IdentitySetTest.class); addTestSuite(QueueTest.class); @@ -384,6 +391,9 @@ addTestSuite(DetailObservableMapTest.class); addTest(DetailObservableSetTest.suite()); addTest(DetailObservableValueTest.suite()); + addTest(ListDetailValueObservableListTest.suite()); + addTest(MapDetailValueObservableMapTest.suite()); + addTest(SetDetailValueObservableMapTest.suite()); // org.eclipse.core.tests.internal.databinding.property.value addTestSuite(MapSimpleValueObservableMapTest.class); diff --git a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/jface/tests/databinding/swt/SWTObservablesTest.java b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/jface/tests/databinding/swt/SWTObservablesTest.java index 6659af5..23a8cce 100644 --- a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/jface/tests/databinding/swt/SWTObservablesTest.java +++ b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/jface/tests/databinding/swt/SWTObservablesTest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007, 2009 Brad Reynolds and others. + * Copyright (c) 2007, 2009, 2011 Brad Reynolds and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -8,7 +8,7 @@ * Contributors: * Brad Reynolds - initial API and implementation * Chris Aniszczyk - bug 131435 - * Matthew Hall - bugs 248621, 213893, 262320, 169876 + * Matthew Hall - bugs 248621, 213893, 262320, 169876, 306203 ******************************************************************************/ package org.eclipse.jface.tests.databinding.swt; @@ -25,6 +25,7 @@ import org.eclipse.jface.internal.databinding.swt.ButtonImageProperty; import org.eclipse.jface.internal.databinding.swt.ButtonSelectionProperty; import org.eclipse.jface.internal.databinding.swt.ButtonTextProperty; +import org.eclipse.jface.internal.databinding.swt.CComboEditableProperty; import org.eclipse.jface.internal.databinding.swt.CComboItemsProperty; import org.eclipse.jface.internal.databinding.swt.CComboSelectionProperty; import org.eclipse.jface.internal.databinding.swt.CComboTextProperty; @@ -54,6 +55,7 @@ import org.eclipse.jface.internal.databinding.swt.SpinnerMaximumProperty; import org.eclipse.jface.internal.databinding.swt.SpinnerMinimumProperty; import org.eclipse.jface.internal.databinding.swt.SpinnerSelectionProperty; +import org.eclipse.jface.internal.databinding.swt.StyledTextEditableProperty; import org.eclipse.jface.internal.databinding.swt.StyledTextTextProperty; import org.eclipse.jface.internal.databinding.swt.TableSingleSelectionIndexProperty; import org.eclipse.jface.internal.databinding.swt.TextEditableProperty; @@ -546,6 +548,19 @@ assertWidgetObservable(value, text, TextEditableProperty.class); } + public void testObserveEditableOfCCombo() throws Exception { + CCombo combo = new CCombo(shell, SWT.NONE); + ISWTObservableValue value = SWTObservables.observeEditable(combo); + assertWidgetObservable(value, combo, CComboEditableProperty.class); + } + + public void testObserveEditableOfStyledText() throws Exception { + StyledText styledText = new StyledText(shell, SWT.NONE); + ISWTObservableValue value = SWTObservables.observeEditable(styledText); + assertWidgetObservable(value, styledText, + StyledTextEditableProperty.class); + } + public void testObserveEnabledOfMenu() throws Exception { Menu menu = new Menu(shell, SWT.BAR); ISWTObservableValue value = SWTObservables.observeEnabled(menu); diff --git a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/jface/tests/databinding/swt/WidgetPropertiesTest.java b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/jface/tests/databinding/swt/WidgetPropertiesTest.java index 767688a..db92c6c 100644 --- a/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/jface/tests/databinding/swt/WidgetPropertiesTest.java +++ b/tests/org.eclipse.jface.tests.databinding/src/org/eclipse/jface/tests/databinding/swt/WidgetPropertiesTest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2009 Matthew Hall and others. + * Copyright (c) 2009, 2011 Matthew Hall and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -7,7 +7,7 @@ * * Contributors: * Matthew Hall - initial API and implementation (bug 262946) - * Matthew Hall - bug 213893 + * Matthew Hall - bugs 213893, 306203 ******************************************************************************/ package org.eclipse.jface.tests.databinding.swt; @@ -18,9 +18,11 @@ import org.eclipse.jface.databinding.swt.WidgetProperties; import org.eclipse.jface.tests.databinding.AbstractSWTTestCase; import org.eclipse.swt.SWT; +import org.eclipse.swt.custom.CCombo; import org.eclipse.swt.custom.CLabel; import org.eclipse.swt.custom.CTabFolder; import org.eclipse.swt.custom.CTabItem; +import org.eclipse.swt.custom.StyledText; import org.eclipse.swt.graphics.Image; import org.eclipse.swt.widgets.Button; import org.eclipse.swt.widgets.Control; @@ -33,6 +35,7 @@ import org.eclipse.swt.widgets.TabItem; import org.eclipse.swt.widgets.Table; import org.eclipse.swt.widgets.TableColumn; +import org.eclipse.swt.widgets.Text; import org.eclipse.swt.widgets.ToolBar; import org.eclipse.swt.widgets.ToolItem; import org.eclipse.swt.widgets.Tray; @@ -287,4 +290,45 @@ observable.setValue(Boolean.FALSE); assertEquals(false, item.getEnabled()); } + + public void testEditable_ObserveText() { + Text text = new Text(shell, SWT.NONE); + IObservableValue observable = WidgetProperties.editable().observe(text); + + assertEquals(boolean.class, observable.getValueType()); + + text.setEditable(false); + assertEquals(Boolean.FALSE, observable.getValue()); + + observable.setValue(Boolean.TRUE); + assertEquals(true, text.getEditable()); + } + + public void testEditable_ObserveCCombo() { + CCombo combo = new CCombo(shell, SWT.NONE); + IObservableValue observable = WidgetProperties.editable() + .observe(combo); + + assertEquals(boolean.class, observable.getValueType()); + + combo.setEditable(false); + assertEquals(Boolean.FALSE, observable.getValue()); + + observable.setValue(Boolean.TRUE); + assertEquals(true, combo.getEditable()); + } + + public void testEditable_ObserveStyledText() { + StyledText styledText = new StyledText(shell, SWT.NONE); + IObservableValue observable = WidgetProperties.editable().observe( + styledText); + + assertEquals(boolean.class, observable.getValueType()); + + styledText.setEditable(false); + assertEquals(Boolean.FALSE, observable.getValue()); + + observable.setValue(Boolean.TRUE); + assertEquals(true, styledText.getEditable()); + } } diff --git a/tests/org.eclipse.jface.tests.databinding/test.xml b/tests/org.eclipse.jface.tests.databinding/test.xml index 73284d5..2da967e 100644 --- a/tests/org.eclipse.jface.tests.databinding/test.xml +++ b/tests/org.eclipse.jface.tests.databinding/test.xml @@ -1,4 +1,4 @@ - + diff --git a/tests/org.eclipse.ui.tests.browser/.settings/org.eclipse.core.runtime.prefs b/tests/org.eclipse.ui.tests.browser/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/tests/org.eclipse.ui.tests.browser/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/tests/org.eclipse.ui.tests.browser/META-INF/MANIFEST.MF b/tests/org.eclipse.ui.tests.browser/META-INF/MANIFEST.MF new file mode 100644 index 0000000..b523f6f --- /dev/null +++ b/tests/org.eclipse.ui.tests.browser/META-INF/MANIFEST.MF @@ -0,0 +1,15 @@ +Manifest-Version: 1.0 +Bundle-ManifestVersion: 2 +Bundle-Name: %Plugin.name +Bundle-SymbolicName: org.eclipse.ui.tests.browser;singleton:=true +Bundle-Version: 3.1.0 +Bundle-ClassPath: browser.jar +Bundle-Activator: org.eclipse.ui.tests.browser.internal.WebBrowserTestsPlugin +Bundle-Vendor: %Plugin.providerName +Bundle-Localization: plugin +Export-Package: org.eclipse.ui.tests.browser.internal +Require-Bundle: org.eclipse.core.runtime, + org.junit, + org.eclipse.ui, + org.eclipse.ui.browser +Bundle-ActivationPolicy: lazy diff --git a/tests/org.eclipse.ui.tests.browser/build.properties b/tests/org.eclipse.ui.tests.browser/build.properties index 642090b..4f26751 100644 --- a/tests/org.eclipse.ui.tests.browser/build.properties +++ b/tests/org.eclipse.ui.tests.browser/build.properties @@ -14,7 +14,8 @@ about.html,\ .,\ browser.jar,\ - test.xml + test.xml,\ + META-INF/ src.includes = about.html jars.compile.order = browser.jar source.browser.jar = src/ diff --git a/tests/org.eclipse.ui.tests.browser/plugin.xml b/tests/org.eclipse.ui.tests.browser/plugin.xml deleted file mode 100644 index d59b7ae..0000000 --- a/tests/org.eclipse.ui.tests.browser/plugin.xml +++ /dev/null @@ -1,23 +0,0 @@ - - - - - - - - - - - - - - - - - - \ No newline at end of file diff --git a/tests/org.eclipse.ui.tests.browser/src/org/eclipse/ui/tests/browser/internal/OrderedTestSuite.java b/tests/org.eclipse.ui.tests.browser/src/org/eclipse/ui/tests/browser/internal/OrderedTestSuite.java index 491d8fe..ccf2959 100644 --- a/tests/org.eclipse.ui.tests.browser/src/org/eclipse/ui/tests/browser/internal/OrderedTestSuite.java +++ b/tests/org.eclipse.ui.tests.browser/src/org/eclipse/ui/tests/browser/internal/OrderedTestSuite.java @@ -84,11 +84,4 @@ return parameters.length == 0 &amp;&amp; name.startsWith(&quot;test&quot;) &amp;&amp; returnType.equals(Void.TYPE); } - private Test warning(final String message) { - return new TestCase(&quot;warning&quot;) { - protected void runTest() { - fail(message); - } - }; - } } \ No newline at end of file diff --git a/tests/org.eclipse.ui.tests.browser/test.xml b/tests/org.eclipse.ui.tests.browser/test.xml index a48251d..a5e0bd5 100644 --- a/tests/org.eclipse.ui.tests.browser/test.xml +++ b/tests/org.eclipse.ui.tests.browser/test.xml @@ -1,4 +1,4 @@ - + diff --git a/tests/org.eclipse.ui.tests.forms/.settings/org.eclipse.core.runtime.prefs b/tests/org.eclipse.ui.tests.forms/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/tests/org.eclipse.ui.tests.forms/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/tests/org.eclipse.ui.tests.forms/META-INF/MANIFEST.MF b/tests/org.eclipse.ui.tests.forms/META-INF/MANIFEST.MF index 141e3a3..74e4fa8 100755 --- a/tests/org.eclipse.ui.tests.forms/META-INF/MANIFEST.MF +++ b/tests/org.eclipse.ui.tests.forms/META-INF/MANIFEST.MF @@ -2,7 +2,7 @@ Bundle-ManifestVersion: 2 Bundle-Name: Forms Test Bundle-SymbolicName: org.eclipse.ui.tests.forms;singleton:=true -Bundle-Version: 3.3.200.qualifier +Bundle-Version: 3.3.300.qualifier Bundle-Activator: org.eclipse.ui.tests.forms.plugin.FormsTestPlugin Require-Bundle: org.eclipse.ui, org.eclipse.core.runtime, diff --git a/tests/org.eclipse.ui.tests.forms/forms/org/eclipse/ui/tests/forms/layout/AllLayoutTests.java b/tests/org.eclipse.ui.tests.forms/forms/org/eclipse/ui/tests/forms/layout/AllLayoutTests.java index 4f47a8f..94b120d 100755 --- a/tests/org.eclipse.ui.tests.forms/forms/org/eclipse/ui/tests/forms/layout/AllLayoutTests.java +++ b/tests/org.eclipse.ui.tests.forms/forms/org/eclipse/ui/tests/forms/layout/AllLayoutTests.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2007 IBM Corporation and others. + * Copyright (c) 2007, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -21,6 +21,7 @@ &quot;org.eclipse.ua.tests.forms.AllLayoutTests&quot;); //$JUnit-BEGIN$ suite.addTestSuite(TestTableWrapLayout.class); + suite.addTestSuite(TestColumnWrapLayout.class); //$JUnit-END$ return suite; } diff --git a/tests/org.eclipse.ui.tests.forms/forms/org/eclipse/ui/tests/forms/layout/TestColumnWrapLayout.java b/tests/org.eclipse.ui.tests.forms/forms/org/eclipse/ui/tests/forms/layout/TestColumnWrapLayout.java new file mode 100644 index 0000000..64db371 --- /dev/null +++ b/tests/org.eclipse.ui.tests.forms/forms/org/eclipse/ui/tests/forms/layout/TestColumnWrapLayout.java @@ -0,0 +1,97 @@ +/******************************************************************************* + * Copyright (c) 2011 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + *******************************************************************************/ + +package org.eclipse.ui.tests.forms.layout; + +import junit.framework.TestCase; + +import org.eclipse.swt.SWT; +import org.eclipse.swt.graphics.Point; +import org.eclipse.swt.layout.GridLayout; +import org.eclipse.swt.widgets.Composite; +import org.eclipse.swt.widgets.Display; +import org.eclipse.swt.widgets.Shell; +import org.eclipse.ui.PlatformUI; +import org.eclipse.ui.forms.widgets.ColumnLayout; +import org.eclipse.ui.internal.forms.widgets.ColumnLayoutUtils; + +public class TestColumnWrapLayout extends TestCase { + + private final Point p20 = new Point(100, 20); + private final Point p30 = new Point(100, 30); + private final Point p50 = new Point(100, 50); + private final Point p100 = new Point(100, 100); + private final Point p200 = new Point(100, 200); + + public void testEqualSizeColumns() { + Point[] sizes = { p20, p30, p30, p20, p20, p30 }; + assertEquals(50, ColumnLayoutUtils.computeColumnHeight(3, sizes, 237, 0)); + } + + public void testEqualSizeColumnsWithMargins() { + Point[] sizes = { p20, p30, p30, p20, p20, p30 }; + assertEquals(60, ColumnLayoutUtils.computeColumnHeight(3, sizes, 200, 10)); + } + + public void testVariedSizeColumns() { + Point[] sizes = { p200, p200, p30 }; + assertEquals(230, ColumnLayoutUtils.computeColumnHeight(2, sizes, 100, 0)); + } + + public void testLastEntryLargest() { + Point[] sizes = { p50, p30, p30, p30, p50, p50, p100 }; + assertEquals(100, ColumnLayoutUtils.computeColumnHeight(4, sizes, 100, 0)); + } + + public void testLargeMargins() { + Point[] sizes = { p20, p20, p20, p20, p20, p50, p50}; + assertEquals(260, ColumnLayoutUtils.computeColumnHeight(3, sizes, 100, 100)); + } + + private class SizedComposite extends Composite { + + int height; + + public SizedComposite(Composite parent, int style, int height) { + super(parent, style); + this.height = height; + } + + public Point computeSize(int wHint, int hHint, boolean changed) { + return new Point( 20, height); + } + } + + /** + * Test that labels with the WRAP property set do indeed wrap. + */ + public void testColumnLayoutInShell() { + Display display = PlatformUI.getWorkbench().getDisplay(); + Shell shell = new Shell(display); + shell.setSize(100, 300); + shell.setLayout(new GridLayout()); + Composite inner = new Composite(shell, SWT.NULL); + ColumnLayout layout = new ColumnLayout(); + layout.verticalSpacing = 5; + layout.minNumColumns = 2; + layout.maxNumColumns = 2; + layout.topMargin=2; + layout.bottomMargin=3; + inner.setLayout(layout); + new SizedComposite(inner, SWT.NULL, 30); + new SizedComposite(inner, SWT.NULL, 40); + new SizedComposite(inner, SWT.NULL, 20); + shell.layout(true); + assertEquals(70, inner.getSize().y); + shell.dispose(); + } + +} diff --git a/tests/org.eclipse.ui.tests.forms/test.xml b/tests/org.eclipse.ui.tests.forms/test.xml old mode 100755 new mode 100644 index 193624d..0e5ea9e --- a/tests/org.eclipse.ui.tests.forms/test.xml +++ b/tests/org.eclipse.ui.tests.forms/test.xml @@ -1,4 +1,4 @@ - + diff --git a/tests/org.eclipse.ui.tests.rcp/.classpath b/tests/org.eclipse.ui.tests.rcp/.classpath index 1f84474..3fefab6 100644 --- a/tests/org.eclipse.ui.tests.rcp/.classpath +++ b/tests/org.eclipse.ui.tests.rcp/.classpath @@ -2,6 +2,6 @@ - + diff --git a/tests/org.eclipse.ui.tests.rcp/.settings/org.eclipse.core.runtime.prefs b/tests/org.eclipse.ui.tests.rcp/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/tests/org.eclipse.ui.tests.rcp/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/tests/org.eclipse.ui.tests.rcp/.settings/org.eclipse.jdt.core.prefs b/tests/org.eclipse.ui.tests.rcp/.settings/org.eclipse.jdt.core.prefs index 81b36c6..0892e91 100644 --- a/tests/org.eclipse.ui.tests.rcp/.settings/org.eclipse.jdt.core.prefs +++ b/tests/org.eclipse.ui.tests.rcp/.settings/org.eclipse.jdt.core.prefs @@ -1,4 +1,4 @@ -#Fri Mar 03 16:43:22 EST 2006 +#Wed Mar 30 17:24:14 CEST 2011 eclipse.preferences.version=1 org.eclipse.jdt.core.builder.cleanOutputFolder=clean org.eclipse.jdt.core.builder.duplicateResourceTask=warning @@ -16,13 +16,13 @@ org.eclipse.jdt.core.compiler.debug.sourceFile=generate org.eclipse.jdt.core.compiler.doc.comment.support=disabled org.eclipse.jdt.core.compiler.maxProblemPerUnit=100 -org.eclipse.jdt.core.compiler.problem.assertIdentifier=error +org.eclipse.jdt.core.compiler.problem.assertIdentifier=warning org.eclipse.jdt.core.compiler.problem.deprecation=warning org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled org.eclipse.jdt.core.compiler.problem.discouragedReference=ignore org.eclipse.jdt.core.compiler.problem.emptyStatement=ignore -org.eclipse.jdt.core.compiler.problem.enumIdentifier=error +org.eclipse.jdt.core.compiler.problem.enumIdentifier=warning org.eclipse.jdt.core.compiler.problem.fieldHiding=warning org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning @@ -55,7 +55,6 @@ org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore -org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=enabled org.eclipse.jdt.core.compiler.problem.unusedImport=error diff --git a/tests/org.eclipse.ui.tests.rcp/Eclipse RCP Tests/org/eclipse/ui/tests/rcp/PlatformUITest.java b/tests/org.eclipse.ui.tests.rcp/Eclipse RCP Tests/org/eclipse/ui/tests/rcp/PlatformUITest.java index b5c33ac..3dbfaa5 100644 --- a/tests/org.eclipse.ui.tests.rcp/Eclipse RCP Tests/org/eclipse/ui/tests/rcp/PlatformUITest.java +++ b/tests/org.eclipse.ui.tests.rcp/Eclipse RCP Tests/org/eclipse/ui/tests/rcp/PlatformUITest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2004, 2009 IBM Corporation and others. + * Copyright (c) 2004, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -12,6 +12,7 @@ import junit.framework.Assert; import junit.framework.TestCase; +import junit.framework.TestSuite; import org.eclipse.swt.widgets.Display; import org.eclipse.ui.PlatformUI; @@ -19,6 +20,14 @@ import org.eclipse.ui.tests.rcp.util.WorkbenchAdvisorObserver; public class PlatformUITest extends TestCase { + public static TestSuite suite() { + TestSuite suite = new TestSuite(&quot;org.eclipse.ui.tests.rcp.PlatformUITest&quot;); + suite.addTest(new PlatformUITest(&quot;testEarlyGetWorkbench&quot;)); + suite.addTest(new PlatformUITest(&quot;testCreateDisplay&quot;)); + suite.addTest(new PlatformUITest(&quot;testCreateAndRunWorkbench&quot;)); + suite.addTest(new PlatformUITest(&quot;testCreateAndRunWorkbenchWithExceptionOnStartup&quot;)); + return suite; + } public PlatformUITest(String testName) { super(testName); @@ -54,6 +63,34 @@ assertTrue(wa.checkComplete); display.dispose(); assertTrue(display.isDisposed()); + + assertEquals(&quot;Async run during startup. See RCPTestWorkbenchAdvisor.preStartup()&quot;, + Boolean.FALSE, + RCPTestWorkbenchAdvisor.asyncDuringStartup); + + // the following four asserts test the various combinations of Thread + + // DisplayAccess + a/sync exec. Anything without a call to DisplayAccess + // should be deferred until after startup. + assertEquals( + &quot;Sync from qualified thread did not run during startup. See RCPTestWorkbenchAdvisor.preStartup()&quot;, + Boolean.TRUE, + RCPTestWorkbenchAdvisor.syncWithDisplayAccess); + assertEquals( + &quot;Async from qualified thread did not run during startup. See RCPTestWorkbenchAdvisor.preStartup()&quot;, + Boolean.TRUE, + RCPTestWorkbenchAdvisor.asyncWithDisplayAccess); + assertEquals( + &quot;Sync from un-qualified thread ran during startup. See RCPTestWorkbenchAdvisor.preStartup()&quot;, + Boolean.FALSE, + RCPTestWorkbenchAdvisor.syncWithoutDisplayAccess); + assertEquals( + &quot;Async from un-qualified thread ran during startup. See RCPTestWorkbenchAdvisor.preStartup()&quot;, + Boolean.FALSE, + RCPTestWorkbenchAdvisor.asyncWithoutDisplayAccess); + + assertFalse( + &quot;DisplayAccess.accessDisplayDuringStartup() in UI thread did not result in exception.&quot;, + RCPTestWorkbenchAdvisor.displayAccessInUIThreadAllowed); } /** @@ -76,69 +113,6 @@ assertFalse(PlatformUI.isWorkbenchRunning()); display.dispose(); assertTrue(display.isDisposed()); - } - - public void testStartupThreading() { - assertNotNull( - &quot;No display during startup. See RCPTestWorkbenchAdvisor.preStartup()&quot;, - RCPTestWorkbenchAdvisor.asyncDuringStartup); - - assertEquals( - &quot;Async run during startup. See RCPTestWorkbenchAdvisor.preStartup()&quot;, - Boolean.FALSE, - RCPTestWorkbenchAdvisor.asyncDuringStartup); - } - // the following four methods test the various combinations of Thread + - // DisplayAccess + a/sync exec. Anything without a call to DisplayAccess - // should be deferred until after startup. - public void testDisplayAccess_sync() { - assertNotNull( - &quot;No display during startup. See RCPTestWorkbenchAdvisor.preStartup()&quot;, - RCPTestWorkbenchAdvisor.syncWithDisplayAccess); - - assertEquals( - &quot;Sync from qualified thread did not run during startup. See RCPTestWorkbenchAdvisor.preStartup()&quot;, - Boolean.TRUE, - RCPTestWorkbenchAdvisor.syncWithDisplayAccess); - } - - public void testDisplayAccess_async() { - assertNotNull( - &quot;No display during startup. See RCPTestWorkbenchAdvisor.preStartup()&quot;, - RCPTestWorkbenchAdvisor.asyncWithDisplayAccess); - - assertEquals( - &quot;Async from qualified thread did not run during startup. See RCPTestWorkbenchAdvisor.preStartup()&quot;, - Boolean.TRUE, - RCPTestWorkbenchAdvisor.asyncWithDisplayAccess); - } - - public void testWithoutDisplayAccess_sync() { - assertNotNull( - &quot;No display during startup. See RCPTestWorkbenchAdvisor.preStartup()&quot;, - RCPTestWorkbenchAdvisor.syncWithoutDisplayAccess); - - assertEquals( - &quot;Sync from un-qualified thread ran during startup. See RCPTestWorkbenchAdvisor.preStartup()&quot;, - Boolean.FALSE, - RCPTestWorkbenchAdvisor.syncWithoutDisplayAccess); - } - - public void testWithoutDisplayAccess_async() { - assertNotNull( - &quot;No display during startup. See RCPTestWorkbenchAdvisor.preStartup()&quot;, - RCPTestWorkbenchAdvisor.asyncWithoutDisplayAccess); - - assertEquals( - &quot;Async from un-qualified thread ran during startup. See RCPTestWorkbenchAdvisor.preStartup()&quot;, - Boolean.FALSE, - RCPTestWorkbenchAdvisor.asyncWithoutDisplayAccess); - } - - public void testDisplayAccessInUIThreadAllowed() { - assertFalse( - &quot;DisplayAccess.accessDisplayDuringStartup() in UI thread did not result in exception.&quot;, - RCPTestWorkbenchAdvisor.displayAccessInUIThreadAllowed); } } diff --git a/tests/org.eclipse.ui.tests.rcp/Eclipse RCP Tests/org/eclipse/ui/tests/rcp/RcpTestSuite.java b/tests/org.eclipse.ui.tests.rcp/Eclipse RCP Tests/org/eclipse/ui/tests/rcp/RcpTestSuite.java index 4a68702..83f96f7 100644 --- a/tests/org.eclipse.ui.tests.rcp/Eclipse RCP Tests/org/eclipse/ui/tests/rcp/RcpTestSuite.java +++ b/tests/org.eclipse.ui.tests.rcp/Eclipse RCP Tests/org/eclipse/ui/tests/rcp/RcpTestSuite.java @@ -26,7 +26,7 @@ } public RcpTestSuite() { - addTest(new TestSuite(PlatformUITest.class)); + addTest(PlatformUITest.suite()); addTest(new TestSuite(WorkbenchAdvisorTest.class)); addTest(new TestSuite(WorkbenchConfigurerTest.class)); addTest(new TestSuite(WorkbenchWindowConfigurerTest.class)); diff --git a/tests/org.eclipse.ui.tests.rcp/META-INF/MANIFEST.MF b/tests/org.eclipse.ui.tests.rcp/META-INF/MANIFEST.MF index 4fafe2e..cdd8ef5 100644 --- a/tests/org.eclipse.ui.tests.rcp/META-INF/MANIFEST.MF +++ b/tests/org.eclipse.ui.tests.rcp/META-INF/MANIFEST.MF @@ -1,16 +1,19 @@ Manifest-Version: 1.0 Bundle-ManifestVersion: 2 -Bundle-Name: Eclipse RCP Tests +Bundle-Name: %pluginName Bundle-SymbolicName: org.eclipse.ui.tests.rcp; singleton:=true -Bundle-Version: 3.3.0.qualifier +Bundle-Version: 3.3.100.qualifier Bundle-ClassPath: rcptests.jar Bundle-Activator: org.eclipse.core.internal.compatibility.PluginActivator -Bundle-Vendor: Eclipse.org -Bundle-Localization: plugin +Bundle-Vendor: %providerName Require-Bundle: org.eclipse.core.runtime.compatibility, org.eclipse.ui, org.junit, org.eclipse.test.performance, org.eclipse.ui.tests.harness Bundle-ActivationPolicy: lazy -Export-Package: org.eclipse.ui.tests.rcp.util;x-internal:=true +Bundle-RequiredExecutionEnvironment: J2SE-1.4 +Export-Package: org.eclipse.ui.tests.rcp, + org.eclipse.ui.tests.rcp.performance, + org.eclipse.ui.tests.rcp.util +Bundle-Localization: plugin diff --git a/tests/org.eclipse.ui.tests.rcp/RCP Test Suite.launch b/tests/org.eclipse.ui.tests.rcp/RCP Test Suite.launch index 03332cd..e0a97b7 100644 --- a/tests/org.eclipse.ui.tests.rcp/RCP Test Suite.launch +++ b/tests/org.eclipse.ui.tests.rcp/RCP Test Suite.launch @@ -1,5 +1,4 @@ - - + @@ -32,6 +31,7 @@ + @@ -41,7 +41,8 @@ + - + \ No newline at end of file diff --git a/tests/org.eclipse.ui.tests.rcp/plugin.properties b/tests/org.eclipse.ui.tests.rcp/plugin.properties new file mode 100644 index 0000000..e941b81 --- /dev/null +++ b/tests/org.eclipse.ui.tests.rcp/plugin.properties @@ -0,0 +1,12 @@ +############################################################################### +# Copyright (c) 2011 IBM Corporation and others. +# All rights reserved. This program and the accompanying materials +# are made available under the terms of the Eclipse Public License v1.0 +# which accompanies this distribution, and is available at +# http://www.eclipse.org/legal/epl-v10.html +# +# Contributors: +# IBM Corporation - initial API and implementation +############################################################################### +pluginName= Eclipse RCP Tests +providerName= Eclipse.org diff --git a/tests/org.eclipse.ui.tests.views.properties.tabbed/.settings/org.eclipse.core.runtime.prefs b/tests/org.eclipse.ui.tests.views.properties.tabbed/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/tests/org.eclipse.ui.tests.views.properties.tabbed/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/tests/org.eclipse.ui.tests.views.properties.tabbed/Tabbed Properties View-All Tests.launch b/tests/org.eclipse.ui.tests.views.properties.tabbed/Tabbed Properties View-All Tests.launch index 04e1d9b..2d8c87a 100644 --- a/tests/org.eclipse.ui.tests.views.properties.tabbed/Tabbed Properties View-All Tests.launch +++ b/tests/org.eclipse.ui.tests.views.properties.tabbed/Tabbed Properties View-All Tests.launch @@ -1,5 +1,4 @@ - - + @@ -30,6 +29,7 @@ + @@ -39,7 +39,8 @@ + - + \ No newline at end of file diff --git a/tests/org.eclipse.ui.tests.views.properties.tabbed/src/org/eclipse/ui/tests/views/properties/tabbed/TabbedPropertySheetPageTextTest.java b/tests/org.eclipse.ui.tests.views.properties.tabbed/src/org/eclipse/ui/tests/views/properties/tabbed/TabbedPropertySheetPageTextTest.java index 233f5b8..6b373c4 100644 --- a/tests/org.eclipse.ui.tests.views.properties.tabbed/src/org/eclipse/ui/tests/views/properties/tabbed/TabbedPropertySheetPageTextTest.java +++ b/tests/org.eclipse.ui.tests.views.properties.tabbed/src/org/eclipse/ui/tests/views/properties/tabbed/TabbedPropertySheetPageTextTest.java @@ -30,10 +30,11 @@ /** * Tests for the text tests view. * - * @author Anthony Hunter * @since 3.4 */ public class TabbedPropertySheetPageTextTest extends TestCase { + + private static final long TIME_OUT_TO_GET_ACTIVE_TABS= 30000; // in ms private TextTestsView textTestsView; @@ -86,11 +87,7 @@ document.set(&quot;This is a test&quot;); textTestsView.getViewer().setSelectedRange(0, 14); - ITabDescriptor[] tabDescriptors; - do { - textTestsView.getSite().getShell().getDisplay().readAndDispatch(); - tabDescriptors= textTestsView.getTabbedPropertySheetPage().getActiveTabs(); - } while (tabDescriptors.length == 0); + ITabDescriptor[] tabDescriptors= waitForActiveTabs(); /** * First tab is &quot;This&quot; */ @@ -121,11 +118,7 @@ document.set(&quot;The fifth tab is selected&quot;); textTestsView.getViewer().setSelectedRange(0, 26); - ITabDescriptor[] tabDescriptors; - do { - textTestsView.getSite().getShell().getDisplay().readAndDispatch(); - tabDescriptors= textTestsView.getTabbedPropertySheetPage().getActiveTabs(); - } while (tabDescriptors.length == 0); + ITabDescriptor[] tabDescriptors= waitForActiveTabs(); /** * First tab is &quot;the&quot; and is selected. @@ -156,6 +149,17 @@ .getSelectedTab().getLabel()); } + private ITabDescriptor[] waitForActiveTabs() { + long threshold= System.currentTimeMillis() + TIME_OUT_TO_GET_ACTIVE_TABS; + ITabDescriptor[] tabDescriptors; + do { + textTestsView.getSite().getShell().getDisplay().readAndDispatch(); + tabDescriptors= textTestsView.getTabbedPropertySheetPage().getActiveTabs(); + } while (tabDescriptors.length == 0 &amp;&amp; System.currentTimeMillis() &lt; threshold); + assertTrue(&quot;No tab got activated&quot;, tabDescriptors.length &gt; 0); + return tabDescriptors; + } + /** * This test makes sure that the list of sections has only one section. The * TextTestsTabDescriptor returns two sections and one section is always @@ -166,11 +170,7 @@ document.set(&quot;This is a test&quot;); textTestsView.getViewer().setSelectedRange(0, 14); - ITabDescriptor[] tabDescriptors; - do { - textTestsView.getSite().getShell().getDisplay().readAndDispatch(); - tabDescriptors= textTestsView.getTabbedPropertySheetPage().getActiveTabs(); - } while (tabDescriptors.length == 0); + waitForActiveTabs(); /** * each tab has one section. diff --git a/tests/org.eclipse.ui.tests.views.properties.tabbed/test.xml b/tests/org.eclipse.ui.tests.views.properties.tabbed/test.xml index d5d6d89..6433012 100644 --- a/tests/org.eclipse.ui.tests.views.properties.tabbed/test.xml +++ b/tests/org.eclipse.ui.tests.views.properties.tabbed/test.xml @@ -1,4 +1,4 @@ - + diff --git a/tests/org.eclipse.ui.tests/.classpath b/tests/org.eclipse.ui.tests/.classpath index e4cbbcd..7f31b51 100644 --- a/tests/org.eclipse.ui.tests/.classpath +++ b/tests/org.eclipse.ui.tests/.classpath @@ -1,10 +1,10 @@ + + - - diff --git a/tests/org.eclipse.ui.tests/.settings/org.eclipse.core.runtime.prefs b/tests/org.eclipse.ui.tests/.settings/org.eclipse.core.runtime.prefs new file mode 100644 index 0000000..c522e1f --- /dev/null +++ b/tests/org.eclipse.ui.tests/.settings/org.eclipse.core.runtime.prefs @@ -0,0 +1,2 @@ +eclipse.preferences.version=1 +line.separator=\n diff --git a/tests/org.eclipse.ui.tests/.settings/org.eclipse.jdt.core.prefs b/tests/org.eclipse.ui.tests/.settings/org.eclipse.jdt.core.prefs index 67b13eb..43b844a 100644 --- a/tests/org.eclipse.ui.tests/.settings/org.eclipse.jdt.core.prefs +++ b/tests/org.eclipse.ui.tests/.settings/org.eclipse.jdt.core.prefs @@ -1,4 +1,3 @@ -#Fri Mar 28 15:34:15 EDT 2008 eclipse.preferences.version=1 org.eclipse.jdt.core.builder.cleanOutputFolder=clean org.eclipse.jdt.core.builder.duplicateResourceTask=warning @@ -7,10 +6,15 @@ org.eclipse.jdt.core.circularClasspath=error org.eclipse.jdt.core.classpath.exclusionPatterns=enabled org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled +org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull +org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault +org.eclipse.jdt.core.compiler.annotation.nonnullisdefault=disabled +org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable +org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled -org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.2 +org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.5 org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve -org.eclipse.jdt.core.compiler.compliance=1.4 +org.eclipse.jdt.core.compiler.compliance=1.5 org.eclipse.jdt.core.compiler.debug.lineNumber=generate org.eclipse.jdt.core.compiler.debug.localVariable=generate org.eclipse.jdt.core.compiler.debug.sourceFile=generate @@ -19,12 +23,15 @@ org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning org.eclipse.jdt.core.compiler.problem.assertIdentifier=error org.eclipse.jdt.core.compiler.problem.autoboxing=ignore +org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning +org.eclipse.jdt.core.compiler.problem.deadCode=warning org.eclipse.jdt.core.compiler.problem.deprecation=ignore org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled org.eclipse.jdt.core.compiler.problem.discouragedReference=ignore org.eclipse.jdt.core.compiler.problem.emptyStatement=ignore org.eclipse.jdt.core.compiler.problem.enumIdentifier=error +org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore org.eclipse.jdt.core.compiler.problem.fallthroughCase=warning org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled org.eclipse.jdt.core.compiler.problem.fieldHiding=warning @@ -32,6 +39,7 @@ org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning +org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=ignore org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning @@ -43,6 +51,7 @@ org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore +org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=disabled org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=private @@ -51,24 +60,37 @@ org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=disabled org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=private org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore +org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled org.eclipse.jdt.core.compiler.problem.missingSerialVersion=error +org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore org.eclipse.jdt.core.compiler.problem.noEffectAssignment=error org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=ignore org.eclipse.jdt.core.compiler.problem.nullReference=error +org.eclipse.jdt.core.compiler.problem.nullSpecInsufficientInfo=warning +org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=error org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore -org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning +org.eclipse.jdt.core.compiler.problem.potentialNullSpecViolation=error +org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore +org.eclipse.jdt.core.compiler.problem.rawTypeReference=ignore +org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore +org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore +org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore +org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=enabled org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=error +org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning -org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning +org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled +org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=ignore +org.eclipse.jdt.core.compiler.problem.unclosedCloseable=ignore org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning @@ -82,6 +104,7 @@ org.eclipse.jdt.core.compiler.problem.unusedImport=error org.eclipse.jdt.core.compiler.problem.unusedLabel=warning org.eclipse.jdt.core.compiler.problem.unusedLocal=error +org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore org.eclipse.jdt.core.compiler.problem.unusedParameter=warning org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled @@ -89,6 +112,6 @@ org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning -org.eclipse.jdt.core.compiler.source=1.3 +org.eclipse.jdt.core.compiler.source=1.5 org.eclipse.jdt.core.incompatibleJDKLevel=ignore org.eclipse.jdt.core.incompleteClasspath=error diff --git a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/AllTests.java b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/AllTests.java index 6857c14..d738b2c 100644 --- a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/AllTests.java +++ b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/AllTests.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -33,5 +33,6 @@ addTest(new org.eclipse.jface.tests.wizards.WizardTestSuite()); addTest(new org.eclipse.jface.tests.labelProviders.DecoratingLabelProviderTests()); addTest(new org.eclipse.jface.tests.fieldassist.FieldAssistTestSuite()); + addTest(new org.eclipse.jface.tests.window.AllTests()); } } diff --git a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/ListViewerRefreshTest.java b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/ListViewerRefreshTest.java index e1d3ac3..aab7d57 100644 --- a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/ListViewerRefreshTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/ListViewerRefreshTest.java @@ -56,6 +56,11 @@ shell.layout(); shell.open(); } + + protected void tearDown() throws Exception { + shell.dispose(); + shell = null; + } /** * Asserts the ability to refresh without a selection and preserve the diff --git a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/SimpleTreeViewerTest.java b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/SimpleTreeViewerTest.java index eed61df..09a0cf8 100644 --- a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/SimpleTreeViewerTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/SimpleTreeViewerTest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2006, 2007 IBM Corporation and others. + * Copyright (c) 2006, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -11,6 +11,9 @@ package org.eclipse.jface.tests.viewers; +import org.eclipse.swt.graphics.Image; +import org.eclipse.swt.widgets.Composite; + import org.eclipse.jface.viewers.ILabelProviderListener; import org.eclipse.jface.viewers.ISelectionChangedListener; import org.eclipse.jface.viewers.ITableLabelProvider; @@ -19,12 +22,13 @@ import org.eclipse.jface.viewers.SelectionChangedEvent; import org.eclipse.jface.viewers.StructuredSelection; import org.eclipse.jface.viewers.StructuredViewer; +import org.eclipse.jface.viewers.TreeNode; +import org.eclipse.jface.viewers.TreeNodeContentProvider; import org.eclipse.jface.viewers.TreePathViewerSorter; import org.eclipse.jface.viewers.TreeViewer; import org.eclipse.jface.viewers.Viewer; +import org.eclipse.jface.viewers.ViewerFilter; import org.eclipse.jface.viewers.ViewerSorter; -import org.eclipse.swt.graphics.Image; -import org.eclipse.swt.widgets.Composite; /** * @since 3.2 @@ -106,15 +110,17 @@ treeViewer.refresh(); treeViewer.removeSelectionChangedListener(listener); } - + public void testBug184712() { class TableAndTreeLabelProvider extends LabelProvider implements ITableLabelProvider { public Image getColumnImage(Object element, int columnIndex) { return null; } + public String getColumnText(Object element, int columnIndex) { return &quot;wrong&quot;; } + public String getText(Object element) { return &quot;right&quot;; } @@ -122,4 +128,30 @@ treeViewer.setLabelProvider(new TableAndTreeLabelProvider()); assertEquals(&quot;right&quot;, treeViewer.getTree().getItem(0).getText()); } + + public void test327004() { + treeViewer.setInput(null); + treeViewer.setContentProvider(new TreeNodeContentProvider()); + + final TreeNode[] children= new TreeNode[5]; + children[0]= new TreeNode(&quot;0&quot;); + children[1]= new TreeNode(&quot;1&quot;); + children[2]= new TreeNode(&quot;1&quot;); + children[3]= new TreeNode(&quot;1&quot;); + children[4]= new TreeNode(&quot;1&quot;); + treeViewer.setInput(children); + + ViewerFilter filter= new ViewerFilter() { + public boolean select(Viewer viewer, Object parentElement, Object element) { + if (element == children[0] || element == children[1] || element == children[2] || element == children[4]) + return false; + return true; + } + }; + treeViewer.setFilters(new ViewerFilter[] { filter }); + int i= treeViewer.getTree().getItemCount(); + + assertEquals(4, i); // 4 because the filter doesn&apos;t work due to equal nodes + } + } diff --git a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/SimpleVirtualLazyTreeViewerTest.java b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/SimpleVirtualLazyTreeViewerTest.java index 17dce2e..e05a072 100644 --- a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/SimpleVirtualLazyTreeViewerTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/SimpleVirtualLazyTreeViewerTest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2010 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -21,6 +21,7 @@ import org.eclipse.swt.SWT; import org.eclipse.swt.widgets.Composite; import org.eclipse.swt.widgets.Event; +import org.eclipse.swt.widgets.Listener; import org.eclipse.swt.widgets.Tree; import org.eclipse.swt.widgets.TreeItem; @@ -36,6 +37,8 @@ private boolean callbacksEnabled = true; private boolean printCallbacks = false; private int offset = 0; + + private int updateElementCallCount = 0; private class LazyTreeContentProvider implements ILazyTreeContentProvider { /** @@ -79,8 +82,6 @@ } } - private int updateElementCallCount = 0; - public SimpleVirtualLazyTreeViewerTest(String name) { super(name); } @@ -88,7 +89,22 @@ public TreeViewer getTreeViewer() { return (TreeViewer) fViewer; } + + /** + * Checks if the virtual tree / table functionality can be tested in the current settings. + * The virtual trees and tables rely on SWT.SetData event which is only sent if OS requests + * information about the tree / table. If the window is not visible (obscured by another window, + * outside of visible area, or OS determined that it can skip drawing), then OS request won&apos;t + * be send, causing automated tests to fail. + * See https://bugs.eclipse.org/bugs/show_bug.cgi?id=118919 . + */ + protected boolean setDataCalled = false; + public void setUp() { + super.setUp(); + processEvents(); // run events for SetData precondition test + } + protected void setInput() { String letterR = &quot;R&quot;; getTreeViewer().setInput(letterR); @@ -98,10 +114,21 @@ Tree tree = new Tree(fShell, SWT.VIRTUAL | SWT.MULTI); TreeViewer treeViewer = new TreeViewer(tree); treeViewer.setContentProvider(new LazyTreeContentProvider()); + tree.addListener(SWT.SetData, new Listener() { + public void handleEvent(Event event) { + setDataCalled = true; + } + }); return treeViewer; } public void testCreation() { + if (disableTestsBug347491) + return; + if (!setDataCalled) { + System.err.println(&quot;SWT.SetData is not received. Cancelled test &quot; + getName()); + return; + } processEvents(); assertTrue(&quot;tree should have items&quot;, getTreeViewer().getTree() .getItemCount() &gt; 0); @@ -156,6 +183,12 @@ /* test TreeViewer.remove(parent, index) */ public void testRemoveAt() { + if (disableTestsBug347491) + return; + if (!setDataCalled) { + System.err.println(&quot;SWT.SetData is not received. Cancelled test &quot; + getName()); + return; + } TreeViewer treeViewer = (TreeViewer) fViewer; // correct what the content provider is answering with treeViewer.getTree().update(); diff --git a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/ViewerTestCase.java b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/ViewerTestCase.java index 708f90f..711eed3 100644 --- a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/ViewerTestCase.java +++ b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/ViewerTestCase.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2007 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -18,6 +18,7 @@ import org.eclipse.jface.util.ISafeRunnableRunner; import org.eclipse.jface.util.Policy; import org.eclipse.jface.util.SafeRunnable; +import org.eclipse.jface.util.Util; import org.eclipse.jface.viewers.ISelection; import org.eclipse.jface.viewers.IStructuredSelection; import org.eclipse.jface.viewers.StructuredSelection; @@ -35,9 +36,12 @@ protected StructuredViewer fViewer; protected TestElement fRootElement; public TestModel fModel; + + protected boolean disableTestsBug347491 = false; public ViewerTestCase(String name) { super(name); + disableTestsBug347491 = Util.isCocoa(); } protected void assertSelectionEquals(String message, TestElement expected) { diff --git a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/VirtualLazyTreeViewerTest.java b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/VirtualLazyTreeViewerTest.java index 868fe50..efee60a 100644 --- a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/VirtualLazyTreeViewerTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/VirtualLazyTreeViewerTest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2007 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -117,4 +117,82 @@ // no need to test since virtual trees do not support sorting } + // Temporary overrides for bug 347491: + public void testRefreshWithAddedChildren() { + if (disableTestsBug347491) + return; + if (setDataCalls == 0) { + System.err.println(&quot;SWT.SetData is not received. Cancelled test &quot; + getName()); + return; + } + super.testRefreshWithAddedChildren(); + } + + public void testDeleteSibling() { + if (disableTestsBug347491) + return; + if (setDataCalls == 0) { + System.err.println(&quot;SWT.SetData is not received. Cancelled test &quot; + getName()); + return; + } + super.testDeleteSibling(); + } + + public void testExpandToLevel() { + if (setDataCalls == 0) { + System.err.println(&quot;SWT.SetData is not received. Cancelled test &quot; + getName()); + return; + } + super.testExpandToLevel(); + } + + public void testInsertSibling() { + if (disableTestsBug347491) + return; + if (setDataCalls == 0) { + System.err.println(&quot;SWT.SetData is not received. Cancelled test &quot; + getName()); + return; + } + super.testInsertSibling(); + } + + public void testInsertSiblings() { + if (disableTestsBug347491) + return; + if (setDataCalls == 0) { + System.err.println(&quot;SWT.SetData is not received. Cancelled test &quot; + getName()); + return; + } + super.testInsertSiblings(); + } + + public void testSetInput() { + if (disableTestsBug347491) + return; + if (setDataCalls == 0) { + System.err.println(&quot;SWT.SetData is not received. Cancelled test &quot; + getName()); + return; + } + super.testSetInput(); + } + + public void testSomeChildrenChanged() { + if (disableTestsBug347491) + return; + if (setDataCalls == 0) { + System.err.println(&quot;SWT.SetData is not received. Cancelled test &quot; + getName()); + return; + } + super.testSomeChildrenChanged(); + } + + public void testWorldChanged() { + if (disableTestsBug347491) + return; + if (setDataCalls == 0) { + System.err.println(&quot;SWT.SetData is not received. Cancelled test &quot; + getName()); + return; + } + super.testWorldChanged(); + } } diff --git a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/VirtualTableViewerTest.java b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/VirtualTableViewerTest.java index 84b6406..d8122e6 100644 --- a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/VirtualTableViewerTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/viewers/VirtualTableViewerTest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2007 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -15,17 +15,16 @@ import java.util.HashSet; import java.util.Set; +import org.eclipse.jface.viewers.IStructuredSelection; +import org.eclipse.jface.viewers.StructuredSelection; +import org.eclipse.jface.viewers.TableViewer; +import org.eclipse.jface.viewers.ViewerFilter; import org.eclipse.swt.SWT; import org.eclipse.swt.widgets.Composite; import org.eclipse.swt.widgets.Event; import org.eclipse.swt.widgets.Listener; import org.eclipse.swt.widgets.Table; import org.eclipse.swt.widgets.TableItem; - -import org.eclipse.jface.viewers.IStructuredSelection; -import org.eclipse.jface.viewers.StructuredSelection; -import org.eclipse.jface.viewers.TableViewer; -import org.eclipse.jface.viewers.ViewerFilter; /** * The TableViewerTest is a test of the SWT#VIRTUAL support in TableViewers, @@ -35,6 +34,16 @@ Set visibleItems = new HashSet(); /** + * Checks if the virtual tree / table functionality can be tested in the current settings. + * The virtual trees and tables rely on SWT.SetData event which is only sent if OS requests + * information about the tree / table. If the window is not visible (obscured by another window, + * outside of visible area, or OS determined that it can skip drawing), then OS request won&apos;t + * be send, causing automated tests to fail. + * See https://bugs.eclipse.org/bugs/show_bug.cgi?id=118919 . + */ + protected boolean setDataCalled = false; + + /** * Create a new instance of the receiver. * * @param name @@ -42,7 +51,12 @@ public VirtualTableViewerTest(String name) { super(name); } - + + public void setUp() { + super.setUp(); + processEvents(); // run events for SetData precondition test + } + protected int getShellStyle() { return super.getShellStyle() | SWT.ON_TOP; } @@ -64,11 +78,26 @@ * @see org.eclipse.swt.widgets.Listener#handleEvent(org.eclipse.swt.widgets.Event) */ public void handleEvent(Event event) { + setDataCalled = true; TableItem item = (TableItem) event.item; visibleItems.add(item); } }); return viewer; + } + + /** + * Checks if update occurred. Updates for virtual items will be skipped + * if, for instance, another window is in the foreground. + * @return true if update occurred + */ + protected boolean updateTable() { + setDataCalled = false; + ((TableViewer) fViewer).getControl().update(); + if (setDataCalled) + return true; + System.err.println(&quot;SWT.SetData is not received. Cancelled test &quot; + getName()); + return false; } /** @@ -107,34 +136,37 @@ */ public void testFilter() { ViewerFilter filter = new TestLabelFilter(); - visibleItems = new HashSet(); fViewer.addFilter(filter); - ((TableViewer) fViewer).getControl().update(); + if (!updateTable()) + return; assertEquals(&quot;filtered count&quot;, 5, getItemCount()); visibleItems = new HashSet(); fViewer.removeFilter(filter); - ((TableViewer) fViewer).getControl().update(); + if (!updateTable()) + return; assertEquals(&quot;unfiltered count&quot;, 10, getItemCount()); } public void testSetFilters() { ViewerFilter filter = new TestLabelFilter(); - visibleItems = new HashSet(); fViewer.setFilters(new ViewerFilter[] { filter, new TestLabelFilter2() }); - ((TableViewer) fViewer).getControl().update(); + if (!updateTable()) + return; assertEquals(&quot;2 filters count&quot;,1, getItemCount()); visibleItems = new HashSet(); fViewer.setFilters(new ViewerFilter[] { filter }); - ((TableViewer) fViewer).getControl().update(); + if (!updateTable()) + return; assertEquals(&quot;1 filtered count&quot;,5, getItemCount()); visibleItems = new HashSet(); fViewer.setFilters(new ViewerFilter[0]); - ((TableViewer) fViewer).getControl().update(); + if (!updateTable()) + return; assertEquals(&quot;unfiltered count&quot;,10, getItemCount()); } /* @@ -209,8 +241,13 @@ * @see org.eclipse.jface.tests.viewers.StructuredViewerTest#testRenameWithFilter() */ public void testRenameWithFilter() { + if (!setDataCalled) { + System.err.println(&quot;SWT.SetData is not received. Cancelled test &quot; + getName()); + return; + } fViewer.addFilter(new TestLabelFilter()); - ((TableViewer) fViewer).getControl().update(); + if (!updateTable()) + return; TestElement first = fRootElement.getFirstChild(); first.setLabel(&quot;name-1111&quot;); // should disappear ((TableViewer) fViewer).getControl().update(); diff --git a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/window/AllTests.java b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/window/AllTests.java new file mode 100644 index 0000000..d60d1ff --- /dev/null +++ b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/window/AllTests.java @@ -0,0 +1,31 @@ +/******************************************************************************* + * Copyright (c) 2011 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + ******************************************************************************/ + +package org.eclipse.jface.tests.window; + +import junit.framework.Test; +import junit.framework.TestSuite; + +public class AllTests extends TestSuite { + + public static void main(String[] args) { + junit.textui.TestRunner.run(suite()); + } + + public static Test suite() { + return new AllTests(); + } + + public AllTests() { + addTestSuite(ApplicationWindowTest.class); + } + +} diff --git a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/window/ApplicationWindowTest.java b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/window/ApplicationWindowTest.java new file mode 100644 index 0000000..cb68d34 --- /dev/null +++ b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/window/ApplicationWindowTest.java @@ -0,0 +1,85 @@ +/******************************************************************************* + * Copyright (c) 2011 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + ******************************************************************************/ +package org.eclipse.jface.tests.window; + +import junit.framework.TestCase; + +import org.eclipse.core.runtime.IProgressMonitor; +import org.eclipse.core.runtime.IProgressMonitorWithBlocking; +import org.eclipse.core.runtime.Status; +import org.eclipse.jface.operation.IRunnableWithProgress; +import org.eclipse.jface.window.ApplicationWindow; +import org.eclipse.swt.widgets.Shell; + +public class ApplicationWindowTest extends TestCase { + + private ApplicationWindow window; + + protected void tearDown() throws Exception { + if (window != null) { + // close the window + window.close(); + window = null; + } + super.tearDown(); + } + + private void testBug334093(boolean fork, boolean cancelable) + throws Exception { + window = new ApplicationWindow(null) { + public void create() { + addStatusLine(); + super.create(); + } + + protected void createTrimWidgets(Shell shell) { + // don&apos;t actually create the status line controls + } + }; + window.create(); + window.run(fork, cancelable, new IRunnableWithProgress() { + public void run(IProgressMonitor monitor) { + monitor.beginTask(&quot;beginTask&quot;, 10); + monitor.setTaskName(&quot;setTaskName&quot;); + monitor.subTask(&quot;subTask&quot;); + + if (monitor instanceof IProgressMonitorWithBlocking) { + IProgressMonitorWithBlocking blockingMonitor = (IProgressMonitorWithBlocking) monitor; + blockingMonitor.setBlocked(Status.CANCEL_STATUS); + blockingMonitor.clearBlocked(); + } + + monitor.worked(1); + monitor.setCanceled(true); + monitor.isCanceled(); + monitor.setCanceled(false); + monitor.done(); + } + }); + } + + public void testBug334093_TrueTrue() throws Exception { + testBug334093(true, true); + } + + public void testBug334093_TrueFalse() throws Exception { + testBug334093(true, false); + } + + public void testBug334093_FalseTrue() throws Exception { + testBug334093(false, true); + } + + public void testBug334093_FalseFalse() throws Exception { + testBug334093(false, false); + } + +} diff --git a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/wizards/TheTestWizard.java b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/wizards/TheTestWizard.java index 6e0cf75..f67fb29 100644 --- a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/wizards/TheTestWizard.java +++ b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/wizards/TheTestWizard.java @@ -21,11 +21,13 @@ public final String page1Name = &quot;PAGE1&quot;; public final String page2Name = &quot;PAGE2&quot;; public final String page3Name = &quot;PAGE3&quot;; - + private boolean throwExceptionOnDispose; + public TheTestWizard() { super(); setNeedsProgressMonitor(true); } + /** * Adding the page to the wizard. @@ -48,4 +50,20 @@ WizardTest.DID_FINISH = true; return true; } + + /** + * @param throwExceptionOnDispose The throwExceptionOnDispose to set. + */ + public void setThrowExceptionOnDispose(boolean throwExceptionOnDispose) { + this.throwExceptionOnDispose = throwExceptionOnDispose; + } + + /* (non-Javadoc) + * @see org.eclipse.jface.wizard.Wizard#dispose() + */ + public void dispose() { + super.dispose(); + if(throwExceptionOnDispose) + throw new NullPointerException(); + } } \ No newline at end of file diff --git a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/wizards/TheTestWizardPage.java b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/wizards/TheTestWizardPage.java index ffcfc9d..5222bee 100644 --- a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/wizards/TheTestWizardPage.java +++ b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/wizards/TheTestWizardPage.java @@ -27,6 +27,7 @@ public static final String BAD_TEXT_FIELD_STATUS = &quot;A bad value was entered&quot;; public static final String GOOD_TEXT_FIELD_CONTENTS = &quot;GOOD VALUE&quot;; public Text textInputField; + private boolean throwExceptionOnDispose; public TheTestWizardPage(String name) { super(name); @@ -80,5 +81,21 @@ setErrorMessage(message); setPageComplete(message == null); } + + /** + * @param throwExceptionOnDispose The throwExceptionOnDispose to set. + */ + public void setThrowExceptionOnDispose(boolean throwExceptionOnDispose) { + this.throwExceptionOnDispose = throwExceptionOnDispose; + } + + /* (non-Javadoc) + * @see org.eclipse.jface.dialogs.DialogPage#dispose() + */ + public void dispose() { + super.dispose(); + if(throwExceptionOnDispose) + throw new NullPointerException(); + } } \ No newline at end of file diff --git a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/wizards/WizardTest.java b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/wizards/WizardTest.java index 927d3ea..4abb0c3 100644 --- a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/wizards/WizardTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/jface/tests/wizards/WizardTest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2008 IBM Corporation and others. + * Copyright (c) 2008, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -15,13 +15,17 @@ import junit.framework.TestCase; +import org.eclipse.core.runtime.IStatus; import org.eclipse.jface.dialogs.IDialogConstants; import org.eclipse.jface.dialogs.IPageChangedListener; import org.eclipse.jface.dialogs.IPageChangingListener; import org.eclipse.jface.dialogs.PageChangedEvent; import org.eclipse.jface.dialogs.PageChangingEvent; +import org.eclipse.jface.util.ILogger; +import org.eclipse.jface.util.Policy; import org.eclipse.swt.graphics.RGB; import org.eclipse.swt.widgets.Display; +import org.eclipse.swt.widgets.Shell; public class WizardTest extends TestCase { /** @@ -219,6 +223,40 @@ assertEquals(&quot;Page change notified unintentially&quot;, false, pageChanged); } + + public void testWizardDispose() { + wizard.setThrowExceptionOnDispose(true); + + final boolean logged[] = new boolean[1]; + Policy.setLog(new ILogger() { + public void log(IStatus status) { + logged[0] = true; + } + }); + Shell shell = dialog.getShell(); + dialog.close(); + + assertTrue(logged[0]); + + shell.dispose(); + } + + public void testWizardPageDispose() { + wizard.page2.setThrowExceptionOnDispose(true); + final boolean logged[] = new boolean[1]; + Policy.setLog(new ILogger() { + public void log(IStatus status) { + logged[0] = true; + } + }); + dialog.close(); + + assertTrue(logged[0]); + assertTrue(wizard.page1.getControl().isDisposed()); + assertTrue(wizard.page3.getControl().isDisposed()); + + } + //---------------------------------------------------- diff --git a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/ui/tests/RCPSessionApplication.java b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/ui/tests/RCPSessionApplication.java index 3d1f951..e50adf9 100644 --- a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/ui/tests/RCPSessionApplication.java +++ b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/ui/tests/RCPSessionApplication.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2008, 2009 IBM Corporation and others. + * Copyright (c) 2008, 2010 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -19,10 +19,12 @@ public class RCPSessionApplication implements IApplication { + private boolean windowlessApp = false; + public Object start(IApplicationContext context) throws Exception { Display display = PlatformUI.createDisplay(); try { - PlatformUI.createAndRunWorkbench(display, new RCPTestWorkbenchAdvisor()); + PlatformUI.createAndRunWorkbench(display, new RCPTestWorkbenchAdvisor(windowlessApp)); } finally { if (display != null) display.dispose(); @@ -42,4 +44,12 @@ } }); } + + /** + * @param windowlessApp The windowlessApp to set. + */ + public void setWindowlessApp(boolean windowlessApp) { + this.windowlessApp = windowlessApp; + } + } \ No newline at end of file diff --git a/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/ui/tests/WindowlessRCPApplication.java b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/ui/tests/WindowlessRCPApplication.java new file mode 100644 index 0000000..0f1b292 --- /dev/null +++ b/tests/org.eclipse.ui.tests/Eclipse JFace Tests/org/eclipse/ui/tests/WindowlessRCPApplication.java @@ -0,0 +1,20 @@ +/******************************************************************************* + * Copyright (c) 2010 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + *******************************************************************************/ +package org.eclipse.ui.tests; + + +public class WindowlessRCPApplication extends RCPSessionApplication { + + public WindowlessRCPApplication() { + setWindowlessApp(true); + } + +} \ No newline at end of file diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/api/IEditorRegistryTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/api/IEditorRegistryTest.java index 8bac867..10ba35a 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/api/IEditorRegistryTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/api/IEditorRegistryTest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2010 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -157,6 +157,13 @@ assertNull(IDE.getDefaultEditor(file)); } + /** + * getDefaultEditor(String) + */ + public void testGetDefaultEditor4_Bug356116() throws Throwable { + assertNotNull(fReg.getDefaultEditor(&quot;test.bug356116&quot;)); + } + public void testSetDefaultEditor() throws Throwable { proj = FileUtil.createProject(&quot;testProject&quot;); IFile file = FileUtil.createFile(&quot;good.file&quot;, proj); diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/api/IWorkbenchPageTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/api/IWorkbenchPageTest.java index 341d7e3..76a9333 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/api/IWorkbenchPageTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/api/IWorkbenchPageTest.java @@ -59,6 +59,7 @@ import org.eclipse.ui.editors.text.TextEditor; import org.eclipse.ui.handlers.IHandlerService; import org.eclipse.ui.ide.IDE; +import org.eclipse.ui.internal.WorkbenchPage; import org.eclipse.ui.internal.WorkbenchPlugin; import org.eclipse.ui.internal.tweaklets.Tweaklets; import org.eclipse.ui.internal.util.Util; @@ -2835,6 +2836,8 @@ fActivePage.closeAllEditors(false); assertEquals(getMessage(), 0, logCount); assertEquals(0, fActivePage.getEditorReferences().length); + ((WorkbenchPage)fActivePage).resetHiddenEditors(); + assertEquals(0, fActivePage.getEditorReferences().length); } /** @@ -3002,4 +3005,60 @@ .isFastView(fActivePage, reference)); } + /** + * Create and hide a single editor in a new window. Close the window. + * Make sure there are no editor errors. + * + * @throws Exception + */ + public void testOpenAndHideEditor11() throws Exception { + proj = FileUtil.createProject(&quot;testOpenAndHideEditor&quot;); + IFile file1 = FileUtil.createFile(&quot;a.mock1&quot;, proj); + + IWorkbenchWindow window = openTestWindow(); + IWorkbenchPage page = window.getActivePage(); + + IEditorPart editor = IDE.openEditor(page, file1); + assertTrue(editor instanceof MockEditorPart); + IEditorReference editorRef = (IEditorReference) page + .getReference(editor); + page.hideEditor(editorRef); + assertEquals(0, page.getEditorReferences().length); + page.showEditor(editorRef); + assertEquals(1, page.getEditorReferences().length); + page.hideEditor(editorRef); + processEvents(); + window.close(); + processEvents(); + assertEquals(getMessage(), 0, logCount); + assertEquals(0, page.getEditorReferences().length); + } + + /** + * Create and hide a single editor. Close it while it&apos;s hidden + * and make sure that it doesn&apos;t die. + * + * @throws Exception + */ + public void testOpenAndHideEditor12() throws Exception { + proj = FileUtil.createProject(&quot;testOpenAndHideEditor&quot;); + IFile file1 = FileUtil.createFile(&quot;a.mock1&quot;, proj); + IEditorPart editor = IDE.openEditor(fActivePage, file1); + assertTrue(editor instanceof MockEditorPart); + IEditorReference editorRef = (IEditorReference) fActivePage + .getReference(editor); + fActivePage.hideEditor(editorRef); + assertEquals(0, fActivePage.getEditorReferences().length); + fActivePage.showEditor(editorRef); + assertEquals(1, fActivePage.getEditorReferences().length); + fActivePage.hideEditor(editorRef); + processEvents(); + fActivePage.closeEditor(editor, false); + processEvents(); + ((WorkbenchPage)fActivePage).resetHiddenEditors(); + assertEquals(0, fActivePage.getEditorReferences().length); + assertEquals(getMessage(), 0, logCount); + assertEquals(0, fActivePage.getEditorReferences().length); + } + } diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/api/IWorkingSetManagerTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/api/IWorkingSetManagerTest.java index 1eec34c..296f72d 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/api/IWorkingSetManagerTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/api/IWorkingSetManagerTest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2009 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -230,6 +230,45 @@ assertTrue(ArrayUtil.equals(new IWorkingSet[] { fWorkingSet }, fWorkingSetManager.getRecentWorkingSets())); } + + public void testRecentWorkingSetsLength() throws Throwable { + int oldMRULength = fWorkingSetManager.getRecentWorkingSetsLength(); + try { + fWorkingSetManager.setRecentWorkingSetsLength(10); + + IWorkingSet[] workingSets = new IWorkingSet[10]; + for (int i = 0 ; i &lt; 10; i++) { + IWorkingSet workingSet = fWorkingSetManager.createWorkingSet( + &quot;ws_&quot; + Integer.toString(i + 1), new IAdaptable[] { fWorkspace.getRoot() }); + fWorkingSetManager.addRecentWorkingSet(workingSet); + fWorkingSetManager.addWorkingSet(workingSet); + workingSets[9 - i] = workingSet; + } + assertTrue(ArrayUtil.equals(workingSets, fWorkingSetManager.getRecentWorkingSets())); + + fWorkingSetManager.setRecentWorkingSetsLength(7); + IWorkingSet[] workingSets7 = new IWorkingSet[7]; + System.arraycopy(workingSets, 0, workingSets7, 0, 7); + assertTrue(ArrayUtil.equals(workingSets7, fWorkingSetManager.getRecentWorkingSets())); + + fWorkingSetManager.setRecentWorkingSetsLength(9); + IWorkingSet[] workingSets9 = new IWorkingSet[9]; + System.arraycopy(workingSets, 0, workingSets9, 2, 7); + + for (int i = 7 ; i &lt; 9; i++) { + IWorkingSet workingSet = fWorkingSetManager.createWorkingSet( + &quot;ws_addded_&quot; + Integer.toString(i + 1), new IAdaptable[] { fWorkspace.getRoot() }); + fWorkingSetManager.addRecentWorkingSet(workingSet); + fWorkingSetManager.addWorkingSet(workingSet); + workingSets9[8 - i] = workingSet; + } + + assertTrue(ArrayUtil.equals(workingSets9, fWorkingSetManager.getRecentWorkingSets())); + } finally { + if (oldMRULength &gt; 0) + fWorkingSetManager.setRecentWorkingSetsLength(oldMRULength); + } + } public void testGetWorkingSet() throws Throwable { assertNull(fWorkingSetManager.getWorkingSet(WORKING_SET_NAME_1)); diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/commands/Bug73756Test.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/commands/Bug73756Test.java index 296ed93..95b57e0 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/commands/Bug73756Test.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/commands/Bug73756Test.java @@ -38,7 +38,7 @@ private static String MESSAGE = MessageFormat.format(Util.translateString( RESOURCE_BUNDLE, &quot;undefinedCommand.WarningMessage&quot;, null), //$NON-NLS-1$ - new String[] { CMD_ID }); + (Object[]) new String[] { CMD_ID }); private static String PLUGIN_ID = &quot;org.eclipse.jface&quot;; diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/commands/CommandEnablementTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/commands/CommandEnablementTest.java index 0bc8481..9eb4d20 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/commands/CommandEnablementTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/commands/CommandEnablementTest.java @@ -518,8 +518,9 @@ IConfigurationElement[] configElements = extensions[i] .getConfigurationElements(); for (int j = 0; j &lt; configElements.length &amp;&amp; !found; j++) { - if (configElements[j].getAttribute( - IWorkbenchRegistryConstants.ATT_CLASS).equals( + String attrClass = configElements[j].getAttribute( + IWorkbenchRegistryConstants.ATT_CLASS); + if (attrClass != null &amp;&amp; attrClass.equals( &quot;org.eclipse.ui.tests.menus.HelloEHandler&quot;)) { handlerProxyConfig = configElements[j]; commandId = handlerProxyConfig diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/datatransfer/ExportArchiveFileOperationTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/datatransfer/ExportArchiveFileOperationTest.java index f8bf0a0..756d81c 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/datatransfer/ExportArchiveFileOperationTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/datatransfer/ExportArchiveFileOperationTest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2009 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -36,6 +36,7 @@ import org.eclipse.ui.dialogs.IOverwriteQuery; import org.eclipse.ui.internal.wizards.datatransfer.ArchiveFileExportOperation; import org.eclipse.ui.internal.wizards.datatransfer.TarEntry; +import org.eclipse.ui.internal.wizards.datatransfer.TarException; import org.eclipse.ui.internal.wizards.datatransfer.TarFile; import org.eclipse.ui.tests.harness.util.FileUtil; import org.eclipse.ui.tests.harness.util.UITestCase; @@ -47,6 +48,7 @@ private static final String ZIP_FILE_EXT = &quot;zip&quot;; private static final String TAR_FILE_EXT = &quot;tar&quot;; private static final String[] directoryNames = { &quot;dir1&quot;, &quot;dir2&quot; }; + private static final String[] emptyDirectoryNames = { &quot;dir3&quot; }; private static final String[] fileNames = { &quot;file1.txt&quot;, &quot;file2.txt&quot; }; private String localDirectory; @@ -84,9 +86,9 @@ operation.setUseCompression(false); operation.setUseTarFormat(false); - openTestWindow().run(true, true, operation); + operation.run(new NullProgressMonitor()); - verifyFolders(directoryNames.length, ZIP_FILE_EXT); + verifyFolders(directoryNames.length + emptyDirectoryNames.length, ZIP_FILE_EXT); } @@ -99,7 +101,7 @@ operation.setUseCompression(true); operation.setUseTarFormat(false); - openTestWindow().run(true, true, operation); + operation.run(new NullProgressMonitor()); verifyCompressed(ZIP_FILE_EXT); } @@ -123,9 +125,9 @@ operation.setCreateLeadupStructure(false); operation.setUseCompression(false); operation.setUseTarFormat(false); - openTestWindow().run(true, true, operation); + operation.run(new NullProgressMonitor()); flattenPaths = true; - verifyFolders(directoryNames.length, ZIP_FILE_EXT); + verifyFolders(directoryNames.length + emptyDirectoryNames.length, ZIP_FILE_EXT); } public void testExportZipCreateSelectedDirectoriesWithFolders() throws Exception { @@ -142,9 +144,9 @@ operation.setCreateLeadupStructure(false); operation.setUseCompression(false); operation.setUseTarFormat(false); - openTestWindow().run(true, true, operation); + operation.run(new NullProgressMonitor()); excludeProjectPath = true; - verifyFolders(directoryNames.length, ZIP_FILE_EXT); + verifyFolders(directoryNames.length + emptyDirectoryNames.length, ZIP_FILE_EXT); } public void testExportZipCreateSelectedDirectoriesCompressed() throws Exception { @@ -167,10 +169,10 @@ operation.setCreateLeadupStructure(false); operation.setUseCompression(true); operation.setUseTarFormat(false); - openTestWindow().run(true, true, operation); + operation.run(new NullProgressMonitor()); flattenPaths = true; verifyCompressed(ZIP_FILE_EXT); - verifyFolders(directoryNames.length, ZIP_FILE_EXT); + verifyFolders(directoryNames.length + emptyDirectoryNames.length, ZIP_FILE_EXT); } public void testExportTar() throws Exception { @@ -182,9 +184,9 @@ operation.setUseTarFormat(true); operation.setUseCompression(false); - openTestWindow().run(true, true, operation); + operation.run(new NullProgressMonitor()); - verifyFolders(directoryNames.length, TAR_FILE_EXT); + verifyFolders(directoryNames.length + emptyDirectoryNames.length, TAR_FILE_EXT); } public void testExportTarCompressed() throws Exception { @@ -196,7 +198,7 @@ operation.setUseTarFormat(true); operation.setUseCompression(true); - openTestWindow().run(true, true, operation); + operation.run(new NullProgressMonitor()); verifyCompressed(TAR_FILE_EXT); } @@ -220,9 +222,9 @@ operation.setCreateLeadupStructure(false); operation.setUseCompression(false); operation.setUseTarFormat(true); - openTestWindow().run(true, true, operation); + operation.run(new NullProgressMonitor()); flattenPaths = true; - verifyFolders(directoryNames.length, TAR_FILE_EXT); + verifyFolders(directoryNames.length + emptyDirectoryNames.length, TAR_FILE_EXT); } public void testExportTarCreateSelectedDirectoriesWithFolders() throws Exception { @@ -239,9 +241,9 @@ operation.setCreateLeadupStructure(false); operation.setUseCompression(false); operation.setUseTarFormat(true); - openTestWindow().run(true, true, operation); + operation.run(new NullProgressMonitor()); excludeProjectPath = true; - verifyFolders(directoryNames.length, TAR_FILE_EXT); + verifyFolders(directoryNames.length + emptyDirectoryNames.length, TAR_FILE_EXT); } @@ -265,10 +267,10 @@ operation.setCreateLeadupStructure(false); operation.setUseCompression(true); operation.setUseTarFormat(true); - openTestWindow().run(true, true, operation); + operation.run(new NullProgressMonitor()); flattenPaths = true; verifyCompressed(TAR_FILE_EXT); - verifyFolders(directoryNames.length, TAR_FILE_EXT); + verifyFolders(directoryNames.length + emptyDirectoryNames.length, TAR_FILE_EXT); } @@ -324,6 +326,12 @@ true, new NullProgressMonitor()); } } + + // create empty folders to test bug 278402 + for(int i = 0; i &lt; emptyDirectoryNames.length; i++){ + IFolder folder = project.getFolder(emptyDirectoryNames[i]); + folder.create(false, true, new NullProgressMonitor()); + } } catch(Exception e){ fail(e.toString()); @@ -358,7 +366,7 @@ in.close(); } } - catch (Exception e){ + catch (IOException e){ fail(e.getMessage()); } assertTrue(fileName + &quot; does not appear to be compressed.&quot;, compressed); @@ -390,7 +398,10 @@ else verifyArchive(folderCount, allEntries); } - catch (Exception e){ + catch (IOException e){ + fail(e.getMessage()); + } + catch (TarException e){ fail(e.getMessage()); } } @@ -405,7 +416,10 @@ int idx = entryName.lastIndexOf(&quot;/&quot;); String folderPath = entryName.substring(0, idx); String fileName = entryName.substring(idx+1, entryName.length()); - files.add(fileName); + // we get empty strings for folder entries, don&apos;t add them as a file name + if (fileName.length() != 0) { + files.add(fileName); + } int idx2 = folderPath.lastIndexOf(&quot;/&quot;); if (idx2 != -1){ String folderName = folderPath.substring(idx2 + 1, folderPath.length()); @@ -461,15 +475,15 @@ if (directoryNames[i].equals(name)) return true; } + for (int i = 0; i &lt; emptyDirectoryNames.length; i++){ + if (emptyDirectoryNames[i].equals(name)) + return true; + } return false; } private boolean isDirectory(IResource resource){ - for (int i = 0; i &lt; directoryNames.length; i++){ - if (directoryNames[i].equals(resource.getName())) - return true; - } - return false; + return isDirectory(resource.getName()); } private boolean isFile(IResource resource){ diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/helpers/TestFacade.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/helpers/TestFacade.java index 4862293..541eff8 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/helpers/TestFacade.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/helpers/TestFacade.java @@ -15,12 +15,14 @@ import org.eclipse.core.runtime.IStatus; import org.eclipse.jface.action.IContributionItem; +import org.eclipse.swt.widgets.Control; import org.eclipse.ui.IMemento; import org.eclipse.ui.IPageService; import org.eclipse.ui.IPartService; import org.eclipse.ui.ISelectionService; import org.eclipse.ui.IViewReference; import org.eclipse.ui.IWorkbenchPage; +import org.eclipse.ui.IWorkbenchPartSite; import org.eclipse.ui.internal.tweaklets.Tweaklets; import org.eclipse.ui.internal.tweaklets.Tweaklets.TweakKey; @@ -75,6 +77,8 @@ IViewReference viewRef); public abstract boolean isViewPaneVisible(IViewReference viewRef); + + public abstract Control getPaneControl(IWorkbenchPartSite site); public abstract boolean isViewToolbarVisible(IViewReference viewRef); diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/helpers/TestFacadeImpl.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/helpers/TestFacadeImpl.java index 95eb6bd..55dcce0 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/helpers/TestFacadeImpl.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/helpers/TestFacadeImpl.java @@ -24,6 +24,7 @@ import org.eclipse.ui.ISelectionService; import org.eclipse.ui.IViewReference; import org.eclipse.ui.IWorkbenchPage; +import org.eclipse.ui.IWorkbenchPartSite; import org.eclipse.ui.internal.FastViewBar; import org.eclipse.ui.internal.FastViewBarContextMenuContribution; import org.eclipse.ui.internal.PartSite; @@ -242,4 +243,11 @@ return ((WorkbenchPage) ref.getPage()).getActivePerspective() .isMoveable(ref); } + + /* (non-Javadoc) + * @see org.eclipse.ui.tests.helpers.TestFacade#getPaneControl(org.eclipse.ui.IWorkbenchPartSite) + */ + public Control getPaneControl(IWorkbenchPartSite site) { + return ((PartSite)site).getPane().getControl(); + } } diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/internal/TestMemento.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/internal/TestMemento.java index 56bc823..ccb46b7 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/internal/TestMemento.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/internal/TestMemento.java @@ -57,6 +57,15 @@ return null; } + /* (non-Javadoc) + * @see org.eclipse.ui.IMemento#getChildren() + */ + public IMemento[] getChildren() { + IMemento[] returnValue = new IMemento[children.size()]; + children.toArray(returnValue); + return returnValue; + } + public IMemento[] getChildren(String type) { Iterator iterator = children.iterator(); Collection matches = new HashSet(); @@ -186,5 +195,4 @@ public void putBoolean(String key, boolean value) { values.put(key, value?Boolean.TRUE:Boolean.FALSE); } - } diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/internal/TextControlView.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/internal/TextControlView.java index edd9363..8670f81 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/internal/TextControlView.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/internal/TextControlView.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2009 IBM Corporation and others. + * Copyright (c) 2009, 2012 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -102,9 +102,9 @@ public void updateEnabledState() throws Exception { Method method = TextActionHandler.class.getDeclaredMethod( - &quot;updateActionsEnableState&quot;, null); + &quot;updateActionsEnableState&quot;, (Class[]) null); method.setAccessible(true); - method.invoke(delegator, null); + method.invoke(delegator, (Object[]) null); } private Action getAction(String fieldName) throws Exception { diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/intro/IntroTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/intro/IntroTest.java index 6cfe1df..483c91b 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/intro/IntroTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/intro/IntroTest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2004, 2007 IBM Corporation and others. + * Copyright (c) 2004, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -11,8 +11,11 @@ package org.eclipse.ui.tests.intro; import org.eclipse.jface.preference.IPreferenceStore; + +import org.eclipse.ui.IPageLayout; import org.eclipse.ui.IPerspectiveDescriptor; import org.eclipse.ui.IViewPart; +import org.eclipse.ui.IViewReference; import org.eclipse.ui.IWorkbench; import org.eclipse.ui.IWorkbenchPage; import org.eclipse.ui.IWorkbenchPreferenceConstants; @@ -86,6 +89,40 @@ assertNull(introManager.getIntro()); } + public void testCreateProblemsView() throws Exception { + IIntroManager introManager= window.getWorkbench().getIntroManager(); + IIntroPart part= introManager.showIntro(window, false); + assertNotNull(part); + assertFalse(introManager.isIntroStandby(part)); + + IViewReference viewRef= window.getActivePage().findViewReference(IPageLayout.ID_PROBLEM_VIEW); + assertNull(viewRef); + IViewPart problemsView= window.getActivePage().showView(IPageLayout.ID_PROBLEM_VIEW, null, IWorkbenchPage.VIEW_CREATE); + assertNotNull(problemsView); + assertFalse(introManager.isIntroStandby(part)); + + window.getActivePage().hideView(problemsView); + assertTrue(introManager.closeIntro(part)); + assertNull(introManager.getIntro()); + } + + public void testActivateProblemsView() throws Exception { + IIntroManager introManager= window.getWorkbench().getIntroManager(); + IIntroPart part= introManager.showIntro(window, false); + assertNotNull(part); + assertFalse(introManager.isIntroStandby(part)); + + IViewReference viewRef= window.getActivePage().findViewReference(IPageLayout.ID_PROBLEM_VIEW); + assertNull(viewRef); + IViewPart problemsView= window.getActivePage().showView(IPageLayout.ID_PROBLEM_VIEW); + assertNotNull(problemsView); + assertTrue(introManager.isIntroStandby(part)); + + window.getActivePage().hideView(problemsView); + assertTrue(introManager.closeIntro(part)); + assertNull(introManager.getIntro()); + } + public void testStandby() { IWorkbench workbench = window.getWorkbench(); IIntroPart part = workbench.getIntroManager().showIntro(window, false); diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/keys/BindingPersistenceTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/keys/BindingPersistenceTest.java index 5a0a57d..805c926 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/keys/BindingPersistenceTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/keys/BindingPersistenceTest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2005, 2009 IBM Corporation and others. + * Copyright (c) 2005, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -19,6 +19,7 @@ import org.eclipse.jface.util.Util; import org.eclipse.swt.SWT; import org.eclipse.ui.commands.ICommandService; +import org.eclipse.ui.contexts.IContextService; import org.eclipse.ui.internal.WorkbenchPlugin; import org.eclipse.ui.keys.IBindingService; import org.eclipse.ui.tests.harness.util.UITestCase; @@ -206,7 +207,15 @@ } assertEquals(3, numOfMarkers); assertTrue(&quot;Unable to find delete marker&quot;, foundDeleteMarker); - TriggerSequence[] activeBindingsFor = bindingService.getActiveBindingsFor(addWS); + + // make sure that the proper contexts are currently active + IContextService contextService = (IContextService) fWorkbench + .getService(IContextService.class); + contextService + .activateContext(IContextService.CONTEXT_ID_DIALOG_AND_WINDOW); + contextService.activateContext(IContextService.CONTEXT_ID_WINDOW); + TriggerSequence[] activeBindingsFor = bindingService + .getActiveBindingsFor(addWS); assertEquals(1, activeBindingsFor.length); } diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multieditor/AbstractMultiEditorTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multieditor/AbstractMultiEditorTest.java new file mode 100644 index 0000000..84c5df6 --- /dev/null +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multieditor/AbstractMultiEditorTest.java @@ -0,0 +1,217 @@ +/******************************************************************************* + * Copyright (c) 2000, 2011 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + *******************************************************************************/ +package org.eclipse.ui.tests.multieditor; + +import java.io.IOException; +import java.net.URL; +import java.util.ArrayList; + +import org.eclipse.core.resources.IFile; +import org.eclipse.core.resources.IProject; +import org.eclipse.core.resources.IWorkspace; +import org.eclipse.core.resources.ResourcesPlugin; +import org.eclipse.core.runtime.CoreException; +import org.eclipse.core.runtime.FileLocator; +import org.eclipse.core.runtime.ILog; +import org.eclipse.core.runtime.ILogListener; +import org.eclipse.core.runtime.IStatus; +import org.eclipse.swt.SWT; +import org.eclipse.swt.widgets.Event; +import org.eclipse.ui.IEditorInput; +import org.eclipse.ui.IEditorPart; +import org.eclipse.ui.IEditorRegistry; +import org.eclipse.ui.IPageLayout; +import org.eclipse.ui.IViewPart; +import org.eclipse.ui.IWorkbenchPage; +import org.eclipse.ui.IWorkbenchPart; +import org.eclipse.ui.IWorkbenchWindow; +import org.eclipse.ui.internal.PartSite; +import org.eclipse.ui.internal.WorkbenchPage; +import org.eclipse.ui.internal.WorkbenchPlugin; +import org.eclipse.ui.part.FileEditorInput; +import org.eclipse.ui.part.MultiEditorInput; +import org.eclipse.ui.tests.TestPlugin; +import org.eclipse.ui.tests.harness.util.UITestCase; + +public class AbstractMultiEditorTest extends UITestCase { + + private static final String PROJECT_NAME = &quot;TiledEditorProject&quot;; + + private static final String TILED_EDITOR_ID = &quot;org.eclipse.ui.tests.multieditor.ConcreteAbstractMultiEditor&quot;; + + // tiled editor test files + private static final String DATA_FILES_DIR = &quot;/data/org.eclipse.newMultiEditor/&quot;; + + private static final String TEST01_TXT = &quot;test01.txt&quot;; + + private static final String TEST03_ETEST = &quot;test03.etest&quot;; + + private EditorErrorListener fErrorListener; + + public AbstractMultiEditorTest(String tc) { + super(tc); + } + + public void testBug317102() throws Throwable { + final String[] simpleFiles = { TEST01_TXT, TEST03_ETEST }; + + IWorkbenchWindow window = openTestWindow(); + WorkbenchPage page = (WorkbenchPage) window.getActivePage(); + + IProject testProject = findOrCreateProject(PROJECT_NAME); + + MultiEditorInput input = generateEditorInput(simpleFiles, testProject); + + IEditorPart editor = page.openEditor(input, + AbstractMultiEditorTest.TILED_EDITOR_ID); + + // did we get a multieditor back? + assertTrue(editor instanceof ConcreteAbstractMultiEditor); + ConcreteAbstractMultiEditor multiEditor = (ConcreteAbstractMultiEditor) editor; + + IEditorPart[] innerEditors = multiEditor.getInnerEditors(); + IEditorPart activeEditor = multiEditor.getActiveEditor(); + assertEquals(activeEditor, innerEditors[0]); + multiEditor.activateEditor(innerEditors[1]); + + // activate another view + IViewPart view = page.showView(IPageLayout.ID_PROBLEM_VIEW); + assertEquals(view, page.getActivePart()); + + fakeActivation(innerEditors[0]); + } + + private void fakeActivation(IWorkbenchPart part) { + try { + setupErrorListener(); + Event event = new Event(); + event.type = SWT.Activate; + ((PartSite) part.getSite()).getPane().handleEvent(event); + + assertTrue(&quot;Nothing should have been logged&quot;, + fErrorListener.messages.isEmpty()); + } finally { + removeErrorListener(); + } + } + + /** + * Set up to catch any editor initialization exceptions. + * + */ + private void setupErrorListener() { + final ILog log = WorkbenchPlugin.getDefault().getLog(); + fErrorListener = new EditorErrorListener(); + log.addLogListener(fErrorListener); + } + + /** + * Remove the editor error listener. + */ + private void removeErrorListener() { + final ILog log = WorkbenchPlugin.getDefault().getLog(); + if (fErrorListener != null) { + log.removeLogListener(fErrorListener); + fErrorListener = null; + } + } + + /** + * Create the multi editor input in the given project. Creates the files in + * the project from template files in the classpath if they don&apos;t already + * exist. + * + * @param simpleFiles + * the array of filenames to copy over + * @param testProject + * the project to create the files in + * @return the editor input used to open the multieditor + * @throws CoreException + * @throws IOException + */ + private MultiEditorInput generateEditorInput(String[] simpleFiles, + IProject testProject) throws CoreException, IOException { + String[] ids = new String[simpleFiles.length]; + IEditorInput[] inputs = new IEditorInput[simpleFiles.length]; + IEditorRegistry registry = fWorkbench.getEditorRegistry(); + + for (int f = 0; f &lt; simpleFiles.length; ++f) { + IFile f1 = createFile(testProject, simpleFiles[f]); + ids[f] = registry.getDefaultEditor(f1.getName()).getId(); + inputs[f] = new FileEditorInput(f1); + } + + MultiEditorInput input = new MultiEditorInput(ids, inputs); + return input; + } + + /** + * Create the project to work in. If it already exists, just open it. + * + * @param projectName + * the name of the project to create + * @return the newly opened project + * @throws CoreException + */ + private static IProject findOrCreateProject(String projectName) + throws CoreException { + IWorkspace workspace = ResourcesPlugin.getWorkspace(); + IProject testProject = workspace.getRoot().getProject(projectName); + if (!testProject.exists()) { + testProject.create(null); + } + testProject.open(null); + return testProject; + } + + private static IFile createFile(IProject testProject, String simpleFile) + throws CoreException, IOException { + IFile file = testProject.getFile(simpleFile); + if (!file.exists()) { + URL url = FileLocator.toFileURL(TestPlugin.getDefault().getBundle() + .getEntry(DATA_FILES_DIR + simpleFile)); + file.create(url.openStream(), true, null); + } + return file; + } + + /** + * Close any editors at the beginner of a test, so the test can be clean. + */ + protected void doSetUp() throws Exception { + super.doSetUp(); + IWorkbenchPage page = fWorkbench.getActiveWorkbenchWindow() + .getActivePage(); + page.closeAllEditors(false); + } + + /** + * Listens for the standard message that indicates the MultiEditor failed + * ... usually caused by incorrect framework initialization that doesn&apos;t set + * the innerChildren. + * + * @since 3.1 + * + */ + public static class EditorErrorListener implements ILogListener { + + public ArrayList messages = new ArrayList(); + + public void logging(IStatus status, String plugin) { + String msg = status.getMessage(); + Throwable ex = status.getException(); + if (ex != null) { + msg += &quot;: &quot; + ex.getMessage(); + } + messages.add(msg); + } + } +} diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multieditor/ConcreteAbstractMultiEditor.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multieditor/ConcreteAbstractMultiEditor.java new file mode 100644 index 0000000..f9b1e26 --- /dev/null +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multieditor/ConcreteAbstractMultiEditor.java @@ -0,0 +1,48 @@ +/******************************************************************************* + * Copyright (c) 2011 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + *******************************************************************************/ +package org.eclipse.ui.tests.multieditor; + +import org.eclipse.swt.SWT; +import org.eclipse.swt.custom.SashForm; +import org.eclipse.swt.layout.FillLayout; +import org.eclipse.swt.widgets.Composite; +import org.eclipse.ui.IEditorReference; +import org.eclipse.ui.part.AbstractMultiEditor; + +public class ConcreteAbstractMultiEditor extends AbstractMultiEditor { + + private Composite left; + private Composite right; + + private IEditorReference leftReference; + + protected void innerEditorsCreated() { + // no-op + } + + public Composite getInnerEditorContainer( + IEditorReference innerEditorReference) { + if (leftReference == null) { + leftReference = innerEditorReference; + return left; + } + return right; + } + + public void createPartControl(Composite parent) { + SashForm form = new SashForm(parent, SWT.HORIZONTAL); + left = new Composite(form, SWT.NONE); + left.setLayout(new FillLayout()); + right = new Composite(form, SWT.NONE); + right.setLayout(new FillLayout()); + form.setWeights(new int[] { 50, 50 }); + } +} diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multieditor/MultiEditorTestSuite.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multieditor/MultiEditorTestSuite.java index 56bfff0..42f9f2d 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multieditor/MultiEditorTestSuite.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multieditor/MultiEditorTestSuite.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2000, 2005 IBM Corporation and others. + * Copyright (c) 2000, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -22,6 +22,7 @@ * Construct the test suite. */ public MultiEditorTestSuite() { + addTestSuite(AbstractMultiEditorTest.class); addTestSuite(MultiEditorTest.class); } } diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multipageeditor/MultiPageEditorSelectionTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multipageeditor/MultiPageEditorSelectionTest.java new file mode 100644 index 0000000..309f410 --- /dev/null +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multipageeditor/MultiPageEditorSelectionTest.java @@ -0,0 +1,111 @@ +/******************************************************************************* + * Copyright (c) 2000, 2011 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + *******************************************************************************/ +package org.eclipse.ui.tests.multipageeditor; + +import java.io.ByteArrayInputStream; + +import org.eclipse.core.resources.IFile; +import org.eclipse.core.resources.IProject; +import org.eclipse.core.resources.IWorkspace; +import org.eclipse.core.resources.ResourcesPlugin; +import org.eclipse.core.runtime.CoreException; +import org.eclipse.jface.viewers.IPostSelectionProvider; +import org.eclipse.jface.viewers.ISelectionChangedListener; +import org.eclipse.jface.viewers.ISelectionProvider; +import org.eclipse.jface.viewers.SelectionChangedEvent; +import org.eclipse.swt.widgets.Tree; +import org.eclipse.ui.IEditorPart; +import org.eclipse.ui.IPageLayout; +import org.eclipse.ui.IWorkbenchPage; +import org.eclipse.ui.IWorkbenchWindow; +import org.eclipse.ui.PartInitException; +import org.eclipse.ui.ide.IDE; +import org.eclipse.ui.tests.harness.util.UITestCase; +import org.eclipse.ui.views.properties.PropertySheet; + +public class MultiPageEditorSelectionTest extends UITestCase { + + private static final String MTEST01_FILE = &quot;mtest01.multivar&quot;; + + private static final String PROJECT_NAME = &quot;MultiPageEditorSelction&quot;; + + public MultiPageEditorSelectionTest(String testName) { + super(testName); + } + + protected void doTearDown() throws Exception { + IWorkspace workspace = ResourcesPlugin.getWorkspace(); + IProject testProject = workspace.getRoot().getProject(PROJECT_NAME); + if (testProject.exists()) { + testProject.delete(true, true, null); + } + super.doTearDown(); + } + + public void testPostSelection() throws Exception { + IWorkbenchWindow window = openTestWindow(); + IEditorPart part = openEditor(window, MTEST01_FILE); + ISelectionProvider provider = part.getSite().getSelectionProvider(); + assertTrue(provider instanceof IPostSelectionProvider); + + final boolean[] called = { false }; + IPostSelectionProvider postSelectionProvider = (IPostSelectionProvider) provider; + postSelectionProvider + .addPostSelectionChangedListener(new ISelectionChangedListener() { + public void selectionChanged(SelectionChangedEvent event) { + called[0] = true; + } + }); + + ((MultiPageResourceEditor) part).updateSelection(); + assertTrue(called[0]); + } + + public void testPropertiesView() throws Exception { + IWorkbenchWindow window = openTestWindow(); + IEditorPart part = openEditor(window, MTEST01_FILE); + + PropertySheet propertiewView = (PropertySheet) window.getActivePage() + .showView(IPageLayout.ID_PROP_SHEET); + + window.getActivePage().activate(part); + + Tree tree = (Tree) propertiewView.getCurrentPage().getControl(); + assertEquals(0, tree.getItemCount()); + + MultiPageResourceEditor editor = (MultiPageResourceEditor) part; + editor.updateSelection(); + assertFalse(tree.getItemCount() == 0); + } + + private IEditorPart openEditor(IWorkbenchWindow window, String filename) + throws CoreException, PartInitException { + IWorkspace workspace = ResourcesPlugin.getWorkspace(); + + IProject testProject = workspace.getRoot().getProject(PROJECT_NAME); + if (!testProject.exists()) { + testProject.create(null); + } + testProject.open(null); + + IFile multiFile = testProject.getFile(filename); + if (!multiFile.exists()) { + multiFile.create(new ByteArrayInputStream(&quot;&quot;.getBytes()), true, + null); + } + + IWorkbenchPage page = window.getActivePage(); + IEditorPart part = IDE.openEditor(page, multiFile, + MultiPageResourceEditor.EDITOR_ID); + assertTrue(part instanceof MultiPageResourceEditor); + return part; + } +} diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multipageeditor/MultiPageResourceEditor.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multipageeditor/MultiPageResourceEditor.java new file mode 100644 index 0000000..73b4b7f --- /dev/null +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/multipageeditor/MultiPageResourceEditor.java @@ -0,0 +1,142 @@ +/******************************************************************************* + * Copyright (c) 2011 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + *******************************************************************************/ +package org.eclipse.ui.tests.multipageeditor; + +import org.eclipse.core.resources.IFile; +import org.eclipse.core.resources.ResourcesPlugin; +import org.eclipse.core.runtime.IProgressMonitor; +import org.eclipse.jface.viewers.AbstractTreeViewer; +import org.eclipse.jface.viewers.ISelection; +import org.eclipse.jface.viewers.ISelectionChangedListener; +import org.eclipse.jface.viewers.ISelectionProvider; +import org.eclipse.jface.viewers.StructuredSelection; +import org.eclipse.jface.viewers.TreeViewer; +import org.eclipse.swt.widgets.Composite; +import org.eclipse.ui.IEditorInput; +import org.eclipse.ui.IEditorSite; +import org.eclipse.ui.PartInitException; +import org.eclipse.ui.model.WorkbenchContentProvider; +import org.eclipse.ui.model.WorkbenchLabelProvider; +import org.eclipse.ui.part.EditorPart; +import org.eclipse.ui.part.MultiPageEditorPart; +import org.eclipse.ui.views.properties.IPropertySheetPage; +import org.eclipse.ui.views.properties.PropertySheetPage; + +public class MultiPageResourceEditor extends MultiPageEditorPart { + + static final String EDITOR_ID = &quot;org.eclipse.ui.tests.multipageeditor.MultiPageResourceEditor&quot;; //$NON-NLS-1$ + + private SubEditor editor; + + private IPropertySheetPage page; + + public void updateSelection() { + IFile file = (IFile) getEditorInput().getAdapter(IFile.class); + editor.setSelection(new StructuredSelection(file)); + } + + protected void createPages() { + try { + editor = new SubEditor(); + addPage(editor, getEditorInput()); + } catch (PartInitException e) { + throw new RuntimeException(e); + } + } + + /* + * (non-Javadoc) + * + * @see org.eclipse.ui.part.MultiPageEditorPart#getAdapter(java.lang.Class) + */ + public Object getAdapter(Class adapter) { + if (adapter == IPropertySheetPage.class) { + if (page == null) { + page = new PropertySheetPage(); + } + return page; + } + return super.getAdapter(adapter); + } + + public void doSave(IProgressMonitor monitor) { + // nothing to do + } + + public void doSaveAs() { + // nothing to do + } + + public boolean isSaveAsAllowed() { + return false; + } + + static class SubEditor extends EditorPart implements ISelectionProvider { + + private TreeViewer viewer; + + public void createPartControl(Composite parent) { + viewer = new TreeViewer(parent); + viewer.setContentProvider(new WorkbenchContentProvider()); + viewer.setLabelProvider(WorkbenchLabelProvider + .getDecoratingWorkbenchLabelProvider()); + viewer.setInput(ResourcesPlugin.getWorkspace().getRoot()); + viewer.setAutoExpandLevel(AbstractTreeViewer.ALL_LEVELS); + + getSite().setSelectionProvider(this); + } + + public void setFocus() { + viewer.getControl().setFocus(); + } + + public void doSave(IProgressMonitor monitor) { + // nothing to do + } + + public void doSaveAs() { + // nothing to do + } + + public void init(IEditorSite site, IEditorInput input) + throws PartInitException { + setSite(site); + setInput(input); + } + + public boolean isDirty() { + return false; + } + + public boolean isSaveAsAllowed() { + return false; + } + + public void addSelectionChangedListener( + ISelectionChangedListener listener) { + viewer.addSelectionChangedListener(listener); + } + + public ISelection getSelection() { + return viewer.getSelection(); + } + + public void removeSelectionChangedListener( + ISelectionChangedListener listener) { + viewer.removeSelectionChangedListener(listener); + } + + public void setSelection(ISelection selection) { + viewer.setSelection(selection); + } + + } +} diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/JobInfoTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/JobInfoTest.java new file mode 100644 index 0000000..04e6fc1 --- /dev/null +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/JobInfoTest.java @@ -0,0 +1,235 @@ +/******************************************************************************* + * Copyright (c) 2011 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + * Martin W. Kirst - jUnit test for Bug 361121 [Progress] DetailedProgressViewer&apos;s comparator violates its general contract + ******************************************************************************/ + +package org.eclipse.ui.tests.progress; + +import java.lang.reflect.Field; +import java.util.ArrayList; +import java.util.List; + +import junit.framework.TestCase; + +import org.eclipse.core.internal.jobs.InternalJob; +import org.eclipse.core.runtime.IProgressMonitor; +import org.eclipse.core.runtime.IStatus; +import org.eclipse.core.runtime.jobs.Job; +import org.eclipse.ui.internal.progress.JobInfo; + +public class JobInfoTest extends TestCase { + + + /** + * @see org.eclipse.core.internal.jobs.InternalJob + */ + static final int ABOUT_TO_RUN = 0x10; + /** + * @see org.eclipse.core.internal.jobs.InternalJob + */ + static final int ABOUT_TO_SCHEDULE = 0x20; + /** + * @see org.eclipse.core.internal.jobs.InternalJob + */ + static final int BLOCKED = 0x08; + /** + * @see org.eclipse.core.internal.jobs.InternalJob + */ + static final int YIELDING = 0x40; + + private List jobinfos = new ArrayList(); + + /** + * @throws java.lang.Exception + */ + protected void setUp() throws Exception { + int counter = 0; + counter = createAndAddJobInfos(false, false, ABOUT_TO_RUN, counter); + counter = createAndAddJobInfos(false, true, ABOUT_TO_RUN, counter); + counter = createAndAddJobInfos(true, false, ABOUT_TO_RUN, counter); + counter = createAndAddJobInfos(true, true, ABOUT_TO_RUN, counter); + + counter = createAndAddJobInfos(false, false, ABOUT_TO_SCHEDULE, counter); + counter = createAndAddJobInfos(false, true, ABOUT_TO_SCHEDULE, counter); + counter = createAndAddJobInfos(true, false, ABOUT_TO_SCHEDULE, counter); + counter = createAndAddJobInfos(true, true, ABOUT_TO_SCHEDULE, counter); + + counter = createAndAddJobInfos(false, false, Job.SLEEPING, counter); + counter = createAndAddJobInfos(false, true, Job.SLEEPING, counter); + counter = createAndAddJobInfos(true, false, Job.SLEEPING, counter); + counter = createAndAddJobInfos(true, true, Job.SLEEPING, counter); + + counter = createAndAddJobInfos(false, false, Job.WAITING, counter); + counter = createAndAddJobInfos(false, true, Job.WAITING, counter); + counter = createAndAddJobInfos(true, false, Job.WAITING, counter); + counter = createAndAddJobInfos(true, true, Job.WAITING, counter); + + counter = createAndAddJobInfos(false, false, Job.RUNNING, counter); + counter = createAndAddJobInfos(false, true, Job.RUNNING, counter); + counter = createAndAddJobInfos(true, false, Job.RUNNING, counter); + counter = createAndAddJobInfos(true, true, Job.RUNNING, counter); + + } + + /** + * Test that {@link org.eclipse.ui.internal.progress.JobInfo#compareTo(Object)} + * is valid implemented and complies to the interface method contract. + */ + public void testCompareToContractCompliance() { + for(int xi = 0; xi0) &amp;&amp; (compare(y, z)&gt;0)) implies compare(x, z)&gt;0. + if(xyResult &gt; 0) { + if(yzResult &gt; 0) { + assertTrue(String.format(&quot;((compare(%1$s, %2$s)&gt;0) &amp;&amp; (compare(%2$s, %3$s)&gt;0)) but not compare(%1$s, %3$s)&gt;0&quot;, new Object[] {x, y, z}), + xzResult &gt; 0); + } + } + else if(xyResult == 0) { + // compare(x, y)==0 implies that sgn(compare(x, z))==sgn(compare(y, z)) for all z. + assertEquals(String.format(&quot;compare(%1$s, %2$s)==0 but not that sgn(compare(%1$s, %3$s))==sgn(compare(%2$s, %3$s))&quot;, new Object[]{ x, y, z}), + Math.round(Math.signum(xzResult)) , Math.round(Math.signum(yzResult))); + } + } + + boolean consistentWithEquals = true; + // Optionally (compare(x, y)==0) == (x.equals(y)) + if(consistentWithEquals &amp;&amp; xyResult == 0) { + assertTrue(String.format(&quot;compare(%1$s, %2$s)==0) == (%1$s.equals(%2$s)&quot;, new Object[] {x, y}), + x.equals(y)); + } + } + } + } + + /** + * @param user + * @param system + * @param jobstate + * @param counter + * @return + */ + private int createAndAddJobInfos(boolean user, boolean system, int jobstate, int counter) { + TestJob job; + JobInfo ji; + + job = new TestJob(&quot;Job&quot; + (counter++)); + job.setUser(user); + job.setSystem(system); + job.setPriority(Job.INTERACTIVE); + job.setInternalJobState(jobstate); + ji = new ExtendedJobInfo(job); + jobinfos.add(ji); + + job = new TestJob(&quot;Job&quot; + (counter++)); + job.setUser(user); + job.setSystem(system); + job.setPriority(Job.SHORT); + job.setInternalJobState(jobstate); + ji = new ExtendedJobInfo(job); + jobinfos.add(ji); + + job = new TestJob(&quot;Job&quot; + (counter++)); + job.setUser(user); + job.setSystem(system); + job.setPriority(Job.LONG); + job.setInternalJobState(jobstate); + ji = new ExtendedJobInfo(job); + jobinfos.add(ji); + + job = new TestJob(&quot;Job&quot; + (counter++)); + job.setUser(user); + job.setSystem(system); + job.setPriority(Job.BUILD); + job.setInternalJobState(jobstate); + ji = new ExtendedJobInfo(job); + jobinfos.add(ji); + + job = new TestJob(&quot;Job&quot; + (counter++)); + job.setUser(user); + job.setSystem(system); + job.setPriority(Job.DECORATE); + job.setInternalJobState(jobstate); + ji = new ExtendedJobInfo(job); + jobinfos.add(ji); + + job = new TestJob(&quot;Job&quot; + (counter++)); + job.setUser(user); + job.setSystem(system); + job.setPriority(Job.LONG); + job.setInternalJobState(jobstate); + ji = new ExtendedJobInfo(job); + jobinfos.add(ji); + + return counter; + } + + /* + * ======================================================================== + */ + + /** + * Only provides better readable {@link #toString()} method. + */ + private static class ExtendedJobInfo extends JobInfo { + + public ExtendedJobInfo(Job enclosingJob) { + super(enclosingJob); + } + + public String toString() { + return &quot;ExtendedJobInfo [getName()=&quot; + getJob().getName() + &quot;, getPriority()=&quot; + + getJob().getPriority() + &quot;, getState()=&quot; + getJob().getState() + + &quot;, isSystem()=&quot; + getJob().isSystem() + &quot;, isUser()=&quot; + getJob().isUser() + + &quot;]&quot;; + } + + } + + /** + * Enables access to internal state, by using reflection + * Provides better readable {@link #toString()} method. + */ + private static class TestJob extends Job { + + public TestJob(String name) { + super(name); + } + + protected IStatus run(IProgressMonitor monitor) { + throw new UnsupportedOperationException(&quot;Not implemented, because of just a unit test&quot;); + } + + public void setInternalJobState(int state) { + try { + final Field field = InternalJob.class.getDeclaredField(&quot;flags&quot;); + field.setAccessible(true); // hack for testing + field.set(this, new Integer(state)); + } catch (Exception e) { + e.printStackTrace(); + throw new RuntimeException(e); + } + } + + } +} diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/JobInfoTestOrdering.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/JobInfoTestOrdering.java new file mode 100644 index 0000000..c56f1c7 --- /dev/null +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/JobInfoTestOrdering.java @@ -0,0 +1,135 @@ +/******************************************************************************* + * Copyright (c) 2011 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + * Martin W. Kirst - jUnit test for Bug 361121 [Progress] DetailedProgressViewer&apos;s comparator violates its general contract + ******************************************************************************/ + +package org.eclipse.ui.tests.progress; + +import java.lang.reflect.Field; +import java.util.ArrayList; +import java.util.Collections; +import java.util.List; + +import junit.framework.TestCase; + +import org.eclipse.core.internal.jobs.InternalJob; +import org.eclipse.core.runtime.IProgressMonitor; +import org.eclipse.core.runtime.IStatus; +import org.eclipse.core.runtime.jobs.Job; +import org.eclipse.ui.internal.progress.JobInfo; + +public class JobInfoTestOrdering extends TestCase { + + private List jobinfos = new ArrayList(); + + /** + * @throws java.lang.Exception + */ + protected void setUp() throws Exception { + jobinfos.clear(); + int counter = 0; + TestJob job; + JobInfo ji; + + job = new TestJob(&quot;Job&quot; + (counter++)); + job.setUser(true); + job.setSystem(false); + job.setPriority(Job.INTERACTIVE); + job.setInternalJobState(Job.NONE); // JOB STATE + ji = new ExtendedJobInfo(job); + jobinfos.add(ji); + + job = new TestJob(&quot;Job&quot; + (counter++)); + job.setUser(true); + job.setSystem(false); + job.setPriority(Job.INTERACTIVE); + job.setInternalJobState(Job.SLEEPING); // JOB STATE + ji = new ExtendedJobInfo(job); + jobinfos.add(ji); + + job = new TestJob(&quot;Job&quot; + (counter++)); + job.setUser(true); + job.setSystem(false); + job.setPriority(Job.INTERACTIVE); + job.setInternalJobState(Job.WAITING); // JOB STATE + ji = new ExtendedJobInfo(job); + jobinfos.add(ji); + + job = new TestJob(&quot;Job&quot; + (counter++)); + job.setUser(true); + job.setSystem(false); + job.setPriority(Job.INTERACTIVE); + job.setInternalJobState(Job.RUNNING); // JOB STATE + ji = new ExtendedJobInfo(job); + jobinfos.add(ji); + + } + + /** + * Test that checks when jobs sorted by their state, the running ones + * are ordered to first place + */ + public void testJobStateOrdering() { + Collections.sort(jobinfos); + assertEquals(Job.RUNNING, ((JobInfo)jobinfos.get(0)).getJob().getState()); + assertEquals(Job.WAITING, ((JobInfo)jobinfos.get(1)).getJob().getState()); + assertEquals(Job.SLEEPING, ((JobInfo)jobinfos.get(2)).getJob().getState()); + assertEquals(Job.NONE, ((JobInfo)jobinfos.get(3)).getJob().getState()); + } + + /* + * ======================================================================== + */ + + /** + * Only provides better readable {@link #toString()} method. + */ + private static class ExtendedJobInfo extends JobInfo { + + public ExtendedJobInfo(Job enclosingJob) { + super(enclosingJob); + } + + public String toString() { + return &quot;ExtendedJobInfo [getName()=&quot; + getJob().getName() + &quot;, getPriority()=&quot; + + getJob().getPriority() + &quot;, getState()=&quot; + getJob().getState() + + &quot;, isSystem()=&quot; + getJob().isSystem() + &quot;, isUser()=&quot; + getJob().isUser() + + &quot;]&quot;; + } + + } + + /** + * Enables access to internal state, by using reflection + * Provides better readable {@link #toString()} method. + */ + private static class TestJob extends Job { + + public TestJob(String name) { + super(name); + } + + protected IStatus run(IProgressMonitor monitor) { + throw new UnsupportedOperationException(&quot;Not implemented, because of just a unit test&quot;); + } + + public void setInternalJobState(int state) { + try { + final Field field = InternalJob.class.getDeclaredField(&quot;flags&quot;); + field.setAccessible(true); // hack for testing + field.set(this, new Integer(state)); + } catch (Exception e) { + e.printStackTrace(); + throw new RuntimeException(e); + } + } + + } +} diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/ProgressTestSuite.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/ProgressTestSuite.java index b5185aa..eee8388 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/ProgressTestSuite.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/ProgressTestSuite.java @@ -33,5 +33,7 @@ public ProgressTestSuite() { addTest(new TestSuite(ProgressContantsTest.class)); addTest(new TestSuite(ProgressViewTests.class)); + addTest(new TestSuite(JobInfoTest.class)); + addTest(new TestSuite(JobInfoTestOrdering.class)); } } diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/services/EvaluationServiceTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/services/EvaluationServiceTest.java index 58b7a6d..c7deb46 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/services/EvaluationServiceTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/services/EvaluationServiceTest.java @@ -12,6 +12,7 @@ package org.eclipse.ui.tests.services; import java.lang.reflect.Field; +import java.lang.reflect.Method; import java.util.ArrayList; import java.util.Collection; import java.util.Iterator; @@ -31,9 +32,12 @@ import org.eclipse.jface.util.IPropertyChangeListener; import org.eclipse.jface.util.PropertyChangeEvent; import org.eclipse.jface.viewers.ISelection; +import org.eclipse.jface.viewers.IStructuredSelection; import org.eclipse.jface.viewers.StructuredSelection; import org.eclipse.jface.viewers.TreePath; import org.eclipse.jface.viewers.TreeSelection; +import org.eclipse.ui.IPerspectiveDescriptor; +import org.eclipse.ui.IPerspectiveRegistry; import org.eclipse.ui.ISources; import org.eclipse.ui.IWorkbenchPage; import org.eclipse.ui.IWorkbenchPart; @@ -45,8 +49,6 @@ import org.eclipse.ui.handlers.IHandlerService; import org.eclipse.ui.internal.WorkbenchWindow; import org.eclipse.ui.internal.handlers.HandlerPersistence; -import org.eclipse.ui.internal.handlers.HandlerService; -import org.eclipse.ui.internal.services.SlaveEvaluationService; import org.eclipse.ui.services.IEvaluationReference; import org.eclipse.ui.services.IEvaluationService; import org.eclipse.ui.services.ISourceProviderService; @@ -90,6 +92,40 @@ } } + public void testBug334524() throws Exception { + IPerspectiveRegistry registry = PlatformUI.getWorkbench().getPerspectiveRegistry(); + IPerspectiveDescriptor resourecePerspective = registry.findPerspectiveWithId(&quot;org.eclipse.ui.resourcePerspective&quot;); + IPerspectiveDescriptor javaPerspective = registry.findPerspectiveWithId(&quot;org.eclipse.jdt.ui.JavaPerspective&quot;); + String viewId = &quot;org.eclipse.ui.tests.SelectionProviderView&quot;; + + IWorkbenchWindow window = openTestWindow(); + IWorkbenchPage activePage = window.getActivePage(); + + // show view in resource perspective + activePage.setPerspective(resourecePerspective); + SelectionProviderView view = (SelectionProviderView) activePage.showView(viewId); + processEvents(); + + // show view in java perspective + activePage.setPerspective(javaPerspective); + activePage.showView(viewId); + processEvents(); + + // now set the selection + IStructuredSelection selection = new StructuredSelection(new String(&quot;testing selection&quot;)); + view.setSelection(selection); + processEvents(); + + // switch perspective &amp; check selection + activePage.setPerspective(resourecePerspective); + processEvents(); + + IEvaluationService service = (IEvaluationService) window.getService(IEvaluationService.class); + Object currentSelection = service.getCurrentState().getVariable(ISources.ACTIVE_CURRENT_SELECTION_NAME); + assertEquals(selection, currentSelection); + + } + public void testBasicService() throws Exception { IWorkbenchWindow window = openTestWindow(); IEvaluationService service = (IEvaluationService) window @@ -284,7 +320,7 @@ IEvaluationService service = (IEvaluationService) window .getService(IEvaluationService.class); assertNotNull(service); - assertTrue(service instanceof SlaveEvaluationService); + //assertTrue(service instanceof SlaveEvaluationService); MyEval listener = new MyEval(); IContextActivation context1 = null; @@ -376,13 +412,36 @@ } public void testSourceProviderPriority() throws Exception { - HandlerService hs = (HandlerService) getWorkbench().getService(IHandlerService.class); - HandlerPersistence hp = hs.getHandlerPersistence(); - IHandlerActivation activation = null; + IHandlerService hs = (IHandlerService) getWorkbench().getService(IHandlerService.class); - Field activationsField = hp.getClass().getDeclaredField(&quot;handlerActivations&quot;); - activationsField.setAccessible(true); - Collection activations = (Collection) activationsField.get(hp); + Collection activations = null; + // fill in a set of activations + String hsClassName = hs.getClass().getName(); + if (hsClassName.equals(&quot;org.eclipse.ui.internal.handlers.HandlerService&quot;)) { + Field hpField = hs.getClass().getDeclaredField(&quot;handlerPersistence&quot;); + hpField.setAccessible(true); + + HandlerPersistence hp = (HandlerPersistence) hpField.get(hs); + + Field activationsField = hp.getClass().getDeclaredField(&quot;handlerActivations&quot;); + activationsField.setAccessible(true); + activations = (Collection) activationsField.get(hp); + assertNotNull(activations); + } else if (hsClassName.equals(&quot;org.eclipse.ui.internal.handlers.LegacyHandlerService&quot;)) { + Field hsField = hs.getClass().getDeclaredField(&quot;LEGACY_H_ID&quot;); + String LEGACY_H_ID = (String) hsField.get(null); + Field hpField = hs.getClass().getDeclaredField(&quot;eclipseContext&quot;); + hpField.setAccessible(true); + Object eclipseContext = hpField.get(hs); + assertNotNull(eclipseContext); + Method getMethod = eclipseContext.getClass().getDeclaredMethod(&quot;get&quot;, new Class[] { String.class }); + activations = (Collection) getMethod.invoke(eclipseContext, new Object[] { LEGACY_H_ID + CHECK_HANDLER_ID}); + assertNotNull(activations); + } else { + fail(&quot;Incorrect handler service: &quot; + hsClassName); + } + + IHandlerActivation activation = null; Iterator i = activations.iterator(); while (i.hasNext()) { IHandlerActivation ha = (IHandlerActivation) i.next(); @@ -390,6 +449,8 @@ activation = ha; } } + + assertNotNull(&quot;Could not find activation for &quot; + CHECK_HANDLER_ID, activation); assertEquals(ISources.ACTIVE_CONTEXT&lt;&lt;1, activation.getSourcePriority()); diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/services/WorkbenchSiteProgressServiceTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/services/WorkbenchSiteProgressServiceTest.java index 73eed8d..406ba47 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/services/WorkbenchSiteProgressServiceTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/services/WorkbenchSiteProgressServiceTest.java @@ -20,11 +20,12 @@ import org.eclipse.ui.IWorkbenchPart; import org.eclipse.ui.IWorkbenchPartSite; import org.eclipse.ui.IWorkbenchWindow; -import org.eclipse.ui.internal.PartSite; import org.eclipse.ui.internal.progress.WorkbenchSiteProgressService; import org.eclipse.ui.internal.progress.WorkbenchSiteProgressService.SiteUpdateJob; +import org.eclipse.ui.internal.tweaklets.Tweaklets; import org.eclipse.ui.progress.IWorkbenchSiteProgressService; import org.eclipse.ui.tests.harness.util.UITestCase; +import org.eclipse.ui.tests.helpers.TestFacade; /** * @since 3.5 @@ -75,7 +76,7 @@ forceUpdate(); processEvents(); - Cursor cursor = ((PartSite)site).getPane().getControl().getCursor(); + Cursor cursor = ((TestFacade) Tweaklets.get(TestFacade.KEY)).getPaneControl(site).getCursor(); assertNotNull(cursor); jobWithCursor.cancel(); @@ -89,7 +90,7 @@ processEvents(); forceUpdate(); processEvents(); - cursor = ((PartSite)site).getPane().getControl().getCursor(); + cursor = ((TestFacade) Tweaklets.get(TestFacade.KEY)).getPaneControl(site).getCursor(); assertNull(cursor); // no jobs, no cursor // Now fire two jobs, first one with cursor &amp; delay, the second one without any cursor or delay @@ -112,7 +113,7 @@ forceUpdate(); processEvents(); - cursor = ((PartSite)site).getPane().getControl().getCursor(); + cursor = ((TestFacade) Tweaklets.get(TestFacade.KEY)).getPaneControl(site).getCursor(); assertNull(cursor); // jobWithoutCursor is scheduled to run first - no cursor now while(jobWithCursor.getState() != Job.RUNNING) { @@ -126,7 +127,7 @@ forceUpdate(); processEvents(); - cursor = ((PartSite)site).getPane().getControl().getCursor(); + cursor = ((TestFacade) Tweaklets.get(TestFacade.KEY)).getPaneControl(site).getCursor(); assertNotNull(cursor); // both running now - cursor should be set } diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/session/EditorWithStateTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/session/EditorWithStateTest.java index 78c6422..ec832a6 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/session/EditorWithStateTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/session/EditorWithStateTest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2004, 2006 IBM Corporation and others. + * Copyright (c) 2004, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -11,6 +11,7 @@ package org.eclipse.ui.tests.session; import junit.framework.TestCase; +import junit.framework.TestSuite; import org.eclipse.core.resources.IFile; import org.eclipse.core.resources.IProject; @@ -29,6 +30,13 @@ */ public class EditorWithStateTest extends TestCase { + public static TestSuite suite() { + TestSuite suite = new TestSuite(&quot;org.eclipse.ui.tests.session.EditorWithStateTest&quot;); + suite.addTest(new EditorWithStateTest(&quot;testInitialEditorOpen&quot;)); + suite.addTest(new EditorWithStateTest(&quot;testSecondEditorOpen&quot;)); + return suite; + } + /** * Constructs a new instance of EditorWithStateTest. * diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/session/SessionTests.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/session/SessionTests.java index 7f5d599..e08e96a 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/session/SessionTests.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/session/SessionTests.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2004, 2009 IBM Corporation and others. + * Copyright (c) 2004, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -17,6 +17,7 @@ import junit.framework.Test; import junit.framework.TestSuite; +import org.eclipse.jface.util.Util; import org.eclipse.ui.tests.harness.util.TweakletCheckTest; import org.eclipse.ui.tests.markers.MarkersViewColumnSizeTest; import org.eclipse.ui.tests.statushandlers.StatusHandlerConfigurationSuite; @@ -46,6 +47,20 @@ addThemeTests(); addStatusHandlingTests(); addRestoredSessionTest(); + addWindowlessSessionTest(); + } + + /** + * + */ + private void addWindowlessSessionTest() { + // Windowless apps are available only on Cocoa + if(Util.isCocoa()) { + Map arguments = new HashMap(2); + arguments.put(&quot;product&quot;, null); + arguments.put(&quot;testApplication&quot;, &quot;org.eclipse.ui.tests.windowLessRcpApplication&quot;); + addTest(new WorkbenchSessionTest(&quot;windowlessSessionTests&quot;,WindowlessSessionTest.class, arguments)); + } } /** @@ -86,8 +101,11 @@ private void addEditorTests() { addTest(new WorkbenchSessionTest(&quot;editorSessionTests&quot;, Bug95357Test.class)); - addTest(new WorkbenchSessionTest(&quot;editorSessionTests&quot;, - EditorWithStateTest.class)); + + WorkbenchSessionTest test = new WorkbenchSessionTest(&quot;editorSessionTests&quot;); + test.addTest(EditorWithStateTest.suite()); + addTest(test); + addTest(new WorkbenchSessionTest(&quot;editorSessionTests&quot;, ArbitraryPropertiesEditorTest.class)); } diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/session/WindowlessSessionTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/session/WindowlessSessionTest.java new file mode 100644 index 0000000..869556d --- /dev/null +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/session/WindowlessSessionTest.java @@ -0,0 +1,43 @@ +/******************************************************************************* + + * Copyright (c) 2010 IBM Corporation and others. + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Public License v1.0 + * which accompanies this distribution, and is available at + * http://www.eclipse.org/legal/epl-v10.html + * + * Contributors: + * IBM Corporation - initial API and implementation + ******************************************************************************/ +package org.eclipse.ui.tests.session; + +import org.eclipse.ui.IWorkbenchWindow; +import org.eclipse.ui.tests.harness.util.UITestCase; + + +/** + * @since 3.7 + */ +public class WindowlessSessionTest extends UITestCase { + + public WindowlessSessionTest(String name) { + super(name); + } + + public void testWindowlessWorkbench() throws Exception { + + // There should not be any windows in this app + assertTrue(fWorkbench.getWorkbenchWindowCount() == 0); + + // Now open a window + IWorkbenchWindow window = fWorkbench.openWorkbenchWindow(null); + + // window count should be 1 + assertTrue(fWorkbench.getWorkbenchWindowCount() == 1); + + window.close(); + + // now the workbench should stay without a window + assertTrue(fWorkbench.getWorkbenchWindowCount() == 0); + } +} diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/session/WorkbenchSessionTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/session/WorkbenchSessionTest.java index 93855ec..b04e737 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/session/WorkbenchSessionTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/session/WorkbenchSessionTest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2004, 2009 IBM Corporation and others. + * Copyright (c) 2004, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -13,6 +13,7 @@ import java.io.File; import java.io.IOException; import java.net.URL; +import java.util.HashMap; import java.util.Iterator; import java.util.Map; import java.util.zip.ZipFile; @@ -24,6 +25,8 @@ import org.eclipse.core.tests.session.Setup; import org.eclipse.core.tests.session.SetupManager; import org.eclipse.core.tests.session.SetupManager.SetupException; +import org.eclipse.jface.util.Util; +import org.eclipse.osgi.service.environment.Constants; import org.eclipse.ui.tests.TestPlugin; import org.eclipse.ui.tests.harness.util.FileTool; @@ -76,7 +79,7 @@ * @since 3.4 */ public WorkbenchSessionTest(String dataLocation) { - super(dataLocation); + super(&quot;org.eclipse.ui.tests&quot;); setApplicationId(SessionTestSuite.UI_TEST_APPLICATION); this.dataLocation = dataLocation; } @@ -98,6 +101,18 @@ base.setEclipseArgument(key, value); } } + + // &lt;== Kludge for the bug 345127. Force spawned VM to be 32 bit + // if we are in a 32bit Eclipse + if (Util.isCocoa()) { + String arch = System.getProperty(&quot;osgi.arch&quot;); + if (Constants.ARCH_X86.equals(arch)) { + Map vmArguments = new HashMap(1); + vmArguments.put(&quot;d32&quot;, null); + base.setVMArguments(vmArguments); + } + } + // ==&gt; End of kludge for the bug 345127. } catch (Exception e) { throw SetupManager.getInstance().new SetupException(e.getMessage(), e); diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/statushandlers/StatusDialogManagerTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/statushandlers/StatusDialogManagerTest.java index 8f0b2af..df9c371 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/statushandlers/StatusDialogManagerTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/statushandlers/StatusDialogManagerTest.java @@ -1,5 +1,5 @@ /******************************************************************************* - * Copyright (c) 2008, 2010 IBM Corporation and others. + * Copyright (c) 2008, 2011 IBM Corporation and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at @@ -624,10 +624,10 @@ int i = 0; public String getMessage() { - if (i == 0) { + i++; + if (i == 1) { throw new RuntimeException(&quot;the bomb!&quot;); } - i++; return super.getMessage(); } @@ -694,7 +694,7 @@ assertTrue(wsdm[0].getStatusAdapters().contains(sa)); } - public void testBug274867(){ + public void testBug275867(){ StatusAdapter statusAdapter = createStatusAdapter(MESSAGE_1); final StatusAdapter[] passed = new StatusAdapter[] { null }; Composite[] support = new Composite[] { null }; diff --git a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/statushandlers/SupportTrayTest.java b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/statushandlers/SupportTrayTest.java index 859ec57..e80b34f 100644 --- a/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/statushandlers/SupportTrayTest.java +++ b/tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/statushandlers/SupportTrayTest.java @@ -138,8 +138,7 @@ td[0].setBlockOnOpen(false); td[0].open(); td[0].openTray(st); - } catch (Exception e) { - fail(); + } finally { if (td != null) td[0].close(); } diff --git a/tests/org.eclipse.ui.tests/JFace-All Tests.launch b/tests/org.eclipse.ui.tests/JFace-All Tests.launch index c8a02ee..f23e426 100644 --- a/tests/org.eclipse.ui.tests/JFace-All Tests.launch +++ b/tests/org.eclipse.ui.tests/JFace-All Tests.launch @@ -1,5 +1,4 @@ - - + @@ -32,6 +31,7 @@ + @@ -41,7 +41,8 @@ + - + \ No newline at end of file diff --git a/tests/org.eclipse.ui.tests/META-INF/MANIFEST.MF b/tests/org.eclipse.ui.tests/META-INF/MANIFEST.MF index 044d752..dee9f6c 100644 --- a/tests/org.eclipse.ui.tests/META-INF/MANIFEST.MF +++ b/tests/org.eclipse.ui.tests/META-INF/MANIFEST.MF @@ -2,11 +2,10 @@ Bundle-ManifestVersion: 2 Bundle-Name: Eclipse UI Tests Bundle-SymbolicName: org.eclipse.ui.tests; singleton:=true -Bundle-Version: 3.5.0.qualifier +Bundle-Version: 3.7.0.qualifier Bundle-ClassPath: uitests.jar Bundle-Activator: org.eclipse.core.internal.compatibility.PluginActivator Bundle-Vendor: Eclipse.org -Bundle-Localization: plugin Require-Bundle: org.eclipse.core.runtime.compatibility, org.eclipse.core.resources, org.eclipse.core.expressions, @@ -29,7 +28,8 @@ org.eclipse.core.runtime Eclipse-AutoStart: true Plugin-Class: org.eclipse.ui.tests.TestPlugin +Import-Package: org.eclipse.e4.ui.bindings.keys;resolution:=optional Export-Package: org.eclipse.ui.tests.api, org.eclipse.ui.tests.helpers, org.eclipse.ui.tests.menus -Bundle-RequiredExecutionEnvironment: J2SE-1.4 +Bundle-RequiredExecutionEnvironment: J2SE-1.5 diff --git a/tests/org.eclipse.ui.tests/UI Test Suite.launch b/tests/org.eclipse.ui.tests/UI Test Suite.launch index 4d92d00..afc78c7 100644 --- a/tests/org.eclipse.ui.tests/UI Test Suite.launch +++ b/tests/org.eclipse.ui.tests/UI Test Suite.launch @@ -1,9 +1,9 @@ - - + + @@ -21,8 +21,6 @@ - - @@ -39,6 +37,7 @@ + @@ -49,7 +48,8 @@ + - + \ No newline at end of file diff --git a/tests/org.eclipse.ui.tests/UI-Parts References Test Suite.launch b/tests/org.eclipse.ui.tests/UI-Parts References Test Suite.launch index b99317b..5eb8f60 100644 --- a/tests/org.eclipse.ui.tests/UI-Parts References Test Suite.launch +++ b/tests/org.eclipse.ui.tests/UI-Parts References Test Suite.launch @@ -1,5 +1,4 @@ - - + @@ -33,6 +32,7 @@ + @@ -42,7 +42,8 @@ + - + \ No newline at end of file diff --git a/tests/org.eclipse.ui.tests/UI-Session Tests.launch b/tests/org.eclipse.ui.tests/UI-Session Tests.launch index f8d8087..15765e6 100644 --- a/tests/org.eclipse.ui.tests/UI-Session Tests.launch +++ b/tests/org.eclipse.ui.tests/UI-Session Tests.launch @@ -1,5 +1,4 @@ - - + @@ -36,6 +35,7 @@ + @@ -45,7 +45,8 @@ + - + \ No newline at end of file diff --git a/tests/org.eclipse.ui.tests/build.properties b/tests/org.eclipse.ui.tests/build.properties index 5de7653..da0473d 100644 --- a/tests/org.eclipse.ui.tests/build.properties +++ b/tests/org.eclipse.ui.tests/build.properties @@ -1,5 +1,5 @@ ############################################################################### -# Copyright (c) 2003, 2006 IBM Corporation and others. +# Copyright (c) 2003, 2011 IBM Corporation and others. # All rights reserved. This program and the accompanying materials # are made available under the terms of the Eclipse Public License v1.0 # which accompanies this distribution, and is available at @@ -10,17 +10,19 @@ ############################################################################### source.uitests.jar = Eclipse JFace Tests/,\ Eclipse UI Tests/,\ - Eclipse Part References Test/ + Eclipse Part References Test/,\ + Benchmark Tests/ + bin.includes = icons/,\ doc/,\ data/,\ - plugin.properties,\ plugin.xml,\ *.html,\ *.jar,\ - .options,\ *.xml,\ uiSniff,\ uiSniff.bat,\ META-INF/ src.includes = about.html + +javacWarnings.uitests.jar=-deadCode,-raw,-unchecked diff --git a/tests/org.eclipse.ui.tests/data/dynamic_classes/build.xml b/tests/org.eclipse.ui.tests/data/dynamic_classes/build.xml index 96c6e47..3fe2231 100644 --- a/tests/org.eclipse.ui.tests/data/dynamic_classes/build.xml +++ b/tests/org.eclipse.ui.tests/data/dynamic_classes/build.xml @@ -1,4 +1,4 @@ - +'); [22001-184]
01-18 00:31:31 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:E:/Users/rose/git/BugReportCrawler/0_CrawlingBugReport-FIN/DB/FIXED/UI.mv.db [1.4.184/7]" [50000-184]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:295)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.panic(MVStore.java:377)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:360)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2759)
	at org.h2.mvstore.db.MVTableEngine$Store.<init>(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:98)
	at org.h2.engine.Database.getPageStore(Database.java:2379)
	at org.h2.engine.Database.open(Database.java:666)
	at org.h2.engine.Database.openDatabase(Database.java:266)
	at org.h2.engine.Database.<init>(Database.java:260)
	at org.h2.engine.Engine.openSession(Engine.java:60)
	at org.h2.engine.Engine.openSession(Engine.java:167)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:145)
	at org.h2.engine.Engine.createSession(Engine.java:128)
	at org.h2.engine.Engine.createSession(Engine.java:26)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:347)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:108)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at ver1.finish.ver.G_DAO.<init>(G_DAO.java:31)
	at ver1.finish.ver.F_Main_XML.main(F_Main_XML.java:21)
Caused by: org.h2.jdbc.JdbcSQLException: General error: "java.lang.IllegalStateException: The file is locked: nio:E:/Users/rose/git/BugReportCrawler/0_CrawlingBugReport-FIN/DB/FIXED/UI.mv.db [1.4.184/7]" [50000-184]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 25 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:E:/Users/rose/git/BugReportCrawler/0_CrawlingBugReport-FIN/DB/FIXED/UI.mv.db [1.4.184/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:773)
	at org.h2.mvstore.FileStore.open(FileStore.java:170)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:346)
	... 20 more
